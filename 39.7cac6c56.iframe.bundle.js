(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{"./dist/esm/verdocs-checkbox.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_checkbox",(function(){return VerdocsCheckbox}));__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/esm/index-bc9b2c82.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var VerdocsCheckbox=function(){function VerdocsCheckbox(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsCheckbox),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.h)(this,hostRef),this.selected=Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.d)(this,"selected",7),this.checked=!1,this.name="",this.value="",this.disabled=!1}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsCheckbox,[{key:"handleChange",value:function handleChange(e){console.log("changed",e.target.checked),this.selected.emit({value:this.value})}},{key:"render",value:function render(){var _this=this;return Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.b,{class:{disabled:this.disabled}},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("input",{type:"checkbox",value:this.value,name:this.name,id:"verdocs-checkbox-"+this.name+"-"+this.value,checked:this.checked,disabled:this.disabled,onChange:function onChange(e){return _this.handleChange(e)}}))}}]),VerdocsCheckbox}();VerdocsCheckbox.style='verdocs-checkbox{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;width:20px;height:20px;display:block;font-size:11px;position:relative;background-color:transparent;-webkit-transform-origin:bottom left;transform-origin:bottom left;border-radius:100%}verdocs-checkbox.disabled{opacity:0.5}verdocs-checkbox.hide{display:none}verdocs-checkbox.focused{-webkit-animation:verdocs-field-pulse 0.75s 2;animation:verdocs-field-pulse 0.75s 2}verdocs-checkbox input[type=checkbox]{width:18px;height:18px}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1jaGVja2JveC92ZXJkb2NzLWNoZWNrYm94LnNjc3MiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtY2hlY2tib3gvdmVyZG9jcy1jaGVja2JveC50c3giXSwibmFtZXMiOlsiVmVyZG9jc0NoZWNrYm94IiwiY2hlY2tlZCIsIm5hbWUiLCJ2YWx1ZSIsImRpc2FibGVkIiwiaGFuZGxlQ2hhbmdlIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJ0YXJnZXQiLCJ0aGlzIiwic2VsZWN0ZWQiLCJlbWl0IiwicmVuZGVyIiwiaCIsIkhvc3QiLCJjbGFzcyIsInR5cGUiLCJpZCIsIm9uQ2hhbmdlIl0sIm1hcHBpbmdzIjoiODBCQUFBLElDWWFBLGdCQUFlLFdBTDVCLG1DLDhJQUFBLHVCLG1LQVNVLEtBQUFDLFNBQW1CLEVBS25CLEtBQUFDLEtBQWUsR0FLZixLQUFBQyxNQUFnQixHQUtoQixLQUFBQyxVQUFxQixDQTZCOUIsQ0FoRDJCLE8sa1FBQUEsNENBNEIxQixTQUFBQyxhQUFhQyxHQUNYQyxRQUFRQyxJQUFJLFVBQVdGLEVBQUVHLE9BQU9SLFNBQ2hDUyxLQUFLQyxTQUFTQyxLQUFLLENBQUNULE1BQU9PLEtBQUtQLE9BQ2pDLEdBL0J5QixvQkFpQzFCLFNBQUFVLFNBQU0sZUFDSixPQUNFQywwREFBQ0Msa0RBQUksQ0FBQ0MsTUFBTyxDQUFDWixTQUFVTSxLQUFLTixXQUMzQlUsbUVBQ0VHLEtBQUssV0FDTGQsTUFBT08sS0FBS1AsTUFDWkQsS0FBTVEsS0FBS1IsS0FDWGdCLEdBQUUsb0JBQXNCUixLQUFLUixLQUEzQixJQUFtQ1EsS0FBS1AsTUFDMUNGLFFBQVNTLEtBQUtULFFBQ2RHLFNBQVVNLEtBQUtOLFNBQ2ZlLFNBQVUsa0JBQUFiLEdBQUMsT0FBSSxNQUFLRCxhQUFhQyxFQUF0QixJQUlsQixLQS9DeUIsbUIsc0JEWkQscWhCIiwiZmlsZSI6IjM5LjdjYWM2YzU2LmlmcmFtZS5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi90aGVtZS5zY3NzJztcblxuLy8gU2VlIGh0dHBzOi8vd3d3LnNsaWRlcnJldm9sdXRpb24uY29tL3Jlc291cmNlcy9zdHlsaW5nLXJhZGlvLWJ1dHRvbnMvXG52ZXJkb2NzLWNoZWNrYm94IHtcbiAgZm9udC1mYW1pbHk6ICR2ZXJkb2NzLXByaW1hcnktZm9udDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tIGxlZnQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG5cbiAgJi5kaXNhYmxlZCB7XG4gICAgb3BhY2l0eTogMC41O1xuICB9XG5cbiAgJi5oaWRlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgJi5mb2N1c2VkIHtcbiAgICBhbmltYXRpb246IHZlcmRvY3MtZmllbGQtcHVsc2UgMC43NXMgMjtcbiAgfVxuXG4gIGlucHV0W3R5cGU9J2NoZWNrYm94J10ge1xuICAgIHdpZHRoOiAxOHB4O1xuICAgIGhlaWdodDogMThweDtcbiAgfVxufVxuIiwiaW1wb3J0IHtDb21wb25lbnQsIGgsIEhvc3QsIFByb3AsIEV2ZW50LCBFdmVudEVtaXR0ZXJ9IGZyb20gJ0BzdGVuY2lsL2NvcmUnO1xuXG4vKipcbiAqIERpc3BsYXlzIGEgcmFkaW8gYnV0dG9uLiBOb3RlIHRoYXQgdGhpcyBpcyBkaWZmZXJlbnQgZnJvbSB0aGUgYHZlcmRvY3MtZmllbGQtcmFkaW8tYnV0dG9uYCBjb21wb25lbnQsIHdoaWNoIGlzIGRlc2lnbmVkXG4gKiB0byBiZSB1c2VkIGluIHNpZ25pbmcgZXhwZXJpZW5jZXMgYW5kIGNvbnRhaW5zIHNldHRpbmdzIHRoYXQgY29ubmVjdCB0byB0ZW1wbGF0ZSBmaWVsZHMuIFRoaXMgaXMganVzdCBhIHNpbXBsZSByYWRpb1xuICogYnV0dG9uIGZvciBVSSBkaXNwbGF5cyBlLmcuIGRpYWxvZ3MgYW5kIC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHRhZzogJ3ZlcmRvY3MtY2hlY2tib3gnLFxuICBzdHlsZVVybDogJ3ZlcmRvY3MtY2hlY2tib3guc2NzcycsXG4gIHNoYWRvdzogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFZlcmRvY3NDaGVja2JveCB7XG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSByYWRpbyBidXR0b24gaXMgY3VycmVudGx5IHNlbGVjdGVkLlxuICAgKi9cbiAgQFByb3AoKSBjaGVja2VkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEhUTUwgZm9ybSBmaWVsZCBuYW1lIGZvciB0aGUgaW5wdXQuXG4gICAqL1xuICBAUHJvcCgpIG5hbWU6IHN0cmluZyA9ICcnO1xuXG4gIC8qKlxuICAgKiBWYWx1ZSB0byB0cmFjayB3aXRoIHRoZSBpbnB1dC5cbiAgICovXG4gIEBQcm9wKCkgdmFsdWU6IHN0cmluZyA9ICcnO1xuXG4gIC8qKlxuICAgKiBJZiBzZXQsIHRoZSBidXR0b24gd2lsbCBzdGlsbCBiZSBkaXNwbGF5ZWQgYnV0IG5vdCBzZWxlY3RhYmxlLlxuICAgKi9cbiAgQFByb3AoKSBkaXNhYmxlZD86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogRXZlbnQgZmlyZWQgd2hlbiB0aGUgaW5wdXQgZmllbGQgdmFsdWUgY2hhbmdlcy4gTm90ZSB0aGF0IHRoaXMgd2lsbCBvbmx5IGJlIGZpcmVkIG9uIGJsdXIsIHRhYi1vdXQsIEVOVEVSIGtleSBwcmVzcywgZXRjLlxuICAgKiBJdCBpcyBnZW5lcmFsbHkgdGhlIGJlc3QgZXZlbnQgdG8gc3Vic2NyaWJlIHRvIHRoYW4gYGlucHV0YCBmb3IgbW9zdCBjYXNlcyBFWENFUFQgYXV0b2NvbXBsZXRlIGZpZWxkcyB0aGF0IG5lZWQgdG8gc2VlIGV2ZXJ5XG4gICAqIGtleXByZXNzLlxuICAgKi9cbiAgQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIHNlbGVjdGVkOiBFdmVudEVtaXR0ZXI8e3ZhbHVlOiBzdHJpbmd9PjtcblxuICBoYW5kbGVDaGFuZ2UoZTogYW55KSB7XG4gICAgY29uc29sZS5sb2coJ2NoYW5nZWQnLCBlLnRhcmdldC5jaGVja2VkKTtcbiAgICB0aGlzLnNlbGVjdGVkLmVtaXQoe3ZhbHVlOiB0aGlzLnZhbHVlfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxIb3N0IGNsYXNzPXt7ZGlzYWJsZWQ6IHRoaXMuZGlzYWJsZWR9fT5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICB2YWx1ZT17dGhpcy52YWx1ZX1cbiAgICAgICAgICBuYW1lPXt0aGlzLm5hbWV9XG4gICAgICAgICAgaWQ9e2B2ZXJkb2NzLWNoZWNrYm94LSR7dGhpcy5uYW1lfS0ke3RoaXMudmFsdWV9YH1cbiAgICAgICAgICBjaGVja2VkPXt0aGlzLmNoZWNrZWR9XG4gICAgICAgICAgZGlzYWJsZWQ9e3RoaXMuZGlzYWJsZWR9XG4gICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdGhpcy5oYW5kbGVDaGFuZ2UoZSl9XG4gICAgICAgIC8+XG4gICAgICA8L0hvc3Q+XG4gICAgKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
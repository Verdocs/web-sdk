(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"./dist/esm/verdocs-search-activity_2.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_search_activity",(function(){return VerdocsSearchActivity})),__webpack_require__.d(__webpack_exports__,"verdocs_search_box",(function(){return VerdocsSearchBox}));__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./dist/esm/index-5d92e60f.js"),_VerdocsEndpoint_9353e4a0_js__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./dist/esm/VerdocsEndpoint-9353e4a0.js");function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}var __awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=function(thisArg,body){var f,y,t,g,_={label:0,sent:function sent(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}},getSearchHistory=function getSearchHistory(endpoint){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.get("/search/history").then((function(r){return r.data}))]}))}))},DocumentIcon='<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M8 16h8v2H8zm0-4h8v2H8zm6-10H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11z"/></svg>',VerdocsSearchActivity=function(){function VerdocsSearchActivity(hostRef){_classCallCheck(this,VerdocsSearchActivity),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.h)(this,hostRef),this.entrySelected=Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.d)(this,"entrySelected",7),this.endpoint=_VerdocsEndpoint_9353e4a0_js__WEBPACK_IMPORTED_MODULE_12__.a.getDefault(),this.type="recent",this.emptyMessage="You do not have any starred searches.",this.authFailure=!1,this.title="Recent Searches",this.recent=[],this.saved=[],this.starred=[]}return _createClass(VerdocsSearchActivity,[{key:"componentWillLoad",value:function componentWillLoad(){var _this=this;this.endpoint.loadSession();var errorHandler=function errorHandler(e){var _a;console.warn("[Verdocs/search-activity] Error getting search data",e),401===(null===(_a=null==e?void 0:e.response)||void 0===_a?void 0:_a.status)&&(_this.authFailure=!0)};switch(this.type){case"recent":this.title="Recent Searches",this.emptyMessage="You do not have any recent searches.",getSearchHistory(this.endpoint).then((function(r){return _this.recent=r.recent})).catch(errorHandler);break;case"saved":this.title="Saved Searches",this.emptyMessage="You do not have any saved searches.",getSearchHistory(this.endpoint).then((function(r){return _this.saved=r.saved})).catch(errorHandler);break;case"starred":this.title="My Starred items",this.emptyMessage="You do not have any starred templates.",function getTemplates(endpoint,params){return endpoint.api.get("/templates/",{params:params}).then((function(r){return r.data}))}(this.endpoint,{is_starred:!0}).then((function(r){return _this.starred=r})).catch(errorHandler)}}},{key:"handleSelectEntry",value:function handleSelectEntry(entry){this.entrySelected.emit(entry)}},{key:"computePagesText",value:function computePagesText(pages){return pages<2?pages+" Page":pages+" Pages"}},{key:"computeRecipientsText",value:function computeRecipientsText(recipients){return"object"==typeof recipients?recipients.join(", "):recipients>1?recipients+" Recipients":recipients+" Recipient"}},{key:"render",value:function render(){var _this2=this,showEmpty=this.recent.length<1&&this.saved.length<1&&this.starred.length<1;return Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"container"},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("p",{class:"title"},this.title),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"items"},this.recent.map((function(recent){return Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("button",{class:"item",onClick:function onClick(){return _this2.handleSelectEntry(recent)}},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"icon",innerHTML:DocumentIcon}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"details"},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"item-title"},recent.params.q),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"info"},"Test")))})),this.saved.map((function(option){return Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("button",{class:"item",onClick:function onClick(){return _this2.handleSelectEntry(option)}},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"icon",innerHTML:DocumentIcon}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"details"},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"item-title"},option.params.q),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"info"})))})),showEmpty&&Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("div",{class:"empty"},this.authFailure?"Authentication required":this.emptyMessage)))}}]),VerdocsSearchActivity}();VerdocsSearchActivity.style='verdocs-search-activity{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-search-activity .container{display:-ms-flexbox;display:flex;width:240px;color:#ffffff;-ms-flex-direction:column;flex-direction:column;text-transform:uppercase;padding:10px 10px 20px 10px;background-color:var(--verdocs-background-dark)}verdocs-search-activity .title{font-size:22px;font-weight:700;line-height:30px}verdocs-search-activity .items{display:-ms-flexbox;display:flex;margin-top:20px;-ms-flex-direction:column;flex-direction:column}verdocs-search-activity .item{border:none;display:-ms-flexbox;display:flex;text-align:left;margin-bottom:20px;-ms-flex-direction:row;flex-direction:row;background:transparent}verdocs-search-activity .item:hover{cursor:pointer}verdocs-search-activity .icon{-ms-flex:0 0 22px;flex:0 0 22px;margin-right:14px}verdocs-search-activity .icon svg{fill:#707ae5;width:22px;height:22px}verdocs-search-activity .details{display:-ms-flexbox;display:flex;overflow:hidden;-ms-flex-direction:column;flex-direction:column}verdocs-search-activity .item-title{font-size:16px;font-weight:400;color:#ffffff;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}verdocs-search-activity .info{font-size:14px;font-weight:500;line-height:23px;color:#aeb4bf}verdocs-search-activity .empty{text-transform:none;line-height:22px;color:#ccc}';var VerdocsSearchBox=function(){function VerdocsSearchBox(hostRef){_classCallCheck(this,VerdocsSearchBox),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.h)(this,hostRef),this.searchClicked=Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.d)(this,"searchClicked",7),this.typeChanged=Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.d)(this,"typeChanged",7),this.queryChanged=Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.d)(this,"queryChanged",7),this.endpoint=_VerdocsEndpoint_9353e4a0_js__WEBPACK_IMPORTED_MODULE_12__.a.getDefault(),this.placeholder="search documents, templates, people...",this.type="all",this.query=""}return _createClass(VerdocsSearchBox,[{key:"handleSearch",value:function handleSearch(e){return this.searchClicked.emit({type:this.type,query:this.query}),e.preventDefault(),!1}},{key:"handleChange",value:function handleChange(e){this.queryChanged.emit(e.target.value)}},{key:"handleClearFilter",value:function handleClearFilter(){this.typeChanged.emit("all")}},{key:"handleKeyUp",value:function handleKeyUp(e){"Enter"===e.key&&this.searchClicked.emit({type:this.type,query:this.query})}},{key:"render",value:function render(){var _this3=this;return Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("form",{onSubmit:function onSubmit(e){return _this3.handleSearch(e)}},void 0!==this.type&&"all"!==this.type&&Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("span",{class:"type"},this.type,"s ",Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("button",{class:"remove",innerHTML:'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M14.0739 11.7565L19.7127 6.23228C20.0875 5.85692 20.0875 5.25309 19.7127 4.87773L19.0213 4.20046C18.6382 3.82511 18.0219 3.82511 17.6387 4.20046L12 9.72472L6.36127 4.20046C5.97814 3.82511 5.36179 3.82511 4.97866 4.20046L4.28735 4.87773C3.90422 5.25309 3.90422 5.85692 4.28735 6.23228L9.92608 11.7565L4.28735 17.2808C3.90422 17.6561 3.90422 18.26 4.28735 18.6353L4.97866 19.3126C5.36179 19.688 5.97814 19.688 6.36127 19.3126L12 13.7883L17.6387 19.3126C18.0219 19.688 18.6382 19.688 19.0213 19.3126L19.7127 18.6353C20.0958 18.26 20.0958 17.6561 19.7127 17.2808L14.0739 11.7565Z" fill="white"/>\n</svg>\n',onClick:function onClick(){return _this3.handleClearFilter()}})),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("input",{type:"text",placeholder:this.placeholder,value:this.query,onInput:function onInput(e){return _this3.handleChange(e)},onKeyUp:function onKeyUp(e){return _this3.handleKeyUp(e)}}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("button",{onClick:function onClick(e){return _this3.handleSearch(e)},class:"search"},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_11__.f)("span",{innerHTML:'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M23.4809 20.7176L17.9111 15.2536C19.0961 13.6368 19.727 11.6926 19.7128 9.70131C19.7201 7.53345 18.9846 5.42606 17.6244 3.71753C16.2642 2.009 14.3581 0.798456 12.2123 0.280282C10.0665 -0.237892 7.80552 -0.0336342 5.79227 0.86026C3.77902 1.75415 2.13038 3.28582 1.1111 5.20931C0.0918114 7.1328 -0.238985 9.33652 0.171813 11.4666C0.582612 13.5967 1.71117 15.5296 3.37628 16.9548C5.0414 18.3801 7.14646 19.2151 9.35344 19.3257C11.5604 19.4364 13.7413 18.8162 15.5458 17.5649L21.1372 23.05L21.1563 23.0663C21.4841 23.3487 21.9039 23.507 22.3401 23.5128C22.7823 23.5125 23.2063 23.3402 23.5191 23.0337V23.0337C23.6749 22.8812 23.7979 22.6995 23.8804 22.4993C23.963 22.2991 24.0036 22.0847 23.9997 21.8688C23.9959 21.6529 23.9477 21.44 23.858 21.2428C23.7683 21.0456 23.639 20.8682 23.4778 20.7212L23.4809 20.7176ZM14.5167 14.1975C13.4564 15.2349 12.0623 15.8797 10.5719 16.022C9.08145 16.1644 7.58681 15.7955 6.34249 14.9781C5.09816 14.1608 4.18109 12.9456 3.74751 11.5395C3.31393 10.1334 3.39064 8.6233 3.96455 7.26643C4.53846 5.90955 5.57409 4.7898 6.89507 4.09787C8.21606 3.40594 9.74071 3.18461 11.2093 3.4716C12.678 3.75858 13.9998 4.53612 14.9497 5.6718C15.8996 6.80748 16.4188 8.23105 16.4189 9.7001C16.4196 10.5357 16.2519 11.3632 15.9254 12.135C15.599 12.9069 15.1202 13.6078 14.5167 14.1975V14.1975Z" fill="white"/>\n</svg>\n'}),"Search"))}}]),VerdocsSearchBox}();VerdocsSearchBox.style='verdocs-search-box{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-search-box form{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;height:45px;-webkit-box-sizing:border-box;box-sizing:border-box;margin:5px 0 0;border-radius:5px;-ms-flex-align:center;align-items:center;background-color:#fff;padding:0 8px;border-width:1px;border-style:solid;border-color:var(--verdocs-container-border-color)}verdocs-search-box form input{-webkit-box-sizing:border-box;box-sizing:border-box;height:43px;width:100%;font-size:18px;border:none}verdocs-search-box form input:focus{outline:none}verdocs-search-box form button.search{cursor:pointer;display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:4px;border:none;width:100px;height:28px;font-weight:700;font-size:10px;letter-spacing:1px;background-color:#50be80;text-transform:uppercase;color:#fff}verdocs-search-box form .type{background-color:#707ae5;height:30px;display:-ms-inline-flexbox;display:inline-flex;padding:1px 0 2px 10px;font-size:13px;line-height:16px;border-radius:4px;-ms-flex-pack:center;justify-content:center;text-transform:uppercase;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row;color:#fff;margin-right:10px}verdocs-search-box form .type button{border:none;color:#fff;margin:5px 0 0 8px;background:transparent}verdocs-search-box form svg{width:12px;height:12px;margin-right:6px}verdocs-search-box ::-webkit-input-placeholder{color:#aeb4bf}verdocs-search-box ::-moz-placeholder{color:#aeb4bf}verdocs-search-box :-ms-input-placeholder{color:#aeb4bf}verdocs-search-box ::-ms-input-placeholder{color:#aeb4bf}verdocs-search-box ::placeholder{color:#aeb4bf}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
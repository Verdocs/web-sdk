(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{"./dist/esm/verdocs-field-payment.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_field_payment",(function(){return VerdocsFieldPayment}));__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/esm/index-542510c1.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var VerdocsFieldPayment=function(){function VerdocsFieldPayment(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsFieldPayment),Object(_index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__.h)(this,hostRef),this.signatureComplete=Object(_index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__.d)(this,"signatureComplete",7),this.initialComplete=Object(_index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__.d)(this,"initialComplete",7),this.field=null,this.focused=!1,this.signed=!1,this.signatureUrl="",this._fields=[],this.signatureFile=null,this.initialFile=null,this.focusOrderNumber=-1,this.focusFieldName="",this.activeElement=null,this.showError={pageNum:-1,fieldIndex:-1,type:null},this.dialogOpened=!1,this.closeAllErrors=!1,this.fieldsMap={},this.fieldsForCurrentSigner=[],this.fontSize=11,this.averageFontWidth=5,this.requiredFields=[]}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsFieldPayment,[{key:"componentWillLoad",value:function componentWillLoad(){if(console.log("sign field",this.field),this.recipients&&this.recipients.length>0){var preparer=this.recipients.find((function(r){return"preparer"===r.type}));console.log("Found preparer",preparer),preparer&&(this.preparedMessage="Prepared by "+preparer.full_name)}}},{key:"render",value:function render(){var _a,_b,settings={x:0,y:0};return"settings"in this.field&&(null===(_a=this.field)||void 0===_a?void 0:_a.settings)?settings=this.field.settings:"setting"in this.field&&(null===(_b=this.field)||void 0===_b?void 0:_b.setting)&&(settings=this.field.setting),console.log("Payment field",settings),Object(_index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__.f)(_index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__.b,{class:{focused:this.focused,storybook:!!(null===window||void 0===window?void 0:window.STORYBOOK_ENV)}},Object(_index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__.f)("button",{class:{hide:this.signed}},"Payment"),this.signed?Object(_index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"frame"}):Object(_index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{style:{display:"none"}}),Object(_index_542510c1_js__WEBPACK_IMPORTED_MODULE_2__.f)("img",{width:"100%",height:"100%",src:this.signatureUrl}))}}]),VerdocsFieldPayment}();VerdocsFieldPayment.style='verdocs-field-payment{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;width:24px;height:24px;display:block;font-size:11px;position:relative;border:1px solid #cfa;background-color:transparent;-webkit-transform-origin:bottom left;transform-origin:bottom left}verdocs-field-payment button,verdocs-field-payment div{-webkit-box-sizing:border-box;box-sizing:border-box}verdocs-field-payment button{color:rgba(0, 0, 0, 0.87);font-weight:500;-webkit-transform-origin:0 0;transform-origin:0 0;height:100%;width:100%;background:none;font-size:11px}verdocs-field-payment button.hide{display:none}verdocs-field-payment input{float:left;font-family:Arial, sans-serif}verdocs-field-payment select{position:absolute;font-family:Arial, sans-serif;background:linear-gradient(55deg, transparent 50%, #333 50%), linear-gradient(125deg, #333 50%, transparent 50%), linear-gradient(to right, transparent, transparent);background-position:calc(100% - 7px) 4px, calc(100% - 3px) 4px, 100% 0;background-size:5px 5px, 5px 5px, 2.5em 2.5em;background-repeat:no-repeat;-webkit-appearance:none;-moz-appearance:none;appearance:none}verdocs-field-payment .frame{width:100%;height:100%;background-size:contain;text-align:left}verdocs-field-payment .frame img{position:absolute;height:auto;width:100%}verdocs-field-payment.focused{-webkit-animation:verdocs-field-pulse 0.75s 2;animation:verdocs-field-pulse 0.75s 2}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"./dist/esm/Colors-1b298092.js":function(module,__webpack_exports__,__webpack_require__){"use strict";function getRGBA(roleIndex){switch(roleIndex%10){case 0:return 0===roleIndex?"rgba(255, 193, 7, 0.4)":"rgba(134, 134, 134, 0.3)";case 1:return"rgba(156, 39, 176, .4)";case 2:return"rgba(33, 150, 243, .4)";case 3:return"rgba(220, 231, 117, 0.3)";case 4:return"rgba(121, 134, 203, 0.3)";case 5:return"rgba(77, 182, 172, 0.3)";case 6:return"rgba(255, 202, 165, 0.3)";case 7:return"rgba(2, 247, 190, 0.3)";case 8:return"rgba(255, 138, 101, 0.3)";case 9:return"rgba(82, 255, 79, 0.3)";default:return"rgba(229, 115, 155, 0.3)"}}__webpack_require__.d(__webpack_exports__,"a",(function(){return getRGBA}))},"./dist/esm/verdocs-field-payment.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_field_payment",(function(){return VerdocsFieldPayment}));__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./dist/esm/index-f78d163d.js"),_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./dist/esm/Colors-1b298092.js"),_utils_06d58b15_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./dist/esm/utils-06d58b15.js");__webpack_require__("./dist/esm/Token-54690789.js"),__webpack_require__("./dist/esm/Files-70a192df.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}var VerdocsFieldPayment=function(){function VerdocsFieldPayment(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsFieldPayment),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__.j)(this,hostRef),this.signatureComplete=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__.e)(this,"signatureComplete",7),this.initialComplete=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__.e)(this,"initialComplete",7),this._fields=[],this.signatureFile=null,this.initialFile=null,this.focusOrderNumber=-1,this.focusFieldName="",this.activeElement=null,this.showError={pageNum:-1,fieldIndex:-1,type:null},this.dialogOpened=!1,this.closeAllErrors=!1,this.fieldsMap={},this.fieldsForCurrentSigner=[],this.fontSize=11,this.averageFontWidth=5,this.requiredFields=[],this.field=null,this.disabled=!1,this.fields=void 0,this.pageNum=void 0,this.roleName=void 0,this.fieldId=void 0,this.recipients=void 0,this.selectedRoleName=void 0,this.pdfPages=void 0,this.currentSignature=void 0,this.currentSignatureId=void 0,this.currentInitial=void 0,this.currentInitialId=void 0,this.focused=!1,this.signed=!1,this.preparedMessage=void 0,this.signatureUrl="",this.roleindex=0}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsFieldPayment,[{key:"componentWillLoad",value:function componentWillLoad(){if(console.log("sign field",this.field),this.recipients&&this.recipients.length>0){var preparer=this.recipients.find((function(r){return"preparer"===r.type}));console.log("Found preparer",preparer),preparer&&(this.preparedMessage="Prepared by "+preparer.full_name)}}},{key:"render",value:function render(){var _a,_b,settings=Object(_utils_06d58b15_js__WEBPACK_IMPORTED_MODULE_10__.g)(this.field),disabled=null!==(_b=null!==(_a=this.disabled)&&void 0!==_a?_a:settings.disabled)&&void 0!==_b&&_b;console.log("Payment field",settings);var backgroundColor=this.field.rgba||Object(_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.roleindex);return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__.b,{class:{focused:this.focused,disabled:disabled},style:{backgroundColor:backgroundColor}},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__.h)("button",{class:{hide:this.signed}},"$"),this.signed?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__.h)("div",{class:"frame"}):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__.h)("div",{style:{display:"none"}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_8__.h)("img",{width:"100%",height:"100%",src:this.signatureUrl}))}}]),VerdocsFieldPayment}();VerdocsFieldPayment.style='verdocs-field-payment{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;width:24px;height:24px;display:block;font-size:11px;position:relative;border:1px solid #cfa;background-color:transparent;-webkit-transform-origin:bottom left;transform-origin:bottom left}verdocs-field-payment.disabled{opacity:0.5}verdocs-field-payment button,verdocs-field-payment div{-webkit-box-sizing:border-box;box-sizing:border-box}verdocs-field-payment button{color:rgba(0, 0, 0, 0.87);font-weight:500;-webkit-transform-origin:0 0;transform-origin:0 0;height:100%;width:100%;background:none;font-size:11px}verdocs-field-payment button.hide{display:none}verdocs-field-payment input{float:left;font-family:Arial, sans-serif}verdocs-field-payment select{position:absolute;font-family:Arial, sans-serif;background:linear-gradient(55deg, transparent 50%, #333 50%), linear-gradient(125deg, #333 50%, transparent 50%), linear-gradient(to right, transparent, transparent);background-position:calc(100% - 7px) 4px, calc(100% - 3px) 4px, 100% 0;background-size:5px 5px, 5px 5px, 2.5em 2.5em;background-repeat:no-repeat;-webkit-appearance:none;-moz-appearance:none;appearance:none}verdocs-field-payment .frame{width:100%;height:100%;background-size:contain;text-align:left}verdocs-field-payment .frame img{position:absolute;height:auto;width:100%}verdocs-field-payment.focused{-webkit-animation:verdocs-field-pulse 0.75s 2;animation:verdocs-field-pulse 0.75s 2}'},"./node_modules/core-js/modules/es.string.match-all.js":function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__("./node_modules/core-js/internals/export.js"),call=__webpack_require__("./node_modules/core-js/internals/function-call.js"),uncurryThis=__webpack_require__("./node_modules/core-js/internals/function-uncurry-this-clause.js"),createIteratorConstructor=__webpack_require__("./node_modules/core-js/internals/iterator-create-constructor.js"),createIterResultObject=__webpack_require__("./node_modules/core-js/internals/create-iter-result-object.js"),requireObjectCoercible=__webpack_require__("./node_modules/core-js/internals/require-object-coercible.js"),toLength=__webpack_require__("./node_modules/core-js/internals/to-length.js"),toString=__webpack_require__("./node_modules/core-js/internals/to-string.js"),anObject=__webpack_require__("./node_modules/core-js/internals/an-object.js"),isNullOrUndefined=__webpack_require__("./node_modules/core-js/internals/is-null-or-undefined.js"),classof=__webpack_require__("./node_modules/core-js/internals/classof-raw.js"),isRegExp=__webpack_require__("./node_modules/core-js/internals/is-regexp.js"),getRegExpFlags=__webpack_require__("./node_modules/core-js/internals/regexp-get-flags.js"),getMethod=__webpack_require__("./node_modules/core-js/internals/get-method.js"),defineBuiltIn=__webpack_require__("./node_modules/core-js/internals/define-built-in.js"),fails=__webpack_require__("./node_modules/core-js/internals/fails.js"),wellKnownSymbol=__webpack_require__("./node_modules/core-js/internals/well-known-symbol.js"),speciesConstructor=__webpack_require__("./node_modules/core-js/internals/species-constructor.js"),advanceStringIndex=__webpack_require__("./node_modules/core-js/internals/advance-string-index.js"),regExpExec=__webpack_require__("./node_modules/core-js/internals/regexp-exec-abstract.js"),InternalStateModule=__webpack_require__("./node_modules/core-js/internals/internal-state.js"),IS_PURE=__webpack_require__("./node_modules/core-js/internals/is-pure.js"),MATCH_ALL=wellKnownSymbol("matchAll"),setInternalState=InternalStateModule.set,getInternalState=InternalStateModule.getterFor("RegExp String Iterator"),RegExpPrototype=RegExp.prototype,$TypeError=TypeError,stringIndexOf=uncurryThis("".indexOf),nativeMatchAll=uncurryThis("".matchAll),WORKS_WITH_NON_GLOBAL_REGEX=!!nativeMatchAll&&!fails((function(){nativeMatchAll("a",/./)})),$RegExpStringIterator=createIteratorConstructor((function RegExpStringIterator(regexp,string,$global,fullUnicode){setInternalState(this,{type:"RegExp String Iterator",regexp:regexp,string:string,global:$global,unicode:fullUnicode,done:!1})}),"RegExp String",(function next(){var state=getInternalState(this);if(state.done)return createIterResultObject(void 0,!0);var R=state.regexp,S=state.string,match=regExpExec(R,S);return null===match?(state.done=!0,createIterResultObject(void 0,!0)):state.global?(""===toString(match[0])&&(R.lastIndex=advanceStringIndex(S,toLength(R.lastIndex),state.unicode)),createIterResultObject(match,!1)):(state.done=!0,createIterResultObject(match,!1))})),$matchAll=function(string){var matcher,$global,fullUnicode,R=anObject(this),S=toString(string),C=speciesConstructor(R,RegExp),flags=toString(getRegExpFlags(R));return matcher=new C(C===RegExp?R.source:R,flags),$global=!!~stringIndexOf(flags,"g"),fullUnicode=!!~stringIndexOf(flags,"u"),matcher.lastIndex=toLength(R.lastIndex),new $RegExpStringIterator(matcher,S,$global,fullUnicode)};$({target:"String",proto:!0,forced:WORKS_WITH_NON_GLOBAL_REGEX},{matchAll:function matchAll(regexp){var flags,S,matcher,rx,O=requireObjectCoercible(this);if(isNullOrUndefined(regexp)){if(WORKS_WITH_NON_GLOBAL_REGEX)return nativeMatchAll(O,regexp)}else{if(isRegExp(regexp)&&(flags=toString(requireObjectCoercible(getRegExpFlags(regexp))),!~stringIndexOf(flags,"g")))throw $TypeError("`.matchAll` does not allow non-global regexes");if(WORKS_WITH_NON_GLOBAL_REGEX)return nativeMatchAll(O,regexp);if(void 0===(matcher=getMethod(regexp,MATCH_ALL))&&IS_PURE&&"RegExp"==classof(regexp)&&(matcher=$matchAll),matcher)return call(matcher,regexp,O)}return S=toString(O),rx=new RegExp(regexp,"g"),IS_PURE?call($matchAll,rx,S):rx[MATCH_ALL](S)}}),IS_PURE||MATCH_ALL in RegExpPrototype||defineBuiltIn(RegExpPrototype,MATCH_ALL,$matchAll)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
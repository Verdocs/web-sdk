import{c as l}from"./index-296aabaf-BfkBbDig.js";import{k as d}from"./index-CL2BROP6.js";import{u as n}from"./index-7456b04f-CtY4qLFG.js";const c=o=>{const t=new Date().toISOString();return l({isLoading:!0,isLoaded:!1,isError:!1,error:null,roleNames:[],id:o,template_id:"",name:"",status:"pending",profile_id:"",organization_id:"",no_contact:!1,created_at:t,updated_at:t,canceled_at:null,reminder_id:null,visibility:"private",recipients:[],profile:null,access_keys:[],data:n,history_entries:[],organization:null,reminder:null,search_key:"",template:null,documents:[],fields:[]})},a={},f=async(o,t,i=!1)=>{let s=!1;a[t]||(console.debug("[ENVELOPES] No envelope store found for ID, creating",t),a[t]=c(t),s=!0);const e=a[t];if(e.use({reset:()=>console.debug("[ENVELOPES] Store got reset"),dispose:()=>console.debug("[ENVELOPES] Store got disposed")}),s||i){console.debug("[ENVELOPES] Reloading envelope",{envelopeId:t,created:s,forceReload:i}),e.state.isLoading=!0,e.state.isLoaded=!1,e.state.isError=!1,e.state.error=n;try{const r=await d(o,t);console.debug("[ENVELOPES] Got envelope",r),Object.assign(e.state,r),e.state.isLoaded=!0,e.state.isError=!1,e.state.error=n}catch(r){throw console.error("[ENVELOPES] Error loading envelope",r),e.state.isLoaded=!1,e.state.isError=!0,e.state.error=r,r}e.state.isLoading=!1}return e};export{f as g};

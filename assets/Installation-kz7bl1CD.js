import{j as e}from"./jsx-runtime-qGIIFXMu.js";import{useMDXComponents as i}from"./index-CqcSDpoT.js";import{M as r}from"./index-90NamjKr.js";/* empty css               */import"./index-CDs2tPxN.js";import"./iframe-BIHgOnMp.js";import"../sb-preview/runtime.js";import"./chunk-QN4WKJDJ-Bf_F3oir.js";import"./index-BXagdh-V.js";import"./index-DXimoRZY.js";import"./index-BH_9z_ur.js";import"./index-DrFu-skq.js";const o=""+new URL("simple-button-example-react-DErYumDw.png",import.meta.url).href,a=""+new URL("simple-button-example-vue-DpvNnB8k.png",import.meta.url).href;function t(n){const s={code:"code",h2:"h2",p:"p",pre:"pre",...i(),...n.components};return e.jsxs(e.Fragment,{children:[e.jsx(r,{title:"Installation"}),`
`,e.jsx("div",{className:"sb-container",children:e.jsxs("div",{className:"sb-section-title",children:[e.jsx(s.h2,{id:"overview",children:"Overview"}),e.jsxs(s.p,{children:[`Verdocs' Web SDK provides native Web Components that seamlessly integrate into any modern framework
that supports Web Components, including Vue, Angular, React, Svelte, etc. In frameworks that support
Web Components directly you can install `,e.jsx(s.code,{children:"@verdocs/web-sdk"}),`, but some frameworks like React should use
one of the "wrapper" libraries we provide:`]}),e.jsx(s.p,{children:`This will provide helper components that are strongly-typed and assist your IDE in code-completion
while building user interfaces with our components:`}),e.jsxs("div",{className:"row",children:[e.jsxs("div",{className:"column",children:[e.jsx("h3",{children:"React"}),e.jsx("img",{src:o,alt:"Code sample for a simple button in React"})]}),e.jsxs("div",{className:"column",children:[e.jsx("h3",{children:"VueJS"}),e.jsx("img",{src:a,alt:"Code sample for a simple button in Vue"})]})]})]})}),`
`,e.jsx("div",{className:"sb-container",children:e.jsxs("div",{className:"sb-section-title",children:[e.jsx(s.h2,{id:"installation",children:"Installation"}),e.jsx(s.p,{children:"Begin by installing appropriate wrapper (or base package) for your framework, e.g.:"}),e.jsx(s.pre,{children:e.jsx(s.code,{className:"language-sh",children:`$ npm i -S @verdocs/web-sdk-react
`})})]})}),`
`,e.jsx("div",{className:"sb-container",children:e.jsxs("div",{className:"sb-section-title",children:[e.jsx(s.h2,{id:"styling",children:"Styling"}),e.jsx(s.p,{children:`Verdocs components default to pre-defined styles that provide an integrated look and feel throughout the library.
Our Web compomnents are not isolated via Shadow DOM, and thus these styles may be easily overridden via CSS, e.g.`}),e.jsx("div",{className:"tip-wrapper",children:e.jsxs(s.p,{children:[e.jsx("span",{className:"tip",children:"Tip"})," All Verdocs styles are prefixed with the component name e.g. ",e.jsx(s.code,{children:"verdocs-button .outline"}),`.
This makes it easier to target them directly, and also avoids namespace conflicts with parent stylesheets.`]})}),e.jsx(s.p,{children:`By making the styles globally accessible in this way, you are not limited to changing just a small set of
pre-defined values e.g. via CSS variables. You can override (or even hide) any element in the Verdocs Web SDK.`}),e.jsx(s.pre,{children:e.jsx(s.code,{className:"language-css",children:`verdocs-button button.outline { border-color: #ff0000; }
`})}),e.jsx("div",{className:"tip-wrapper",children:e.jsxs(s.p,{children:[e.jsx("span",{className:"warning",children:"Warning"}),` Component name prefixes cannot avoid conflicts due to descender-selector
use, e.g. `,e.jsx(s.code,{children:".some-parent > * > * { background-color: red }"}),`. If your application's styles make heavy use of these,
consider wrapping any Verdocs components in additional `,e.jsx(s.code,{children:"<div>...</div>"})," wrappers to add a layer of isolation."]})})]})})]})}function f(n={}){const{wrapper:s}={...i(),...n.components};return s?e.jsx(s,{...n,children:e.jsx(t,{...n})}):t(n)}export{f as default};

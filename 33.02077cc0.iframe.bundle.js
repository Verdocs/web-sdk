(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{"./dist/esm/verdocs-auth.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_auth",(function(){return VerdocsAuth}));__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.reflect.construct.js"),__webpack_require__("./node_modules/core-js/modules/es.map.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./dist/esm/index-43893f54.js"),_VerdocsEndpoint_437ed2a3_js__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./dist/esm/VerdocsEndpoint-437ed2a3.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(call&&("object"==typeof call||"function"==typeof call))return call;if(void 0!==call)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(self)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _wrapNativeSuper(Class){var _cache="function"==typeof Map?new Map:void 0;return _wrapNativeSuper=function _wrapNativeSuper(Class){if(null===Class||!function _isNativeFunction(fn){return-1!==Function.toString.call(fn).indexOf("[native code]")}(Class))return Class;if("function"!=typeof Class)throw new TypeError("Super expression must either be null or a function");if(void 0!==_cache){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper)}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor)}return Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(Wrapper,Class)},_wrapNativeSuper(Class)}function _construct(Parent,args,Class){return _construct=_isNativeReflectConstruct()?Reflect.construct.bind():function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var instance=new(Function.bind.apply(Parent,a));return Class&&_setPrototypeOf(instance,Class.prototype),instance},_construct.apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}var SDKError=function(_Error){!function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),Object.defineProperty(subClass,"prototype",{writable:!1}),superClass&&_setPrototypeOf(subClass,superClass)}(SDKError,_Error);var _super=function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}(SDKError);function SDKError(message,statusCode,response){var _this;return _classCallCheck(this,SDKError),(_this=_super.call(this,message||"SDK Error")).response=response,_this.statusCode=statusCode,Object.setPrototypeOf(_assertThisInitialized(_this),(this instanceof SDKError?this.constructor:void 0).prototype),_this}return _createClass(SDKError)}(_wrapNativeSuper(Error)),VerdocsAuth=function(){function VerdocsAuth(hostRef){_classCallCheck(this,VerdocsAuth),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.h)(this,hostRef),this.authenticated=Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.d)(this,"authenticated",7),this.sdkError=Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.d)(this,"sdkError",7),this.endpoint=_VerdocsEndpoint_437ed2a3_js__WEBPACK_IMPORTED_MODULE_15__.a.getDefault(),this.visible=!0,this.logo="https://verdocs.com/assets/blue-logo.svg",this.debug=!1,this.isAuthenticated=!1,this.displayMode="login",this.username="",this.password="",this.loggingIn=!1,this.activeSession=null,this.loginError=null}return _createClass(VerdocsAuth,[{key:"componentWillLoad",value:function componentWillLoad(){var _a,_b;this.endpoint.loadSession(),this.endpoint.session?(console.log("[AUTH] Authenticated"),this.isAuthenticated=!0,this.activeSession=this.endpoint.session,null===(_a=this.authenticated)||void 0===_a||_a.emit({authenticated:!0,session:this.endpoint.session})):(console.log("[AUTH] Anonymous"),null===(_b=this.authenticated)||void 0===_b||_b.emit({authenticated:!1,session:null}))}},{key:"handleLogin",value:function handleLogin(){var _this2=this;this.loggingIn=!0,function authenticateUser(endpoint,params){return endpoint.api.post("/authentication/login",params).then((function(r){return r.data}))}(this.endpoint,{username:this.username,password:this.password}).then((function(r){var _a;_this2.loggingIn=!1,_this2.endpoint.setToken(r.accessToken),_this2.activeSession=_this2.endpoint.session,_this2.isAuthenticated=!0,null===(_a=_this2.authenticated)||void 0===_a||_a.emit({authenticated:!0,session:_this2.endpoint.session})})).catch((function(e){var _a,_b,_c,_d,_e;console.log("[AUTH] Authentication error",e.response,JSON.stringify(e)),_this2.loggingIn=!1,_this2.activeSession=null,null===(_a=_this2.authenticated)||void 0===_a||_a.emit({authenticated:!1,session:null}),null===(_b=_this2.sdkError)||void 0===_b||_b.emit(new SDKError(e.message,null===(_c=e.response)||void 0===_c?void 0:_c.status,null===(_d=e.response)||void 0===_d?void 0:_d.data)),403===(null===(_e=null==e?void 0:e.response)||void 0===_e?void 0:_e.status)&&(_this2.loginError="Please check your username and password and try again.")}))}},{key:"handleLogout",value:function handleLogout(){var _a;this.endpoint.clearSession(),this.isAuthenticated=!1,null===(_a=this.authenticated)||void 0===_a||_a.emit({authenticated:!1,session:null})}},{key:"handleClearError",value:function handleClearError(){this.loginError=null}},{key:"render",value:function render(){var _this3=this;return this.visible?this.isAuthenticated?this.debug?Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("div",{class:"status-result debug"},Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-button",{label:"Logout",disabled:this.loggingIn,onPress:function onPress(){return _this3.handleLogout()}})):Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("div",{class:"status-result"},"Authenticated"):"signup"===this.displayMode?Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("div",{class:"signup-form"},Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("img",{src:this.logo,alt:"Verdocs Logo",class:"logo"}),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("h3",null,"Sign up for an account"),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("h4",null,"Already have an account?",Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-button",{label:"Log In",variant:"text",onClick:function onClick(){return _this3.displayMode="login"},disabled:this.loggingIn})),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("form",{onSubmit:function onSubmit(){return _this3.handleLogin()}},Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-text-input",{label:"Email",autocomplete:"username",value:this.username,onFieldInput:function onFieldInput(e){return _this3.username=e.detail},disabled:this.loggingIn}),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-text-input",{label:"Password",type:"password",autocomplete:"current-password",value:this.password,onFieldInput:function onFieldInput(e){return _this3.password=e.detail},disabled:this.loggingIn}),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-button",{label:"Signup",disabled:this.loggingIn,onPress:function onPress(){return _this3.handleLogin()},style:{display:"flex",justifyContent:"center",margin:"30px auto 0"}}))):Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("div",{class:"login-form"},Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("img",{src:this.logo,alt:"Verdocs Logo",class:"logo"}),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("h3",null,"Log in to your account"),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("h4",null,"Don't have an account?",Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-button",{label:"Sign Up",variant:"text",onClick:function onClick(){return _this3.displayMode="signup"},disabled:this.loggingIn})),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("form",{onSubmit:function onSubmit(){return _this3.handleLogin()}},Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-text-input",{label:"Email",autocomplete:"username",value:this.username,onFieldInput:function onFieldInput(e){return _this3.username=e.detail},disabled:this.loggingIn}),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-text-input",{label:"Password",type:"password",autocomplete:"current-password",value:this.password,onFieldInput:function onFieldInput(e){return _this3.password=e.detail},disabled:this.loggingIn}),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-button",{label:"Forgot Your Password?",variant:"text",onClick:function onClick(){return _this3.displayMode="signup"},disabled:this.loggingIn,style:{display:"flex",justifyContent:"center",margin:"10px auto 20px"}}),Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-button",{label:"Login",disabled:this.loggingIn,onPress:function onPress(){return _this3.handleLogin()},style:{display:"flex",justifyContent:"center",margin:"10px auto 0"}})),this.loginError?Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("verdocs-ok-dialog",{open:!0,heading:"Login Error",message:this.loginError,onClosed:function onClosed(){return _this3.handleClearError()}}):Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("div",null)):Object(_index_43893f54_js__WEBPACK_IMPORTED_MODULE_14__.f)("div",{style:{display:"none"}},"Verdocs Auth Placeholder")}}]),VerdocsAuth}();VerdocsAuth.style='verdocs-auth{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}verdocs-auth .login-form,verdocs-auth .signup-form{background:#ffffff;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;display:-ms-flexbox;display:flex;padding:20px;width:300px;max-width:100%}verdocs-auth .logo{margin:20px 0 30px;width:128px;max-width:100%}verdocs-auth h3{text-align:center;font-weight:400;font-size:16px;line-height:1.75;margin:0}verdocs-auth h4{text-align:center;font-weight:400;font-size:14px;line-height:1.43;margin:0}verdocs-auth .status-result{display:none}verdocs-auth .status-result.debug{white-space:pre-wrap;font-size:14px;background:#fff;padding:10px;display:block;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:center;justify-content:center}verdocs-auth form{width:100%}verdocs-auth verdocs-text-input{margin-bottom:10px}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
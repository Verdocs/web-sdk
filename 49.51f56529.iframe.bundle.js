(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{"./dist/esm/verdocs-template-properties.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_template_properties",(function(){return VerdocsTemplateProperties}));__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/esm/index-bc9b2c82.js"),_VerdocsEndpoint_9db225a3_js__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./dist/esm/Types-ab9f6af8.js"),__webpack_require__("./dist/esm/VerdocsEndpoint-9db225a3.js"));function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var VerdocsTemplateProperties=function(){function VerdocsTemplateProperties(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsTemplateProperties),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.h)(this,hostRef),this.searchContacts=Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.d)(this,"searchContacts",7),this.cancel=Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.d)(this,"cancel",7),this.contactSelected=Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.d)(this,"contactSelected",7),this.endpoint=_VerdocsEndpoint_9db225a3_js__WEBPACK_IMPORTED_MODULE_4__.a.getDefault(),this.templateRole=null,this.contactSuggestions=[],this.showSuggestions=!1,this.showMessage=!1,this.delegator=!1}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsTemplateProperties,[{key:"componentWillLoad",value:function componentWillLoad(){this.templateRole&&(this.name=this.templateRole.full_name||"",this.email=this.templateRole.email||"",this.phone=this.templateRole.phone||"",this.delegator=this.templateRole.delegator||!1,this.message=this.templateRole.message||"",this.showMessage=""!==this.message)}},{key:"handleNameChange",value:function handleNameChange(e){var _a;this.name=e.target.value,null===(_a=this.searchContacts)||void 0===_a||_a.emit({query:this.name})}},{key:"handleEmailChange",value:function handleEmailChange(e){this.email=e.target.value}},{key:"handlePhoneChange",value:function handlePhoneChange(e){this.phone=e.target.value}},{key:"handleMessageChange",value:function handleMessageChange(e){this.message=e.target.value}},{key:"handleCancel",value:function handleCancel(e){var _a;e.stopPropagation(),this.showSuggestions=!1,null===(_a=this.cancel)||void 0===_a||_a.emit()}},{key:"handleSubmit",value:function handleSubmit(e){var _a;e.stopPropagation(),this.showSuggestions=!1,null===(_a=this.contactSelected)||void 0===_a||_a.emit({full_name:this.name,email:this.email,phone:this.phone,message:this.message,delegator:this.delegator})}},{key:"handleSelectSuggestion",value:function handleSelectSuggestion(e,suggestion){e.stopPropagation(),this.name=suggestion.name,this.email=suggestion.email,this.phone=suggestion.phone,this.showSuggestions=!1}},{key:"render",value:function render(){return Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("form",{onSubmit:function onSubmit(e){return e.preventDefault()},onClick:function onClick(e){return e.stopPropagation()},autocomplete:"off"})}}]),VerdocsTemplateProperties}();VerdocsTemplateProperties.style='verdocs-template-recipients{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-template-recipients form{background-color:#ffffff;padding:12px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}verdocs-template-recipients form .row{width:300px;display:-ms-flexbox;display:flex;position:relative;margin:0 0 20px 0;-ms-flex-direction:column;flex-direction:column}verdocs-template-recipients form label{display:block;font-size:14px;font-weight:500;margin:0 0 4px 0;color:#5c6575}verdocs-template-recipients form input{border:none;font-size:18px;padding:3px 6px 3px 0;background:transparent;border-bottom:1px solid #33364b}verdocs-template-recipients form input:focus{outline:none}verdocs-template-recipients form .dropdown{left:0;right:0;top:49px;z-index:100;position:absolute;background:#ffffff;-webkit-box-shadow:0 0 15px 0 rgba(0, 0, 0, 0.1);box-shadow:0 0 15px 0 rgba(0, 0, 0, 0.1)}verdocs-template-recipients form .dropdown .suggestion{display:-ms-flexbox;display:flex;padding:6px 12px;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row}verdocs-template-recipients form .dropdown .suggestion svg{fill:#666666}verdocs-template-recipients form .dropdown .suggestion .avatar{width:48px;height:48px;-ms-flex:0 0 48px;flex:0 0 48px;margin-right:8px;border-radius:100%}verdocs-template-recipients form .dropdown .suggestion .details{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}verdocs-template-recipients form .dropdown .suggestion .name{font-size:16px;font-weight:500;margin-bottom:3px;color:#092c4c}verdocs-template-recipients form .dropdown .suggestion .destination{font-size:14px;margin-bottom:3px;color:#33364b}verdocs-template-recipients form .dropdown .suggestion:hover{background:#eee;cursor:pointer}verdocs-template-recipients .buttons{display:-ms-flexbox;display:flex;-webkit-column-gap:8px;-moz-column-gap:8px;column-gap:8px;margin-top:16px;-ms-flex-direction:row;flex-direction:row}verdocs-template-recipients .buttons .flex-fill{-ms-flex:1;flex:1}verdocs-template-recipients ::-webkit-input-placeholder{color:#aaaaaa}verdocs-template-recipients ::-moz-placeholder{color:#aaaaaa}verdocs-template-recipients :-ms-input-placeholder{color:#aaaaaa}verdocs-template-recipients ::-ms-input-placeholder{color:#aaaaaa}verdocs-template-recipients ::placeholder{color:#aaaaaa}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
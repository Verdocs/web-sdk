(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{"./dist/esm/verdocs-initial-dialog.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_initial_dialog",(function(){return VerdocsInitialDialog}));__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/esm/index-bc9b2c82.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var VerdocsInitialDialog=function(){function VerdocsInitialDialog(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsInitialDialog),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.h)(this,hostRef),this.adopt=Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.d)(this,"adopt",7),this.cancel=Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.d)(this,"cancel",7),this.initials="",this.open=!1,this.fontLoaded=!1,this.enteredInitials="",this.mode="type"}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsInitialDialog,[{key:"componentWillLoad",value:function componentWillLoad(){var _this=this;this.enteredInitials=this.initials.toUpperCase(),new FontFace("Dancing Script","url(https://fonts.gstatic.com/s/dancingscript/v19/If2cXTr6YS-zF4S-kcSWSVi_sxjsohD9F50Ruu7BMSo3Sup6hNX6plRP.woff)").load().then((function(font){document.fonts.add(font),_this.fontLoaded=!0}))}},{key:"componentDidLoad",value:function componentDidLoad(){this.redrawSignature()}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.redrawSignature()}},{key:"redrawSignature",value:function redrawSignature(){if(this.canvasElement){var canvasWidth=this.canvasElement.width,context=this.canvasElement.getContext("2d");context.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);var fontSize=100;do{fontSize-=2,context.font=fontSize+"px Dancing Script"}while(context.measureText(this.enteredInitials).width>canvasWidth-32);context.textAlign="center",context.textBaseline="middle",context.font=fontSize+"px Dancing Script",context.fillText(this.enteredInitials,this.canvasElement.width/2,this.canvasElement.height/2)}}},{key:"handleDismiss",value:function handleDismiss(e){e.stopPropagation(),"background-overlay"===e.target.className&&this.handleCancel()}},{key:"handleNameChange",value:function handleNameChange(e){this.enteredInitials=e.target.value}},{key:"handleAdopt",value:function handleAdopt(){var data=this.canvasElement.toDataURL("image/png");this.adopt.emit(data),this.open=!1}},{key:"handleCancel",value:function handleCancel(){this.cancel.emit(),this.open=!1}},{key:"render",value:function render(){var _this2=this;return Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.b,{class:{open:this.open}},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"background-overlay",onClick:function onClick(e){return _this2.handleDismiss(e)}},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"dialog"},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"heading"},"Create Your Initial"),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"content"},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-text-input",{placeholder:"Initials...",label:"Initials",value:this.enteredInitials,onInput:function onInput(e){return _this2.handleNameChange(e)}}),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"as-shown"},"As shown on driver's license or govt. ID card."),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"tabs"},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:{tab:!0,active:"type"===this.mode},onClick:function onClick(){return _this2.mode="type"}},"Type"),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:{tab:!0,active:"draw"===this.mode},onClick:function onClick(){return _this2.mode="draw"}},"Draw")),this.fontLoaded?Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("canvas",{ref:function ref(el){return _this2.canvasElement=el}}):Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{style:{display:"none"}}),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"disclaimer"},"By clicking Adopt, I agree that the signature will be the electronic representation of my signature for all purposes when I (or my agent) use them on documents, including legally binding contracts â€” just the same as a pen-and-paper signature or initial."),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"buttons"},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-button",{label:"CANCEL",variant:"outline",onPress:function onPress(){return _this2.handleCancel()}}),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-button",{label:"Adopt & Sign",onPress:function onPress(){return _this2.handleAdopt()}}))))))}}]),VerdocsInitialDialog}();VerdocsInitialDialog.style='verdocs-initial-dialog{font-family:"Barlow", sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box;display:none}verdocs-initial-dialog.open{display:block}verdocs-initial-dialog .background-overlay{position:absolute;z-index:10000;top:0;left:0;right:0;bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background:#0000007f}verdocs-initial-dialog .dialog{width:100%;max-width:340px;border-radius:4px;overflow:hidden;-webkit-box-shadow:3px 3px 5px 1px rgba(40, 40, 40, 0.4);box-shadow:3px 3px 5px 1px rgba(40, 40, 40, 0.4);background:#f9f9f9}verdocs-initial-dialog .heading{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;padding:20px 20px 0 20px;line-height:28px;font-size:20px;font-weight:500}verdocs-initial-dialog .content{font-size:14px;padding:20px}verdocs-initial-dialog .buttons{display:-ms-flexbox;display:flex;margin:20px 0 0 0;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:center;align-items:center}verdocs-initial-dialog .buttons verdocs-button{margin-left:16px}verdocs-initial-dialog canvas{background:#fff;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0 auto;width:300px;height:79px;max-width:100%;-webkit-box-shadow:0 0 6px 0 #0000001f;box-shadow:0 0 6px 0 #0000001f}verdocs-initial-dialog .disclaimer{text-align:justify;padding:8px 0;font-size:11px;line-height:14px;color:rgba(0, 0, 0, 0.54)}verdocs-initial-dialog .as-shown{font-size:11px;margin:4px 0 20px 4px;color:rgba(0, 0, 0, 0.54)}verdocs-initial-dialog .tabs{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}verdocs-initial-dialog .tabs .tab{padding:8px 15px;cursor:pointer}verdocs-initial-dialog .tabs .tab.active{border-bottom:2px solid #cccccc}verdocs-initial-dialog .tabs .tab:hover{color:#55bc81}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvZGlhbG9ncy92ZXJkb2NzLWluaXRpYWwtZGlhbG9nL3ZlcmRvY3MtaW5pdGlhbC1kaWFsb2cuc2NzcyIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvZGlhbG9ncy92ZXJkb2NzLWluaXRpYWwtZGlhbG9nL3ZlcmRvY3MtaW5pdGlhbC1kaWFsb2cudHN4Il0sIm5hbWVzIjpbIlZlcmRvY3NJbml0aWFsRGlhbG9nIiwiaW5pdGlhbHMiLCJvcGVuIiwiZm9udExvYWRlZCIsImVudGVyZWRJbml0aWFscyIsIm1vZGUiLCJjb21wb25lbnRXaWxsTG9hZCIsInRoaXMiLCJ0b1VwcGVyQ2FzZSIsIkZvbnRGYWNlIiwibG9hZCIsInRoZW4iLCJmb250IiwiZG9jdW1lbnQiLCJmb250cyIsImFkZCIsImNvbXBvbmVudERpZExvYWQiLCJyZWRyYXdTaWduYXR1cmUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJjYW52YXNFbGVtZW50IiwiY2FudmFzV2lkdGgiLCJ3aWR0aCIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwiY2xlYXJSZWN0IiwiaGVpZ2h0IiwiZm9udFNpemUiLCJtZWFzdXJlVGV4dCIsInRleHRBbGlnbiIsInRleHRCYXNlbGluZSIsImZpbGxUZXh0IiwiaGFuZGxlRGlzbWlzcyIsImUiLCJzdG9wUHJvcGFnYXRpb24iLCJ0YXJnZXQiLCJjbGFzc05hbWUiLCJoYW5kbGVDYW5jZWwiLCJoYW5kbGVOYW1lQ2hhbmdlIiwidmFsdWUiLCJoYW5kbGVBZG9wdCIsImRhdGEiLCJ0b0RhdGFVUkwiLCJhZG9wdCIsImVtaXQiLCJjYW5jZWwiLCJyZW5kZXIiLCJoIiwiSG9zdCIsImNsYXNzIiwib25DbGljayIsInBsYWNlaG9sZGVyIiwibGFiZWwiLCJvbklucHV0IiwidGFiIiwiYWN0aXZlIiwicmVmIiwiZWwiLCJzdHlsZSIsImRpc3BsYXkiLCJ2YXJpYW50Iiwib25QcmVzcyJdLCJtYXBwaW5ncyI6InF4QkFBQSxJ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RUFBS0UsTUFBTSxXQUNURiw0RUFBZ0JLLE1BQU0sU0FBU1EsUUFBUSxVQUFVQyxRQUFTLDBCQUFNLE9BQUt4QixjQUFYLElBQzFEVSw0RUFBZ0JLLE1BQU0sZUFBZVMsUUFBUywwQkFBTSxPQUFLckIsYUFBWCxRQU8zRCxLQTlSOEIsd0IsMkJEVkQsdTFEIiwiZmlsZSI6IjQyLmU5OTliMmNjLmlmcmFtZS5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi90aGVtZS5zY3NzJztcblxudmVyZG9jcy1pbml0aWFsLWRpYWxvZyB7XG4gIGZvbnQtZmFtaWx5OiAkcHJpbWFyeS1mb250O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBub25lO1xuXG4gICYub3BlbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICAuYmFja2dyb3VuZC1vdmVybGF5IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTAwMDA7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwMDAwN2Y7XG4gIH1cblxuICAuZGlhbG9nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDM0MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJveC1zaGFkb3c6IDNweCAzcHggNXB4IDFweCByZ2JhKDQwLCA0MCwgNDAsIDAuNCk7XG4gICAgYmFja2dyb3VuZDogJGRpYWxvZy1iZztcbiAgfVxuXG4gIC5oZWFkaW5nIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgcGFkZGluZzogMjBweCAyMHB4IDAgMjBweDtcbiAgICBsaW5lLWhlaWdodDogMjhweDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgfVxuXG4gIC5jb250ZW50IHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxuXG4gIC5idXR0b25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbjogMjBweCAwIDAgMDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIHZlcmRvY3MtYnV0dG9uIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xuICAgIH1cbiAgfVxuXG4gIGNhbnZhcyB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICAvLyBUT0RPOiBUaGUgb3JpZ2luYWwgYXBwIGhhZCBhbiBhc3BlY3QgcmF0aW8gb2YgKDgwIC8gMzA1KSAqIChzaWduYXR1cmVCb2R5V2lkdGggLSAyMClcbiAgICBoZWlnaHQ6IDc5cHg7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGJveC1zaGFkb3c6IDAgMCA2cHggMCAjMDAwMDAwMWY7XG4gIH1cblxuICAuZGlzY2xhaW1lciB7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICBwYWRkaW5nOiA4cHggMDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gIH1cblxuICAuYXMtc2hvd24ge1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBtYXJnaW46IDRweCAwIDIwcHggNHB4O1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpO1xuICB9XG5cbiAgLnRhYnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcblxuICAgIC50YWIge1xuICAgICAgcGFkZGluZzogOHB4IDE1cHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRsaWdodC1ib3JkZXItY29sb3I7XG4gICAgICB9XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogJHByaW1hcnktY29sb3I7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQge0NvbXBvbmVudCwgUHJvcCwgSG9zdCwgaCwgRXZlbnQsIEV2ZW50RW1pdHRlciwgU3RhdGV9IGZyb20gJ0BzdGVuY2lsL2NvcmUnO1xuXG4vKipcbiAqIERpc3BsYXkgYSBkaWFsb2cgdGhhdCBhbGxvd3MgdGhlIHVzZXIgdG8gc3BlY2lmeSBhbiBpbml0aWFscyBpbWFnZSwgZWl0aGVyIGJ5IHVzaW5nIGEgc2lnbmF0dXJlLWZvbnQtZ2VuZXJhdGVkIGltYWdlXG4gKiBiYXNlZCBvbiB0aGVpciBmdWxsIG5hbWUsIG9yIGJ5IGhhbmQtZHJhd2luZyB0aGVpciBpbml0aWFscyB3aXRoIGEgbW91c2Ugb3IgdGFibGV0LlxuICovXG5AQ29tcG9uZW50KHtcbiAgdGFnOiAndmVyZG9jcy1pbml0aWFsLWRpYWxvZycsXG4gIHN0eWxlVXJsOiAndmVyZG9jcy1pbml0aWFsLWRpYWxvZy5zY3NzJyxcbn0pXG5leHBvcnQgY2xhc3MgVmVyZG9jc0luaXRpYWxEaWFsb2cge1xuICBwcml2YXRlIGNhbnZhc0VsZW1lbnQ/OiBIVE1MQ2FudmFzRWxlbWVudDtcblxuICAvKipcbiAgICogSW5pdGlhbCBzaWduYXR1cmUgdGV4dFxuICAgKi9cbiAgQFByb3AoKSBpbml0aWFsczogc3RyaW5nID0gJyc7XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGRpYWxvZyBpcyBjdXJyZW50bHkgYmVpbmcgZGlzcGxheWVkLiBUaGlzIGFsbG93cyBpdCB0byBiZSBhZGRlZCB0byB0aGUgRE9NIGJlZm9yZSBiZWluZyBkaXNwbGF5ZWQuXG4gICAqL1xuICBAUHJvcCgpIG9wZW46IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogRXZlbnQgZmlyZWQgd2hlbiB0aGUgaW5pdGlhbHMgYXJlIGFkb3B0ZWQuXG4gICAqL1xuICBARXZlbnQoe2NvbXBvc2VkOiB0cnVlfSkgYWRvcHQ6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSBzdGVwIGlzIGNhbmNlbGxlZC5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBjYW5jZWw6IEV2ZW50RW1pdHRlcjtcblxuICBAU3RhdGUoKSBmb250TG9hZGVkID0gZmFsc2U7XG5cbiAgQFN0YXRlKCkgZW50ZXJlZEluaXRpYWxzOiBzdHJpbmcgPSAnJztcblxuICBAU3RhdGUoKSBtb2RlOiBzdHJpbmcgPSAndHlwZSc7XG5cbiAgY29tcG9uZW50V2lsbExvYWQoKSB7XG4gICAgdGhpcy5lbnRlcmVkSW5pdGlhbHMgPSB0aGlzLmluaXRpYWxzLnRvVXBwZXJDYXNlKCk7XG5cbiAgICBjb25zdCBkcyA9IG5ldyBGb250RmFjZSgnRGFuY2luZyBTY3JpcHQnLCAndXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9kYW5jaW5nc2NyaXB0L3YxOS9JZjJjWFRyNllTLXpGNFMta2NTV1NWaV9zeGpzb2hEOUY1MFJ1dTdCTVNvM1N1cDZoTlg2cGxSUC53b2ZmKScpO1xuICAgIGRzLmxvYWQoKS50aGVuKGZvbnQgPT4ge1xuICAgICAgZG9jdW1lbnQuZm9udHMuYWRkKGZvbnQpO1xuICAgICAgdGhpcy5mb250TG9hZGVkID0gdHJ1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZExvYWQoKSB7XG4gICAgdGhpcy5yZWRyYXdTaWduYXR1cmUoKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICB0aGlzLnJlZHJhd1NpZ25hdHVyZSgpO1xuICB9XG5cbiAgcmVkcmF3U2lnbmF0dXJlKCkge1xuICAgIGlmICghdGhpcy5jYW52YXNFbGVtZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgY2FudmFzV2lkdGggPSB0aGlzLmNhbnZhc0VsZW1lbnQud2lkdGg7XG5cbiAgICBjb25zdCBjb250ZXh0ID0gdGhpcy5jYW52YXNFbGVtZW50LmdldENvbnRleHQoJzJkJyk7XG4gICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXNFbGVtZW50LndpZHRoLCB0aGlzLmNhbnZhc0VsZW1lbnQuaGVpZ2h0KTtcblxuICAgIGxldCBmb250U2l6ZSA9IDEwMDtcbiAgICBkbyB7XG4gICAgICBmb250U2l6ZSAtPSAyO1xuICAgICAgY29udGV4dC5mb250ID0gYCR7Zm9udFNpemV9cHggRGFuY2luZyBTY3JpcHRgO1xuICAgIH0gd2hpbGUgKGNvbnRleHQubWVhc3VyZVRleHQodGhpcy5lbnRlcmVkSW5pdGlhbHMpLndpZHRoID4gY2FudmFzV2lkdGggLSAzMik7IC8vIDMycHggcGFkZGluZyBlYWNoIHNpZGVcblxuICAgIGNvbnRleHQudGV4dEFsaWduID0gJ2NlbnRlcic7XG4gICAgY29udGV4dC50ZXh0QmFzZWxpbmUgPSAnbWlkZGxlJztcbiAgICBjb250ZXh0LmZvbnQgPSBgJHtmb250U2l6ZX1weCBEYW5jaW5nIFNjcmlwdGA7XG4gICAgY29udGV4dC5maWxsVGV4dCh0aGlzLmVudGVyZWRJbml0aWFscywgdGhpcy5jYW52YXNFbGVtZW50LndpZHRoIC8gMiwgdGhpcy5jYW52YXNFbGVtZW50LmhlaWdodCAvIDIpO1xuICB9XG5cbiAgLy8gV2UgbmVlZCBhIHNlcGFyYXRlIGV2ZW50IGhhbmRsZXIgZm9yIGNsaWNraW5nIHRoZSBiYWNrZ3JvdW5kIGJlY2F1c2UgaXQgY2FuIHJlY2VpdmUgZXZlbnRzIFwidGhyb3VnaFwiIG90aGVyIGNoaWxkIGNvbXBvbmVudHNcbiAgaGFuZGxlRGlzbWlzcyhlOiBhbnkpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGlmIChlLnRhcmdldC5jbGFzc05hbWUgPT09ICdiYWNrZ3JvdW5kLW92ZXJsYXknKSB7XG4gICAgICB0aGlzLmhhbmRsZUNhbmNlbCgpO1xuICAgIH1cbiAgfVxuXG4gIGhhbmRsZU5hbWVDaGFuZ2UoZTogYW55KSB7XG4gICAgdGhpcy5lbnRlcmVkSW5pdGlhbHMgPSBlLnRhcmdldC52YWx1ZTtcbiAgfVxuXG4gIGhhbmRsZUFkb3B0KCkge1xuICAgIGNvbnN0IGRhdGEgPSB0aGlzLmNhbnZhc0VsZW1lbnQudG9EYXRhVVJMKCdpbWFnZS9wbmcnKTtcbiAgICB0aGlzLmFkb3B0LmVtaXQoZGF0YSk7XG4gICAgdGhpcy5vcGVuID0gZmFsc2U7XG4gIH1cblxuICBoYW5kbGVDYW5jZWwoKSB7XG4gICAgdGhpcy5jYW5jZWwuZW1pdCgpO1xuICAgIHRoaXMub3BlbiA9IGZhbHNlO1xuICB9XG5cbiAgLypcbiAgc2VsQ29sb3IoaGV4OiBzdHJpbmcpIHtcbiAgICB0aGlzLmNvbG9yID0gaGV4O1xuICAgIHRoaXMuYW5pbWF0ZURyYXcoKTtcbiAgfVxuXG4gIHN0b3BEcmF3KCkge1xuICAgIHRoaXMucGFpbnQgPSBmYWxzZTtcbiAgICB0aGlzLmFkb3B0ZWRBbmRTaWduZWQgPSAhdGhpcy5oYXNTaWduYXR1cmUoKTtcbiAgfVxuXG4gIGRyYXcoZSkge1xuICAgIHRoaXMucGFpbnQgPSB0cnVlO1xuICAgIHRoaXMuYWRkUG9pbnRzKGUsIGZhbHNlKTtcbiAgICB0aGlzLmFuaW1hdGVEcmF3KCk7XG4gIH1cblxuICByZWNvcmRQb2ludHMoZSkge1xuICAgIGlmICh0aGlzLnBhaW50KSB7XG4gICAgICB0aGlzLmFkZFBvaW50cyhlLCB0cnVlKTtcbiAgICAgIHRoaXMuYW5pbWF0ZURyYXcoKTtcbiAgICB9XG4gIH1cblxuICBhbmltYXRlRHJhdygpIHtcbiAgICB0aGlzLmNhbnZhcy5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXMuY2FudmFzLm9mZnNldFdpZHRoLCB0aGlzLmNhbnZhcy5jYW52YXMub2Zmc2V0SGVpZ2h0KTtcblxuICAgIHRoaXMuY2FudmFzLnN0cm9rZVN0eWxlID0gdGhpcy5jb2xvciB8fCAnIzAwMDAwMCc7XG4gICAgdGhpcy5jYW52YXMubGluZUpvaW4gPSAncm91bmQnO1xuICAgIHRoaXMuY2FudmFzLmxpbmVXaWR0aCA9IDM7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucG9pbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLmNhbnZhcy5iZWdpblBhdGgoKTtcbiAgICAgIGlmICh0aGlzLnBvaW50c1tpXS5kcmFnICYmIGkpIHtcbiAgICAgICAgdGhpcy5jYW52YXMubW92ZVRvKHRoaXMucG9pbnRzW2kgLSAxXS54LCB0aGlzLnBvaW50c1tpIC0gMV0ueSk7XG4gICAgICAgIC8vIHRoaXMuY2FudmFzLmFyYyh0aGlzLnBvaW50c1tpIC0gMV0ueCwgdGhpcy5wb2ludHNbaSAtIDFdLnksIDIsIDAsIDIgKiBNYXRoLlBJLCBmYWxzZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNhbnZhcy5tb3ZlVG8odGhpcy5wb2ludHNbaV0ueCAtIDEsIHRoaXMucG9pbnRzW2ldLnkpO1xuICAgICAgICAvLyB0aGlzLmNhbnZhcy5hcmModGhpcy5wb2ludHNbaV0ueCwgdGhpcy5wb2ludHNbaV0ueSwgMiwgMCwgMiAqIE1hdGguUEksIGZhbHNlKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jYW52YXMubGluZVRvKHRoaXMucG9pbnRzW2ldLngsIHRoaXMucG9pbnRzW2ldLnkpO1xuICAgICAgdGhpcy5jYW52YXMuY2xvc2VQYXRoKCk7XG4gICAgICB0aGlzLmNhbnZhcy5zdHJva2UoKTtcbiAgICB9XG4gIH1cblxuICBkcmF3Q3VydmUoY29sb3I6IHN0cmluZywgY3VydmU6IG51bWJlcikge1xuICAgIHRoaXMuY2FudmFzLmJlZ2luUGF0aCgpO1xuICB9XG5cblxuXG4gIGFkZFBvaW50cyhlLCBkcmFnOiBib29sZWFuKSB7XG4gICAgaWYgKHdpbmRvdykge1xuICAgICAgbGV0IHg7XG4gICAgICBsZXQgeTtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGlmIChlLnRvdWNoZXMgJiYgZS50b3VjaGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgeCA9IGUudG91Y2hlc1swXS5jbGllbnRYO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeCA9IGUuY2xpZW50WDtcbiAgICAgIH1cblxuICAgICAgaWYgKGUudG91Y2hlcyAmJiBlLnRvdWNoZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB5ID0gZS50b3VjaGVzWzBdLmNsaWVudFk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB5ID0gZS5jbGllbnRZO1xuICAgICAgfVxuICAgICAgY29uc3QgcmVjdCA9IHRoaXMuc2lnbmF0dXJlQ2FudmFzLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICB0aGlzLnBvaW50cy5wdXNoKHtcbiAgICAgICAgeDogeCAtIHJlY3QubGVmdCxcbiAgICAgICAgeTogeSAtIHJlY3QudG9wLFxuICAgICAgICBkcmFnOiBkcmFnXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjbGVhclBhZCgpIHtcbiAgICB0aGlzLmNhbnZhcy5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXMuY2FudmFzLm9mZnNldFdpZHRoLCB0aGlzLmNhbnZhcy5jYW52YXMub2Zmc2V0SGVpZ2h0KTtcbiAgICB0aGlzLnBvaW50cyA9IFtdO1xuICAgIHRoaXMuYWRvcHRlZEFuZFNpZ25lZCA9ICF0aGlzLmhhc1NpZ25hdHVyZSgpO1xuICB9XG5cbiAgICBhc3luYyBhZG9wdEFuZFNpZ24oKSB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuYWRvcHRlZEFuZFNpZ25lZCA9IHRydWU7XG4gICAgICBhd2FpdCB0aGlzLnVwZGF0ZUZ1bGxOYW1lKCk7XG4gICAgICBhd2FpdCB0aGlzLmNhcHR1cmVTaWduYXR1cmVGcm9tQ2FudmFzKCk7XG4gICAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5zaWduYXR1cmVNb2RlID09PSAnU2lnbmF0dXJlJyA/ICdTYXZpbmcgU2lnbmF0dXJlJyA6ICdTYXZpbmcgSW5pdGlhbCc7XG4gICAgICB0aGlzLnNuYWNrYmFyU2VydmljZS5vcGVuKG1lc3NhZ2UsICdPSycsIHRoaXMuc25hY2tiYXJTZXJ2aWNlLmluaXRDb25maWcobnVsbCwgJ2JvdHRvbScpKTtcbiAgICAgIHRoaXMuaGFuZGxlTW9kZSgpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgdGhpcy5zbmFja2JhclNlcnZpY2Uub3BlbignRmFpbGVkIHRvIGFwcGx5IHNpZ25hdHVyZScsICdPSycsIHRoaXMuc25hY2tiYXJTZXJ2aWNlLmluaXRDb25maWcobnVsbCwgJ2JvdHRvbScpKTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVNb2RlKCkge1xuICAgIGxldCBjdXJyZW50RmllbGQ7XG4gICAgc3dpdGNoICh0aGlzLm1vZGUpIHtcbiAgICAgIGNhc2UgJ3NpZ25lcnZpZXcnOlxuICAgICAgICBpZiAodGhpcy5zaWduYXR1cmVNb2RlID09PSAnU2lnbmF0dXJlJykge1xuICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5wb3N0U2lnbmF0dXJlQmxvYigpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0LmlkICYmIHJlc3VsdC51cmwpIHtcbiAgICAgICAgICAgICAgY3VycmVudEZpZWxkID0gdGhpcy5zaWduYXR1cmVTZXJ2aWNlLmN1cnJGaWVsZDtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnVwZGF0ZVNpZ25lZChjdXJyZW50RmllbGQuZk5hbWUsIHRydWUpO1xuICAgICAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2UudG9nZ2xlU2lnKGZhbHNlKTtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldFNpZ25hdHVyZUlkKHJlc3VsdC5pZCk7XG4gICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5wdXRTaWduYXR1cmVGaWVsZCh0aGlzLmVudmVsb3BlSWQsIHRoaXMuZmllbGROYW1lLCByZXN1bHQuaWQpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50VHJhY2tlci5jcmVhdGVFdmVudCh7XG4gICAgICAgICAgICAgICAgICBjYXRlZ29yeTogJ3ZlcmRvYycsXG4gICAgICAgICAgICAgICAgICBhY3Rpb246ICd2ZXJkb2Mgc2lnbmVkJyxcbiAgICAgICAgICAgICAgICAgIGxhYmVsOiBgdmVyZG9jIGlkOiAke3RoaXMuZW52ZWxvcGVJZH1gXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBpZiAocmVzICYmIHJlcy5zZXR0aW5ncykge1xuICAgICAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldFNpZ25hdHVyZURhdGEocmVzLnNldHRpbmdzLmJhc2U2NCk7XG4gICAgICAgICAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2Uuc2V0U2lnbmF0dXJlSWQocmVzLnNldHRpbmdzLnNpZ25hdHVyZV9pZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc25hY2tiYXJTZXJ2aWNlLmRpc21pc3MoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZy5jbG9zZSh7IHN0YXR1czogJ3NhdmVkJywgdGVtcF9zaWc6IHJlcy5zZXR0aW5ncy5iYXNlNjQsIHNpZ19pZDogcmVzLnNldHRpbmdzLnNpZ25hdHVyZV9pZCB9KTtcbiAgICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNuYWNrYmFyU2VydmljZS5vcGVuKCdGYWlsZWQgdG8gc2F2ZSBzaWduYXR1cmUuIFBsZWFzZSB0cnkgYWdhaW4uJywgJ0RJU01JU1MnLCB7XG4gICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzAwMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuYWRvcHRlZEFuZFNpZ25lZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBlcnI7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5wb3N0SW5pdGlhbEJsb2IoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICBpZiAocmVzdWx0ICYmIHJlc3VsdC5pZCAmJiByZXN1bHQudXJsKSB7XG4gICAgICAgICAgICAgIGN1cnJlbnRGaWVsZCA9IHRoaXMuc2lnbmF0dXJlU2VydmljZS5jdXJyRmllbGQ7XG4gICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS51cGRhdGVJbml0aWFsZWQoY3VycmVudEZpZWxkLmZOYW1lLCB0cnVlKTtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldEluaXRpYWxJZChyZXN1bHQuaWQpO1xuICAgICAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2UudG9nZ2xlU2lnKGZhbHNlKTtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnB1dEluaXRpYWxGaWVsZCh0aGlzLmVudmVsb3BlSWQsIHRoaXMuZmllbGROYW1lLCByZXN1bHQuaWQpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVzICYmIHJlcy5zZXR0aW5ncykge1xuICAgICAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldEluaXRpYWxEYXRhKHJlcy5zZXR0aW5ncy5iYXNlNjQpO1xuICAgICAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldEluaXRpYWxJZChyZXMuc2V0dGluZ3MuaW5pdGlhbF9pZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc25hY2tiYXJTZXJ2aWNlLmRpc21pc3MoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZy5jbG9zZSh7IHN0YXR1czogJ3NhdmVkJywgdGVtcF9pbnQ6IHJlcy5zZXR0aW5ncy5iYXNlNjQsIGludF9pZDogcmVzLnNldHRpbmdzLmluaXRpYWxfaWQgfSk7XG4gICAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zbmFja2JhclNlcnZpY2Uub3BlbignRmFpbGVkIHRvIHNhdmUgaW5pdGlhbC4gUGxlYXNlIHRyeSBhZ2Fpbi4nLCAnRElTTUlTUycsIHtcbiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAwXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5hZG9wdGVkQW5kU2lnbmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVycjtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gICAqL1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEhvc3QgY2xhc3M9e3tvcGVuOiB0aGlzLm9wZW59fT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImJhY2tncm91bmQtb3ZlcmxheVwiIG9uQ2xpY2s9e2UgPT4gdGhpcy5oYW5kbGVEaXNtaXNzKGUpfT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlhbG9nXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGluZ1wiPkNyZWF0ZSBZb3VyIEluaXRpYWw8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgPHZlcmRvY3MtdGV4dC1pbnB1dCBwbGFjZWhvbGRlcj1cIkluaXRpYWxzLi4uXCIgbGFiZWw9XCJJbml0aWFsc1wiIHZhbHVlPXt0aGlzLmVudGVyZWRJbml0aWFsc30gb25JbnB1dD17ZSA9PiB0aGlzLmhhbmRsZU5hbWVDaGFuZ2UoZSl9IC8+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhcy1zaG93blwiPkFzIHNob3duIG9uIGRyaXZlcidzIGxpY2Vuc2Ugb3IgZ292dC4gSUQgY2FyZC48L2Rpdj5cblxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFic1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9e3t0YWI6IHRydWUsIGFjdGl2ZTogdGhpcy5tb2RlID09PSAndHlwZSd9fSBvbkNsaWNrPXsoKSA9PiAodGhpcy5tb2RlID0gJ3R5cGUnKX0+XG4gICAgICAgICAgICAgICAgICBUeXBlXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz17e3RhYjogdHJ1ZSwgYWN0aXZlOiB0aGlzLm1vZGUgPT09ICdkcmF3J319IG9uQ2xpY2s9eygpID0+ICh0aGlzLm1vZGUgPSAnZHJhdycpfT5cbiAgICAgICAgICAgICAgICAgIERyYXdcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAge3RoaXMuZm9udExvYWRlZCA/IDxjYW52YXMgcmVmPXtlbCA9PiAodGhpcy5jYW52YXNFbGVtZW50ID0gZWwgYXMgSFRNTENhbnZhc0VsZW1lbnQpfSAvPiA6IDxkaXYgc3R5bGU9e3tkaXNwbGF5OiAnbm9uZSd9fSAvPn1cblxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlzY2xhaW1lclwiPlxuICAgICAgICAgICAgICAgIEJ5IGNsaWNraW5nIEFkb3B0LCBJIGFncmVlIHRoYXQgdGhlIHNpZ25hdHVyZSB3aWxsIGJlIHRoZSBlbGVjdHJvbmljIHJlcHJlc2VudGF0aW9uIG9mIG15IHNpZ25hdHVyZSBmb3IgYWxsIHB1cnBvc2VzIHdoZW4gSSAob3IgbXkgYWdlbnQpIHVzZSB0aGVtIG9uIGRvY3VtZW50cyxcbiAgICAgICAgICAgICAgICBpbmNsdWRpbmcgbGVnYWxseSBiaW5kaW5nIGNvbnRyYWN0cyAmbWRhc2g7IGp1c3QgdGhlIHNhbWUgYXMgYSBwZW4tYW5kLXBhcGVyIHNpZ25hdHVyZSBvciBpbml0aWFsLlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uc1wiPlxuICAgICAgICAgICAgICAgIDx2ZXJkb2NzLWJ1dHRvbiBsYWJlbD1cIkNBTkNFTFwiIHZhcmlhbnQ9XCJvdXRsaW5lXCIgb25QcmVzcz17KCkgPT4gdGhpcy5oYW5kbGVDYW5jZWwoKX0gLz5cbiAgICAgICAgICAgICAgICA8dmVyZG9jcy1idXR0b24gbGFiZWw9XCJBZG9wdCAmIFNpZ25cIiBvblByZXNzPXsoKSA9PiB0aGlzLmhhbmRsZUFkb3B0KCl9IC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Ib3N0PlxuICAgICk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=
/*! For license information please see main.8f6fa2b1.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),index_f78d163d=(__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./dist/esm/index-f78d163d.js")),dist=__webpack_require__("./node_modules/@pxtrn/storybook-addon-docs-stencil/dist/index.js"),docs=__webpack_require__("./dist/docs.json");!function defineCustomElements(win,options){"undefined"==typeof window?Promise.resolve():function patchEsm(){return Object(index_f78d163d.i)()}().then((function(){return Object(index_f78d163d.d)([["verdocs-field-initial",[[0,"verdocs-field-initial",{field:[16],disabled:[4],initials:[1],editable:[4],moveable:[4],done:[4],roleindex:[2],tempInitials:[32],focusField:[64],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-field-signature",[[0,"verdocs-field-signature",{field:[16],name:[1],disabled:[4],editable:[4],moveable:[4],done:[4],roleindex:[2],tempSignature:[32],focusField:[64],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-build",[[0,"verdocs-build",{endpoint:[16],templateId:[1,"template-id"],step:[32],pdfUrl:[32],template:[32]}]]],["verdocs-field-checkbox",[[0,"verdocs-field-checkbox",{field:[16],option:[2],disabled:[4],done:[4],roleindex:[2],editable:[4],moveable:[4],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-field-date",[[0,"verdocs-field-date",{field:[16],disabled:[4],editable:[4],moveable:[4],done:[4],roleindex:[2],containerId:[32],focusField:[64],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-field-radio-button",[[0,"verdocs-field-radio-button",{field:[16],option:[2],disabled:[4],done:[4],roleindex:[2],editable:[4],moveable:[4],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-field-textarea",[[0,"verdocs-field-textarea",{field:[16],disabled:[4],editable:[4],moveable:[4],done:[4],roleindex:[2],focusField:[64],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-field-textbox",[[0,"verdocs-field-textbox",{field:[16],disabled:[4],editable:[4],moveable:[4],done:[4],roleindex:[2],focusField:[64],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-field-timestamp",[[0,"verdocs-field-timestamp",{field:[16],disabled:[4],editable:[4],moveable:[4],done:[4],roleindex:[2],focusField:[64],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-template-recipients",[[0,"verdocs-template-recipients",{endpoint:[16],templateId:[1,"template-id"],showingRoleDialog:[32],showingSenderDialog:[32],sender:[32],forceRerender:[32]}]]],["verdocs-sign",[[0,"verdocs-sign",{envelopeId:[1,"envelope-id"],roleId:[1,"role-id"],inviteCode:[1,"invite-code"],recipient:[32],signerToken:[32],hasSignature:[32],nextButtonLabel:[32],nextSubmits:[32],errorMessage:[32],focusedField:[32],isDone:[32],showDone:[32],finishLater:[32],showFinishLater:[32],agreed:[32],documentsSingularPlural:[32]}]]],["verdocs-template-properties",[[0,"verdocs-template-properties",{endpoint:[16],templateId:[1,"template-id"],template:[32],name:[32],visibility:[32],sendReminders:[32],firstReminderDays:[32],reminderDays:[32]}]]],["verdocs-template-reminders",[[0,"verdocs-template-reminders",{endpoint:[16],templateId:[1,"template-id"],showPlanBlocker:[32],sendReminders:[32],firstReminderDays:[32],reminderDays:[32],dirty:[32],loading:[32]}]]],["verdocs-auth",[[0,"verdocs-auth",{endpoint:[16],visible:[4],logo:[1],isAuthenticated:[32],displayMode:[32],username:[32],password:[32],loggingIn:[32],activeSession:[32],loginError:[32]}]]],["verdocs-template-name",[[0,"verdocs-template-name",{endpoint:[16],templateId:[1,"template-id"],name:[32],dirty:[32],loading:[32]}]]],["verdocs-search",[[0,"verdocs-search",{endpoint:[16]}]]],["verdocs-send",[[0,"verdocs-send",{endpoint:[16],templateId:[1,"template-id"],containerId:[32],rolesAtLevel:[32],showPickerForId:[32],sessionContacts:[32],rolesCompleted:[32],reset:[64]}]]],["verdocs-template-visibility",[[0,"verdocs-template-visibility",{endpoint:[16],templateId:[1,"template-id"],dirty:[32],loading:[32],personal:[32],public:[32]}]]],["verdocs-upload-dialog",[[0,"verdocs-upload-dialog",{draggingOver:[32],decodedFiles:[32]}]]],["verdocs-field-attachment",[[0,"verdocs-field-attachment",{field:[16],disabled:[4],roleIndex:[2,"role-index"],focusField:[64],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-preview",[[0,"verdocs-preview",{endpoint:[16],templateId:[1,"template-id"]}]]],["verdocs-envelope-sidebar",[[0,"verdocs-envelope-sidebar",{endpoint:[16],envelopeId:[1,"envelope-id"],activeTab:[32],panelOpen:[32]}]]],["verdocs-kba-dialog",[[0,"verdocs-kba-dialog",{step:[2],steps:[2],helptitle:[1],helptext:[1],mode:[1],label:[1],placeholder:[1],choices:[16],response:[32]}]]],["verdocs-template-attachments",[[0,"verdocs-template-attachments",{endpoint:[16],templateId:[1,"template-id"],loading:[32]}]]],["verdocs-field-dropdown",[[0,"verdocs-field-dropdown",{field:[16],disabled:[4],roleindex:[2],focusField:[64],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-field-payment",[[0,"verdocs-field-payment",{field:[16],disabled:[4],fields:[16],pageNum:[2,"page-num"],roleName:[1,"role-name"],fieldId:[1,"field-id"],recipients:[8],selectedRoleName:[1,"selected-role-name"],pdfPages:[16],currentSignature:[1,"current-signature"],currentSignatureId:[1,"current-signature-id"],currentInitial:[1,"current-initial"],currentInitialId:[1,"current-initial-id"],focused:[4],signed:[4],roleindex:[2],preparedMessage:[32],signatureUrl:[32],showSettingsPanel:[64],hideSettingsPanel:[64]}]]],["verdocs-organization-card",[[0,"verdocs-organization-card",{organization:[16]}]]],["verdocs-search-tabs",[[0,"verdocs-search-tabs",{selected:[32]}]]],["verdocs-status-indicator",[[0,"verdocs-status-indicator",{size:[1],theme:[1],status:[1],envelope:[16],isOpen:[32],recipientStatusIcons:[32],containerId:[32]}]]],["verdocs-template-card",[[0,"verdocs-template-card",{template:[16]}]]],["verdocs-template-tags",[[0,"verdocs-template-tags",{tags:[16]}]]],["verdocs-toggle",[[0,"verdocs-toggle",{options:[16],theme:[1],selectedOption:[32]}]]],["verdocs-initial-dialog",[[0,"verdocs-initial-dialog",{initials:[1],fontLoaded:[32],enteredInitials:[32],mode:[32]}]]],["verdocs-signature-dialog",[[0,"verdocs-signature-dialog",{name:[1],fontLoaded:[32],enteredName:[32],mode:[32]}]]],["verdocs-view",[[0,"verdocs-view",{endpoint:[16],envelopeId:[1,"envelope-id"]}]]],["verdocs-toggle-button",[[0,"verdocs-toggle-button",{active:[4],icon:[1],label:[1],size:[1],_active:[32]}]]],["verdocs-contact-picker",[[0,"verdocs-contact-picker",{endpoint:[16],templateRole:[16],contactSuggestions:[16],name:[32],email:[32],phone:[32],message:[32],showSuggestions:[32],showMessage:[32],delegator:[32]}]]],["verdocs-radio-button",[[0,"verdocs-radio-button",{checked:[4],name:[1],value:[1],disabled:[4]}]]],["verdocs-button",[[0,"verdocs-button",{label:[1],startIcon:[1,"start-icon"],endIcon:[1,"end-icon"],size:[1],type:[1],variant:[1],disabled:[4]}]]],["verdocs-template-role-properties_2",[[0,"verdocs-template-role-properties",{endpoint:[16],templateId:[1,"template-id"],roleName:[1,"role-name"],sender:[1],dirty:[32],saving:[32],name:[32],type:[32],fullName:[32],email:[32],phone:[32],allowDelegation:[32]}],[0,"verdocs-template-sender",{endpoint:[16],templateId:[1,"template-id"],sender:[1],saving:[32]}]]],["verdocs-floating-menu_2",[[0,"verdocs-floating-menu",{options:[16]}],[0,"verdocs-toolbar-icon",{text:[1],icon:[1],placement:[1],containerId:[32]}]]],["verdocs-template-create_2",[[0,"verdocs-template-fields",{endpoint:[16],templateId:[1,"template-id"],placing:[32],selectedRoleName:[32]}],[0,"verdocs-template-create",{endpoint:[16],file:[32],creating:[32]}]]],["verdocs-ok-dialog",[[0,"verdocs-ok-dialog",{heading:[1],message:[1],showCancel:[4,"show-cancel"]}]]],["verdocs-quick-functions_3",[[0,"verdocs-quick-functions",{endpoint:[16]}],[0,"verdocs-search-activity",{endpoint:[16],type:[1],options:[8],emptyMessage:[32],authFailure:[32],title:[32],recent:[32],saved:[32],starred:[32]}],[0,"verdocs-search-box",{endpoint:[16],placeholder:[1],type:[1],query:[1],grabsFocus:[4,"grabs-focus"],focusField:[64]}]]],["verdocs-dropdown",[[0,"verdocs-dropdown",{options:[16],open:[32]}]]],["verdocs-document-page_2",[[0,"verdocs-document-page",{pageImageUri:[1,"page-image-uri"],pageNumber:[2,"page-number"],virtualWidth:[2,"virtual-width"],virtualHeight:[1026,"virtual-height"],layers:[16],containerId:[32],renderedWidth:[32],renderedHeight:[32],naturalWidth:[32],naturalHeight:[32],aspectRatio:[32],skipFirstNotification:[32]}],[0,"verdocs-loader"]]],["verdocs-checkbox_4",[[0,"verdocs-checkbox",{checked:[4],name:[1],label:[1],value:[1],theme:[1],disabled:[4]}],[0,"verdocs-component-error",{message:[1]}],[0,"verdocs-text-input",{value:[1],label:[1],placeholder:[1],autocomplete:[1],helpText:[1,"help-text"],type:[1],disabled:[4]}],[0,"verdocs-help-icon",{text:[1],containerId:[32]}]]],["verdocs-button-panel_3",[[0,"verdocs-template-field-properties",{endpoint:[16],templateId:[1,"template-id"],fieldName:[1,"field-name"],dirty:[32],loading:[32],type:[32],name:[32],roleName:[32],required:[32],placeholder:[32],defaultValue:[32]}],[4,"verdocs-button-panel",{icon:[1],showPanel:[64],hidePanel:[64],toggle:[64]}],[0,"verdocs-select-input",{value:[1],label:[1],options:[16],disabled:[4]}]]]],options)}))}(),docs&&Object(dist.setStencilDocJson)(docs);var parameters={controls:{hideNoControlsWarning:!0,matchers:{color:/(background|color)$/i,date:/Date$/}},viewMode:"docs",docs:{iframeHeight:500,extractArgTypes:dist.extractArgTypes,extractComponentDescription:dist.extractComponentDescription},layout:"centered",backgrounds:{default:"light",values:[{name:"light",value:"#eeeeee"},{name:"medium",value:"#5c6575"},{name:"dark",value:"#33364b"}]}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}window.addEventListener("load",(function clickDocsButtonOnFirstLoad(){window.removeEventListener("load",clickDocsButtonOnFirstLoad);try{window.parent.document.evaluate("//button[contains(., 'Docs')]",window.parent.document,null,XPathResult.ANY_TYPE,null).iterateNext().click()}catch(error){}})),Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return Object(ClientApi.d)(value);case"argTypes":return Object(ClientApi.b)(value);case"decorators":return value.forEach((function(decorator){return Object(ClientApi.f)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.g)(loader,!1)}));case"parameters":return Object(ClientApi.h)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.e)(enhancer)}));case"render":return Object(ClientApi.i)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.h)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./dist/docs.json":function(module){module.exports=JSON.parse('{"timestamp":"2023-02-10T14:32:40","compiler":{"name":"@stencil/core","version":"2.20.0","typescriptVersion":"4.8.4"},"components":[{"filePath":"./src/components/embeds/verdocs-auth/verdocs-auth.tsx","encapsulation":"none","tag":"verdocs-auth","docs":"Display an authentication dialog that allows the user to login or sign up. Callbacks are provided for events that\\noccur during the process (especially successful completion). The success callback will be fired immediately if the\\nuser is already authenticated with a valid session, so this component may not always display visibly.\\n\\nTo simplify some types of authentication flows, a visibility flag can force this component to never display. This\\nallows you to susbcribe to notifications from the\\n\\nThis embed is responsive / mobile-friendly, but the calling application should provide at least a 300px wide\\ncontainer to allow sufficient space for the required forms.\\n\\nAs noted below, the primary event is `authenticated`. This will always be fired at least once, immediately after\\nthe widget is rendered and the user\'s status has been checked. It may be fired again as the user completes (or\\ncancels) authentication steps.\\n\\nAuthentication is required to demonstrate this Element. You may do this in Storybook by using the Auth\\nembed. This Element will reuse the same session produced by logging in via that Embed.\\n\\n```typescript\\ninterface IAuthStatus {\\n  // If true, the user is authenticated with a valid session\\n  authenticated: boolean;\\n\\n  // Details for the user\'s session\\n  session: IActiveSession | null;\\n}\\n```","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"logo","type":"string","mutable":false,"attr":"logo","reflectToAttr":false,"docs":"By default, a Verdocs logo will be displayed above the login/signup forms. This may be used to\\noverride its source. (Alternatively, you may simply hide it via CSS overrides.) Logos should be\\nin SVG format for best results.","docsTags":[],"default":"\'https://verdocs.com/assets/blue-logo.svg\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"visible","type":"boolean","mutable":false,"attr":"visible","reflectToAttr":false,"docs":"Normally, if the user has a valid session, this embed will be invisible, otherwise it will display\\nlogin / signup forms. If this is set to false, this embed will be invisible in both cases. Apps may\\nuse this to verify if a user has a valid session without needing a separate call to Verdocs JS SDK.","docsTags":[],"default":"true","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"authenticated","detail":"IAuthStatus","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when session authentication process has completed. Check the event contents for completion status.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button","verdocs-text-input","verdocs-ok-dialog"],"dependencyGraph":{"verdocs-auth":["verdocs-button","verdocs-text-input","verdocs-ok-dialog"],"verdocs-text-input":["verdocs-help-icon"],"verdocs-ok-dialog":["verdocs-button"]}},{"filePath":"./src/components/embeds/verdocs-build/verdocs-build.tsx","encapsulation":"none","tag":"verdocs-build","docs":"Display a template building experience.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The ID of the template to create the document from.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-component-error","verdocs-template-create","verdocs-template-fields"],"dependencyGraph":{"verdocs-build":["verdocs-component-error","verdocs-template-create","verdocs-template-fields"],"verdocs-template-create":["verdocs-component-error","verdocs-button"],"verdocs-template-fields":["verdocs-component-error","verdocs-loader","verdocs-document-page","verdocs-floating-menu"],"verdocs-floating-menu":["verdocs-toolbar-icon"]}},{"filePath":"./src/components/controls/verdocs-button/verdocs-button.tsx","encapsulation":"none","tag":"verdocs-button","docs":"Display a simple button.\\n\\nThree variants are supported. `standard` and `outline` buttons look like traditional form buttons and are ideal candidates for \'Ok\' and\\n\'Cancel\' options in most cases. `text` buttons are intended to be used inline in content blocks or for more subtle button options.\\n(Auth uses text buttons for the Forgot Password and Sign Up options.)\\n\\nFour sizes are also supported. Most use cases will call for the `normal` size, but a `small` size is ideal for more subtle controls, such\\nas pagination or other secondary functions. `medium` buttons are slightly larger to provide balance in forms where other items are also\\nbigger, and `large` buttons are for cases where the page has mostly white-space and the buttons need to fill more space.\\n\\nIcons may be placed either before (\\"start\\") or after (\\"end\\") the button label. Icons should be SVG objects passed as strings and will\\nbe rendered as HTML inside the button label area. It is important that the root <SVG> tag contains a default `fill=\\"#ffffff\\"` setting\\nfor the base color, and that child elements below it do not. This allows the button color to carry into the icon properly.\\n\\n```html\\n<verdocs-button label=\\"OK\\" onClick={() => (console.log(\'OK clicked\'))} />\\n```","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Whether the button should be disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"endIcon","type":"string","mutable":false,"attr":"end-icon","reflectToAttr":false,"docs":"If desired, a suffix icon for the button.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"The label for the button.","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":true},{"name":"size","type":"\\"large\\" | \\"medium\\" | \\"normal\\" | \\"small\\"","mutable":false,"attr":"size","reflectToAttr":false,"docs":"The size (height) of the button.","docsTags":[],"default":"\'normal\'","values":[{"value":"large","type":"string"},{"value":"medium","type":"string"},{"value":"normal","type":"string"},{"value":"small","type":"string"}],"optional":false,"required":false},{"name":"startIcon","type":"string","mutable":false,"attr":"start-icon","reflectToAttr":false,"docs":"If desired, a prefix icon for the button.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false},{"name":"type","type":"\\"button\\" | \\"reset\\" | \\"submit\\"","mutable":false,"attr":"type","reflectToAttr":false,"docs":"The type of the button.","docsTags":[],"default":"\'button\'","values":[{"value":"button","type":"string"},{"value":"reset","type":"string"},{"value":"submit","type":"string"}],"optional":false,"required":false},{"name":"variant","type":"\\"outline\\" | \\"standard\\" | \\"text\\"","mutable":false,"attr":"variant","reflectToAttr":false,"docs":"The display variant of the button.","docsTags":[],"default":"\'standard\'","values":[{"value":"outline","type":"string"},{"value":"standard","type":"string"},{"value":"text","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-auth","verdocs-contact-picker","verdocs-initial-dialog","verdocs-kba-dialog","verdocs-ok-dialog","verdocs-send","verdocs-sign","verdocs-signature-dialog","verdocs-template-create","verdocs-template-field-properties","verdocs-template-name","verdocs-template-properties","verdocs-template-recipients","verdocs-template-reminders","verdocs-template-role-properties","verdocs-template-sender","verdocs-template-visibility","verdocs-upload-dialog"],"dependencies":[],"dependencyGraph":{"verdocs-auth":["verdocs-button"],"verdocs-contact-picker":["verdocs-button"],"verdocs-initial-dialog":["verdocs-button"],"verdocs-kba-dialog":["verdocs-button"],"verdocs-ok-dialog":["verdocs-button"],"verdocs-send":["verdocs-button"],"verdocs-sign":["verdocs-button"],"verdocs-signature-dialog":["verdocs-button"],"verdocs-template-create":["verdocs-button"],"verdocs-template-field-properties":["verdocs-button"],"verdocs-template-name":["verdocs-button"],"verdocs-template-properties":["verdocs-button"],"verdocs-template-recipients":["verdocs-button"],"verdocs-template-reminders":["verdocs-button"],"verdocs-template-role-properties":["verdocs-button"],"verdocs-template-sender":["verdocs-button"],"verdocs-template-visibility":["verdocs-button"],"verdocs-upload-dialog":["verdocs-button"]}},{"filePath":"./src/components/controls/verdocs-button-panel/verdocs-button-panel.tsx","encapsulation":"none","tag":"verdocs-button-panel","docs":"Displays a clickable icon suitable for display in a toolbar. When clicked, a customizable drop-down panel will be\\ndisplayed.\\n\\n*\\n```html\\n<verdocs-button-panel icon=\\"<svg.../>\\">\\n  <form>...</form>\\n</verdocs-button-panel>\\n```","docsTags":[],"usage":{},"props":[{"name":"icon","type":"string","mutable":false,"attr":"icon","reflectToAttr":false,"docs":"SVG icon to display","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[{"name":"hidePanel","returns":{"type":"Promise<void>","docs":""},"signature":"hidePanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"toggle","returns":{"type":"Promise<void>","docs":""},"signature":"toggle() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-checkbox","verdocs-field-date","verdocs-field-initial","verdocs-field-radio-button","verdocs-field-signature","verdocs-field-textarea","verdocs-field-textbox","verdocs-field-timestamp"],"dependencies":[],"dependencyGraph":{"verdocs-field-checkbox":["verdocs-button-panel"],"verdocs-field-date":["verdocs-button-panel"],"verdocs-field-initial":["verdocs-button-panel"],"verdocs-field-radio-button":["verdocs-button-panel"],"verdocs-field-signature":["verdocs-button-panel"],"verdocs-field-textarea":["verdocs-button-panel"],"verdocs-field-textbox":["verdocs-button-panel"],"verdocs-field-timestamp":["verdocs-button-panel"]}},{"filePath":"./src/components/controls/verdocs-checkbox/verdocs-checkbox.tsx","encapsulation":"none","tag":"verdocs-checkbox","docs":"Displays a check box. Note that this is different from the `verdocs-field-checkbox` component, which is designed\\nto be used in signing experiences and contains settings that connect to template fields. This is just a simple check\\nbox for UI displays e.g. dialog boxes.\\n\\nThis control encapsulates a standard HTML checkbox. To subscribe to change events, connect an `onChange`\\nhandler. Sample usage:\\n\\n```html\\n<verdocs-checkbox\\n   value=\\"on\\"\\n   name=\\"thingEnabled\\"\\n   checked={this.thingEnabled}\\n   onInput={(e: any) => (this.thingEnabled = e.target.checked)}\\n/>\\n```","docsTags":[],"usage":{},"props":[{"name":"checked","type":"boolean","mutable":false,"attr":"checked","reflectToAttr":false,"docs":"Whether the radio button is currently selected.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, the button will still be displayed but not selectable.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"Label to display. Leave blank for no label. The label will be displayed to the right of the checkbox, but may be\\nrepositioned with CSS.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"name","type":"string","mutable":false,"attr":"name","reflectToAttr":false,"docs":"HTML form field name for the input.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"theme","type":"\\"dark\\" | \\"light\\"","mutable":false,"attr":"theme","reflectToAttr":false,"docs":"Style of checkbox to render. Use \'dark\' when rendering on a dark background.","docsTags":[],"default":"\'light\'","values":[{"value":"dark","type":"string"},{"value":"light","type":"string"}],"optional":false,"required":false},{"name":"value","type":"string","mutable":false,"attr":"value","reflectToAttr":false,"docs":"Value to track with the input. Value is not used internally by this component but is sometimes useful to set\\nbecause it can be retrieved in event handlers via e.target.value. This can be used to identify which\\ncheckbox was clicked in a checkbox group.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-sign","verdocs-template-field-properties","verdocs-template-properties","verdocs-template-reminders","verdocs-template-role-properties","verdocs-template-visibility"],"dependencies":[],"dependencyGraph":{"verdocs-sign":["verdocs-checkbox"],"verdocs-template-field-properties":["verdocs-checkbox"],"verdocs-template-properties":["verdocs-checkbox"],"verdocs-template-reminders":["verdocs-checkbox"],"verdocs-template-role-properties":["verdocs-checkbox"],"verdocs-template-visibility":["verdocs-checkbox"]}},{"filePath":"./src/components/elements/verdocs-component-error/verdocs-component-error.tsx","encapsulation":"none","tag":"verdocs-component-error","docs":"Render a simple error message.","docsTags":[],"usage":{},"props":[{"name":"message","type":"string","mutable":false,"attr":"message","reflectToAttr":false,"docs":"The message to display.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-build","verdocs-template-create","verdocs-template-field-properties","verdocs-template-fields","verdocs-template-properties","verdocs-template-reminders","verdocs-template-visibility"],"dependencies":[],"dependencyGraph":{"verdocs-build":["verdocs-component-error"],"verdocs-template-create":["verdocs-component-error"],"verdocs-template-field-properties":["verdocs-component-error"],"verdocs-template-fields":["verdocs-component-error"],"verdocs-template-properties":["verdocs-component-error"],"verdocs-template-reminders":["verdocs-component-error"],"verdocs-template-visibility":["verdocs-component-error"]}},{"filePath":"./src/components/elements/verdocs-contact-picker/verdocs-contact-picker.tsx","encapsulation":"none","tag":"verdocs-contact-picker","docs":"Displays a contact picker suitable for filling out Recipient objects when sending Documents.\\n\\nThis picker can also be integrated with a backend to provide contact list / suggestion / address-book style behavior. As the\\nuser interacts with the component, the text entered in the name field is sent back to the parent via the `searchContacts` event.\\nThe parent can use that text as a query string to call a backend to obtain appropriate contacts to show. This list may also be\\nhard-coded ahead of time to provide the user with smart suggestions on initial display, such as \\"Recently Used\\" contacts, or\\nto always display the user\'s own contact record.","docsTags":[],"usage":{},"props":[{"name":"contactSuggestions","type":"(IEmailContact | IPhoneContact)[]","mutable":false,"reflectToAttr":false,"docs":"If set, suggestions will be displayed in a drop-down list to the user. It is recommended that the number\\nof suggestions be limited to the 5 best matching records.","docsTags":[],"default":"[]","values":[{"type":"(IEmailContact"},{"type":"IPhoneContact)[]"}],"optional":false,"required":false},{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateRole","type":"IRole","mutable":false,"reflectToAttr":false,"docs":"The role that this contact will be assigned to.","docsTags":[],"default":"null","values":[{"type":"IRole"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"next","detail":"IContactSelectEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]},{"event":"searchContacts","detail":"IContactSearchEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user enters text in the search field. The calling application may use this to update\\nthe `contactSuggestions` property.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-send"],"dependencies":["verdocs-toggle-button","verdocs-button"],"dependencyGraph":{"verdocs-contact-picker":["verdocs-toggle-button","verdocs-button"],"verdocs-send":["verdocs-contact-picker"]}},{"filePath":"./src/components/elements/verdocs-document-page/verdocs-document-page.tsx","encapsulation":"none","tag":"verdocs-document-page","docs":"Represents one document page. This is primarily a layout container used to coordinate positions of\\npage-related layers such as the page itself, signature fields, etc. It is not intended to be used\\non its own as an individual component.","docsTags":[],"usage":{},"props":[{"name":"layers","type":"IPageLayer[]","mutable":false,"reflectToAttr":false,"docs":"The layers that will be rendered. The DOM structure will be a DIV container with one child DIV for each layer.\\nThe parent DIV will have a unique ID, and each child DIV will have that ID with the layer name appended, e.g.\\nif `pages` was [\'page\', \'fields\'] the structure will be:\\n\\n```\\n    <div id=\\"verdocs-document-page-ker2fr1p9\\">\\n      <div id=\\"verdocs-document-page-ker2fr1p9-page\\"></div>\\n      <div id=\\"verdocs-document-page-ker2fr1p9-fields\\"></div>\\n    </div>\\n```","docsTags":[],"default":"[{name: \'page\', type: \'canvas\'}]","values":[{"type":"IPageLayer[]"}],"optional":false,"required":false},{"name":"pageImageUri","type":"string","mutable":false,"attr":"page-image-uri","reflectToAttr":false,"docs":"The URL of the image to render as the page background.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"pageNumber","type":"number","mutable":false,"attr":"page-number","reflectToAttr":false,"docs":"The page number being rendered. Not used internally, but included in callbacks/events beacuse page numbers\\nare used everywhere in document handling. (Reminder: page numbers are 1-based.)","docsTags":[],"default":"1","values":[{"type":"number"}],"optional":false,"required":false},{"name":"virtualHeight","type":"number","mutable":true,"attr":"virtual-height","reflectToAttr":false,"docs":"The \\"virtual\\" height of the page canvas.  Defaults to 792 which at 72dpi is 11\\" tall. This is used to compute\\nthe aspect ratio of the final rendered element when scaling up/down.","docsTags":[],"default":"792","values":[{"type":"number"}],"optional":false,"required":false},{"name":"virtualWidth","type":"number","mutable":false,"attr":"virtual-width","reflectToAttr":false,"docs":"The \\"virtual\\" width of the page canvas. Defaults to 612 which at 72dpi is 8.5\\" wide. This is used to compute\\nthe aspect ratio of the final rendered element when scaling up/down.","docsTags":[],"default":"612","values":[{"type":"number"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"pageRendered","detail":"IDocumentPageInfo","bubbles":true,"cancelable":true,"composed":true,"docs":"Fired when a page has been rendered. This is also fired when the page is resized.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-preview","verdocs-sign","verdocs-template-fields","verdocs-view"],"dependencies":[],"dependencyGraph":{"verdocs-preview":["verdocs-document-page"],"verdocs-sign":["verdocs-document-page"],"verdocs-template-fields":["verdocs-document-page"],"verdocs-view":["verdocs-document-page"]}},{"filePath":"./src/components/controls/verdocs-dropdown/verdocs-dropdown.tsx","encapsulation":"none","tag":"verdocs-dropdown","docs":"Display a drop-down menu button. A menu of the specified options will be displayed when the button is pressed. The menu will be hidden\\nwhen the button is pressed again, or an option is selected.\\n\\n```html\\n<verdocs-dropdown\\n  options={[\\n    {label: \'Option 1\', disabled: true},\\n    {label: \'Option 2\', id: \'2\'}\\n   ]}\\n  label=\\"OK\\" onClick={() => (console.log(\'OK clicked\'))}\\n/>\\n```","docsTags":[],"usage":{},"props":[{"name":"options","type":"IMenuOption[]","mutable":false,"reflectToAttr":false,"docs":"The menu options to display.","docsTags":[],"default":"[]","values":[{"type":"IMenuOption[]"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"optionSelected","detail":"IMenuOption","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when a menu option is clicked.\\nWeb Component events need to be \\"composed\\" to cross the Shadow DOM and be received by parent frameworks.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-envelope-sidebar","verdocs-sign","verdocs-view"],"dependencies":[],"dependencyGraph":{"verdocs-envelope-sidebar":["verdocs-dropdown"],"verdocs-sign":["verdocs-dropdown"],"verdocs-view":["verdocs-dropdown"]}},{"filePath":"./src/components/elements/verdocs-envelope-sidebar/verdocs-envelope-sidebar.tsx","encapsulation":"none","tag":"verdocs-envelope-sidebar","docs":"Displays a file upload mechanism suitable for the first step of creating a template.\\nThis is typically the first step in a template creation workflow.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"envelopeId","type":"string","mutable":false,"attr":"envelope-id","reflectToAttr":false,"docs":"The envelope ID to render. Set ONE OF templateId or envelopeId. If both are set, envelopeId will be ignored.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-dropdown"],"dependencyGraph":{"verdocs-envelope-sidebar":["verdocs-dropdown"]}},{"filePath":"./src/components/fields/verdocs-field-attachment/verdocs-field-attachment.tsx","encapsulation":"none","tag":"verdocs-field-attachment","docs":"Displays a signature field. Various field types are supported, including traditional Signature and Initials types as well as\\ninput types like text and checkbox.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"roleIndex","type":"number","mutable":false,"attr":"role-index","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-upload-dialog"],"dependencyGraph":{"verdocs-field-attachment":["verdocs-upload-dialog"],"verdocs-upload-dialog":["verdocs-button"]}},{"filePath":"./src/components/fields/verdocs-field-checkbox/verdocs-field-checkbox.tsx","encapsulation":"none","tag":"verdocs-field-checkbox","docs":"Displays a checkbox.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"done","type":"boolean","mutable":false,"attr":"done","reflectToAttr":false,"docs":"If set, the field is considered \\"done\\" and is drawn in a display-final-value state.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"option","type":"number","mutable":false,"attr":"option","reflectToAttr":false,"docs":"The index of the settings option this particular checkbox is for","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":false,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-template-field-properties"],"dependencyGraph":{"verdocs-field-checkbox":["verdocs-button-panel","verdocs-template-field-properties"],"verdocs-template-field-properties":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"]}},{"filePath":"./src/components/fields/verdocs-field-date/verdocs-field-date.tsx","encapsulation":"none","tag":"verdocs-field-date","docs":"Displays a date field. When tapped or clicked, the input element will display a date picker component.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"done","type":"boolean","mutable":false,"attr":"done","reflectToAttr":false,"docs":"If set, the field is considered \\"done\\" and is drawn in a display-final-value state.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]},{"event":"settingsPress","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-template-field-properties"],"dependencyGraph":{"verdocs-field-date":["verdocs-button-panel","verdocs-template-field-properties"],"verdocs-template-field-properties":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"]}},{"filePath":"./src/components/fields/verdocs-field-dropdown/verdocs-field-dropdown.tsx","encapsulation":"none","tag":"verdocs-field-dropdown","docs":"Displays a signature field. Various field types are supported, including traditional Signature and Initials types as well as\\ninput types like text and checkbox.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]},{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/fields/verdocs-field-initial/verdocs-field-initial.tsx","encapsulation":"none","tag":"verdocs-field-initial","docs":"Displays an initial field. If an initial already exists, it will be displayed and the field will be disabled. Otherwise, a placeholder\\nbutton will be shown. Clicking the button will show a dialog to adopt an initial.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"done","type":"boolean","mutable":false,"attr":"done","reflectToAttr":false,"docs":"If set, the field is considered \\"done\\" and is drawn in a display-final-value state.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"initials","type":"string","mutable":false,"attr":"initials","reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"adopt","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event emitted when an initial block is adopted by the user. The event detail will contain the base64 string of the initial image.","docsTags":[]},{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event emitted when the user cancels the process.","docsTags":[]},{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]},{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]},{"event":"settingsPress","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-initial-dialog","verdocs-button-panel","verdocs-template-field-properties"],"dependencyGraph":{"verdocs-field-initial":["verdocs-initial-dialog","verdocs-button-panel","verdocs-template-field-properties"],"verdocs-initial-dialog":["verdocs-text-input","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"],"verdocs-template-field-properties":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"]}},{"filePath":"./src/components/fields/verdocs-field-payment/verdocs-field-payment.tsx","encapsulation":"none","tag":"verdocs-field-payment","docs":"Displays a signature field. Various field types are supported, including traditional Signature and Initials types as well as\\ninput types like text and checkbox.","docsTags":[],"usage":{},"props":[{"name":"currentInitial","type":"string","mutable":false,"attr":"current-initial","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"currentInitialId","type":"string","mutable":false,"attr":"current-initial-id","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"currentSignature","type":"string","mutable":false,"attr":"current-signature","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"currentSignatureId","type":"string","mutable":false,"attr":"current-signature-id","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"fieldId","type":"string","mutable":false,"attr":"field-id","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"fields","type":"any[]","mutable":false,"reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"any[]"}],"optional":false,"required":false},{"name":"focused","type":"boolean","mutable":false,"attr":"focused","reflectToAttr":false,"docs":"","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"pageNum","type":"number","mutable":false,"attr":"page-num","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"number"}],"optional":false,"required":false},{"name":"pdfPages","type":"any[]","mutable":false,"reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"any[]"}],"optional":false,"required":false},{"name":"recipients","type":"any","mutable":false,"attr":"recipients","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"any"}],"optional":false,"required":false},{"name":"roleName","type":"string","mutable":false,"attr":"role-name","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false},{"name":"selectedRoleName","type":"string","mutable":false,"attr":"selected-role-name","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"signed","type":"boolean","mutable":false,"attr":"signed","reflectToAttr":false,"docs":"","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"initialComplete","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"","docsTags":[]},{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]},{"event":"signatureComplete","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/fields/verdocs-field-radio-button-group/verdocs-field-radio-button.tsx","encapsulation":"none","tag":"verdocs-field-radio-button","docs":"Displays a radio button.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"done","type":"boolean","mutable":false,"attr":"done","reflectToAttr":false,"docs":"If set, the field is considered \\"done\\" and is drawn in a display-final-value state.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"option","type":"number","mutable":false,"attr":"option","reflectToAttr":false,"docs":"The index of the settings option this particular checkbox is for","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":false,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-template-field-properties"],"dependencyGraph":{"verdocs-field-radio-button":["verdocs-button-panel","verdocs-template-field-properties"],"verdocs-template-field-properties":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"]}},{"filePath":"./src/components/fields/verdocs-field-signature/verdocs-field-signature.tsx","encapsulation":"none","tag":"verdocs-field-signature","docs":"Displays a signature field. If a signature already exists, it will be displayed and the field will be disabled. Otherwise, a placeholder\\nbutton will be shown. Clicking the button will show a dialog to adopt a signature.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"done","type":"boolean","mutable":false,"attr":"done","reflectToAttr":false,"docs":"If set, the field is considered \\"done\\" and is drawn in a display-final-value state.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","mutable":false,"attr":"name","reflectToAttr":false,"docs":"If set, the signature creation dialog will be initialized with this text.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":true,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event emitted when the field has changed.","docsTags":[]},{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]},{"event":"settingsPress","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-signature-dialog","verdocs-button-panel","verdocs-template-field-properties"],"dependencyGraph":{"verdocs-field-signature":["verdocs-signature-dialog","verdocs-button-panel","verdocs-template-field-properties"],"verdocs-signature-dialog":["verdocs-text-input","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"],"verdocs-template-field-properties":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"]}},{"filePath":"./src/components/fields/verdocs-field-textarea/verdocs-field-textarea.tsx","encapsulation":"none","tag":"verdocs-field-textarea","docs":"Display a multi-line text input field.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"done","type":"boolean","mutable":false,"attr":"done","reflectToAttr":false,"docs":"If set, the field is considered \\"done\\" and is drawn in a display-final-value state.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-template-field-properties"],"dependencyGraph":{"verdocs-field-textarea":["verdocs-button-panel","verdocs-template-field-properties"],"verdocs-template-field-properties":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"]}},{"filePath":"./src/components/fields/verdocs-field-textbox/verdocs-field-textbox.tsx","encapsulation":"none","tag":"verdocs-field-textbox","docs":"Display a text input field.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"done","type":"boolean","mutable":false,"attr":"done","reflectToAttr":false,"docs":"If set, the field is considered \\"done\\" and is drawn in a display-final-value state.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-template-field-properties"],"dependencyGraph":{"verdocs-field-textbox":["verdocs-button-panel","verdocs-template-field-properties"],"verdocs-template-field-properties":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"]}},{"filePath":"./src/components/fields/verdocs-field-timestamp/verdocs-field-timestamp.tsx","encapsulation":"none","tag":"verdocs-field-timestamp","docs":"Display a timestamp field.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"done","type":"boolean","mutable":false,"attr":"done","reflectToAttr":false,"docs":"If set, the field is considered \\"done\\" and is drawn in a display-final-value state.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"roleindex","type":"number","mutable":false,"attr":"roleindex","reflectToAttr":false,"docs":"If set, the field will be colored using this index value to select the background color.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"hideSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"hideSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]},{"name":"showSettingsPanel","returns":{"type":"Promise<void>","docs":""},"signature":"showSettingsPanel() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-template-field-properties"],"dependencyGraph":{"verdocs-field-timestamp":["verdocs-button-panel","verdocs-template-field-properties"],"verdocs-template-field-properties":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"]}},{"filePath":"./src/components/controls/verdocs-floating-menu/verdocs-floating-menu.tsx","encapsulation":"none","tag":"verdocs-floating-menu","docs":"Floating Action Button style menu. For proper placement, this should be added to the DOM inside a container that is set to\\n`overflow-y: scroll;`. The component will detect that placement and position itself in the bottom-right corner on top of the\\ncontainer. It will be absolutely positioned so it will be unaffected by scrolling the container.","docsTags":[],"usage":{},"props":[{"name":"options","type":"IOption[]","mutable":false,"reflectToAttr":false,"docs":"The role that this contact will be assigned to.","docsTags":[],"default":"[]","values":[{"type":"IOption[]"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"optionSelected","detail":"IOption","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when a menu option is clicked.\\nWeb Component events need to be \\"composed\\" to cross the Shadow DOM and be received by parent frameworks.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-fields"],"dependencies":["verdocs-toolbar-icon"],"dependencyGraph":{"verdocs-floating-menu":["verdocs-toolbar-icon"],"verdocs-template-fields":["verdocs-floating-menu"]}},{"filePath":"./src/components/controls/verdocs-help-icon/verdocs-help-icon.tsx","encapsulation":"none","tag":"verdocs-help-icon","docs":"Displays a simple help icon. Upon hover or focus, a tooltip will be displayed with help text.","docsTags":[],"usage":{},"props":[{"name":"text","type":"string","mutable":false,"attr":"text","reflectToAttr":false,"docs":"Help text to display on hover/focus","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-field-properties","verdocs-template-role-properties","verdocs-template-sender","verdocs-text-input"],"dependencies":[],"dependencyGraph":{"verdocs-template-field-properties":["verdocs-help-icon"],"verdocs-template-role-properties":["verdocs-help-icon"],"verdocs-template-sender":["verdocs-help-icon"],"verdocs-text-input":["verdocs-help-icon"]}},{"filePath":"./src/components/dialogs/verdocs-initial-dialog/verdocs-initial-dialog.tsx","encapsulation":"none","tag":"verdocs-initial-dialog","docs":"Display a dialog that allows the user to specify an initials image, either by using a signature-font-generated image\\nbased on their full name, or by hand-drawing their initials with a mouse or tablet.","docsTags":[],"usage":{},"props":[{"name":"initials","type":"string","mutable":false,"attr":"initials","reflectToAttr":false,"docs":"Initial signature text","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the step is cancelled.","docsTags":[]},{"event":"next","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the initials are adopted.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-initial"],"dependencies":["verdocs-text-input","verdocs-button"],"dependencyGraph":{"verdocs-initial-dialog":["verdocs-text-input","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"],"verdocs-field-initial":["verdocs-initial-dialog"]}},{"filePath":"./src/components/dialogs/verdocs-kba-dialog/verdocs-kba-dialog.tsx","encapsulation":"none","tag":"verdocs-kba-dialog","docs":"Display a text input field. This adds a partially-transparent overlay and screen-centered dialog\\nbox with a message and optional header/title. An OK button is shown that will dismiss the message.\\nIt can also be dismissed by clicking the background overlay.","docsTags":[],"usage":{},"props":[{"name":"choices","type":"string[]","mutable":false,"reflectToAttr":false,"docs":"For choice challenges, a set of choices to choose from. 6 choices is recommended to fit most screen sizes.","docsTags":[],"default":"[\'553 Arbor Dr\', \'18 Lacey Ln\', \'23A Ball Ct\', \'2375 Cavallo Blvd\', \'23-1 RR-7\', \'151 Boulder Rd\']","values":[{"type":"string[]"}],"optional":false,"required":false},{"name":"helptext","type":"string","mutable":false,"attr":"helptext","reflectToAttr":false,"docs":"If set, a help/instructions box will be displayed with this text","docsTags":[],"default":"\'Please check your text messages for a security code, and enter the code below.\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"helptitle","type":"string","mutable":false,"attr":"helptitle","reflectToAttr":false,"docs":"If set, a help/instructions box will be displayed with this title","docsTags":[],"default":"\'One Time Code\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"For text input challenges, the label to display next to the input field.","docsTags":[],"default":"\'PIN\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"mode","type":"\\"choice\\" | \\"text\\"","mutable":false,"attr":"mode","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"\'choice\'","values":[{"value":"choice","type":"string"},{"value":"text","type":"string"}],"optional":false,"required":false},{"name":"placeholder","type":"string","mutable":false,"attr":"placeholder","reflectToAttr":false,"docs":"For text input challenges, the placeholder to display inside the input field.","docsTags":[],"default":"\'Enter your PIN...\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"step","type":"number","mutable":false,"attr":"step","reflectToAttr":false,"docs":"Which step this confirmation is for, in a multi-step process. Ignored if `steps` is < 2.","docsTags":[],"default":"1","values":[{"type":"number"}],"optional":false,"required":false},{"name":"steps","type":"number","mutable":false,"attr":"steps","reflectToAttr":false,"docs":"How many steps exist in a multi-step process. Set to 1 for a single-step process (hides the indicator).","docsTags":[],"default":"3","values":[{"type":"number"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the closure reason.","docsTags":[]},{"event":"next","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the value selected.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button"],"dependencyGraph":{"verdocs-kba-dialog":["verdocs-button"]}},{"filePath":"./src/components/controls/verdocs-loader/verdocs-loader.tsx","encapsulation":"none","tag":"verdocs-loader","docs":"Animated loader placeholder. There are currently no configuration options for this control.","docsTags":[],"usage":{},"props":[],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-preview","verdocs-sign","verdocs-template-attachments","verdocs-template-fields","verdocs-template-name","verdocs-view"],"dependencies":[],"dependencyGraph":{"verdocs-preview":["verdocs-loader"],"verdocs-sign":["verdocs-loader"],"verdocs-template-attachments":["verdocs-loader"],"verdocs-template-fields":["verdocs-loader"],"verdocs-template-name":["verdocs-loader"],"verdocs-view":["verdocs-loader"]}},{"filePath":"./src/components/dialogs/verdocs-ok-dialog/verdocs-ok-dialog.tsx","encapsulation":"none","tag":"verdocs-ok-dialog","docs":"Display a simple text dialog box with an Ok button. This adds a partially-transparent overlay and screen-centered dialog\\nbox with a message and optional header/title. An OK button is shown that will dismiss the message.\\nIt can also be dismissed by clicking the background overlay.","docsTags":[],"usage":{},"props":[{"name":"heading","type":"string","mutable":false,"attr":"heading","reflectToAttr":false,"docs":"The title of the dialog. \\"title\\" is a reserved word, so we use heading.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"message","type":"string","mutable":false,"attr":"message","reflectToAttr":false,"docs":"The message content to display.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"showCancel","type":"boolean","mutable":false,"attr":"show-cancel","reflectToAttr":false,"docs":"If set, a cancel button will also be displayed. Note that the dialog is always cancelable by clicking the background\\noverlay to dismiss it.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user clicks the background overlay or Cancel button.","docsTags":[]},{"event":"next","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user clicks the OK button.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-auth","verdocs-sign","verdocs-template-reminders"],"dependencies":["verdocs-button"],"dependencyGraph":{"verdocs-ok-dialog":["verdocs-button"],"verdocs-auth":["verdocs-ok-dialog"],"verdocs-sign":["verdocs-ok-dialog"],"verdocs-template-reminders":["verdocs-ok-dialog"]}},{"filePath":"./src/components/controls/verdocs-organization-card/verdocs-organization-card.tsx","encapsulation":"none","tag":"verdocs-organization-card","docs":"Display a small summary card describing an organization","docsTags":[],"usage":{},"props":[{"name":"organization","type":"IOrganization","mutable":false,"reflectToAttr":false,"docs":"The organization to display","docsTags":[],"values":[{"type":"IOrganization"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/embeds/verdocs-preview/verdocs-preview.tsx","encapsulation":"none","tag":"verdocs-preview","docs":"Display a template preview experience. This will display the template\'s attached\\ndocuments with signing fields overlaid on each page. Fields will be color-coded\\nby recipient, and will be read-only (cannot be filled, moved, or altered).","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The ID of the template to create the document from.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-loader","verdocs-document-page"],"dependencyGraph":{"verdocs-preview":["verdocs-loader","verdocs-document-page"]}},{"filePath":"./src/components/elements/verdocs-quick-functions/verdocs-quick-functions.tsx","encapsulation":"none","tag":"verdocs-quick-functions","docs":"Display quick-function buttons for creating templates and documents.\\n\\nAuthentication is required to demonstrate this Element. You may do this in Storybook by using the Auth\\nembed. This Element will reuse the same session produced by logging in via that Embed.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"createDocument","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when an entry is clicked.","docsTags":[]},{"event":"createTemplate","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when an entry is clicked.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-search"],"dependencies":[],"dependencyGraph":{"verdocs-search":["verdocs-quick-functions"]}},{"filePath":"./src/components/controls/verdocs-radio-button/verdocs-radio-button.tsx","encapsulation":"none","tag":"verdocs-radio-button","docs":"Displays a radio button. Note that this is different from the `verdocs-field-radio-button` component, which is\\ndesigned to be used in signing experiences and contains settings that connect to template fields. This is just a\\nsimple radio button for UI displays e.g. dialog boxes.\\n\\nThis control encapsulates a standard HTML radio button. To subscribe to change events, connect an `onChange`\\nhandler. Sample usage:\\n\\n```html\\n<verdocs-radio-button\\n   value=\\"val1\\"\\n   name=\\"someProperty\\"\\n   checked={this.someProperty === \'val1\'}\\n   onInput={(e: any) => { this.someProperty = \'val1\' }}\\n   disabled={false}\\n/>\\n```","docsTags":[],"usage":{},"props":[{"name":"checked","type":"boolean","mutable":false,"attr":"checked","reflectToAttr":false,"docs":"Whether the radio button is currently selected.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, the button will still be displayed but not selectable.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","mutable":false,"attr":"name","reflectToAttr":false,"docs":"HTML form field name for the input.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"value","type":"string","mutable":false,"attr":"value","reflectToAttr":false,"docs":"Value to track with the input.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-properties","verdocs-template-sender"],"dependencies":[],"dependencyGraph":{"verdocs-template-properties":["verdocs-radio-button"],"verdocs-template-sender":["verdocs-radio-button"]}},{"filePath":"./src/components/embeds/verdocs-search/verdocs-search.tsx","encapsulation":"none","tag":"verdocs-search","docs":"","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-search-box","verdocs-search-activity","verdocs-quick-functions"],"dependencyGraph":{"verdocs-search":["verdocs-search-box","verdocs-search-activity","verdocs-quick-functions"]}},{"filePath":"./src/components/elements/verdocs-search-activity/verdocs-search-activity.tsx","encapsulation":"none","tag":"verdocs-search-activity","docs":"Display a list of starred items.\\n\\nAuthentication is required to demonstrate this Element. You may do this in Storybook by using the Auth\\nembed. This Element will reuse the same session produced by logging in via that Embed.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"options","type":"any","mutable":false,"attr":"options","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"any"}],"optional":false,"required":false},{"name":"type","type":"\\"recent\\" | \\"saved\\" | \\"starred\\"","mutable":false,"attr":"type","reflectToAttr":false,"docs":"","docsTags":[],"default":"\'recent\'","values":[{"value":"recent","type":"string"},{"value":"saved","type":"string"},{"value":"starred","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"entrySelected","detail":"IRecentSearch","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when an entry is clicked.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-search"],"dependencies":[],"dependencyGraph":{"verdocs-search":["verdocs-search-activity"]}},{"filePath":"./src/components/elements/verdocs-search-box/verdocs-search-box.tsx","encapsulation":"none","tag":"verdocs-search-box","docs":"Displays a customizable input box for search queries.\\n\\nAuthentication is required to demonstrate this Element. You may do this in Storybook by using the Auth\\nembed. This Element will reuse the same session produced by logging in via that Embed.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"grabsFocus","type":"boolean","mutable":false,"attr":"grabs-focus","reflectToAttr":false,"docs":"If set, the input field will attempt to \\"grab\\" focus after being rendered.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"placeholder","type":"string","mutable":false,"attr":"placeholder","reflectToAttr":false,"docs":"The placeholder to display in the input field.","docsTags":[],"default":"\'search documents, templates, people...\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"query","type":"string","mutable":false,"attr":"query","reflectToAttr":false,"docs":"The text search string entered by the user.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"type","type":"\\"all\\" | \\"document\\" | \\"organization\\" | \\"template\\"","mutable":false,"attr":"type","reflectToAttr":false,"docs":"If set to a value other than \'all\', a removeable filter indicator will be displayed.","docsTags":[],"default":"\'all\'","values":[{"value":"all","type":"string"},{"value":"document","type":"string"},{"value":"organization","type":"string"},{"value":"template","type":"string"}],"optional":false,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"queryChanged","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the query string.","docsTags":[]},{"event":"searchClicked","detail":"ISearchEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]},{"event":"typeChanged","detail":"\\"all\\" | \\"document\\" | \\"organization\\" | \\"template\\"","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-search"],"dependencies":[],"dependencyGraph":{"verdocs-search":["verdocs-search-box"]}},{"filePath":"./src/components/elements/verdocs-search-tabs/verdocs-search-tabs.tsx","encapsulation":"none","tag":"verdocs-search-tabs","docs":"","docsTags":[],"usage":{},"props":[],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/controls/verdocs-select-input/verdocs-select-input.tsx","encapsulation":"none","tag":"verdocs-select-input","docs":"Display a text input field. This is just a standard HTML input field with minimal markup to fit the\\nvisual styles of the other components. Note that events \\"bubble\\" from the input field to the container,\\nso you can subscribe to the same DOM events (input, blur, etc) that a normal input would emmit.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Should the field be disabled?","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"The label for the field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"options","type":"{ label: string; value: string; }[]","mutable":false,"reflectToAttr":false,"docs":"The options to list.","docsTags":[],"values":[{"type":"{ label: string; value: string; }[]"}],"optional":false,"required":false},{"name":"value","type":"string","mutable":false,"attr":"value","reflectToAttr":false,"docs":"The initial value for the input field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-field-properties","verdocs-template-role-properties"],"dependencies":[],"dependencyGraph":{"verdocs-template-field-properties":["verdocs-select-input"],"verdocs-template-role-properties":["verdocs-select-input"]}},{"filePath":"./src/components/embeds/verdocs-send/verdocs-send.tsx","encapsulation":"none","tag":"verdocs-send","docs":"Display a form to collect recipient information for a new Envelope. If used anonymously, the specified `templateId` must be public.\\nBecause most applications have custom workflow requirements to trigger after sending an Envelope, this component does not actually\\nperform that operation. Parent applications should listen for the `onSend` event, and can pass the contents of `event.detail`\\ndirectly to the `createEnvelope()` call in JS-SDK.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The ID of the template to create the document from.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[{"name":"reset","returns":{"type":"Promise<void>","docs":""},"signature":"reset() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"The user canceled the process.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]},{"event":"send","detail":"{ roles: IRole[]; name: string; template_id: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"The user completed the form and clicked send.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-contact-picker","verdocs-button"],"dependencyGraph":{"verdocs-send":["verdocs-contact-picker","verdocs-button"],"verdocs-contact-picker":["verdocs-toggle-button","verdocs-button"]}},{"filePath":"./src/components/embeds/verdocs-sign/verdocs-sign.tsx","encapsulation":"none","tag":"verdocs-sign","docs":"Display an envelope signing experience. This will display the envelope\'s attached\\ndocuments with signing fields overlaid on each page.\\n\\nThe component will attempt to initiate a signing session and load the specified\\nenvelope. If successful, the recipient\'s fields will be enabled and the user will\\nbe able to sign the envelope\'s attached documents. If not, an `sdkError` will be\\nthrown and the component will be blank/empty. To provide the best user experience,\\napplications should capture and handle this error to provide the user with\\ninstructions/options for next steps based on the application\'s design and workflow.\\n\\nUnlike other components, this will always create its own endpoint to manage the\\nsession session. This endpoint will be included in event callbacks for the\\nconvenience of host applications that may wish to make server calls using the\\nsigner\'s credentials once signing is complete (e.g. to obtain copies of\\nthe signed attachments.)","docsTags":[],"usage":{},"props":[{"name":"envelopeId","type":"string","mutable":false,"attr":"envelope-id","reflectToAttr":false,"docs":"The ID of the envelope to sign.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false},{"name":"inviteCode","type":"string","mutable":false,"attr":"invite-code","reflectToAttr":false,"docs":"The invite code for the signer.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false},{"name":"roleId","type":"string","mutable":false,"attr":"role-id","reflectToAttr":false,"docs":"The ID of the role that will be signing e.g. \'Recipient 1\'","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"envelopeLoaded","detail":"{ endpoint: VerdocsEndpoint; envelope: IEnvelope; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the envelope is updated in any way.","docsTags":[]},{"event":"envelopeUpdated","detail":"{ endpoint: VerdocsEndpoint; envelope: IEnvelope; event: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the envelope is updated in any way.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-loader","verdocs-checkbox","verdocs-button","verdocs-dropdown","verdocs-view","verdocs-document-page","verdocs-ok-dialog"],"dependencyGraph":{"verdocs-sign":["verdocs-loader","verdocs-checkbox","verdocs-button","verdocs-dropdown","verdocs-view","verdocs-document-page","verdocs-ok-dialog"],"verdocs-view":["verdocs-loader","verdocs-dropdown","verdocs-document-page"],"verdocs-ok-dialog":["verdocs-button"]}},{"filePath":"./src/components/dialogs/verdocs-signature-dialog/verdocs-signature-dialog.tsx","encapsulation":"none","tag":"verdocs-signature-dialog","docs":"Display a dialog that allows the user to specify a signature image, either by using a signature-font-generated image\\nbased on their full name, or by hand-drawing their signature with a mouse or tablet.","docsTags":[],"usage":{},"props":[{"name":"name","type":"string","mutable":false,"attr":"name","reflectToAttr":false,"docs":"Initial signature text","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Fired if the user cancels the dialog.","docsTags":[]},{"event":"next","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Fired when the user completes the dialog and clicks Adopt. The event detail will contain a base64-encoded string\\nrepresentation of the signature adopted.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-signature"],"dependencies":["verdocs-text-input","verdocs-button"],"dependencyGraph":{"verdocs-signature-dialog":["verdocs-text-input","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"],"verdocs-field-signature":["verdocs-signature-dialog"]}},{"filePath":"./src/components/controls/verdocs-status-indicator/verdocs-status-indicator.tsx","encapsulation":"none","tag":"verdocs-status-indicator","docs":"Displays an icon and message describing a document\'s completion status. For convenience, the status may be passed in either\\ndirectly as a status field or the whole document object may be passed in.\\n\\nIf the document is provided, the status flag will indicate the document\'s overall status. This also makes the component clickable\\nto display a popup panel with per-recipient status data.\\n\\nIf the status is provided as a string it can be either a `TRecipientStatus` or `TDocumentStatus` value.","docsTags":[],"usage":{},"props":[{"name":"envelope","type":"IEnvelope","mutable":false,"reflectToAttr":false,"docs":"The document to display status for. Ignored if `status` is set directly.","docsTags":[],"values":[{"type":"IEnvelope"}],"optional":true,"required":false},{"name":"size","type":"\\"normal\\" | \\"small\\"","mutable":false,"attr":"size","reflectToAttr":false,"docs":"The size (height) of the indicator. The small variant is suitable for use in densely populated components such as table rows.","docsTags":[],"default":"\'normal\'","values":[{"value":"normal","type":"string"},{"value":"small","type":"string"}],"optional":false,"required":false},{"name":"status","type":"\\"accepted\\" | \\"canceled\\" | \\"complete\\" | \\"declined\\" | \\"in progress\\" | \\"invited\\" | \\"opened\\" | \\"pending\\" | \\"signed\\" | \\"submitted\\"","mutable":false,"attr":"status","reflectToAttr":false,"docs":"The status to display.","docsTags":[],"values":[{"value":"accepted","type":"string"},{"value":"canceled","type":"string"},{"value":"complete","type":"string"},{"value":"declined","type":"string"},{"value":"in progress","type":"string"},{"value":"invited","type":"string"},{"value":"opened","type":"string"},{"value":"pending","type":"string"},{"value":"signed","type":"string"},{"value":"submitted","type":"string"}],"optional":true,"required":false},{"name":"theme","type":"\\"dark\\" | \\"light\\"","mutable":false,"attr":"theme","reflectToAttr":false,"docs":"The theme to use for diplay.","docsTags":[],"default":"\'light\'","values":[{"value":"dark","type":"string"},{"value":"light","type":"string"}],"optional":true,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/templates/verdocs-template-attachments/verdocs-template-attachments.tsx","encapsulation":"none","tag":"verdocs-template-attachments","docs":"Displays an edit form that allows the user to view, add, or remove a template\'s attachments.\\nNote that an active session and valid template ID must be supplied.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The template ID to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"close","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-loader"],"dependencyGraph":{"verdocs-template-attachments":["verdocs-loader"]}},{"filePath":"./src/components/controls/verdocs-template-card/verdocs-template-card.tsx","encapsulation":"none","tag":"verdocs-template-card","docs":"Displays a summary of a template","docsTags":[],"usage":{},"props":[{"name":"template","type":"ITemplate","mutable":false,"reflectToAttr":false,"docs":"The template for which the card will be rendered.","docsTags":[],"values":[{"type":"ITemplate"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/templates/verdocs-template-create/verdocs-template-create.tsx","encapsulation":"none","tag":"verdocs-template-create","docs":"Displays a file upload mechanism suitable for the first step of creating a template.\\nThis is typically the first step in a template creation workflow.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"next","detail":"ITemplate","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-build"],"dependencies":["verdocs-component-error","verdocs-button"],"dependencyGraph":{"verdocs-template-create":["verdocs-component-error","verdocs-button"],"verdocs-build":["verdocs-template-create"]}},{"filePath":"./src/components/templates/verdocs-template-field-properties/verdocs-template-field-properties.tsx","encapsulation":"none","tag":"verdocs-template-field-properties","docs":"Displays an edit form that allows the user to adjust a field\'s settings.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"fieldName","type":"string","mutable":false,"attr":"field-name","reflectToAttr":false,"docs":"The field to configure.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The template ID to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"close","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"delete","detail":"{ templateId: string; roleName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user deletes the role. The parent should update its UI to reflect the removal. When this event is emitted,\\nthe role will have already been deleted server-side.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]},{"event":"settingsChanged","detail":"{ fieldName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the field\'s settings are changed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-checkbox","verdocs-field-date","verdocs-field-initial","verdocs-field-radio-button","verdocs-field-signature","verdocs-field-textarea","verdocs-field-textbox","verdocs-field-timestamp"],"dependencies":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"dependencyGraph":{"verdocs-template-field-properties":["verdocs-component-error","verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"],"verdocs-field-checkbox":["verdocs-template-field-properties"],"verdocs-field-date":["verdocs-template-field-properties"],"verdocs-field-initial":["verdocs-template-field-properties"],"verdocs-field-radio-button":["verdocs-template-field-properties"],"verdocs-field-signature":["verdocs-template-field-properties"],"verdocs-field-textarea":["verdocs-template-field-properties"],"verdocs-field-textbox":["verdocs-template-field-properties"],"verdocs-field-timestamp":["verdocs-template-field-properties"]}},{"filePath":"./src/components/templates/verdocs-template-fields/verdocs-template-fields.tsx","encapsulation":"none","tag":"verdocs-template-fields","docs":"Displays a builder experience for laying out fields in a template. Note that this experience requires a large display area to\\npresent all of the required controls, so it is primarily intended to be used in desktop environments.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The ID of the template to create the document from.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"next","detail":"ITemplate","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user completes the step.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-build"],"dependencies":["verdocs-component-error","verdocs-loader","verdocs-document-page","verdocs-floating-menu"],"dependencyGraph":{"verdocs-template-fields":["verdocs-component-error","verdocs-loader","verdocs-document-page","verdocs-floating-menu"],"verdocs-floating-menu":["verdocs-toolbar-icon"],"verdocs-build":["verdocs-template-fields"]}},{"filePath":"./src/components/templates/verdocs-template-name/verdocs-template-name.tsx","encapsulation":"none","tag":"verdocs-template-name","docs":"Displays an edit form that allows the user to rename a template. Note that an active session and valid template ID must be supplied.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The template ID to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"close","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-loader","verdocs-text-input","verdocs-button"],"dependencyGraph":{"verdocs-template-name":["verdocs-loader","verdocs-text-input","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"]}},{"filePath":"./src/components/templates/verdocs-template-properties/verdocs-template-properties.tsx","encapsulation":"none","tag":"verdocs-template-properties","docs":"Displays a collection of settings boxes that allow a user to configure a template\'s behavior.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The template ID to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"next","detail":"{ name: string; sendReminders: boolean; firstReminderDays: number; reminderDays: number; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user completes the step.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-component-error","verdocs-text-input","verdocs-checkbox","verdocs-radio-button","verdocs-button"],"dependencyGraph":{"verdocs-template-properties":["verdocs-component-error","verdocs-text-input","verdocs-checkbox","verdocs-radio-button","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"]}},{"filePath":"./src/components/templates/verdocs-template-recipients/verdocs-template-recipients.tsx","encapsulation":"none","tag":"verdocs-template-recipients","docs":"Displays an edit form that allows the user to adjust a template\'s recipients and workflow.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The template ID to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"next","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user clicks to proceed.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button","verdocs-template-role-properties","verdocs-template-sender"],"dependencyGraph":{"verdocs-template-recipients":["verdocs-button","verdocs-template-role-properties","verdocs-template-sender"],"verdocs-template-role-properties":["verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"],"verdocs-template-sender":["verdocs-radio-button","verdocs-help-icon","verdocs-button"]}},{"filePath":"./src/components/templates/verdocs-template-reminders/verdocs-template-reminders.tsx","encapsulation":"none","tag":"verdocs-template-reminders","docs":"Displays an edit form that allows the user to adjust a template\'s reminders.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The template ID to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"close","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-component-error","verdocs-checkbox","verdocs-text-input","verdocs-button","verdocs-ok-dialog"],"dependencyGraph":{"verdocs-template-reminders":["verdocs-component-error","verdocs-checkbox","verdocs-text-input","verdocs-button","verdocs-ok-dialog"],"verdocs-text-input":["verdocs-help-icon"],"verdocs-ok-dialog":["verdocs-button"]}},{"filePath":"./src/components/templates/verdocs-template-role-properties/verdocs-template-role-properties.tsx","encapsulation":"none","tag":"verdocs-template-role-properties","docs":"Display an edit form that allows the user to adjust a role\'s setitngs.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"roleName","type":"string","mutable":false,"attr":"role-name","reflectToAttr":false,"docs":"The role name to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"sender","type":"\\"creator\\" | \\"everyone\\" | \\"everyone_as_creator\\" | \\"organization_member\\" | \\"organization_member_as_creator\\"","mutable":false,"attr":"sender","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"TemplateSenderTypes.EVERYONE","values":[{"value":"creator","type":"string"},{"value":"everyone","type":"string"},{"value":"everyone_as_creator","type":"string"},{"value":"organization_member","type":"string"},{"value":"organization_member_as_creator","type":"string"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The template ID to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"close","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"delete","detail":"{ templateId: string; roleName: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user deletes the role. The parent should update its UI to reflect the removal. When this event is emitted,\\nthe role will have already been deleted server-side.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-recipients"],"dependencies":["verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"dependencyGraph":{"verdocs-template-role-properties":["verdocs-text-input","verdocs-select-input","verdocs-help-icon","verdocs-checkbox","verdocs-button"],"verdocs-text-input":["verdocs-help-icon"],"verdocs-template-recipients":["verdocs-template-role-properties"]}},{"filePath":"./src/components/templates/verdocs-template-sender/verdocs-template-sender.tsx","encapsulation":"none","tag":"verdocs-template-sender","docs":"Display a dialog that allows a template sender to be selected.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"sender","type":"\\"creator\\" | \\"everyone\\" | \\"everyone_as_creator\\" | \\"organization_member\\" | \\"organization_member_as_creator\\"","mutable":false,"attr":"sender","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"TemplateSenderTypes.EVERYONE","values":[{"value":"creator","type":"string"},{"value":"everyone","type":"string"},{"value":"everyone_as_creator","type":"string"},{"value":"organization_member","type":"string"},{"value":"organization_member_as_creator","type":"string"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The template ID to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"close","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-recipients"],"dependencies":["verdocs-radio-button","verdocs-help-icon","verdocs-button"],"dependencyGraph":{"verdocs-template-sender":["verdocs-radio-button","verdocs-help-icon","verdocs-button"],"verdocs-template-recipients":["verdocs-template-sender"]}},{"filePath":"./src/components/controls/verdocs-template-tags/verdocs-template-tags.tsx","encapsulation":"none","tag":"verdocs-template-tags","docs":"Displays a message listing a template\'s tags.","docsTags":[],"usage":{},"props":[{"name":"tags","type":"any[]","mutable":false,"reflectToAttr":false,"docs":"The tags to display","docsTags":[],"values":[{"type":"any[]"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/templates/verdocs-template-visibillity/verdocs-template-visibility.tsx","encapsulation":"none","tag":"verdocs-template-visibility","docs":"Displays an edit form that allows the user to adjust a template\'s visibility.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The template ID to edit.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"close","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-component-error","verdocs-checkbox","verdocs-button"],"dependencyGraph":{"verdocs-template-visibility":["verdocs-component-error","verdocs-checkbox","verdocs-button"]}},{"filePath":"./src/components/controls/verdocs-text-input/verdocs-text-input.tsx","encapsulation":"none","tag":"verdocs-text-input","docs":"Display a text input field. This is just a standard HTML input field with minimal markup to fit the\\nvisual styles of the other components. Note that events \\"bubble\\" from the input field to the container,\\nso you can subscribe to the same DOM events (input, blur, etc) that a normal input would emmit.","docsTags":[],"usage":{},"props":[{"name":"autocomplete","type":"string","mutable":false,"attr":"autocomplete","reflectToAttr":false,"docs":"If desired, the autocomplete attribute to set.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Should the field be disabled?","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"helpText","type":"string","mutable":false,"attr":"help-text","reflectToAttr":false,"docs":"If supplied, a help icon will be displayed to provide the user more information.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"The label for the field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"placeholder","type":"string","mutable":false,"attr":"placeholder","reflectToAttr":false,"docs":"The placeholder for the field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"type","type":"\\"email\\" | \\"number\\" | \\"password\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\"","mutable":false,"attr":"type","reflectToAttr":false,"docs":"The type of field to render. Only text-type fields are allowed here for the current styling. Additional types\\n(e.g. a date picker) will be supported by other controls in the future.","docsTags":[],"default":"\'text\'","values":[{"value":"email","type":"string"},{"value":"number","type":"string"},{"value":"password","type":"string"},{"value":"search","type":"string"},{"value":"tel","type":"string"},{"value":"text","type":"string"},{"value":"url","type":"string"}],"optional":false,"required":false},{"name":"value","type":"string","mutable":false,"attr":"value","reflectToAttr":false,"docs":"The initial value for the input field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-auth","verdocs-initial-dialog","verdocs-signature-dialog","verdocs-template-field-properties","verdocs-template-name","verdocs-template-properties","verdocs-template-reminders","verdocs-template-role-properties"],"dependencies":["verdocs-help-icon"],"dependencyGraph":{"verdocs-text-input":["verdocs-help-icon"],"verdocs-auth":["verdocs-text-input"],"verdocs-initial-dialog":["verdocs-text-input"],"verdocs-signature-dialog":["verdocs-text-input"],"verdocs-template-field-properties":["verdocs-text-input"],"verdocs-template-name":["verdocs-text-input"],"verdocs-template-properties":["verdocs-text-input"],"verdocs-template-reminders":["verdocs-text-input"],"verdocs-template-role-properties":["verdocs-text-input"]}},{"filePath":"./src/components/controls/verdocs-toggle/verdocs-toggle.tsx","encapsulation":"none","tag":"verdocs-toggle","docs":"Displays a label and a set of buttons, also allowing a default selection of a button","docsTags":[],"usage":{},"props":[{"name":"options","type":"IToggleIconButtons","mutable":false,"reflectToAttr":false,"docs":"The tags to display","docsTags":[],"values":[{"type":"IToggleIconButtons"}],"optional":false,"required":false},{"name":"theme","type":"\\"dark\\" | \\"light\\"","mutable":false,"attr":"theme","reflectToAttr":false,"docs":"The \\"theme\\" to be used","docsTags":[],"values":[{"value":"dark","type":"string"},{"value":"light","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/controls/verdocs-toggle-button/verdocs-toggle-button.tsx","encapsulation":"none","tag":"verdocs-toggle-button","docs":"Displays a single button that can be toggled on or off by clicking it.","docsTags":[],"usage":{},"props":[{"name":"active","type":"boolean","mutable":false,"attr":"active","reflectToAttr":false,"docs":"","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"icon","type":"string","mutable":false,"attr":"icon","reflectToAttr":false,"docs":"If set, should be an SVG object. This will be rendered as the button\'s visible element. If icon is supplied, label is ignored.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":true,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"If set, should be an SVG object. This will be rendered as the button\'s visible element. If icon is supplied, label is ignored.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":true,"required":false},{"name":"size","type":"\\"normal\\" | \\"small\\"","mutable":false,"attr":"size","reflectToAttr":false,"docs":"How large the button should be. Small buttons are intended for dialog boxes and other smaller scale UI regions.","docsTags":[],"default":"\'normal\'","values":[{"value":"normal","type":"string"},{"value":"small","type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"toggle","detail":"{ active: boolean; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the button is pressed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-contact-picker"],"dependencies":[],"dependencyGraph":{"verdocs-contact-picker":["verdocs-toggle-button"]}},{"filePath":"./src/components/controls/verdocs-toolbar-icon/verdocs-toolbar-icon.tsx","encapsulation":"none","tag":"verdocs-toolbar-icon","docs":"Displays a simple help icon. Upon hover or focus, a tooltip will be displayed with help text.","docsTags":[],"usage":{},"props":[{"name":"icon","type":"string","mutable":false,"attr":"icon","reflectToAttr":false,"docs":"SVG icon to display","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"placement","type":"\\"auto\\" | \\"auto-end\\" | \\"auto-start\\" | \\"bottom\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left\\" | \\"left-end\\" | \\"left-start\\" | \\"right\\" | \\"right-end\\" | \\"right-start\\" | \\"top\\" | \\"top-end\\" | \\"top-start\\"","mutable":false,"attr":"placement","reflectToAttr":false,"docs":"Override the Popper \\"placement\\" setting","docsTags":[],"default":"\'bottom\'","values":[{"value":"auto","type":"string"},{"value":"auto-end","type":"string"},{"value":"auto-start","type":"string"},{"value":"bottom","type":"string"},{"value":"bottom-end","type":"string"},{"value":"bottom-start","type":"string"},{"value":"left","type":"string"},{"value":"left-end","type":"string"},{"value":"left-start","type":"string"},{"value":"right","type":"string"},{"value":"right-end","type":"string"},{"value":"right-start","type":"string"},{"value":"top","type":"string"},{"value":"top-end","type":"string"},{"value":"top-start","type":"string"}],"optional":false,"required":false},{"name":"text","type":"string","mutable":false,"attr":"text","reflectToAttr":false,"docs":"Help text to display on hover/focus","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-floating-menu"],"dependencies":[],"dependencyGraph":{"verdocs-floating-menu":["verdocs-toolbar-icon"]}},{"filePath":"./src/components/dialogs/verdocs-upload-dialog/verdocs-upload-dialog.tsx","encapsulation":"none","tag":"verdocs-upload-dialog","docs":"Display a file upload tool. Note that the file is not actually transmitted, so it may be used by\\ncallers with a variety of workflows. Instead, data about the chosen file will be passed to the\\ncaller via the onNext event handler.","docsTags":[],"usage":{},"props":[],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is cancelled.","docsTags":[]},{"event":"next","detail":"FileWithData[]","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the file selected.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-attachment"],"dependencies":["verdocs-button"],"dependencyGraph":{"verdocs-upload-dialog":["verdocs-button"],"verdocs-field-attachment":["verdocs-upload-dialog"]}},{"filePath":"./src/components/embeds/verdocs-view/verdocs-view.tsx","encapsulation":"none","tag":"verdocs-view","docs":"Render the documents attached to an envelope in read-only (view) mode. All documents are displayed in order.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"envelopeId","type":"string","mutable":false,"attr":"envelope-id","reflectToAttr":false,"docs":"The envelope ID to render. Set ONE OF templateId or envelopeId. If both are set, envelopeId will be ignored.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-sign"],"dependencies":["verdocs-loader","verdocs-dropdown","verdocs-document-page"],"dependencyGraph":{"verdocs-view":["verdocs-loader","verdocs-dropdown","verdocs-document-page"],"verdocs-sign":["verdocs-view"]}}]}')},"./dist/esm lazy recursive ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$":function(module,exports,__webpack_require__){var map={"./verdocs-auth.entry.js":["./dist/esm/verdocs-auth.entry.js",1,2,3,49],"./verdocs-build.entry.js":["./dist/esm/verdocs-build.entry.js",1,2,0,3,37],"./verdocs-button-panel_3.entry.js":["./dist/esm/verdocs-button-panel_3.entry.js",1,2,0,3,25],"./verdocs-button.entry.js":["./dist/esm/verdocs-button.entry.js",53],"./verdocs-checkbox_4.entry.js":["./dist/esm/verdocs-checkbox_4.entry.js",7,45],"./verdocs-contact-picker.entry.js":["./dist/esm/verdocs-contact-picker.entry.js",1,2,3,54],"./verdocs-document-page_2.entry.js":["./dist/esm/verdocs-document-page_2.entry.js",4,44],"./verdocs-dropdown.entry.js":["./dist/esm/verdocs-dropdown.entry.js",7,46],"./verdocs-envelope-sidebar.entry.js":["./dist/esm/verdocs-envelope-sidebar.entry.js",1,2,3,6,23],"./verdocs-field-attachment.entry.js":["./dist/esm/verdocs-field-attachment.entry.js",0,42],"./verdocs-field-checkbox.entry.js":["./dist/esm/verdocs-field-checkbox.entry.js",0,4,27],"./verdocs-field-date.entry.js":["./dist/esm/verdocs-field-date.entry.js",0,4,6,15],"./verdocs-field-dropdown.entry.js":["./dist/esm/verdocs-field-dropdown.entry.js",0,4,28],"./verdocs-field-initial.entry.js":["./dist/esm/verdocs-field-initial.entry.js",0,4,29],"./verdocs-field-payment.entry.js":["./dist/esm/verdocs-field-payment.entry.js",0,4,30],"./verdocs-field-radio-button.entry.js":["./dist/esm/verdocs-field-radio-button.entry.js",0,4,31],"./verdocs-field-signature.entry.js":["./dist/esm/verdocs-field-signature.entry.js",0,4,32],"./verdocs-field-textarea.entry.js":["./dist/esm/verdocs-field-textarea.entry.js",0,4,33],"./verdocs-field-textbox.entry.js":["./dist/esm/verdocs-field-textbox.entry.js",0,4,34],"./verdocs-field-timestamp.entry.js":["./dist/esm/verdocs-field-timestamp.entry.js",0,4,6,22],"./verdocs-floating-menu_2.entry.js":["./dist/esm/verdocs-floating-menu_2.entry.js",7,47],"./verdocs-initial-dialog.entry.js":["./dist/esm/verdocs-initial-dialog.entry.js",55],"./verdocs-kba-dialog.entry.js":["./dist/esm/verdocs-kba-dialog.entry.js",56],"./verdocs-ok-dialog.entry.js":["./dist/esm/verdocs-ok-dialog.entry.js",57],"./verdocs-organization-card.entry.js":["./dist/esm/verdocs-organization-card.entry.js",6,58],"./verdocs-preview.entry.js":["./dist/esm/verdocs-preview.entry.js",1,2,0,3,24],"./verdocs-quick-functions_3.entry.js":["./dist/esm/verdocs-quick-functions_3.entry.js",1,2,3,48],"./verdocs-radio-button.entry.js":["./dist/esm/verdocs-radio-button.entry.js",59],"./verdocs-search-tabs.entry.js":["./dist/esm/verdocs-search-tabs.entry.js",60],"./verdocs-search.entry.js":["./dist/esm/verdocs-search.entry.js",1,2,3,61],"./verdocs-send.entry.js":["./dist/esm/verdocs-send.entry.js",1,2,0,3,19],"./verdocs-sign.entry.js":["./dist/esm/verdocs-sign.entry.js",1,2,3,4,20],"./verdocs-signature-dialog.entry.js":["./dist/esm/verdocs-signature-dialog.entry.js",62],"./verdocs-status-indicator.entry.js":["./dist/esm/verdocs-status-indicator.entry.js",7,21],"./verdocs-template-attachments.entry.js":["./dist/esm/verdocs-template-attachments.entry.js",1,2,0,3,38],"./verdocs-template-card.entry.js":["./dist/esm/verdocs-template-card.entry.js",63],"./verdocs-template-create_2.entry.js":["./dist/esm/verdocs-template-create_2.entry.js",1,2,0,3,18],"./verdocs-template-name.entry.js":["./dist/esm/verdocs-template-name.entry.js",1,2,0,3,39],"./verdocs-template-properties.entry.js":["./dist/esm/verdocs-template-properties.entry.js",1,2,0,3,43],"./verdocs-template-recipients.entry.js":["./dist/esm/verdocs-template-recipients.entry.js",1,2,0,3,17],"./verdocs-template-reminders.entry.js":["./dist/esm/verdocs-template-reminders.entry.js",1,2,0,3,40],"./verdocs-template-role-properties_2.entry.js":["./dist/esm/verdocs-template-role-properties_2.entry.js",1,2,0,3,35],"./verdocs-template-tags.entry.js":["./dist/esm/verdocs-template-tags.entry.js",64],"./verdocs-template-visibility.entry.js":["./dist/esm/verdocs-template-visibility.entry.js",1,2,0,3,41],"./verdocs-toggle-button.entry.js":["./dist/esm/verdocs-toggle-button.entry.js",65],"./verdocs-toggle.entry.js":["./dist/esm/verdocs-toggle.entry.js",66],"./verdocs-upload-dialog.entry.js":["./dist/esm/verdocs-upload-dialog.entry.js",36],"./verdocs-view.entry.js":["./dist/esm/verdocs-view.entry.js",1,2,3,4,26]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((function(){return __webpack_require__(id)}))}webpackAsyncContext.keys=function webpackAsyncContextKeys(){return Object.keys(map)},webpackAsyncContext.id="./dist/esm lazy recursive ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$",module.exports=webpackAsyncContext},"./dist/esm/index-f78d163d.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Fragment})),__webpack_require__.d(__webpack_exports__,"b",(function(){return Host})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getElement})),__webpack_require__.d(__webpack_exports__,"d",(function(){return bootstrapLazy})),__webpack_require__.d(__webpack_exports__,"e",(function(){return createEvent})),__webpack_require__.d(__webpack_exports__,"f",(function(){return forceUpdate})),__webpack_require__.d(__webpack_exports__,"g",(function(){return getRenderingRef})),__webpack_require__.d(__webpack_exports__,"h",(function(){return h})),__webpack_require__.d(__webpack_exports__,"i",(function(){return promiseResolve})),__webpack_require__.d(__webpack_exports__,"j",(function(){return registerInstance}));__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.parse-float.js"),__webpack_require__("./node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.set.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.string.trim.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.some.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.number.is-nan.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.map.js"),__webpack_require__("./node_modules/core-js/modules/web.url.js"),__webpack_require__("./node_modules/core-js/modules/web.timers.js"),__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.reflect.construct.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),Object.defineProperty(subClass,"prototype",{writable:!1}),superClass&&_setPrototypeOf(subClass,superClass)}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){if(call&&("object"==typeof call||"function"==typeof call))return call;if(void 0!==call)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(self)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _wrapNativeSuper(Class){var _cache="function"==typeof Map?new Map:void 0;return _wrapNativeSuper=function _wrapNativeSuper(Class){if(null===Class||!function _isNativeFunction(fn){return-1!==Function.toString.call(fn).indexOf("[native code]")}(Class))return Class;if("function"!=typeof Class)throw new TypeError("Super expression must either be null or a function");if(void 0!==_cache){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper)}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor)}return Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(Wrapper,Class)},_wrapNativeSuper(Class)}function _construct(Parent,args,Class){return _construct=_isNativeReflectConstruct()?Reflect.construct.bind():function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var instance=new(Function.bind.apply(Parent,a));return Class&&_setPrototypeOf(instance,Class.prototype),instance},_construct.apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i.return&&(_r=_i.return(),Object(_r)!==_r))return}finally{if(_d)throw _e}}return _arr}}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(void 0===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var contentRef,hostTagName,useNativeShadowDom=!1,checkSlotFallbackVisibility=!1,checkSlotRelocate=!1,isSvgMode=!1,renderingRef=null,queuePending=!1,HYDRATED_CSS="{visibility:hidden}.hydrated{visibility:inherit}",EMPTY_OBJ={},isComplexType=function isComplexType(o){return"object"===(o=typeof o)||"function"===o},h=function h(nodeName,vnodeData){for(var child=null,key=null,slotName=null,simple=!1,lastSimple=!1,vNodeChildren=[],walk=function walk(c){for(var i=0;i<c.length;i++)child=c[i],Array.isArray(child)?walk(child):null!=child&&"boolean"!=typeof child&&((simple="function"!=typeof nodeName&&!isComplexType(child))&&(child=String(child)),simple&&lastSimple?vNodeChildren[vNodeChildren.length-1].$text$+=child:vNodeChildren.push(simple?newVNode(null,child):child),lastSimple=simple)},_len=arguments.length,children=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++)children[_key-2]=arguments[_key];if(walk(children),vnodeData){vnodeData.key&&(key=vnodeData.key),vnodeData.name&&(slotName=vnodeData.name);var classData=vnodeData.className||vnodeData.class;classData&&(vnodeData.class="object"!=typeof classData?classData:Object.keys(classData).filter((function(k){return classData[k]})).join(" "))}if("function"==typeof nodeName)return nodeName(null===vnodeData?{}:vnodeData,vNodeChildren,vdomFnUtils);var vnode=newVNode(nodeName,null);return vnode.$attrs$=vnodeData,vNodeChildren.length>0&&(vnode.$children$=vNodeChildren),vnode.$key$=key,vnode.$name$=slotName,vnode},newVNode=function newVNode(tag,text){var vnode={$flags$:0,$tag$:tag,$text$:text,$elm$:null,$children$:null,$attrs$:null,$key$:null,$name$:null};return vnode},Host={},vdomFnUtils={forEach:function forEach(children,cb){return children.map(convertToPublic).forEach(cb)},map:function map(children,cb){return children.map(convertToPublic).map(cb).map(convertToPrivate)}},convertToPublic=function convertToPublic(node){return{vattrs:node.$attrs$,vchildren:node.$children$,vkey:node.$key$,vname:node.$name$,vtag:node.$tag$,vtext:node.$text$}},convertToPrivate=function convertToPrivate(node){if("function"==typeof node.vtag){var vnodeData=Object.assign({},node.vattrs);return node.vkey&&(vnodeData.key=node.vkey),node.vname&&(vnodeData.name=node.vname),h.apply(void 0,[node.vtag,vnodeData].concat(_toConsumableArray(node.vchildren||[])))}var vnode=newVNode(node.vtag,node.vtext);return vnode.$attrs$=node.vattrs,vnode.$children$=node.vchildren,vnode.$key$=node.vkey,vnode.$name$=node.vname,vnode},getElement=function getElement(ref){return getHostRef(ref).$hostElement$},createEvent=function createEvent(ref,name,flags){var elm=getElement(ref);return{emit:function emit(detail){return emitEvent(elm,name,{bubbles:!!(4&flags),composed:!!(2&flags),cancelable:!!(1&flags),detail:detail})}}},emitEvent=function emitEvent(elm,name,opts){var ev=plt.ce(name,opts);return elm.dispatchEvent(ev),ev},rootAppliedStyles=new WeakMap,registerStyle=function registerStyle(scopeId,cssText,allowCS){var style=styles.get(scopeId);supportsConstructableStylesheets&&allowCS?"string"==typeof(style=style||new CSSStyleSheet)?style=cssText:style.replaceSync(cssText):style=cssText,styles.set(scopeId,style)},attachStyles=function attachStyles(hostRef){var cmpMeta=hostRef.$cmpMeta$,elm=hostRef.$hostElement$,endAttachStyles=(cmpMeta.$tagName$,function(){});!function addStyle(styleContainerNode,cmpMeta,mode,hostElm){var scopeId=getScopeId(cmpMeta),style=styles.get(scopeId);if(styleContainerNode=11===styleContainerNode.nodeType?styleContainerNode:doc,style)if("string"==typeof style){styleContainerNode=styleContainerNode.head||styleContainerNode;var styleElm,appliedStyles=rootAppliedStyles.get(styleContainerNode);appliedStyles||rootAppliedStyles.set(styleContainerNode,appliedStyles=new Set),appliedStyles.has(scopeId)||((styleElm=doc.createElement("style")).innerHTML=style,styleContainerNode.insertBefore(styleElm,styleContainerNode.querySelector("link")),appliedStyles&&appliedStyles.add(scopeId))}else styleContainerNode.adoptedStyleSheets.includes(style)||(styleContainerNode.adoptedStyleSheets=[].concat(_toConsumableArray(styleContainerNode.adoptedStyleSheets),[style]))}(elm.getRootNode(),cmpMeta),endAttachStyles()},getScopeId=function getScopeId(cmp,mode){return"sc-"+cmp.$tagName$},setAccessor=function setAccessor(elm,memberName,oldValue,newValue,isSvg,flags){if(oldValue!==newValue){var isProp=isMemberInElement(elm,memberName),ln=memberName.toLowerCase();if("class"===memberName){var classList=elm.classList,oldClasses=parseClassList(oldValue),newClasses=parseClassList(newValue);classList.remove.apply(classList,_toConsumableArray(oldClasses.filter((function(c){return c&&!newClasses.includes(c)})))),classList.add.apply(classList,_toConsumableArray(newClasses.filter((function(c){return c&&!oldClasses.includes(c)}))))}else if("style"===memberName){for(var prop in oldValue)newValue&&null!=newValue[prop]||(prop.includes("-")?elm.style.removeProperty(prop):elm.style[prop]="");for(var _prop in newValue)oldValue&&newValue[_prop]===oldValue[_prop]||(_prop.includes("-")?elm.style.setProperty(_prop,newValue[_prop]):elm.style[_prop]=newValue[_prop])}else if("key"===memberName);else if("ref"===memberName)newValue&&newValue(elm);else if(isProp||"o"!==memberName[0]||"n"!==memberName[1]){var isComplex=isComplexType(newValue);if((isProp||isComplex&&null!==newValue)&&!isSvg)try{if(elm.tagName.includes("-"))elm[memberName]=newValue;else{var n=null==newValue?"":newValue;"list"===memberName?isProp=!1:null!=oldValue&&elm[memberName]==n||(elm[memberName]=n)}}catch(e){}null==newValue||!1===newValue?!1===newValue&&""!==elm.getAttribute(memberName)||elm.removeAttribute(memberName):(!isProp||4&flags||isSvg)&&!isComplex&&(newValue=!0===newValue?"":newValue,elm.setAttribute(memberName,newValue))}else memberName="-"===memberName[2]?memberName.slice(3):isMemberInElement(win,ln)?ln.slice(2):ln[2]+memberName.slice(3),oldValue&&plt.rel(elm,memberName,oldValue,!1),newValue&&plt.ael(elm,memberName,newValue,!1)}},parseClassListRegex=/\s/,parseClassList=function parseClassList(value){return value?value.split(parseClassListRegex):[]},updateElement=function updateElement(oldVnode,newVnode,isSvgMode,memberName){var elm=11===newVnode.$elm$.nodeType&&newVnode.$elm$.host?newVnode.$elm$.host:newVnode.$elm$,oldVnodeAttrs=oldVnode&&oldVnode.$attrs$||EMPTY_OBJ,newVnodeAttrs=newVnode.$attrs$||EMPTY_OBJ;for(memberName in oldVnodeAttrs)memberName in newVnodeAttrs||setAccessor(elm,memberName,oldVnodeAttrs[memberName],void 0,isSvgMode,newVnode.$flags$);for(memberName in newVnodeAttrs)setAccessor(elm,memberName,oldVnodeAttrs[memberName],newVnodeAttrs[memberName],isSvgMode,newVnode.$flags$)},createElm=function createElm(oldParentVNode,newParentVNode,childIndex,parentElm){var elm,childNode,oldVNode,newVNode=newParentVNode.$children$[childIndex],i=0;if(useNativeShadowDom||(checkSlotRelocate=!0,"slot"===newVNode.$tag$&&(newVNode.$flags$|=newVNode.$children$?2:1)),null!==newVNode.$text$)elm=newVNode.$elm$=doc.createTextNode(newVNode.$text$);else if(1&newVNode.$flags$)elm=newVNode.$elm$=doc.createTextNode("");else{if(isSvgMode||(isSvgMode="svg"===newVNode.$tag$),elm=newVNode.$elm$=doc.createElementNS(isSvgMode?"http://www.w3.org/2000/svg":"http://www.w3.org/1999/xhtml",2&newVNode.$flags$?"slot-fb":newVNode.$tag$),isSvgMode&&"foreignObject"===newVNode.$tag$&&(isSvgMode=!1),updateElement(null,newVNode,isSvgMode),newVNode.$children$)for(i=0;i<newVNode.$children$.length;++i)(childNode=createElm(oldParentVNode,newVNode,i))&&elm.appendChild(childNode);"svg"===newVNode.$tag$?isSvgMode=!1:"foreignObject"===elm.tagName&&(isSvgMode=!0)}return elm["s-hn"]=hostTagName,3&newVNode.$flags$&&(elm["s-sr"]=!0,elm["s-cr"]=contentRef,elm["s-sn"]=newVNode.$name$||"",(oldVNode=oldParentVNode&&oldParentVNode.$children$&&oldParentVNode.$children$[childIndex])&&oldVNode.$tag$===newVNode.$tag$&&oldParentVNode.$elm$&&putBackInOriginalLocation(oldParentVNode.$elm$,!1)),elm},putBackInOriginalLocation=function putBackInOriginalLocation(parentElm,recursive){plt.$flags$|=1;for(var oldSlotChildNodes=parentElm.childNodes,i=oldSlotChildNodes.length-1;i>=0;i--){var childNode=oldSlotChildNodes[i];childNode["s-hn"]!==hostTagName&&childNode["s-ol"]&&(parentReferenceNode(childNode).insertBefore(childNode,referenceNode(childNode)),childNode["s-ol"].remove(),childNode["s-ol"]=void 0,checkSlotRelocate=!0),recursive&&putBackInOriginalLocation(childNode,recursive)}plt.$flags$&=-2},addVnodes=function addVnodes(parentElm,before,parentVNode,vnodes,startIdx,endIdx){for(var childNode,containerElm=parentElm["s-cr"]&&parentElm["s-cr"].parentNode||parentElm;startIdx<=endIdx;++startIdx)vnodes[startIdx]&&(childNode=createElm(null,parentVNode,startIdx))&&(vnodes[startIdx].$elm$=childNode,containerElm.insertBefore(childNode,referenceNode(before)))},removeVnodes=function removeVnodes(vnodes,startIdx,endIdx,vnode,elm){for(;startIdx<=endIdx;++startIdx)(vnode=vnodes[startIdx])&&(elm=vnode.$elm$,callNodeRefs(vnode),checkSlotFallbackVisibility=!0,elm["s-ol"]?elm["s-ol"].remove():putBackInOriginalLocation(elm,!0),elm.remove())},updateChildren=function updateChildren(parentElm,oldCh,newVNode,newCh){for(var node,elmToMove,oldStartIdx=0,newStartIdx=0,idxInOld=0,i=0,oldEndIdx=oldCh.length-1,oldStartVnode=oldCh[0],oldEndVnode=oldCh[oldEndIdx],newEndIdx=newCh.length-1,newStartVnode=newCh[0],newEndVnode=newCh[newEndIdx];oldStartIdx<=oldEndIdx&&newStartIdx<=newEndIdx;)if(null==oldStartVnode)oldStartVnode=oldCh[++oldStartIdx];else if(null==oldEndVnode)oldEndVnode=oldCh[--oldEndIdx];else if(null==newStartVnode)newStartVnode=newCh[++newStartIdx];else if(null==newEndVnode)newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldStartVnode,newStartVnode))patch(oldStartVnode,newStartVnode),oldStartVnode=oldCh[++oldStartIdx],newStartVnode=newCh[++newStartIdx];else if(isSameVnode(oldEndVnode,newEndVnode))patch(oldEndVnode,newEndVnode),oldEndVnode=oldCh[--oldEndIdx],newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldStartVnode,newEndVnode))"slot"!==oldStartVnode.$tag$&&"slot"!==newEndVnode.$tag$||putBackInOriginalLocation(oldStartVnode.$elm$.parentNode,!1),patch(oldStartVnode,newEndVnode),parentElm.insertBefore(oldStartVnode.$elm$,oldEndVnode.$elm$.nextSibling),oldStartVnode=oldCh[++oldStartIdx],newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldEndVnode,newStartVnode))"slot"!==oldStartVnode.$tag$&&"slot"!==newEndVnode.$tag$||putBackInOriginalLocation(oldEndVnode.$elm$.parentNode,!1),patch(oldEndVnode,newStartVnode),parentElm.insertBefore(oldEndVnode.$elm$,oldStartVnode.$elm$),oldEndVnode=oldCh[--oldEndIdx],newStartVnode=newCh[++newStartIdx];else{for(idxInOld=-1,i=oldStartIdx;i<=oldEndIdx;++i)if(oldCh[i]&&null!==oldCh[i].$key$&&oldCh[i].$key$===newStartVnode.$key$){idxInOld=i;break}idxInOld>=0?((elmToMove=oldCh[idxInOld]).$tag$!==newStartVnode.$tag$?node=createElm(oldCh&&oldCh[newStartIdx],newVNode,idxInOld):(patch(elmToMove,newStartVnode),oldCh[idxInOld]=void 0,node=elmToMove.$elm$),newStartVnode=newCh[++newStartIdx]):(node=createElm(oldCh&&oldCh[newStartIdx],newVNode,newStartIdx),newStartVnode=newCh[++newStartIdx]),node&&parentReferenceNode(oldStartVnode.$elm$).insertBefore(node,referenceNode(oldStartVnode.$elm$))}oldStartIdx>oldEndIdx?addVnodes(parentElm,null==newCh[newEndIdx+1]?null:newCh[newEndIdx+1].$elm$,newVNode,newCh,newStartIdx,newEndIdx):newStartIdx>newEndIdx&&removeVnodes(oldCh,oldStartIdx,oldEndIdx)},isSameVnode=function isSameVnode(leftVNode,rightVNode){return leftVNode.$tag$===rightVNode.$tag$&&("slot"===leftVNode.$tag$?leftVNode.$name$===rightVNode.$name$:leftVNode.$key$===rightVNode.$key$)},referenceNode=function referenceNode(node){return node&&node["s-ol"]||node},parentReferenceNode=function parentReferenceNode(node){return(node["s-ol"]?node["s-ol"]:node).parentNode},patch=function patch(oldVNode,newVNode){var defaultHolder,elm=newVNode.$elm$=oldVNode.$elm$,oldChildren=oldVNode.$children$,newChildren=newVNode.$children$,tag=newVNode.$tag$,text=newVNode.$text$;null===text?(isSvgMode="svg"===tag||"foreignObject"!==tag&&isSvgMode,"slot"===tag||updateElement(oldVNode,newVNode,isSvgMode),null!==oldChildren&&null!==newChildren?updateChildren(elm,oldChildren,newVNode,newChildren):null!==newChildren?(null!==oldVNode.$text$&&(elm.textContent=""),addVnodes(elm,null,newVNode,newChildren,0,newChildren.length-1)):null!==oldChildren&&removeVnodes(oldChildren,0,oldChildren.length-1),isSvgMode&&"svg"===tag&&(isSvgMode=!1)):(defaultHolder=elm["s-cr"])?defaultHolder.parentNode.textContent=text:oldVNode.$text$!==text&&(elm.data=text)},updateFallbackSlotVisibility=function updateFallbackSlotVisibility(elm){var childNode,i,ilen,j,slotNameAttr,nodeType,childNodes=elm.childNodes;for(i=0,ilen=childNodes.length;i<ilen;i++)if(1===(childNode=childNodes[i]).nodeType){if(childNode["s-sr"])for(slotNameAttr=childNode["s-sn"],childNode.hidden=!1,j=0;j<ilen;j++)if(nodeType=childNodes[j].nodeType,childNodes[j]["s-hn"]!==childNode["s-hn"]||""!==slotNameAttr){if(1===nodeType&&slotNameAttr===childNodes[j].getAttribute("slot")){childNode.hidden=!0;break}}else if(1===nodeType||3===nodeType&&""!==childNodes[j].textContent.trim()){childNode.hidden=!0;break}updateFallbackSlotVisibility(childNode)}},relocateNodes=[],relocateSlotContent=function relocateSlotContent(elm){for(var childNode,node,hostContentNodes,slotNameAttr,relocateNodeData,j,i=0,childNodes=elm.childNodes,ilen=childNodes.length;i<ilen;i++){if((childNode=childNodes[i])["s-sr"]&&(node=childNode["s-cr"])&&node.parentNode)for(hostContentNodes=node.parentNode.childNodes,slotNameAttr=childNode["s-sn"],j=hostContentNodes.length-1;j>=0;j--)(node=hostContentNodes[j])["s-cn"]||node["s-nr"]||node["s-hn"]===childNode["s-hn"]||(isNodeLocatedInSlot(node,slotNameAttr)?(relocateNodeData=relocateNodes.find((function(r){return r.$nodeToRelocate$===node})),checkSlotFallbackVisibility=!0,node["s-sn"]=node["s-sn"]||slotNameAttr,relocateNodeData?relocateNodeData.$slotRefNode$=childNode:relocateNodes.push({$slotRefNode$:childNode,$nodeToRelocate$:node}),node["s-sr"]&&relocateNodes.map((function(relocateNode){isNodeLocatedInSlot(relocateNode.$nodeToRelocate$,node["s-sn"])&&(relocateNodeData=relocateNodes.find((function(r){return r.$nodeToRelocate$===node})))&&!relocateNode.$slotRefNode$&&(relocateNode.$slotRefNode$=relocateNodeData.$slotRefNode$)}))):relocateNodes.some((function(r){return r.$nodeToRelocate$===node}))||relocateNodes.push({$nodeToRelocate$:node}));1===childNode.nodeType&&relocateSlotContent(childNode)}},isNodeLocatedInSlot=function isNodeLocatedInSlot(nodeToRelocate,slotNameAttr){return 1===nodeToRelocate.nodeType?null===nodeToRelocate.getAttribute("slot")&&""===slotNameAttr||nodeToRelocate.getAttribute("slot")===slotNameAttr:nodeToRelocate["s-sn"]===slotNameAttr||""===slotNameAttr},callNodeRefs=function callNodeRefs(vNode){vNode.$attrs$&&vNode.$attrs$.ref&&vNode.$attrs$.ref(null),vNode.$children$&&vNode.$children$.map(callNodeRefs)},renderVdom=function renderVdom(hostRef,renderFnResults){var hostElm=hostRef.$hostElement$,cmpMeta=hostRef.$cmpMeta$,oldVNode=hostRef.$vnode$||newVNode(null,null),rootVnode=function isHost(node){return node&&node.$tag$===Host}(renderFnResults)?renderFnResults:h(null,null,renderFnResults);if(hostTagName=hostElm.tagName,rootVnode.$tag$=null,rootVnode.$flags$|=4,hostRef.$vnode$=rootVnode,rootVnode.$elm$=oldVNode.$elm$=hostElm,contentRef=hostElm["s-cr"],useNativeShadowDom=0!=(1&cmpMeta.$flags$),checkSlotFallbackVisibility=!1,patch(oldVNode,rootVnode),plt.$flags$|=1,checkSlotRelocate){var relocateData,nodeToRelocate,orgLocationNode,parentNodeRef,insertBeforeNode,refNode;relocateSlotContent(rootVnode.$elm$);for(var i=0;i<relocateNodes.length;i++)(nodeToRelocate=(relocateData=relocateNodes[i]).$nodeToRelocate$)["s-ol"]||((orgLocationNode=doc.createTextNode(""))["s-nr"]=nodeToRelocate,nodeToRelocate.parentNode.insertBefore(nodeToRelocate["s-ol"]=orgLocationNode,nodeToRelocate));for(i=0;i<relocateNodes.length;i++)if(nodeToRelocate=(relocateData=relocateNodes[i]).$nodeToRelocate$,relocateData.$slotRefNode$){for(parentNodeRef=relocateData.$slotRefNode$.parentNode,insertBeforeNode=relocateData.$slotRefNode$.nextSibling,orgLocationNode=nodeToRelocate["s-ol"];orgLocationNode=orgLocationNode.previousSibling;)if((refNode=orgLocationNode["s-nr"])&&refNode["s-sn"]===nodeToRelocate["s-sn"]&&parentNodeRef===refNode.parentNode&&(!(refNode=refNode.nextSibling)||!refNode["s-nr"])){insertBeforeNode=refNode;break}(!insertBeforeNode&&parentNodeRef!==nodeToRelocate.parentNode||nodeToRelocate.nextSibling!==insertBeforeNode)&&nodeToRelocate!==insertBeforeNode&&(!nodeToRelocate["s-hn"]&&nodeToRelocate["s-ol"]&&(nodeToRelocate["s-hn"]=nodeToRelocate["s-ol"].parentNode.nodeName),parentNodeRef.insertBefore(nodeToRelocate,insertBeforeNode))}else 1===nodeToRelocate.nodeType&&(nodeToRelocate.hidden=!0)}checkSlotFallbackVisibility&&updateFallbackSlotVisibility(rootVnode.$elm$),plt.$flags$&=-2,relocateNodes.length=0},attachToAncestor=function attachToAncestor(hostRef,ancestorComponent){ancestorComponent&&!hostRef.$onRenderResolve$&&ancestorComponent["s-p"]&&ancestorComponent["s-p"].push(new Promise((function(r){return hostRef.$onRenderResolve$=r})))},scheduleUpdate=function scheduleUpdate(hostRef,isInitialLoad){if(hostRef.$flags$|=16,!(4&hostRef.$flags$)){attachToAncestor(hostRef,hostRef.$ancestorComponent$);return writeTask((function dispatch(){return dispatchHooks(hostRef,isInitialLoad)}))}hostRef.$flags$|=512},dispatchHooks=function dispatchHooks(hostRef,isInitialLoad){var promise,endSchedule=(hostRef.$cmpMeta$.$tagName$,function(){}),instance=hostRef.$lazyInstance$;return isInitialLoad&&(promise=safeCall(instance,"componentWillLoad")),endSchedule(),then(promise,(function(){return updateComponent(hostRef,instance,isInitialLoad)}))},updateComponent=function(){var _ref=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(hostRef,instance,isInitialLoad){var elm,endUpdate,rc,endRender,childrenPromises,postUpdate;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:elm=hostRef.$hostElement$,hostRef.$cmpMeta$.$tagName$,endUpdate=function(){},rc=elm["s-rc"],isInitialLoad&&attachStyles(hostRef),hostRef.$cmpMeta$.$tagName$,endRender=function(){},callRender(hostRef,instance),rc&&(rc.map((function(cb){return cb()})),elm["s-rc"]=void 0),endRender(),endUpdate(),childrenPromises=elm["s-p"],postUpdate=function postUpdate(){return postUpdateComponent(hostRef)},0===childrenPromises.length?postUpdate():(Promise.all(childrenPromises).then(postUpdate),hostRef.$flags$|=4,childrenPromises.length=0);case 12:case"end":return _context.stop()}}),_callee)})));return function updateComponent(_x,_x2,_x3){return _ref.apply(this,arguments)}}(),callRender=function callRender(hostRef,instance,elm){try{renderingRef=instance,instance=instance.render(),hostRef.$flags$&=-17,hostRef.$flags$|=2,renderVdom(hostRef,instance)}catch(e){consoleError(e,hostRef.$hostElement$)}return renderingRef=null,null},getRenderingRef=function getRenderingRef(){return renderingRef},postUpdateComponent=function postUpdateComponent(hostRef){hostRef.$cmpMeta$.$tagName$;var elm=hostRef.$hostElement$,endPostUpdate=function(){},instance=hostRef.$lazyInstance$,ancestorComponent=hostRef.$ancestorComponent$;safeCall(instance,"componentDidRender"),64&hostRef.$flags$?(safeCall(instance,"componentDidUpdate"),endPostUpdate()):(hostRef.$flags$|=64,addHydratedFlag(elm),safeCall(instance,"componentDidLoad"),endPostUpdate(),hostRef.$onReadyResolve$(elm),ancestorComponent||appDidLoad()),hostRef.$onInstanceResolve$(elm),hostRef.$onRenderResolve$&&(hostRef.$onRenderResolve$(),hostRef.$onRenderResolve$=void 0),512&hostRef.$flags$&&nextTick((function(){return scheduleUpdate(hostRef,!1)})),hostRef.$flags$&=-517},forceUpdate=function forceUpdate(ref){var hostRef=getHostRef(ref),isConnected=hostRef.$hostElement$.isConnected;return isConnected&&2==(18&hostRef.$flags$)&&scheduleUpdate(hostRef,!1),isConnected},appDidLoad=function appDidLoad(who){addHydratedFlag(doc.documentElement),nextTick((function(){return emitEvent(win,"appload",{detail:{namespace:"verdocs-web-sdk"}})}))},safeCall=function safeCall(instance,method,arg){if(instance&&instance[method])try{return instance[method](arg)}catch(e){consoleError(e)}},then=function then(promise,thenFn){return promise&&promise.then?promise.then(thenFn):thenFn()},addHydratedFlag=function addHydratedFlag(elm){return elm.classList.add("hydrated")},setValue=function setValue(ref,propName,newVal,cmpMeta){var hostRef=getHostRef(ref),oldVal=hostRef.$instanceValues$.get(propName),flags=hostRef.$flags$,instance=hostRef.$lazyInstance$;newVal=function parsePropertyValue(propValue,propType){return null==propValue||isComplexType(propValue)?propValue:4&propType?"false"!==propValue&&(""===propValue||!!propValue):2&propType?parseFloat(propValue):1&propType?String(propValue):propValue}(newVal,cmpMeta.$members$[propName][0]);var areBothNaN=Number.isNaN(oldVal)&&Number.isNaN(newVal);8&flags&&void 0!==oldVal||!(newVal!==oldVal&&!areBothNaN)||(hostRef.$instanceValues$.set(propName,newVal),instance&&2==(18&flags)&&scheduleUpdate(hostRef,!1))},proxyComponent=function proxyComponent(Cstr,cmpMeta,flags){if(cmpMeta.$members$){var members=Object.entries(cmpMeta.$members$),prototype=Cstr.prototype;if(members.map((function(_ref2){var _ref3=_slicedToArray(_ref2,2),memberName=_ref3[0],memberFlags=_slicedToArray(_ref3[1],1)[0];31&memberFlags||2&flags&&32&memberFlags?Object.defineProperty(prototype,memberName,{get:function get(){return function getValue(ref,propName){return getHostRef(ref).$instanceValues$.get(propName)}(this,memberName)},set:function set(newValue){setValue(this,memberName,newValue,cmpMeta)},configurable:!0,enumerable:!0}):1&flags&&64&memberFlags&&Object.defineProperty(prototype,memberName,{value:function value(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];var ref=getHostRef(this);return ref.$onInstancePromise$.then((function(){var _ref$$lazyInstance$;return(_ref$$lazyInstance$=ref.$lazyInstance$)[memberName].apply(_ref$$lazyInstance$,args)}))}})})),1&flags){var attrNameToPropName=new Map;prototype.attributeChangedCallback=function(attrName,_oldValue,newValue){var _this=this;plt.jmp((function(){var propName=attrNameToPropName.get(attrName);if(_this.hasOwnProperty(propName))newValue=_this[propName],delete _this[propName];else if(prototype.hasOwnProperty(propName)&&"number"==typeof _this[propName]&&_this[propName]==newValue)return;_this[propName]=(null!==newValue||"boolean"!=typeof _this[propName])&&newValue}))},Cstr.observedAttributes=members.filter((function(_ref4){var _ref5=_slicedToArray(_ref4,2);_ref5[0];return 15&_ref5[1][0]})).map((function(_ref6){var _ref7=_slicedToArray(_ref6,2),propName=_ref7[0],attrName=_ref7[1][1]||propName;return attrNameToPropName.set(attrName,propName),attrName}))}}return Cstr},initializeComponent=function(){var _ref8=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(elm,hostRef,cmpMeta,hmrVersionId,Cstr){var endLoad,endNewInstance,style,scopeId,endRegisterStyles,ancestorComponent,schedule;return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:if(0!=(32&hostRef.$flags$)){_context2.next=16;break}if(hostRef.$flags$|=32,!(Cstr=loadModule(cmpMeta)).then){_context2.next=9;break}return endLoad=function(){},_context2.next=7,Cstr;case 7:Cstr=_context2.sent,endLoad();case 9:Cstr.isProxied||(proxyComponent(Cstr,cmpMeta,2),Cstr.isProxied=!0),cmpMeta.$tagName$,endNewInstance=function(){},hostRef.$flags$|=8;try{new Cstr(hostRef)}catch(e){consoleError(e)}hostRef.$flags$&=-9,endNewInstance(),Cstr.style&&(style=Cstr.style,scopeId=getScopeId(cmpMeta),styles.has(scopeId)||(cmpMeta.$tagName$,endRegisterStyles=function(){},registerStyle(scopeId,style,!!(1&cmpMeta.$flags$)),endRegisterStyles()));case 16:ancestorComponent=hostRef.$ancestorComponent$,schedule=function schedule(){return scheduleUpdate(hostRef,!0)},ancestorComponent&&ancestorComponent["s-rc"]?ancestorComponent["s-rc"].push(schedule):schedule();case 19:case"end":return _context2.stop()}}),_callee2)})));return function initializeComponent(_x4,_x5,_x6,_x7,_x8){return _ref8.apply(this,arguments)}}(),_connectedCallback=function connectedCallback(elm){if(0==(1&plt.$flags$)){var hostRef=getHostRef(elm),cmpMeta=hostRef.$cmpMeta$,endConnected=(cmpMeta.$tagName$,function(){});if(!(1&hostRef.$flags$)){hostRef.$flags$|=1,12&cmpMeta.$flags$&&setContentReference(elm);for(var ancestorComponent=elm;ancestorComponent=ancestorComponent.parentNode||ancestorComponent.host;)if(ancestorComponent["s-p"]){attachToAncestor(hostRef,hostRef.$ancestorComponent$=ancestorComponent);break}cmpMeta.$members$&&Object.entries(cmpMeta.$members$).map((function(_ref9){var _ref10=_slicedToArray(_ref9,2),memberName=_ref10[0];if(31&_slicedToArray(_ref10[1],1)[0]&&elm.hasOwnProperty(memberName)){var value=elm[memberName];delete elm[memberName],elm[memberName]=value}})),initializeComponent(elm,hostRef,cmpMeta)}endConnected()}},setContentReference=function setContentReference(elm){var contentRefElm=elm["s-cr"]=doc.createComment("");contentRefElm["s-cn"]=!0,elm.insertBefore(contentRefElm,elm.firstChild)},_disconnectedCallback=function disconnectedCallback(elm){if(0==(1&plt.$flags$)){var instance=getHostRef(elm).$lazyInstance$;safeCall(instance,"disconnectedCallback")}},bootstrapLazy=function bootstrapLazy(lazyBundles){var appLoadFallback,options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},endBootstrap=function(){},cmpTags=[],exclude=options.exclude||[],customElements=win.customElements,head=doc.head,metaCharset=head.querySelector("meta[charset]"),visibilityStyle=doc.createElement("style"),deferredConnectedCallbacks=[],isBootstrapping=!0;Object.assign(plt,options),plt.$resourcesUrl$=new URL(options.resourcesUrl||"./",doc.baseURI).href,lazyBundles.map((function(lazyBundle){lazyBundle[1].map((function(compactMeta){var cmpMeta={$flags$:compactMeta[0],$tagName$:compactMeta[1],$members$:compactMeta[2],$listeners$:compactMeta[3]};cmpMeta.$members$=compactMeta[2];var tagName=cmpMeta.$tagName$,HostElement=function(_HTMLElement){_inherits(HostElement,_HTMLElement);var _super=_createSuper(HostElement);function HostElement(self){var _this2;return _classCallCheck(this,HostElement),self=_assertThisInitialized(_this2=_super.call(this,self)),registerHost(self,cmpMeta),_this2}return _createClass(HostElement,[{key:"connectedCallback",value:function connectedCallback(){var _this3=this;appLoadFallback&&(clearTimeout(appLoadFallback),appLoadFallback=null),isBootstrapping?deferredConnectedCallbacks.push(this):plt.jmp((function(){return _connectedCallback(_this3)}))}},{key:"disconnectedCallback",value:function disconnectedCallback(){var _this4=this;plt.jmp((function(){return _disconnectedCallback(_this4)}))}},{key:"componentOnReady",value:function componentOnReady(){return getHostRef(this).$onReadyPromise$}}]),HostElement}(_wrapNativeSuper(HTMLElement));cmpMeta.$lazyBundleId$=lazyBundle[0],exclude.includes(tagName)||customElements.get(tagName)||(cmpTags.push(tagName),customElements.define(tagName,proxyComponent(HostElement,cmpMeta,1)))}))})),visibilityStyle.innerHTML=cmpTags+HYDRATED_CSS,visibilityStyle.setAttribute("data-styles",""),head.insertBefore(visibilityStyle,metaCharset?metaCharset.nextSibling:head.firstChild),isBootstrapping=!1,deferredConnectedCallbacks.length?deferredConnectedCallbacks.map((function(host){return host.connectedCallback()})):plt.jmp((function(){return appLoadFallback=setTimeout(appDidLoad,30)})),endBootstrap()},Fragment=function Fragment(_,children){return children},hostRefs=new WeakMap,getHostRef=function getHostRef(ref){return hostRefs.get(ref)},registerInstance=function registerInstance(lazyInstance,hostRef){return hostRefs.set(hostRef.$lazyInstance$=lazyInstance,hostRef)},registerHost=function registerHost(elm,cmpMeta){var hostRef={$flags$:0,$hostElement$:elm,$cmpMeta$:cmpMeta,$instanceValues$:new Map};return hostRef.$onInstancePromise$=new Promise((function(r){return hostRef.$onInstanceResolve$=r})),hostRef.$onReadyPromise$=new Promise((function(r){return hostRef.$onReadyResolve$=r})),elm["s-p"]=[],elm["s-rc"]=[],hostRefs.set(elm,hostRef)},isMemberInElement=function isMemberInElement(elm,memberName){return memberName in elm},consoleError=function consoleError(e,el){return(0,console.error)(e,el)},cmpModules=new Map,loadModule=function loadModule(cmpMeta,hostRef,hmrVersionId){var exportName=cmpMeta.$tagName$.replace(/-/g,"_"),bundleId=cmpMeta.$lazyBundleId$,module=cmpModules.get(bundleId);return module?module[exportName]:__webpack_require__("./dist/esm lazy recursive ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$")("./"+bundleId+".entry.js").then((function(importedModule){return cmpModules.set(bundleId,importedModule),importedModule[exportName]}),consoleError)},styles=new Map,win="undefined"!=typeof window?window:{},doc=win.document||{head:{}},plt={$flags$:0,$resourcesUrl$:"",jmp:function jmp(h){return h()},raf:function raf(h){return requestAnimationFrame(h)},ael:function ael(el,eventName,listener,opts){return el.addEventListener(eventName,listener,opts)},rel:function rel(el,eventName,listener,opts){return el.removeEventListener(eventName,listener,opts)},ce:function ce(eventName,opts){return new CustomEvent(eventName,opts)}},promiseResolve=function promiseResolve(v){return Promise.resolve(v)},supportsConstructableStylesheets=function(){try{return new CSSStyleSheet,"function"==typeof(new CSSStyleSheet).replaceSync}catch(e){}return!1}(),queueDomReads=[],queueDomWrites=[],queueTask=function queueTask(queue,write){return function(cb){queue.push(cb),queuePending||(queuePending=!0,write&&4&plt.$flags$?nextTick(flush):plt.raf(flush))}},consume=function consume(queue){for(var i=0;i<queue.length;i++)try{queue[i](performance.now())}catch(e){consoleError(e)}queue.length=0},flush=function flush(){consume(queueDomReads),consume(queueDomWrites),(queuePending=queueDomReads.length>0)&&plt.raf(flush)},nextTick=function nextTick(cb){return promiseResolve().then(cb)},writeTask=queueTask(queueDomWrites,!0)},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/@storybook/builder-webpack4/node_modules/webpack/buildin/module.js")(module))},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$":function(module,exports,__webpack_require__){var map={"./components/controls/verdocs-button-panel/verdocs-button-panel.stories.tsx":"./src/components/controls/verdocs-button-panel/verdocs-button-panel.stories.tsx","./components/controls/verdocs-button/verdocs-button.stories.tsx":"./src/components/controls/verdocs-button/verdocs-button.stories.tsx","./components/controls/verdocs-checkbox/verdocs-checkbox.stories.tsx":"./src/components/controls/verdocs-checkbox/verdocs-checkbox.stories.tsx","./components/controls/verdocs-dropdown/verdocs-dropdown.stories.tsx":"./src/components/controls/verdocs-dropdown/verdocs-dropdown.stories.tsx","./components/controls/verdocs-floating-menu/verdocs-floating-menu.stories.tsx":"./src/components/controls/verdocs-floating-menu/verdocs-floating-menu.stories.tsx","./components/controls/verdocs-help-icon/verdocs-help-icon.stories.tsx":"./src/components/controls/verdocs-help-icon/verdocs-help-icon.stories.tsx","./components/controls/verdocs-loader/verdocs-loader.stories.tsx":"./src/components/controls/verdocs-loader/verdocs-loader.stories.tsx","./components/controls/verdocs-organization-card/verdocs-organization-card.stories.tsx":"./src/components/controls/verdocs-organization-card/verdocs-organization-card.stories.tsx","./components/controls/verdocs-radio-button/verdocs-radio-button.stories.tsx":"./src/components/controls/verdocs-radio-button/verdocs-radio-button.stories.tsx","./components/controls/verdocs-select-input/verdocs-select-input.stories.tsx":"./src/components/controls/verdocs-select-input/verdocs-select-input.stories.tsx","./components/controls/verdocs-status-indicator/verdocs-status-indicator.stories.tsx":"./src/components/controls/verdocs-status-indicator/verdocs-status-indicator.stories.tsx","./components/controls/verdocs-template-card/verdocs-template-card.stories.tsx":"./src/components/controls/verdocs-template-card/verdocs-template-card.stories.tsx","./components/controls/verdocs-template-tags/verdocs-template-tags.stories.tsx":"./src/components/controls/verdocs-template-tags/verdocs-template-tags.stories.tsx","./components/controls/verdocs-text-input/verdocs-text-input.stories.tsx":"./src/components/controls/verdocs-text-input/verdocs-text-input.stories.tsx","./components/controls/verdocs-toggle-button/verdocs-toggle-button.stories.tsx":"./src/components/controls/verdocs-toggle-button/verdocs-toggle-button.stories.tsx","./components/controls/verdocs-toggle/verdocs-toggle.stories.tsx":"./src/components/controls/verdocs-toggle/verdocs-toggle.stories.tsx","./components/controls/verdocs-toolbar-icon/verdocs-toolbar-icon.stories.tsx":"./src/components/controls/verdocs-toolbar-icon/verdocs-toolbar-icon.stories.tsx","./components/dialogs/verdocs-initial-dialog/verdocs-initial-dialog.stories.tsx":"./src/components/dialogs/verdocs-initial-dialog/verdocs-initial-dialog.stories.tsx","./components/dialogs/verdocs-kba-dialog/verdocs-kba-dialog.stories.tsx":"./src/components/dialogs/verdocs-kba-dialog/verdocs-kba-dialog.stories.tsx","./components/dialogs/verdocs-ok-dialog/verdocs-ok-dialog.stories.tsx":"./src/components/dialogs/verdocs-ok-dialog/verdocs-ok-dialog.stories.tsx","./components/dialogs/verdocs-signature-dialog/verdocs-signature-dialog.stories.tsx":"./src/components/dialogs/verdocs-signature-dialog/verdocs-signature-dialog.stories.tsx","./components/dialogs/verdocs-upload-dialog/verdocs-upload-dialog.stories.tsx":"./src/components/dialogs/verdocs-upload-dialog/verdocs-upload-dialog.stories.tsx","./components/elements/verdocs-contact-picker/verdocs-contact-picker.stories.tsx":"./src/components/elements/verdocs-contact-picker/verdocs-contact-picker.stories.tsx","./components/elements/verdocs-envelope-sidebar/verdocs-envelope-sidebar.stories.tsx":"./src/components/elements/verdocs-envelope-sidebar/verdocs-envelope-sidebar.stories.tsx","./components/elements/verdocs-quick-functions/verdocs-quick-functions.stories.tsx":"./src/components/elements/verdocs-quick-functions/verdocs-quick-functions.stories.tsx","./components/elements/verdocs-search-activity/verdocs-search-activity.stories.tsx":"./src/components/elements/verdocs-search-activity/verdocs-search-activity.stories.tsx","./components/elements/verdocs-search-box/verdocs-search-box.stories.tsx":"./src/components/elements/verdocs-search-box/verdocs-search-box.stories.tsx","./components/elements/verdocs-search-tabs/verdocs-search-tabs.stories.tsx":"./src/components/elements/verdocs-search-tabs/verdocs-search-tabs.stories.tsx","./components/embeds/verdocs-auth/verdocs-auth.stories.tsx":"./src/components/embeds/verdocs-auth/verdocs-auth.stories.tsx","./components/embeds/verdocs-build/verdocs-build.stories.tsx":"./src/components/embeds/verdocs-build/verdocs-build.stories.tsx","./components/embeds/verdocs-preview/verdocs-preview.stories.tsx":"./src/components/embeds/verdocs-preview/verdocs-preview.stories.tsx","./components/embeds/verdocs-search/verdocs-search.stories.tsx":"./src/components/embeds/verdocs-search/verdocs-search.stories.tsx","./components/embeds/verdocs-send/verdocs-send.stories.tsx":"./src/components/embeds/verdocs-send/verdocs-send.stories.tsx","./components/embeds/verdocs-sign/verdocs-sign.stories.tsx":"./src/components/embeds/verdocs-sign/verdocs-sign.stories.tsx","./components/embeds/verdocs-view/verdocs-view.stories.tsx":"./src/components/embeds/verdocs-view/verdocs-view.stories.tsx","./components/fields/verdocs-field-attachment/verdocs-field-attachment.stories.tsx":"./src/components/fields/verdocs-field-attachment/verdocs-field-attachment.stories.tsx","./components/fields/verdocs-field-checkbox/verdocs-field-checkbox.stories.tsx":"./src/components/fields/verdocs-field-checkbox/verdocs-field-checkbox.stories.tsx","./components/fields/verdocs-field-date/verdocs-field-date.stories.tsx":"./src/components/fields/verdocs-field-date/verdocs-field-date.stories.tsx","./components/fields/verdocs-field-dropdown/verdocs-field-dropdown.stories.tsx":"./src/components/fields/verdocs-field-dropdown/verdocs-field-dropdown.stories.tsx","./components/fields/verdocs-field-initial/verdocs-field-initial.stories.tsx":"./src/components/fields/verdocs-field-initial/verdocs-field-initial.stories.tsx","./components/fields/verdocs-field-payment/verdocs-field-payment.stories.tsx":"./src/components/fields/verdocs-field-payment/verdocs-field-payment.stories.tsx","./components/fields/verdocs-field-radio-button-group/verdocs-field-radio-button.stories.tsx":"./src/components/fields/verdocs-field-radio-button-group/verdocs-field-radio-button.stories.tsx","./components/fields/verdocs-field-signature/verdocs-field-signature.stories.tsx":"./src/components/fields/verdocs-field-signature/verdocs-field-signature.stories.tsx","./components/fields/verdocs-field-textarea/verdocs-field-textarea.stories.tsx":"./src/components/fields/verdocs-field-textarea/verdocs-field-textarea.stories.tsx","./components/fields/verdocs-field-textbox/verdocs-field-textbox.stories.tsx":"./src/components/fields/verdocs-field-textbox/verdocs-field-textbox.stories.tsx","./components/fields/verdocs-field-timestamp/verdocs-field-timestamp.stories.tsx":"./src/components/fields/verdocs-field-timestamp/verdocs-field-timestamp.stories.tsx","./components/templates/verdocs-template-attachments/verdocs-template-attachments.stories.tsx":"./src/components/templates/verdocs-template-attachments/verdocs-template-attachments.stories.tsx","./components/templates/verdocs-template-create/verdocs-template-create.stories.tsx":"./src/components/templates/verdocs-template-create/verdocs-template-create.stories.tsx","./components/templates/verdocs-template-field-properties/verdocs-template-field-properties.stories.tsx":"./src/components/templates/verdocs-template-field-properties/verdocs-template-field-properties.stories.tsx","./components/templates/verdocs-template-fields/verdocs-template-fields.stories.tsx":"./src/components/templates/verdocs-template-fields/verdocs-template-fields.stories.tsx","./components/templates/verdocs-template-name/verdocs-template-name.stories.tsx":"./src/components/templates/verdocs-template-name/verdocs-template-name.stories.tsx","./components/templates/verdocs-template-properties/verdocs-template-properties.stories.tsx":"./src/components/templates/verdocs-template-properties/verdocs-template-properties.stories.tsx","./components/templates/verdocs-template-recipients/verdocs-template-recipients.stories.tsx":"./src/components/templates/verdocs-template-recipients/verdocs-template-recipients.stories.tsx","./components/templates/verdocs-template-reminders/verdocs-template-reminders.stories.tsx":"./src/components/templates/verdocs-template-reminders/verdocs-template-reminders.stories.tsx","./components/templates/verdocs-template-role-properties/verdocs-template-role-properties.stories.tsx":"./src/components/templates/verdocs-template-role-properties/verdocs-template-role-properties.stories.tsx","./components/templates/verdocs-template-sender/verdocs-template-sender.stories.tsx":"./src/components/templates/verdocs-template-sender/verdocs-template-sender.stories.tsx","./components/templates/verdocs-template-visibillity/verdocs-template-visibility.stories.tsx":"./src/components/templates/verdocs-template-visibillity/verdocs-template-visibility.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"./src/components/controls/verdocs-button-panel/verdocs-button-panel.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ButtonPanel",(function(){return ButtonPanel}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Button Panel",component:"verdocs-button-panel",args:{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24" fill="#000000"><path d="M7.6 13.925q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375ZM5.3 22.85q-1.325 0-2.238-.912-.912-.913-.912-2.238V6.3q0-1.325.912-2.238.913-.912 2.238-.912H6v-2h2.575v2h6.85v-2H18v2h.7q1.325 0 2.238.912.912.913.912 2.238v13.4q0 1.325-.912 2.238-.913.912-2.238.912Zm0-3.15h13.4V10H5.3v9.7ZM5.3 8h13.4V6.3H5.3Zm0 0V6.3 8Z"/></svg>'},argTypes:{},parameters:{layout:"fullscreen"}};var ButtonPanel=function ButtonPanel(_ref){var icon=_ref.icon;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n  <verdocs-button-panel .icon=",'>\n    <h6>Field Settings</h6>\n    <form>\n      <label>Field 1</label>\n      <input type="text" placeholder="Field 1..." />\n      <label>Field 2</label>\n      <input type="text" placeholder="Field 2..." />\n    </form>\n  </verdocs-button-panel>\n'])),icon)};ButtonPanel.parameters=Object.assign({storySource:{source:'({icon}) => html`\n  <verdocs-button-panel .icon=${icon}>\n    <h6>Field Settings</h6>\n    <form>\n      <label>Field 1</label>\n      <input type="text" placeholder="Field 1..." />\n      <label>Field 2</label>\n      <input type="text" placeholder="Field 2..." />\n    </form>\n  </verdocs-button-panel>\n`'}},ButtonPanel.parameters)},"./src/components/controls/verdocs-button/verdocs-button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Button",(function(){return Button}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Button",component:"verdocs-button",args:{label:"Click Me",type:"button",size:"normal",variant:"standard",disabled:!1},argTypes:{startIcon:{defaultValue:!1,control:{type:"boolean"}},endIcon:{defaultValue:!1,control:{type:"boolean"}},click:{action:"click",description:"Fired when the user clicks the button."}}};var Button=function Button(_ref){var label=_ref.label,size=_ref.size,variant=_ref.variant,disabled=_ref.disabled,startIcon=_ref.startIcon,endIcon=_ref.endIcon,click=_ref.click;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-button\n    .label=","\n    .size=","\n    .variant=","\n    .disabled=","\n    .startIcon=","\n    .endIcon=","\n    @click=","\n  />"])),label,size,variant,disabled,startIcon?'\n  <svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="24px" viewBox="0 0 24 24" width="24px" fill="#ffffff">\n    <g>\n      <rect fill="none" height="24" width="24"/>\n    </g>\n    <g>\n      <g>\n        <path d="M12,2C6.48,2,2,6.48,2,12c0,5.52,4.48,10,10,10s10-4.48,10-10C22,6.48,17.52,2,12,2z M12,20c-4.42,0-8-3.58-8-8 c0-4.42,3.58-8,8-8s8,3.58,8,8C20,16.42,16.42,20,12,20z"/>\n        <circle cx="7" cy="12" r="1.5"/>\n        <circle cx="12" cy="12" r="1.5"/>\n        <circle cx="17" cy="12" r="1.5"/>\n      </g>\n    </g>\n  </svg>\n':null,endIcon?'\n<svg width="10" height="26" viewBox="0 0 10 26" fill="#ffffff" xmlns="http://www.w3.org/2000/svg">\n<g clip-path="url(#clip0_31568_3647)">\n<path d="M9.64682 13.431L2.10645 20.9466C1.86503 21.1853 1.47466 21.1853 1.23324 20.9466L0.216218 19.9411C-0.0251976 19.7025 -0.0251976 19.3165 0.216218 19.0778L6.30296 12.9993L0.216218 6.9208C-0.0251976 6.68213 -0.0251976 6.29619 0.216218 6.05752L1.23324 5.05205C1.47466 4.81338 1.86503 4.81338 2.10645 5.05205L9.64682 12.5677C9.88824 12.8064 9.88824 13.1923 9.64682 13.431Z"/>\n</g>\n<defs>\n<clipPath id="clip0_31568_3647">\n<rect width="9.86207" height="26"/>\n</clipPath>\n</defs>\n</svg>\n':null,click)};Button.parameters=Object.assign({storySource:{source:"({label, size, variant, disabled, startIcon, endIcon, click}) =>\n  html`<verdocs-button\n    .label=${label}\n    .size=${size}\n    .variant=${variant}\n    .disabled=${disabled}\n    .startIcon=${startIcon ? CircleIcon : null}\n    .endIcon=${endIcon ? ArrowIcon : null}\n    @click=${click}\n  />`"}},Button.parameters)},"./src/components/controls/verdocs-checkbox/verdocs-checkbox.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Checkbox",(function(){return Checkbox}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Checkbox",component:"verdocs-checkbox",args:{label:"Sample checkbox",name:"test",theme:"light",checked:!1,disabled:!1,value:"1"},argTypes:{input:{action:"input",description:"Fired when the checkbox is clicked. e.target.checked will indicate the current status (true if checked)."}}};var Checkbox=function Checkbox(_ref){var checked=_ref.checked,label=_ref.label,name=_ref.name,value=_ref.value,disabled=_ref.disabled,theme=_ref.theme,input=_ref.input;return Object(lit_html__WEBPACK_IMPORTED_MODULE_3__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}([" <verdocs-checkbox .checked="," .label="," .name="," .value="," .disabled="," .theme="," @input="," /> "])),checked,label,name,value,disabled,theme,input)};Checkbox.parameters=Object.assign({storySource:{source:"({checked, label, name, value, disabled, theme, input}) =>\n  html` <verdocs-checkbox .checked=${checked} .label=${label} .name=${name} .value=${value} .disabled=${disabled} .theme=${theme} @input=${input} /> `"}},Checkbox.parameters)},"./src/components/controls/verdocs-dropdown/verdocs-dropdown.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DropdownMenu",(function(){return DropdownMenu}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Dropdown Menu",component:"verdocs-dropdown",args:{options:[{label:"Option 1"},{label:"Disabled Option",disabled:!0},{label:"Option 2"}]},argTypes:{optionSelected:{action:"optionSelected",table:{disable:!0}}}};var DropdownMenu=function DropdownMenu(_ref){var options=_ref.options,optionSelected=_ref.optionSelected;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-dropdown .options="," @optionSelected="," />"])),options,optionSelected)};DropdownMenu.parameters=Object.assign({storySource:{source:"({options, optionSelected}) => html`<verdocs-dropdown .options=${options} @optionSelected=${optionSelected} />`"}},DropdownMenu.parameters)},"./src/components/controls/verdocs-floating-menu/verdocs-floating-menu.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"FloatingMenu",(function(){return FloatingMenu}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Floating Menu",component:"verdocs-floating-menu",args:{options:[{id:"attachment",tooltip:"Attachment",icon:"A"},{id:"checkbox",tooltip:"Check Box",icon:"C"},{id:"date",tooltip:"Date",icon:"D"},{id:"dropdown",tooltip:"Dropdown",icon:"O"},{id:"initial",tooltip:"Initials",icon:"I"},{id:"payment",tooltip:"Payment",icon:"P"},{id:"radio",tooltip:"Radio Button",icon:"R"},{id:"signature",tooltip:"Signature",icon:"S"},{id:"textarea",tooltip:"Text Area",icon:"M"},{id:"textbox",tooltip:"Text Box",icon:"T"},{id:"timestamp",tooltip:"Timestamp",icon:"X"}]},argTypes:{optionSelected:{action:"optionSelected",table:{disable:!0}}},layout:"fullscreen"};var FloatingMenu=function FloatingMenu(_ref){var options=_ref.options,optionSelected=_ref.optionSelected;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['\n  <div style="width: 400px; height: 600px; overflow-y: scroll; background: white;">\n    <div style="margin:10px; height: 400px; box-sizing: border-box; border:1px solid #ef99a1;">&nbsp;</div>\n    <div style="margin:10px; height: 400px; box-sizing: border-box; border:1px solid #ef99a1;">&nbsp;</div>\n    <div style="margin:10px; height: 400px; box-sizing: border-box; border:1px solid #ef99a1;">&nbsp;</div>\n    <verdocs-floating-menu .options='," @optionSelected="," />\n  </div>\n"])),options,optionSelected)};FloatingMenu.parameters=Object.assign({storySource:{source:'({options, optionSelected}) => html`\n  <div style="width: 400px; height: 600px; overflow-y: scroll; background: white;">\n    <div style="margin:10px; height: 400px; box-sizing: border-box; border:1px solid #ef99a1;">&nbsp;</div>\n    <div style="margin:10px; height: 400px; box-sizing: border-box; border:1px solid #ef99a1;">&nbsp;</div>\n    <div style="margin:10px; height: 400px; box-sizing: border-box; border:1px solid #ef99a1;">&nbsp;</div>\n    <verdocs-floating-menu .options=${options} @optionSelected=${optionSelected} />\n  </div>\n`'}},FloatingMenu.parameters)},"./src/components/controls/verdocs-help-icon/verdocs-help-icon.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"HelpIcon",(function(){return HelpIcon}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Help Icon",component:"verdocs-help-icon",args:{text:"Sample help text"},argTypes:{},parameters:{layout:"fullscreen"}};var HelpIcon=function HelpIcon(_ref){var text=_ref.text;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-help-icon .text="," /> "])),text)};HelpIcon.parameters=Object.assign({storySource:{source:"({text}) => html`<verdocs-help-icon .text=${text} /> `"}},HelpIcon.parameters)},"./src/components/controls/verdocs-loader/verdocs-loader.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Loader",(function(){return Loader}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Loader",component:"verdocs-loader",args:{},argTypes:{}};var Loader=function Loader(_ref){return function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}(_ref),Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-loader />"])))};Loader.parameters=Object.assign({storySource:{source:"({}) => html`<verdocs-loader />`"}},Loader.parameters)},"./src/components/controls/verdocs-organization-card/verdocs-organization-card.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"OrganizationCard",(function(){return OrganizationCard}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Organization Card",component:"verdocs-organization-card",args:{organization:{id:"21643fd6-4097-47c0-9780-62dc0c01ddce",name:"Verdocs, LLC",url:"https://verdocs.com/",address:null,phone:null,business_name:null,is_business:!0,address2:null,contact_email:null,timezone:null,envelope_responsible:!1,created_at:"2022-12-21 20:16:50.262113+00"}},argTypes:{}};var OrganizationCard=function OrganizationCard(_ref){var organization=_ref.organization;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-organization-card .organization="," />"])),organization)};OrganizationCard.parameters=Object.assign({storySource:{source:"({organization}) => html`<verdocs-organization-card .organization=${organization} />`"}},OrganizationCard.parameters)},"./src/components/controls/verdocs-radio-button/verdocs-radio-button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"RadioButton",(function(){return RadioButton}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Radio Button",component:"verdocs-radio-button",args:{checked:!1,name:"test",value:"1",disabled:!1},argTypes:{input:{action:"input",description:"Fired when the radio button is clicked. e.target.checked will always be true, because radio button onChange events are fired only when the radio button is clicked to select it."}}};var RadioButton=function RadioButton(_ref){var checked=_ref.checked,name=_ref.name,value=_ref.value,disabled=_ref.disabled,input=_ref.input;return Object(lit_html__WEBPACK_IMPORTED_MODULE_3__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}([" <verdocs-radio-button .checked="," .name="," .value=",' .disabled="','" @input='," /> "])),checked,name,value,disabled,input)};RadioButton.parameters=Object.assign({storySource:{source:'({checked, name, value, disabled, input}) =>\n  html` <verdocs-radio-button .checked=${checked} .name=${name} .value=${value} .disabled="${disabled}" @input=${input} /> `'}},RadioButton.parameters)},"./src/components/controls/verdocs-select-input/verdocs-select-input.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SelectInput",(function(){return SelectInput}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Select Input",component:"verdocs-select-input",args:{label:"Name",value:"",options:[{label:"Option 1",value:"1"},{label:"Option 2",value:"2"},{label:"Option 3",value:"3"}]},argTypes:{input:{action:"input",description:"Fired when a new value is selected. e.target.value will contain the selected value."}}};var SelectInput=function SelectInput(_ref){var type=_ref.type,label=_ref.label,value=_ref.value,placeholder=_ref.placeholder,options=_ref.options,disabled=_ref.disabled,input=_ref.input;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-select-input .type="," .label="," .placeholder="," .value="," .options="," .disabled="," @input="," />"])),type,label,placeholder,value,options,disabled,input)};SelectInput.parameters=Object.assign({storySource:{source:"({type, label, value, placeholder, options, disabled, input}) =>\n  html`<verdocs-select-input .type=${type} .label=${label} .placeholder=${placeholder} .value=${value} .options=${options} .disabled=${disabled} @input=${input} />`"}},SelectInput.parameters)},"./src/components/controls/verdocs-status-indicator/verdocs-status-indicator.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"StatusIndicator",(function(){return StatusIndicator}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Status Indicator",component:"verdocs-status-indicator",args:{document:0,status:"complete",theme:"light",size:"normal"},argTypes:{document:{options:[0,1],mapping:{0:{id:"1234",status:"complete",recipients:[{role_name:"Tax Preparer",status:"submitted",full_name:"Bill Board",sequence:1,type:"signer"},{role_name:"Recipient 1",status:"submitted",full_name:"Ante Bellum",sequence:2,type:"signer"},{role_name:"Recipient 2",status:"opened",full_name:"Sarah Bellum",sequence:2,type:"signer"},{role_name:"Office Manager",status:"pending",full_name:"Paige Turner",sequence:3,type:"approver"}]},1:null},control:{type:"select",labels:{0:"Sample Document",1:"Not Set"}}},status:{defaultValue:"",options:[0,"complete","pending","in progress","declined","canceled","invited","opened","accepted","signed","submitted"],mapping:{0:null,complete:"complete",pending:"pending","in progress":"in progress",declined:"declined",canceled:"canceled",invited:"invited",opened:"opened",accepted:"accepted",signed:"signed",submitted:"submitted"},control:{type:"select",labels:{0:"Not Set",complete:"Complete",pending:"Pending","in progress":"In Progress",declined:"Declined",canceled:"Canceled",invited:"Invited",opened:"Opened",accepted:"Accepted",signed:"Signed",submitted:"Submitted"}}}}};var StatusIndicator=function StatusIndicator(_ref){var theme=_ref.theme,size=_ref.size,status=_ref.status,envelope=_ref.envelope;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['<verdocs-status-indicator .theme="','" .size="','" .status="','" .envelope="','" />'])),theme,size,status,envelope)};StatusIndicator.parameters=Object.assign({storySource:{source:'({theme, size, status, envelope}) =>\n  html`<verdocs-status-indicator .theme="${theme}" .size="${size}" .status="${status}" .envelope="${envelope}" />`'}},StatusIndicator.parameters)},"./src/components/controls/verdocs-template-card/verdocs-template-card.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TemplateCard",(function(){return TemplateCard}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Template Card",component:"verdocs-template-card",args:{template:{counter:2,star_counter:10,name:"IRS Form I-9",id:"1",profile_id:"2",created_at:"2021-11-14T13:57:21Z",updated_at:"2021-11-14T13:57:21Z",last_used_at:"2021-11-14T13:57:21Z",organization_id:"3",is_personal:!1,is_public:!0,sender:"creator",description:"IRS Form I-9",organization:{id:"3",name:"ACME Widgets, LLC",address:null,phone:null,business_name:null,is_business:!0,address2:null,contact_email:null,timezone:null,envelope_responsible:!1},template_document:{url:"url",name:"IRS Form I-9",page_numbers:3,id:"4",updated_at:"2021-11-14T13:57:21Z",created_at:"2021-11-14T13:57:21Z",template_id:"1",mime:"application/pdf",thumbnail_url:"https://verdocs.com/en/wp-content/uploads/2021/12/Screen-Shot-2021-12-30-at-2.26.08-PM-e1640892536786.png"}}},argTypes:{}};var TemplateCard=function TemplateCard(_ref){var template=_ref.template;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-card .template="," />"])),template)};TemplateCard.parameters=Object.assign({storySource:{source:"({template}) => html`<verdocs-template-card .template=${template} />`"}},TemplateCard.parameters)},"./src/components/controls/verdocs-template-tags/verdocs-template-tags.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TemplateTags",(function(){return TemplateTags}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Template Tags",component:"verdocs-template-tags",args:{tags:["contractors","taxes","irs"]},argTypes:{}};var TemplateTags=function TemplateTags(_ref){var tags=_ref.tags,theme=_ref.theme;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['<verdocs-template-tags .tags="','" .theme="','" />'])),tags,theme)};TemplateTags.parameters=Object.assign({storySource:{source:'({tags, theme}) => html`<verdocs-template-tags .tags="${tags}" .theme="${theme}" />`'}},TemplateTags.parameters)},"./src/components/controls/verdocs-text-input/verdocs-text-input.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TextInput",(function(){return TextInput}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Text Input",component:"verdocs-text-input",args:{label:"Name",value:"",placeholder:"Enter your name..."},argTypes:{input:{action:"input",description:"Fired for each character entered in the field. e.target.value will contain the current text value."}}};var TextInput=function TextInput(_ref){var type=_ref.type,label=_ref.label,value=_ref.value,placeholder=_ref.placeholder,disabled=_ref.disabled,input=_ref.input;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-text-input .type="," .label="," .placeholder="," .value="," .disabled="," @input="," />"])),type,label,placeholder,value,disabled,input)};TextInput.parameters=Object.assign({storySource:{source:"({type, label, value, placeholder, disabled, input}) =>\n  html`<verdocs-text-input .type=${type} .label=${label} .placeholder=${placeholder} .value=${value} .disabled=${disabled} @input=${input} />`"}},TextInput.parameters)},"./src/components/controls/verdocs-toggle-button/verdocs-toggle-button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ToggleButton",(function(){return ToggleButton}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Toggle Button",component:"verdocs-toggle-button",args:{icon:'<svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiBox-root css-1om0hkc" focusable="false" aria-hidden="true" viewBox="0 0 24 24"><path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"></path></svg>',label:"Use",size:"normal",active:!1}};var ToggleButton=function ToggleButton(_ref){var icon=_ref.icon,label=_ref.label,size=_ref.size,active=_ref.active;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-toggle-button .icon="," .label="," .size="," .active="," />"])),icon,label,size,active)};ToggleButton.parameters=Object.assign({storySource:{source:"({icon, label, size, active}) => html`<verdocs-toggle-button .icon=${icon} .label=${label} .size=${size} .active=${active} />`"}},ToggleButton.parameters)},"./src/components/controls/verdocs-toggle/verdocs-toggle.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Toggle",(function(){return Toggle}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Toggle",component:"verdocs-toggle",args:{options:{label:"View as",defaultSelection:1,buttons:[{id:"list-view",icon:'<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><rect fill="none" height="24" width="24"/><path d="M3,5v14h18V5H3z M7,7v2H5V7H7z M5,13v-2h2v2H5z M5,15h2v2H5V15z M19,17H9v-2h10V17z M19,13H9v-2h10V13z M19,9H9V7h10V9z"/></svg>'},{id:"grid-view",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M3 5v14h19V5H3zm17 4h-2.25V7H20v2zM9.25 11h2.25v2H9.25v-2zm-2 2H5v-2h2.25v2zm4.25-4H9.25V7h2.25v2zm2-2h2.25v2H13.5V7zm-2 8v2H9.25v-2h2.25zm2 0h2.25v2H13.5v-2zm0-2v-2h2.25v2H13.5zm4.25-2H20v2h-2.25v-2zM7.25 7v2H5V7h2.25zM5 15h2.25v2H5v-2zm12.75 2v-2H20v2h-2.25z"/></svg>'}]}}};var Toggle=function Toggle(_ref){var options=_ref.options,theme=_ref.theme;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-toggle .options="," .theme=","></verdocs-toggle>"])),options,theme)};Toggle.parameters=Object.assign({storySource:{source:"({options, theme}) => html`<verdocs-toggle .options=${options} .theme=${theme}></verdocs-toggle>`"}},Toggle.parameters)},"./src/components/controls/verdocs-toolbar-icon/verdocs-toolbar-icon.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ToolbarIcon",(function(){return ToolbarIcon}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Toolbar Icon",component:"verdocs-toolbar-icon",args:{text:"Sample tooltip text",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="M7.6 13.925q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375ZM5.3 22.85q-1.325 0-2.238-.912-.912-.913-.912-2.238V6.3q0-1.325.912-2.238.913-.912 2.238-.912H6v-2h2.575v2h6.85v-2H18v2h.7q1.325 0 2.238.912.912.913.912 2.238v13.4q0 1.325-.912 2.238-.913.912-2.238.912Zm0-3.15h13.4V10H5.3v9.7ZM5.3 8h13.4V6.3H5.3Zm0 0V6.3 8Z"/></svg>'},argTypes:{},parameters:{layout:"fullscreen"}};var ToolbarIcon=function ToolbarIcon(_ref){var text=_ref.text,icon=_ref.icon;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-toolbar-icon .text="," .icon="," /> "])),text,icon)};ToolbarIcon.parameters=Object.assign({storySource:{source:"({text, icon}) => html`<verdocs-toolbar-icon .text=${text} .icon=${icon} /> `"}},ToolbarIcon.parameters)},"./src/components/dialogs/verdocs-initial-dialog/verdocs-initial-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"InitialDialog",(function(){return InitialDialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Initial Dialog",component:"verdocs-initial-dialog",args:{initials:"PT"},argTypes:{onNext:{action:"next",description:"Fired when the user completes the dialog and clicks Adopt. The event detail will contain a base64-encoded string representation of the initials adopted."},onCancel:{action:"cancel",description:"Fired if the user cancels the dialog."}}};var InitialDialog=function InitialDialog(_ref){var initials=_ref.initials,onNext=_ref.onNext,onCancel=_ref.onCancel;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-initial-dialog .initials="," @cancel="," @next="," />"])),initials,onCancel,onNext)};InitialDialog.parameters=Object.assign({storySource:{source:"({initials, onNext, onCancel}) => html`<verdocs-initial-dialog .initials=${initials} @cancel=${onCancel} @next=${onNext} />`"}},InitialDialog.parameters)},"./src/components/dialogs/verdocs-kba-dialog/verdocs-kba-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"KBADialog",(function(){return KBADialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/KBA Dialog",component:"verdocs-kba-dialog",args:{mode:"choice",helptitle:"One Time Code",helptext:"Please check your text messages for a security code, and enter the code below.",label:"PIN",placeholder:"Enter your PIN...",step:1,steps:3,choices:["553 Arbor Dr","18 Lacey Ln","23A Ball Ct","2375 Cavallo Blvd","23-1 RR-7","151 Boulder Rd"]},argTypes:{onNext:{action:"next",table:{disable:!0}},onCancel:{action:"cancel",table:{disable:!0}}}};var KBADialog=function KBADialog(_ref){var helptitle=_ref.helptitle,helptext=_ref.helptext,label=_ref.label,placeholder=_ref.placeholder,mode=_ref.mode,step=_ref.step,steps=_ref.steps,choices=_ref.choices,onNext=_ref.onNext,onCancel=_ref.onCancel;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-kba-dialog\n    .mode=","\n    .helptitle=","\n    .helptext=","\n    .label=","\n    .placeholder=","\n    .step=","\n    .steps=","\n    .choices=","\n    @next=","\n    @cancel=","\n  />"])),mode,helptitle,helptext,label,placeholder,step,steps,choices,onNext,onCancel)};KBADialog.parameters=Object.assign({storySource:{source:"({helptitle, helptext, label, placeholder, mode, step, steps, choices, onNext, onCancel}) =>\n  html`<verdocs-kba-dialog\n    .mode=${mode}\n    .helptitle=${helptitle}\n    .helptext=${helptext}\n    .label=${label}\n    .placeholder=${placeholder}\n    .step=${step}\n    .steps=${steps}\n    .choices=${choices}\n    @next=${onNext}\n    @cancel=${onCancel}\n  />`"}},KBADialog.parameters)},"./src/components/dialogs/verdocs-ok-dialog/verdocs-ok-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"OkDialog",(function(){return OkDialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Ok Dialog",component:"verdocs-ok-dialog",args:{showCancel:!0,heading:"Login Error",message:"Login failed. Please check your username and password and try again."},argTypes:{onNext:{action:"next",table:{disable:!0}},onCancel:{action:"cancel",table:{disable:!0}}}};var OkDialog=function OkDialog(_ref){var heading=_ref.heading,message=_ref.message,showCancel=_ref.showCancel,onNext=_ref.onNext,onCancel=_ref.onCancel;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-ok-dialog .heading="," .message="," .showCancel="," @cancel="," @next="," />"])),heading,message,showCancel,onCancel,onNext)};OkDialog.parameters=Object.assign({storySource:{source:"({heading, message, showCancel, onNext, onCancel}) =>\n  html`<verdocs-ok-dialog .heading=${heading} .message=${message} .showCancel=${showCancel} @cancel=${onCancel} @next=${onNext} />`"}},OkDialog.parameters)},"./src/components/dialogs/verdocs-signature-dialog/verdocs-signature-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SignatureDialog",(function(){return SignatureDialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Signature Dialog",component:"verdocs-signature-dialog",args:{name:"Paige Turner"},argTypes:{onNext:{action:"next",table:{disable:!0}},onCancel:{action:"cancel",table:{disable:!0}}}};var SignatureDialog=function SignatureDialog(_ref){var name=_ref.name,onCancel=_ref.onCancel,onNext=_ref.onNext;return Object(lit_html__WEBPACK_IMPORTED_MODULE_3__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-signature-dialog .name="," @cancel="," @next="," />"])),name,onCancel,onNext)};SignatureDialog.parameters=Object.assign({storySource:{source:"({name, onCancel, onNext}) => html`<verdocs-signature-dialog .name=${name} @cancel=${onCancel} @next=${onNext} />`"}},SignatureDialog.parameters)},"./src/components/dialogs/verdocs-upload-dialog/verdocs-upload-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"UploadDialog",(function(){return UploadDialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Upload Dialog",component:"verdocs-upload-dialog",args:{open:!0,message:"Login failed. Please check your username and password and try again."},argTypes:{closed:{action:"closed",table:{disable:!0}}}};var UploadDialog=function UploadDialog(_ref){var message=_ref.message,open=_ref.open,closed=_ref.closed;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-upload-dialog .message="," .open="," @closed="," />"])),message,open,closed)};UploadDialog.parameters=Object.assign({storySource:{source:"({message, open, closed}) => html`<verdocs-upload-dialog .message=${message} .open=${open} @closed=${closed} />`"}},UploadDialog.parameters)},"./src/components/elements/verdocs-contact-picker/verdocs-contact-picker.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ContactPicker",(function(){return ContactPicker}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Envelopes/Contact Picker",component:"verdocs-contact-picker",args:{templateRole:{template_id:"65cbba07-d0ac-4b62-afe3-25d186238938",name:"Recipient 1",full_name:"",email:"",phone:"",type:"signer",sequence:1,message:""},contactSuggestions:[{name:"Me",email:"myuser@nomail.com",phone:"212-555-6664"},{name:"Will Power",email:"will.power@nomail.com",avatar:"https://i.pravatar.cc/48?img=59"},{name:"Paige Turner",email:"paige.turner@nomail.com",phone:"212-555-6664",avatar:"https://i.pravatar.cc/48?img=41"},{name:"Bill Board",phone:"212-555-6664"}]},argTypes:{searchContacts:{action:"searchContacts"},onCancel:{action:"cancel"},onNext:{action:"next"}}};var ContactPicker=function ContactPicker(_ref){var templateRole=_ref.templateRole,contactSuggestions=_ref.contactSuggestions,searchContacts=_ref.searchContacts,onCancel=_ref.onCancel,onNext=_ref.onNext;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-contact-picker .templateRole="," .contactSuggestions="," @searchContacts="," @cancel="," @next="," />"])),templateRole,contactSuggestions,searchContacts,onCancel,onNext)};ContactPicker.parameters=Object.assign({storySource:{source:"({templateRole, contactSuggestions, searchContacts, onCancel, onNext}) =>\n  html`<verdocs-contact-picker .templateRole=${templateRole} .contactSuggestions=${contactSuggestions} @searchContacts=${searchContacts} @cancel=${onCancel} @next=${onNext} />`"}},ContactPicker.parameters)},"./src/components/elements/verdocs-envelope-sidebar/verdocs-envelope-sidebar.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"EnvelopeSidebar",(function(){return EnvelopeSidebar}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Envelopes/Envelope Sidebar",component:"verdocs-envelope-sidebar",args:{envelopeId:"f0fa431d-e3eb-4fd7-b30e-6d95e2e87b38"},argTypes:{envelopeId:{name:"envelopeId"}}};var EnvelopeSidebar=function EnvelopeSidebar(_ref){var envelopeId=_ref.envelopeId;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-envelope-sidebar .envelopeId="," />"])),envelopeId)};EnvelopeSidebar.parameters=Object.assign({storySource:{source:"({envelopeId}) => html`<verdocs-envelope-sidebar .envelopeId=${envelopeId} />`"}},EnvelopeSidebar.parameters)},"./src/components/elements/verdocs-quick-functions/verdocs-quick-functions.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"QuickFunctions",(function(){return QuickFunctions}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Search/Quick Functions",component:"verdocs-quick-functions",args:{options:{title:"Quick Create"}},argTypes:{createTemplate:{action:"createTemplate"},createDocument:{action:"createDocument"}}};var QuickFunctions=function QuickFunctions(_ref){var options=_ref.options,createTemplate=_ref.createTemplate,createDocument=_ref.createDocument;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-quick-functions .options="," @createTemplate="," @createDocument="," tall />"])),options,createTemplate,createDocument)};QuickFunctions.parameters=Object.assign({storySource:{source:"({options, createTemplate, createDocument}) =>\n  html`<verdocs-quick-functions .options=${options} @createTemplate=${createTemplate} @createDocument=${createDocument} tall />`"}},QuickFunctions.parameters)},"./src/components/elements/verdocs-search-activity/verdocs-search-activity.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SearchActivity",(function(){return SearchActivity}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Search/Search Activity",component:"verdocs-search-activity",args:{},argTypes:{type:{defaultValue:"recent"},entrySelected:{action:"entrySelected"}}};var SearchActivity=function SearchActivity(_ref){var type=_ref.type,entrySelected=_ref.entrySelected;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-search-activity .type="," @entrySelected="," tall />"])),type,entrySelected)};SearchActivity.parameters=Object.assign({storySource:{source:"({type, entrySelected}) => html`<verdocs-search-activity .type=${type} @entrySelected=${entrySelected} tall />`"}},SearchActivity.parameters)},"./src/components/elements/verdocs-search-box/verdocs-search-box.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SearchBox",(function(){return SearchBox}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Search/Search Box",component:"verdocs-search-box",args:{type:"all"},argTypes:{searchClicked:{action:"searchClicked"},typeChanged:{action:"typeChanged"},queryChanged:{action:"queryChanged"},type:{type:"string",control:"radio",options:["all","document","template","organization"]}},parameters:{layout:"fullscreen"}};var SearchBox=function SearchBox(_ref){var type=_ref.type,searchClicked=_ref.searchClicked,typeChanged=_ref.typeChanged,queryChanged=_ref.queryChanged;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-search-box .type="," @searchClicked="," @typeChanged="," @queryChanged="," />"])),type,searchClicked,typeChanged,queryChanged)};SearchBox.parameters=Object.assign({storySource:{source:"({type, searchClicked, typeChanged, queryChanged}) =>\n  html`<verdocs-search-box .type=${type} @searchClicked=${searchClicked} @typeChanged=${typeChanged} @queryChanged=${queryChanged} />`"}},SearchBox.parameters)},"./src/components/elements/verdocs-search-tabs/verdocs-search-tabs.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Tabs",(function(){return Tabs}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js");__webpack_exports__.default={title:"Search/Tabs",component:"verdocs-search-tabs",args:{},argTypes:{}};var listener={handleEvent:function handleEvent(e){Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.action)("selected",e)},capture:!0},Tabs=function Tabs(_ref){var options=_ref.options;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-search-tabs .options="," @optionSelected="," tall />"])),options,listener)};Tabs.parameters=Object.assign({storySource:{source:"({options}) => html`<verdocs-search-tabs .options=${options} @optionSelected=${listener} tall />`"}},Tabs.parameters)},"./src/components/embeds/verdocs-auth/verdocs-auth.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Auth",(function(){return Auth}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/Auth",component:"verdocs-auth",args:{visible:!0,logo:"https://verdocs.com/assets/blue-logo.svg"},argTypes:{sdkError:{action:"error",table:{disable:!0}},authenticated:{action:"authenticated",table:{disable:!0}}}};var Auth=function Auth(_ref){var visible=_ref.visible,logo=_ref.logo,authenticated=_ref.authenticated,sdkError=_ref.sdkError;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-auth .visible="," .logo="," @authenticated="," @sdkError="," />"])),visible,logo,authenticated,sdkError)};Auth.parameters=Object.assign({storySource:{source:"({visible, logo, authenticated, sdkError}) => html`<verdocs-auth .visible=${visible} .logo=${logo} @authenticated=${authenticated} @sdkError=${sdkError} />`"}},Auth.parameters)},"./src/components/embeds/verdocs-build/verdocs-build.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Build",(function(){return Build}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/Build",component:"verdocs-build",parameters:{layout:"fullscreen"}};var Build=function Build(_ref){return function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}(_ref),Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-build />"])))};Build.parameters=Object.assign({storySource:{source:"({}) => html`<verdocs-build />`"}},Build.parameters)},"./src/components/embeds/verdocs-preview/verdocs-preview.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Preview",(function(){return Preview}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/Preview",component:"verdocs-preview",args:{templateId:"d2338742-f3a1-465b-8592-806587413cc1"},argTypes:{templateId:{control:{type:"string"}}},parameters:{layout:"fullscreen"}};var Preview=function Preview(_ref){var templateId=_ref.templateId;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-preview .templateId="," />"])),templateId)};Preview.parameters=Object.assign({storySource:{source:"({templateId}) => html`<verdocs-preview .templateId=${templateId} />`"}},Preview.parameters)},"./src/components/embeds/verdocs-search/verdocs-search.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Search",(function(){return Search}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js");__webpack_exports__.default={title:"Embeds/Search",component:"verdocs-search",args:{},argTypes:{}};var listener={handleEvent:function handleEvent(e){Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.action)("selected",e)},capture:!0},Search=function Search(_ref){var options=_ref.options;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-search .options="," @optionSelected="," tall />"])),options,listener)};Search.parameters=Object.assign({storySource:{source:"({options}) => html`<verdocs-search .options=${options} @optionSelected=${listener} tall />`"}},Search.parameters)},"./src/components/embeds/verdocs-send/verdocs-send.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Send",(function(){return Send}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/Send",component:"verdocs-send",args:{templateId:"d2338742-f3a1-465b-8592-806587413cc1"},argTypes:{templateId:{control:{type:"string"}},onSend:{action:"send"}},parameters:{layout:"fullscreen"}};var Send=function Send(_ref){var templateId=_ref.templateId,onSend=_ref.onSend;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-send .templateId="," @send="," />"])),templateId,onSend)};Send.parameters=Object.assign({storySource:{source:"({templateId, onSend}) => html`<verdocs-send .templateId=${templateId} @send=${onSend} />`"}},Send.parameters)},"./src/components/embeds/verdocs-sign/verdocs-sign.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Sign",(function(){return Sign}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,_templateObject2,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}__webpack_exports__.default={title:"Embeds/Sign",component:"verdocs-sign",args:{envelopeId:"f2618253-1123-4842-8f64-70d7cd90b54e",roleId:"Seller",inviteCode:"1d1e86fe92d8bba459167bc136f66b4f"},argTypes:{envelopeId:{name:"envelopeId"},roleId:{name:"roleId"},inviteCode:{name:"inviteCode"}},parameters:{layout:"fullscreen"}};var Sign=function Sign(_ref){var envelopeId=_ref.envelopeId,roleId=_ref.roleId,inviteCode=_ref.inviteCode;return envelopeId&&roleId&&inviteCode?Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose(["<verdocs-sign .envelopeId="," .roleId="," .inviteCode="," />"])),envelopeId,roleId,inviteCode):Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=_taggedTemplateLiteralLoose(['<img src="https://verdocs-public-assets.s3.amazonaws.com/sample-signing-envelope.png" alt="Document sample" />'])))};Sign.parameters=Object.assign({storySource:{source:'({envelopeId, roleId, inviteCode}) =>\n  !envelopeId || !roleId || !inviteCode\n    ? html`<img src="https://verdocs-public-assets.s3.amazonaws.com/sample-signing-envelope.png" alt="Document sample" />`\n    : html`<verdocs-sign .envelopeId=${envelopeId} .roleId=${roleId} .inviteCode=${inviteCode} />`'}},Sign.parameters)},"./src/components/embeds/verdocs-view/verdocs-view.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"View",(function(){return View}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,_templateObject2,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}__webpack_exports__.default={title:"Embeds/View",component:"verdocs-view",args:{envelopeId:""},argTypes:{envelopeId:{name:"envelopeId"}},parameters:{layout:"fullscreen"}};var View=function View(_ref){var envelopeId=_ref.envelopeId;return envelopeId?Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose(["<verdocs-view .envelopeId="," />"])),envelopeId):Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=_taggedTemplateLiteralLoose(['<img src="https://verdocs-public-assets.s3.amazonaws.com/billofsale-signed.png" alt="Signed document sample" style="display: flex; row-gap: 15px; padding: 15px;" />'])))};View.parameters=Object.assign({storySource:{source:'({envelopeId}) =>\n  !envelopeId\n    ? html`<img src="https://verdocs-public-assets.s3.amazonaws.com/billofsale-signed.png" alt="Signed document sample" style="display: flex; row-gap: 15px; padding: 15px;" />`\n    : html`<verdocs-view .envelopeId=${envelopeId} />`'}},View.parameters)},"./src/components/fields/verdocs-field-attachment/verdocs-field-attachment.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attachment",(function(){return Attachment}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Attachment",component:"verdocs-field-attachment",args:{field:{x:0,y:0},disabled:!1},argTypes:{}};var Attachment=function Attachment(_ref){var field=_ref.field,disabled=_ref.disabled;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-attachment .field="," .disabled="," />"])),field,disabled)};Attachment.parameters=Object.assign({storySource:{source:"({field, disabled}) => html`<verdocs-field-attachment .field=${field} .disabled=${disabled} />`"}},Attachment.parameters)},"./src/components/fields/verdocs-field-checkbox/verdocs-field-checkbox.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Checkbox",(function(){return Checkbox}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Checkbox",component:"verdocs-field-checkbox",args:{field:{settings:{x:0,y:0}},option:0,disabled:!1},argTypes:{}};var Checkbox=function Checkbox(_ref){var field=_ref.field,option=_ref.option,disabled=_ref.disabled;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-checkbox .field="," .option="," .disabled="," />"])),field,option,disabled)};Checkbox.parameters=Object.assign({storySource:{source:"({field, option, disabled}) => html`<verdocs-field-checkbox .field=${field} .option=${option} .disabled=${disabled} />`"}},Checkbox.parameters)},"./src/components/fields/verdocs-field-date/verdocs-field-date.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Date",(function(){return Date}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Date",component:"verdocs-field-date",args:{field:{settings:{x:0,y:0}},disabled:!1},argTypes:{}};var Date=function Date(_ref){var field=_ref.field,disabled=_ref.disabled;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['<verdocs-field-date .field="','.disabled" ='," />"])),field,disabled)};Date.parameters=Object.assign({storySource:{source:'({field, disabled}) => html`<verdocs-field-date .field="${field}.disabled" =${disabled} />`'}},Date.parameters)},"./src/components/fields/verdocs-field-dropdown/verdocs-field-dropdown.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Dropdown",(function(){return Dropdown}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Dropdown",component:"verdocs-field-dropdown",args:{field:{settings:{x:0,y:0,options:[{id:"id1",value:"Option 1"}]}}},argTypes:{}};var Dropdown=function Dropdown(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-dropdown .field="," />"])),field)};Dropdown.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-dropdown .field=${field} />`"}},Dropdown.parameters)},"./src/components/fields/verdocs-field-initial/verdocs-field-initial.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Initial",(function(){return Initial}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Initial",component:"verdocs-field-initial",args:{initials:"PT",field:{settings:{x:0,y:0}}},argTypes:{}};var Initial=function Initial(_ref){var initials=_ref.initials,field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-initial .field="," .initials="," />"])),field,initials)};Initial.parameters=Object.assign({storySource:{source:"({initials, field}) => html`<verdocs-field-initial .field=${field} .initials=${initials} />`"}},Initial.parameters)},"./src/components/fields/verdocs-field-payment/verdocs-field-payment.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Payment",(function(){return Payment}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Payment",component:"verdocs-field-payment",args:{field:{settings:{x:0,y:0}}},argTypes:{}};var Payment=function Payment(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-payment .field="," />"])),field)};Payment.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-payment .field=${field} />`"}},Payment.parameters)},"./src/components/fields/verdocs-field-radio-button-group/verdocs-field-radio-button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"RadioButton",(function(){return RadioButton}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Radio Button",component:"verdocs-field-radio-button",args:{field:{settings:{x:0,y:0,checked:!1,name:"radio-1"}}},argTypes:{}};var RadioButton=function RadioButton(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-radio-button .field="," />"])),field)};RadioButton.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-radio-button .field=${field} />`"}},RadioButton.parameters)},"./src/components/fields/verdocs-field-signature/verdocs-field-signature.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Signature",(function(){return Signature}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Signature",component:"verdocs-field-signature",args:{name:"Paige Turner",field:{settings:{x:0,y:0}}},argTypes:{}};var Signature=function Signature(_ref){var name=_ref.name,field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_3__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-signature .name="," .field="," />"])),name,field)};Signature.parameters=Object.assign({storySource:{source:"({name, field}) => html`<verdocs-field-signature .name=${name} .field=${field} />`"}},Signature.parameters)},"./src/components/fields/verdocs-field-textarea/verdocs-field-textarea.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Textarea",(function(){return Textarea}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Textarea",component:"verdocs-field-textarea",args:{field:{settings:{placeholder:"Email address...",x:0,y:0}}},argTypes:{}};var Textarea=function Textarea(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-textarea .field="," />"])),field)};Textarea.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-textarea .field=${field} />`"}},Textarea.parameters)},"./src/components/fields/verdocs-field-textbox/verdocs-field-textbox.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Textbox",(function(){return Textbox}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Textbox",component:"verdocs-field-textbox",args:{field:{settings:{x:0,y:0}},disabled:!1},argTypes:{input:{action:"input",description:"Fired for each character entered in the field. e.target.value will contain the current text value."}}};var Textbox=function Textbox(_ref){var field=_ref.field,disabled=_ref.disabled,input=_ref.input;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-textbox .field="," .disabled="," @input="," />"])),field,disabled,input)};Textbox.parameters=Object.assign({storySource:{source:"({field, disabled, input}) => html`<verdocs-field-textbox .field=${field} .disabled=${disabled} @input=${input} />`"}},Textbox.parameters)},"./src/components/fields/verdocs-field-timestamp/verdocs-field-timestamp.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Timestamp",(function(){return Timestamp}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Timestamp",component:"verdocs-field-timestamp",args:{field:{name:"timestampP1-8",recipient_role:"Recipient 2",envelope_id:"96ccc2e9-1bb8-4be8-9dbd-7113107383ee",page:1,type:"timestamp",required:!0,settings:{x:426.99999999999994,y:493.25,width:64,height:15},validator:null,label:null,prepared:!1,recipients:[]}},argTypes:{}};var Timestamp=function Timestamp(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-timestamp .field="," />"])),field)};Timestamp.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-timestamp .field=${field} />`"}},Timestamp.parameters)},"./src/components/templates/verdocs-template-attachments/verdocs-template-attachments.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attachments",(function(){return Attachments}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,_templateObject2,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}__webpack_exports__.default={title:"Templates/Attachments",component:"verdocs-template-attachments",args:{templateId:"951016b0-c5ef-450d-b628-9a0c5b84b163"},argTypes:{onClose:{action:"close"}}};var Attachments=function Attachments(_ref){var onClose=_ref.onClose,templateId=_ref.templateId;return templateId?Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=_taggedTemplateLiteralLoose(['\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-attachments .templateId='," @close="," />\n        </div>\n      "])),templateId,onClose):Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose(['<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />'])))};Attachments.parameters=Object.assign({storySource:{source:'({onClose, templateId}) =>\n  templateId\n    ? html`\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-attachments .templateId=${templateId} @close=${onClose} />\n        </div>\n      `\n    : html`<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />`'}},Attachments.parameters)},"./src/components/templates/verdocs-template-create/verdocs-template-create.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Create",(function(){return Create}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Templates/Create",component:"verdocs-template-create",args:{},argTypes:{onCancel:{action:"cancel"},onNext:{action:"next"}}};var Create=function Create(_ref){var onCancel=_ref.onCancel,onNext=_ref.onNext;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-create @next="," @cancel="," />"])),onNext,onCancel)};Create.parameters=Object.assign({storySource:{source:"({onCancel, onNext}) => html`<verdocs-template-create @next=${onNext} @cancel=${onCancel} />`"}},Create.parameters)},"./src/components/templates/verdocs-template-field-properties/verdocs-template-field-properties.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"FieldProperties",(function(){return FieldProperties}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,_templateObject2,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}__webpack_exports__.default={title:"Templates/Field Properties",component:"verdocs-template-field-properties",args:{templateId:"d2338742-f3a1-465b-8592-806587413cc1",fieldName:"textboxP1-2"},argTypes:{onClose:{action:"close"}}};var FieldProperties=function FieldProperties(_ref){var onClose=_ref.onClose,templateId=_ref.templateId,fieldName=_ref.fieldName;return templateId?Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=_taggedTemplateLiteralLoose(['\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-field-properties .templateId='," .fieldName="," @close="," />\n        </div>\n      "])),templateId,fieldName,onClose):Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose(['<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />'])))};FieldProperties.parameters=Object.assign({storySource:{source:'({onClose, templateId, fieldName}) =>\n  templateId\n    ? html`\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-field-properties .templateId=${templateId} .fieldName=${fieldName} @close=${onClose} />\n        </div>\n      `\n    : html`<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />`'}},FieldProperties.parameters)},"./src/components/templates/verdocs-template-fields/verdocs-template-fields.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Fields",(function(){return Fields}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Templates/Fields",component:"verdocs-template-fields",args:{templateId:"d2338742-f3a1-465b-8592-806587413cc1"},argTypes:{onCancel:{action:"cancel"},onNext:{action:"next"}},parameters:{layout:"fullscreen"}};var Fields=function Fields(_ref){var templateId=_ref.templateId,onCancel=_ref.onCancel,onNext=_ref.onNext;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['<div style="height: 600px">\n  <verdocs-template-fields .templateId='," @cancel="," @next="," />\n</div>"])),templateId,onCancel,onNext)};Fields.parameters=Object.assign({storySource:{source:'({templateId, onCancel, onNext}) => html`<div style="height: 600px">\n  <verdocs-template-fields .templateId=${templateId} @cancel=${onCancel} @next=${onNext} />\n</div>`'}},Fields.parameters)},"./src/components/templates/verdocs-template-name/verdocs-template-name.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Name",(function(){return Name}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,_templateObject2,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}__webpack_exports__.default={title:"Templates/Name",component:"verdocs-template-name",args:{templateId:"951016b0-c5ef-450d-b628-9a0c5b84b163"},argTypes:{onClose:{action:"close"}}};var Name=function Name(_ref){var onClose=_ref.onClose,templateId=_ref.templateId;return templateId?Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=_taggedTemplateLiteralLoose(['\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-name .templateId='," @close="," />\n        </div>\n      "])),templateId,onClose):Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose(['<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />'])))};Name.parameters=Object.assign({storySource:{source:'({onClose, templateId}) =>\n  templateId\n    ? html`\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-name .templateId=${templateId} @close=${onClose} />\n        </div>\n      `\n    : html`<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />`'}},Name.parameters)},"./src/components/templates/verdocs-template-properties/verdocs-template-properties.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Properties",(function(){return Properties}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Templates/Properties",component:"verdocs-template-properties",args:{templateId:"951016b0-c5ef-450d-b628-9a0c5b84b163"},argTypes:{onCancel:{action:"cancel"},onNext:{action:"next"}}};var Properties=function Properties(_ref){var onCancel=_ref.onCancel,onNext=_ref.onNext,templateId=_ref.templateId;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-properties .templateId="," @cancel="," @next="," />"])),templateId,onCancel,onNext)};Properties.parameters=Object.assign({storySource:{source:"({onCancel, onNext, templateId}) => html`<verdocs-template-properties .templateId=${templateId} @cancel=${onCancel} @next=${onNext} />`"}},Properties.parameters)},"./src/components/templates/verdocs-template-recipients/verdocs-template-recipients.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Recipients",(function(){return Recipients}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Templates/Recipients",component:"verdocs-template-recipients",args:{templateId:"f0678dfe-1d72-4ef7-a2ce-21d12f8c456c"},argTypes:{onSave:{action:"save"},onCancel:{action:"cancel"}}};var Recipients=function Recipients(_ref){var templateId=_ref.templateId,onCancel=_ref.onCancel,onSave=_ref.onSave;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-recipients .templateId="," @cancel="," @save="," />"])),templateId,onCancel,onSave)};Recipients.parameters=Object.assign({storySource:{source:"({templateId, onCancel, onSave}) => html`<verdocs-template-recipients .templateId=${templateId} @cancel=${onCancel} @save=${onSave} />`"}},Recipients.parameters)},"./src/components/templates/verdocs-template-reminders/verdocs-template-reminders.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Reminders",(function(){return Reminders}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,_templateObject2,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}__webpack_exports__.default={title:"Templates/Reminders",component:"verdocs-template-reminders",args:{templateId:"951016b0-c5ef-450d-b628-9a0c5b84b163"},argTypes:{onClose:{action:"close"}}};var Reminders=function Reminders(_ref){var onClose=_ref.onClose,templateId=_ref.templateId;return templateId?Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=_taggedTemplateLiteralLoose(['\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-reminders .templateId='," @close="," />\n        </div>\n      "])),templateId,onClose):Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose(['<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />'])))};Reminders.parameters=Object.assign({storySource:{source:'({onClose, templateId}) =>\n  templateId\n    ? html`\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-reminders .templateId=${templateId} @close=${onClose} />\n        </div>\n      `\n    : html`<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />`'}},Reminders.parameters)},"./src/components/templates/verdocs-template-role-properties/verdocs-template-role-properties.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"RoleProperties",(function(){return RoleProperties}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Templates/Role Properties",component:"verdocs-template-role-properties",args:{templateId:"056b837f-b183-4039-b50a-d68acbf81b67"},argTypes:{onClose:{action:"close"}}};var RoleProperties=function RoleProperties(_ref){var value=_ref.value,onClose=_ref.onClose;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-role-properties .value="," @close="," />"])),value,onClose)};RoleProperties.parameters=Object.assign({storySource:{source:"({value, onClose}) => html`<verdocs-template-role-properties .value=${value} @close=${onClose} />`"}},RoleProperties.parameters)},"./src/components/templates/verdocs-template-sender/verdocs-template-sender.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Sender",(function(){return Sender}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Sender",component:"verdocs-template-sender",args:{templateId:"056b837f-b183-4039-b50a-d68acbf81b67"},argTypes:{onClose:{action:"close"}}};var Sender=function Sender(_ref){var value=_ref.value,onClose=_ref.onClose;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-sender-dialog .value="," @close="," />"])),value,onClose)};Sender.parameters=Object.assign({storySource:{source:"({value, onClose}) => html`<verdocs-template-sender-dialog .value=${value} @close=${onClose} />`"}},Sender.parameters)},"./src/components/templates/verdocs-template-visibillity/verdocs-template-visibility.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Visibility",(function(){return Visibility}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,_templateObject2,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}__webpack_exports__.default={title:"Templates/Visibility",component:"verdocs-template-visibility",args:{templateId:"951016b0-c5ef-450d-b628-9a0c5b84b163"},argTypes:{onClose:{action:"close"}}};var Visibility=function Visibility(_ref){var onClose=_ref.onClose,templateId=_ref.templateId;return templateId?Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=_taggedTemplateLiteralLoose(['\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-visibility .templateId='," @close="," />\n        </div>\n      "])),templateId,onClose):Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose(['<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />'])))};Visibility.parameters=Object.assign({storySource:{source:'({onClose, templateId}) =>\n  templateId\n    ? html`\n        <div style="width: 360px; background: #ffffff; padding: 20px; box-sizing: border-box">\n          <verdocs-template-visibility .templateId=${templateId} @close=${onClose} />\n        </div>\n      `\n    : html`<img src="https://verdocs-public-assets.s3.amazonaws.com/storybook-placeholders/template-name.png" alt="Placeholder" />`'}},Visibility.parameters)},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@pxtrn/storybook-addon-docs-stencil/dist/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,13,14]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*! For license information please see 24.9aa08a9d.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{"./dist/esm/Colors-1b298092.js":function(module,__webpack_exports__,__webpack_require__){"use strict";function getRGBA(roleIndex){switch(roleIndex%10){case 0:return 0===roleIndex?"rgba(255, 193, 7, 0.4)":"rgba(134, 134, 134, 0.3)";case 1:return"rgba(156, 39, 176, .4)";case 2:return"rgba(33, 150, 243, .4)";case 3:return"rgba(220, 231, 117, 0.3)";case 4:return"rgba(121, 134, 203, 0.3)";case 5:return"rgba(77, 182, 172, 0.3)";case 6:return"rgba(255, 202, 165, 0.3)";case 7:return"rgba(2, 247, 190, 0.3)";case 8:return"rgba(255, 138, 101, 0.3)";case 9:return"rgba(82, 255, 79, 0.3)";default:return"rgba(229, 115, 155, 0.3)"}}__webpack_require__.d(__webpack_exports__,"a",(function(){return getRGBA}))},"./dist/esm/utils-2e6beff8.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getRoleIndex})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getFieldId})),__webpack_require__.d(__webpack_exports__,"c",(function(){return fullNameToInitials})),__webpack_require__.d(__webpack_exports__,"d",(function(){return getFieldSettings})),__webpack_require__.d(__webpack_exports__,"e",(function(){return integerSequence})),__webpack_require__.d(__webpack_exports__,"f",(function(){return renderDocumentField})),__webpack_require__.d(__webpack_exports__,"g",(function(){return updateCssTransform}));__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.fill.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.string.match-all.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function rescale(r,n){return r*n}var integerSequence=function integerSequence(start,count){return Array(count).fill(1).map((function(_,index){return index+start}))},fullNameToInitials=function fullNameToInitials(name){return name.split(" ").map((function(word){return word[0]})).join("")},setControlStyles=function setControlStyles(el,field,xScale,yScale,option){var _a,_b,_c,_d,settings=field.setting||field.settings,_settings$x=settings.x,x=void 0===_settings$x?0:_settings$x,_settings$y=settings.y,y=void 0===_settings$y?0:_settings$y,_settings$width=settings.width,width=void 0===_settings$width?function defaultWidth(field){switch(field.type){case"attachment":case"payment":return 24;case"checkbox":case"checkbox_group":case"radio_button_group":return 14;case"signature":case"initial":return 82}return 150}(field):_settings$width,_settings$height=settings.height,height=void 0===_settings$height?function defaultHeight(field){switch(field.type){case"attachment":case"payment":return 24;case"checkbox":case"checkbox_group":case"radio_button_group":return 14;case"signature":case"initial":return 41}return 50}(field):_settings$height,optionSettings=void 0!==option&&settings.options[option]?settings.options[option]:null;optionSettings&&(x=null!==(_a=optionSettings.x)&&void 0!==_a?_a:x,y=null!==(_b=optionSettings.y)&&void 0!==_b?_b:y,width=null!==(_c=optionSettings.width)&&void 0!==_c?_c:width,height=null!==(_d=optionSettings.height)&&void 0!==_d?_d:height),el.style.width=width+"px",el.style.height=height+"px",el.style.position="absolute",el.style.left=rescale(xScale,x)+"px",el.style.bottom=rescale(yScale,y)+"px",el.style.transform="scale("+xScale+", "+yScale+")"},getFieldId=function getFieldId(field){return"verdocs-doc-fld-"+field.name},getFieldOptionId=function getFieldOptionId(field,index){return"verdocs-doc-fld-"+field.name+"-"+index},renderDocumentField=function renderDocumentField(field,docPage,roleIndex,fieldOptions){var _fieldOptions$disable=fieldOptions.disabled,disabled=void 0!==_fieldOptions$disable&&_fieldOptions$disable,_fieldOptions$editabl=fieldOptions.editable,editable=void 0!==_fieldOptions$editabl&&_fieldOptions$editabl,_fieldOptions$draggab=fieldOptions.draggable,draggable=void 0!==_fieldOptions$draggab&&_fieldOptions$draggab,controlsDiv=document.getElementById(docPage.containerId+"-controls");if(controlsDiv)switch(field.type){case"attachment":case"date":case"dropdown":case"initial":case"payment":case"signature":case"timestamp":case"textarea":case"textbox":var id=getFieldId(field),existingField=document.getElementById(id);if(existingField)return void setControlStyles(existingField,field,docPage.xScale,docPage.yScale);var el=document.createElement("verdocs-field-"+field.type);return el.field=field,el.setAttribute("id",id),el.setAttribute("roleIndex",roleIndex),disabled&&el.setAttribute("disabled",!0),editable&&el.setAttribute("editable",!0),draggable&&el.setAttribute("draggable",!0),setControlStyles(el,field,docPage.xScale,docPage.yScale),controlsDiv.appendChild(el),el;case"checkbox_group":(field.settings||field.setting||{}).options.forEach((function(_,checkboxIndex){var id=getFieldOptionId(field,checkboxIndex),existingField=document.getElementById(id);if(!existingField){var cbEl=document.createElement("verdocs-field-checkbox");return cbEl.field=field,cbEl.setAttribute("id",id),cbEl.setAttribute("roleIndex",roleIndex),cbEl.setAttribute("option",checkboxIndex),disabled&&cbEl.setAttribute("disabled",!0),setControlStyles(cbEl,field,docPage.xScale,docPage.yScale,checkboxIndex),controlsDiv.appendChild(cbEl),cbEl}setControlStyles(existingField,field,docPage.xScale,docPage.yScale)}));break;case"radio_button_group":(field.settings||field.setting||{}).options.forEach((function(_,buttonIndex){var id=getFieldOptionId(field,buttonIndex),existingField=document.getElementById(id);if(!existingField){var cbEl=document.createElement("verdocs-field-radio-button");return cbEl.field=field,cbEl.setAttribute("id",id),cbEl.setAttribute("roleIndex",roleIndex),cbEl.setAttribute("option",buttonIndex),disabled&&cbEl.setAttribute("disabled",!0),setControlStyles(cbEl,field,docPage.xScale,docPage.yScale,buttonIndex),controlsDiv.appendChild(cbEl),cbEl}setControlStyles(existingField,field,docPage.xScale,docPage.yScale)}));break;default:return console.log("[PREVIEW] Skipping unsupported field type",field),null}},getRoleIndex=function getRoleIndex(roles,role){return roles.indexOf(role)||0},getFieldSettings=function getFieldSettings(field){return field.setting?field.setting:field.settings?field.settings:{x:0,y:0,required:!1,disabled:!1,result:"",value:""}},updateCssTransform=function updateCssTransform(el,key,value){var components=_toConsumableArray(el.style.transform.matchAll(/(\w+)\(([^)]*)\)/gi));el.style.transform=[components.filter((function(component){return component[1]!==key})).map((function(component){return component[0]})),key+"("+value+")"].join(" ")}},"./dist/esm/verdocs-field-signature_3.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_field_signature",(function(){return VerdocsFieldSignature})),__webpack_require__.d(__webpack_exports__,"verdocs_signature_dialog",(function(){return VerdocsSignatureDialog})),__webpack_require__.d(__webpack_exports__,"verdocs_toolbar_icon",(function(){return VerdocsToolbarIcon}));__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js");var _index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__("./dist/esm/index-f78d163d.js"),_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_27__=__webpack_require__("./dist/esm/Colors-1b298092.js"),_utils_2e6beff8_js__WEBPACK_IMPORTED_MODULE_28__=__webpack_require__("./dist/esm/utils-2e6beff8.js"),_popper_f860750c_js__WEBPACK_IMPORTED_MODULE_29__=__webpack_require__("./dist/esm/popper-f860750c.js");function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(void 0===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}var VerdocsFieldSignature=function(){function VerdocsFieldSignature(hostRef){_classCallCheck(this,VerdocsFieldSignature),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.j)(this,hostRef),this.fieldChange=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.e)(this,"fieldChange",7),this.settingsPress=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.e)(this,"settingsPress",7),this.field=null,this.name="",this.disabled=!1,this.editable=!1,this.moveable=!1,this.roleindex=0,this.tempSignature=""}var _focusField;return _createClass(VerdocsFieldSignature,[{key:"focusField",value:(_focusField=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(_regeneratorRuntime().mark((function _callee(){return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:this.handleShow(),console.log("focused",this);case 2:case"end":return _context.stop()}}),_callee,this)}))),function focusField(){return _focusField.apply(this,arguments)})},{key:"hideDialog",value:function hideDialog(){var _a;null===(_a=this.dialog)||void 0===_a||_a.remove(),this.dialog=null}},{key:"handleAdopt",value:function handleAdopt(e){var _a;console.log("[SIGNATURE] Adopted signature"),this.tempSignature=e.detail,null===(_a=this.fieldChange)||void 0===_a||_a.emit(this.tempSignature),this.hideDialog()}},{key:"handleShow",value:function handleShow(){var _this=this;this.dialog=document.createElement("verdocs-signature-dialog"),this.dialog.setAttribute("name",this.name),this.dialog.setAttribute("roleindex",this.roleindex),this.dialog.addEventListener("cancel",(function(){return _this.hideDialog()})),this.dialog.addEventListener("next",(function(e){return _this.handleAdopt(e)})),document.body.append(this.dialog)}},{key:"render",value:function render(){var _a,_b,_c,_this2=this,settings=Object(_utils_2e6beff8_js__WEBPACK_IMPORTED_MODULE_28__.d)(this.field),value=this.tempSignature||settings.base64,disabled=null!==(_b=null!==(_a=this.disabled)&&void 0!==_a?_a:settings.disabled)&&void 0!==_b&&_b,backgroundColor=this.field.rgba||Object(_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_27__.a)(this.roleindex);return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.b,{class:{required:null===(_c=this.field)||void 0===_c?void 0:_c.required,disabled:disabled},style:{backgroundColor:backgroundColor}},value?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("img",{src:this.tempSignature||settings.base64,alt:"Signature"}):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("button",{onClick:function onClick(){return!disabled&&_this2.handleShow()}},"Signature"),this.editable&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("verdocs-button-panel",{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="20" width="20"><path d="m7.5 18.5-.312-2.667q-.188-.125-.396-.25-.209-.125-.396-.229l-2.479 1.063-2.521-4.334 2.125-1.625q.021-.104.021-.229v-.458q0-.125-.021-.229L1.396 7.917l2.521-4.313 2.5 1.042q.166-.104.375-.229.208-.125.396-.229L7.5 1.5h5l.312 2.688q.188.104.396.229.209.125.396.229l2.479-1.042 2.521 4.313-2.125 1.625v.916l2.125 1.625-2.521 4.334-2.5-1.063q-.166.104-.375.229-.208.125-.396.25L12.5 18.5Zm2.479-5.521q1.229 0 2.104-.875T12.958 10q0-1.229-.875-2.104t-2.104-.875q-1.208 0-2.094.875Q7 8.771 7 10t.885 2.104q.886.875 2.094.875Zm0-1.75q-.5 0-.864-.364Q8.75 10.5 8.75 10t.365-.865q.364-.364.864-.364t.865.364q.364.365.364.865t-.364.865q-.365.364-.865.364ZM10.021 10Zm-.792 6.521h1.542l.25-2.146q.625-.167 1.198-.51.573-.344 1.031-.823l2.021.854.771-1.271-1.771-1.354q.104-.292.156-.615.052-.323.052-.656 0-.292-.052-.604-.052-.313-.135-.646l1.77-1.375-.77-1.271-2.021.875q-.479-.5-1.042-.833-.562-.334-1.187-.5l-.271-2.167H9.208l-.25 2.167q-.625.166-1.187.5-.563.333-1.042.812l-2-.854-.771 1.271 1.73 1.354q-.084.333-.136.656Q5.5 9.708 5.5 10t.052.604q.052.313.136.667l-1.73 1.354.771 1.271 2-.834q.479.459 1.042.792.562.334 1.187.5Z"/></svg>'},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("h6",null,"Field Settings"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("form",null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("verdocs-select-input",{label:"Recipient",options:[{label:"Buyer",value:"Buyer"},{label:"Seller",value:"Seller"}]}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("verdocs-text-input",{label:"Field Name",value:"",placeholder:"Stored field name...",onInput:function onInput(e){return console.log("ipt",e)}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("verdocs-text-input",{label:"Placeholder",value:"",placeholder:"Placeholder text...",onInput:function onInput(e){return console.log("ipt",e)}}))))}}]),VerdocsFieldSignature}();VerdocsFieldSignature.style='verdocs-field-signature{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;width:83px;height:36px;display:block;font-size:11px;position:relative;letter-spacing:0.3px;background-color:transparent;-webkit-transform-origin:bottom left;transform-origin:bottom left;border:1px solid rgba(0, 0, 0, 0.2)}verdocs-field-signature.disabled{opacity:0.5}verdocs-field-signature img{display:block;max-width:100%;max-height:100%}verdocs-field-signature button{-webkit-box-sizing:border-box;box-sizing:border-box;border:none;color:rgba(0, 0, 0, 0.87);font-weight:500;-webkit-transform-origin:0 0;transform-origin:0 0;height:100%;width:100%;background:none;font-size:11px}verdocs-field-signature button.hide{display:none}verdocs-field-signature.required{border:1px solid #cc0000}verdocs-field-signature.focused{-webkit-animation:verdocs-field-pulse 0.75s 2;animation:verdocs-field-pulse 0.75s 2}verdocs-field-signature verdocs-button-panel{top:-3px;left:-2px;opacity:0.5;z-index:1000;cursor:pointer;position:absolute;-webkit-transform:scale(0.6);transform:scale(0.6)}verdocs-field-signature verdocs-button-panel[data-active],verdocs-field-signature verdocs-button-panel:hover{opacity:1}verdocs-field-signature verdocs-button-panel .icon svg{fill:#333333}verdocs-field-signature verdocs-button-panel .icon:hover svg{fill:#000000}';var VerdocsSignatureDialog=function(){function VerdocsSignatureDialog(hostRef){_classCallCheck(this,VerdocsSignatureDialog),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.j)(this,hostRef),this.next=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.e)(this,"next",7),this.cancel=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.e)(this,"cancel",7),this.name="",this.fontLoaded=!1,this.enteredName="",this.mode="type"}return _createClass(VerdocsSignatureDialog,[{key:"componentWillLoad",value:function componentWillLoad(){var _this3=this;this.enteredName=this.name,new FontFace("Dancing Script","url(https://fonts.gstatic.com/s/dancingscript/v19/If2cXTr6YS-zF4S-kcSWSVi_sxjsohD9F50Ruu7BMSo3Sup6hNX6plRP.woff)").load().then((function(font){document.fonts.add(font),_this3.fontLoaded=!0}))}},{key:"componentDidLoad",value:function componentDidLoad(){this.redrawSignature()}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.redrawSignature()}},{key:"redrawSignature",value:function redrawSignature(){if(this.canvasElement){var canvasWidth=this.canvasElement.width,context=this.canvasElement.getContext("2d");context.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);var fontSize=100;do{fontSize-=2,context.font=fontSize+"px Dancing Script"}while(context.measureText(this.enteredName).width>canvasWidth-32);context.textAlign="center",context.textBaseline="middle",context.font=fontSize+"px Dancing Script",context.fillText(this.enteredName,this.canvasElement.width/2,this.canvasElement.height/2)}}},{key:"handleNameChange",value:function handleNameChange(e){this.enteredName=e.target.value}},{key:"handleCancel",value:function handleCancel(e){e.stopPropagation(),e.preventDefault(),this.cancel.emit()}},{key:"handleAdopt",value:function handleAdopt(e){e.stopPropagation(),e.preventDefault();var data=this.canvasElement.toDataURL("image/png");this.next.emit(data)}},{key:"render",value:function render(){var _this4=this;return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.b,{onClick:function onClick(e){return _this4.handleCancel(e)}},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{class:"dialog"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{class:"heading"},"Create Your Signature"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{class:"content"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("verdocs-text-input",{placeholder:"Full Name...",label:"Full Name",value:this.enteredName,onInput:function onInput(e){return _this4.handleNameChange(e)},onClick:function onClick(e){return e.stopPropagation()}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{class:"as-shown"},"As shown on driver's license or govt. ID card."),this.fontLoaded?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("canvas",{ref:function ref(el){return _this4.canvasElement=el}}):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{style:{display:"none"}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{class:"disclaimer"},"By clicking Adopt, I agree that the signature will be the electronic representation of my signature for all purposes when I (or my agent) use them on documents, including legally binding contracts — just the same as a pen-and-paper signature or initial."),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{class:"buttons"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("verdocs-button",{label:"CANCEL",size:"normal",variant:"outline",onClick:function onClick(e){return _this4.handleCancel(e)}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("verdocs-button",{label:"Adopt & Sign",size:"normal",onClick:function onClick(e){return _this4.handleAdopt(e)}})))))}}]),VerdocsSignatureDialog}();VerdocsSignatureDialog.style='verdocs-signature-dialog{font-family:"Barlow", sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box;position:fixed;z-index:10000;top:0;left:0;right:0;bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background:#0000007f}verdocs-signature-dialog .dialog{width:100%;max-width:340px;border-radius:4px;overflow:hidden;-webkit-box-shadow:3px 3px 5px 1px rgba(40, 40, 40, 0.4);box-shadow:3px 3px 5px 1px rgba(40, 40, 40, 0.4);background:#f9f9f9}verdocs-signature-dialog .heading{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;padding:20px 20px 0 20px;line-height:28px;font-size:20px;font-weight:500}verdocs-signature-dialog .content{font-size:14px;padding:20px}verdocs-signature-dialog .buttons{display:-ms-flexbox;display:flex;margin:20px 0 0 0;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:center;align-items:center}verdocs-signature-dialog .buttons verdocs-button{margin-left:16px}verdocs-signature-dialog canvas{background:#ffffff;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0 auto;width:300px;height:79px;max-width:100%;-webkit-box-shadow:0 0 6px 0 #0000001f;box-shadow:0 0 6px 0 #0000001f}verdocs-signature-dialog .disclaimer{text-align:justify;padding:8px 0;font-size:11px;line-height:14px;color:rgba(0, 0, 0, 0.54)}verdocs-signature-dialog .as-shown{font-size:11px;margin:4px 0 20px 4px;color:rgba(0, 0, 0, 0.54)}verdocs-signature-dialog .tabs{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}verdocs-signature-dialog .tabs .tab{padding:8px 15px;cursor:pointer}verdocs-signature-dialog .tabs .tab.active{border-bottom:2px solid #cccccc}verdocs-signature-dialog .tabs .tab:hover{color:#55bc81}';var VerdocsToolbarIcon=function(){function VerdocsToolbarIcon(hostRef){_classCallCheck(this,VerdocsToolbarIcon),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.j)(this,hostRef),this.text="",this.icon="",this.containerId="verdocs-toolbar-icon-"+Math.random().toString(36).substring(2,11)}return _createClass(VerdocsToolbarIcon,[{key:"componentDidLoad",value:function componentDidLoad(){this.popperInstance=Object(_popper_f860750c_js__WEBPACK_IMPORTED_MODULE_29__.a)(this.iconEl,this.tooltip,{})}},{key:"disconnectedCallback",value:function disconnectedCallback(){this.popperInstance&&(this.popperInstance.destroy(),this.popperInstance=null)}},{key:"show",value:function show(){var _a,_b;null===(_a=this.tooltip)||void 0===_a||_a.setAttribute("data-show",""),null===(_b=this.popperInstance)||void 0===_b||_b.update().catch((function(){}))}},{key:"hide",value:function hide(){var _a;null===(_a=this.tooltip)||void 0===_a||_a.removeAttribute("data-show")}},{key:"render",value:function render(){var _this5=this;return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.b,{class:{}},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{"aria-describedby":this.containerId,class:"icon",innerHTML:this.icon,onMouseEnter:function onMouseEnter(){return _this5.show()},onFocus:function onFocus(){return _this5.show()},onMouseLeave:function onMouseLeave(){return _this5.hide()},onBlur:function onBlur(){return _this5.hide()},ref:function ref(el){return _this5.iconEl=el}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{id:this.containerId,role:"tooltip",class:"tooltip","data-popper-placement":"bottom",ref:function ref(el){return _this5.tooltip=el}},this.text,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_26__.h)("div",{"data-popper-arrow":"true",class:"arrow"})))}}]),VerdocsToolbarIcon}();VerdocsToolbarIcon.style='verdocs-toolbar-icon{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;display:inline-block}verdocs-toolbar-icon .icon{display:inline-block;cursor:pointer}verdocs-toolbar-icon .icon svg{fill:#5c6575}verdocs-toolbar-icon .tooltip{display:none;-webkit-box-shadow:0 0 10px 1px #999999;box-shadow:0 0 10px 1px #999999;background:#ffffff;color:#33364b;max-width:240px;font-weight:bold;padding:5px 10px;font-size:13px;position:relative;border-radius:4px;z-index:10000}verdocs-toolbar-icon .tooltip .arrow,verdocs-toolbar-icon .tooltip .arrow::before{position:absolute;width:8px;height:8px;background:inherit}verdocs-toolbar-icon .tooltip .arrow{visibility:hidden;top:-4px}verdocs-toolbar-icon .tooltip .arrow::before{visibility:visible;content:"";-webkit-transform:rotate(45deg);transform:rotate(45deg)}verdocs-toolbar-icon .tooltip[data-show]{display:block}verdocs-toolbar-icon .tooltip[data-popper-placement^=top]>.arrow{bottom:-4px}verdocs-toolbar-icon .tooltip[data-popper-placement^=bottom]>.arrow{top:-4px}verdocs-toolbar-icon .tooltip[data-popper-placement^=left]>.arrow{right:-4px}verdocs-toolbar-icon .tooltip[data-popper-placement^=right]>.arrow{left:-4px}'},"./node_modules/core-js/modules/es.string.match-all.js":function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__("./node_modules/core-js/internals/export.js"),call=__webpack_require__("./node_modules/core-js/internals/function-call.js"),uncurryThis=__webpack_require__("./node_modules/core-js/internals/function-uncurry-this-clause.js"),createIteratorConstructor=__webpack_require__("./node_modules/core-js/internals/iterator-create-constructor.js"),createIterResultObject=__webpack_require__("./node_modules/core-js/internals/create-iter-result-object.js"),requireObjectCoercible=__webpack_require__("./node_modules/core-js/internals/require-object-coercible.js"),toLength=__webpack_require__("./node_modules/core-js/internals/to-length.js"),toString=__webpack_require__("./node_modules/core-js/internals/to-string.js"),anObject=__webpack_require__("./node_modules/core-js/internals/an-object.js"),isNullOrUndefined=__webpack_require__("./node_modules/core-js/internals/is-null-or-undefined.js"),classof=__webpack_require__("./node_modules/core-js/internals/classof-raw.js"),isRegExp=__webpack_require__("./node_modules/core-js/internals/is-regexp.js"),getRegExpFlags=__webpack_require__("./node_modules/core-js/internals/regexp-get-flags.js"),getMethod=__webpack_require__("./node_modules/core-js/internals/get-method.js"),defineBuiltIn=__webpack_require__("./node_modules/core-js/internals/define-built-in.js"),fails=__webpack_require__("./node_modules/core-js/internals/fails.js"),wellKnownSymbol=__webpack_require__("./node_modules/core-js/internals/well-known-symbol.js"),speciesConstructor=__webpack_require__("./node_modules/core-js/internals/species-constructor.js"),advanceStringIndex=__webpack_require__("./node_modules/core-js/internals/advance-string-index.js"),regExpExec=__webpack_require__("./node_modules/core-js/internals/regexp-exec-abstract.js"),InternalStateModule=__webpack_require__("./node_modules/core-js/internals/internal-state.js"),IS_PURE=__webpack_require__("./node_modules/core-js/internals/is-pure.js"),MATCH_ALL=wellKnownSymbol("matchAll"),setInternalState=InternalStateModule.set,getInternalState=InternalStateModule.getterFor("RegExp String Iterator"),RegExpPrototype=RegExp.prototype,$TypeError=TypeError,stringIndexOf=uncurryThis("".indexOf),nativeMatchAll=uncurryThis("".matchAll),WORKS_WITH_NON_GLOBAL_REGEX=!!nativeMatchAll&&!fails((function(){nativeMatchAll("a",/./)})),$RegExpStringIterator=createIteratorConstructor((function RegExpStringIterator(regexp,string,$global,fullUnicode){setInternalState(this,{type:"RegExp String Iterator",regexp:regexp,string:string,global:$global,unicode:fullUnicode,done:!1})}),"RegExp String",(function next(){var state=getInternalState(this);if(state.done)return createIterResultObject(void 0,!0);var R=state.regexp,S=state.string,match=regExpExec(R,S);return null===match?(state.done=!0,createIterResultObject(void 0,!0)):state.global?(""===toString(match[0])&&(R.lastIndex=advanceStringIndex(S,toLength(R.lastIndex),state.unicode)),createIterResultObject(match,!1)):(state.done=!0,createIterResultObject(match,!1))})),$matchAll=function(string){var matcher,$global,fullUnicode,R=anObject(this),S=toString(string),C=speciesConstructor(R,RegExp),flags=toString(getRegExpFlags(R));return matcher=new C(C===RegExp?R.source:R,flags),$global=!!~stringIndexOf(flags,"g"),fullUnicode=!!~stringIndexOf(flags,"u"),matcher.lastIndex=toLength(R.lastIndex),new $RegExpStringIterator(matcher,S,$global,fullUnicode)};$({target:"String",proto:!0,forced:WORKS_WITH_NON_GLOBAL_REGEX},{matchAll:function matchAll(regexp){var flags,S,matcher,rx,O=requireObjectCoercible(this);if(isNullOrUndefined(regexp)){if(WORKS_WITH_NON_GLOBAL_REGEX)return nativeMatchAll(O,regexp)}else{if(isRegExp(regexp)&&(flags=toString(requireObjectCoercible(getRegExpFlags(regexp))),!~stringIndexOf(flags,"g")))throw $TypeError("`.matchAll` does not allow non-global regexes");if(WORKS_WITH_NON_GLOBAL_REGEX)return nativeMatchAll(O,regexp);if(void 0===(matcher=getMethod(regexp,MATCH_ALL))&&IS_PURE&&"RegExp"==classof(regexp)&&(matcher=$matchAll),matcher)return call(matcher,regexp,O)}return S=toString(O),rx=new RegExp(regexp,"g"),IS_PURE?call($matchAll,rx,S):rx[MATCH_ALL](S)}}),IS_PURE||MATCH_ALL in RegExpPrototype||defineBuiltIn(RegExpPrototype,MATCH_ALL,$matchAll)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0B2ZXJkb2NzL2pzLXNkay9VdGlscy9Db2xvcnMuanMiLCJ3ZWJwYWNrOi8vL25vZGVfbW9kdWxlcy9AdmVyZG9jcy9qcy1zZGsvVXRpbHMvRmllbGRzLmpzIiwid2VicGFjazovLy9zcmMvdXRpbHMvdXRpbHMudHMiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtc2lnbmF0dXJlL3ZlcmRvY3MtZmllbGQtc2lnbmF0dXJlLnNjc3MiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtc2lnbmF0dXJlL3ZlcmRvY3MtZmllbGQtc2lnbmF0dXJlLnRzeCIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvZGlhbG9ncy92ZXJkb2NzLXNpZ25hdHVyZS1kaWFsb2cvdmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nLnNjc3MiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2RpYWxvZ3MvdmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nL3ZlcmRvY3Mtc2lnbmF0dXJlLWRpYWxvZy50c3giLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdG9vbGJhci1pY29uL3ZlcmRvY3MtdG9vbGJhci1pY29uLnNjc3MiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdG9vbGJhci1pY29uL3ZlcmRvY3MtdG9vbGJhci1pY29uLnRzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC1hbGwuanMiXSwibmFtZXMiOlsiZ2V0UkdCQSIsInJvbGVJbmRleCIsInJlc2NhbGUiLCJyIiwibiIsImludGVnZXJTZXF1ZW5jZSIsInN0YXJ0IiwiY291bnQiLCJBcnJheSIsImZpbGwiLCJtYXAiLCJfIiwiaW5kZXgiLCJmdWxsTmFtZVRvSW5pdGlhbHMiLCJuYW1lIiwic3BsaXQiLCJ3b3JkIiwiam9pbiIsInNldENvbnRyb2xTdHlsZXMiLCJlbCIsImZpZWxkIiwieFNjYWxlIiwieVNjYWxlIiwib3B0aW9uIiwic2V0dGluZ3MiLCJzZXR0aW5nIiwieCIsInkiLCJ3aWR0aCIsImRlZmF1bHRXaWR0aCIsInR5cGUiLCJoZWlnaHQiLCJkZWZhdWx0SGVpZ2h0Iiwib3B0aW9uU2V0dGluZ3MiLCJ1bmRlZmluZWQiLCJvcHRpb25zIiwic3R5bGUiLCJwb3NpdGlvbiIsImxlZnQiLCJib3R0b20iLCJ0cmFuc2Zvcm0iLCJnZXRGaWVsZElkIiwiZ2V0RmllbGRPcHRpb25JZCIsInJlbmRlckRvY3VtZW50RmllbGQiLCJkb2NQYWdlIiwiZmllbGRPcHRpb25zIiwiZGlzYWJsZWQiLCJlZGl0YWJsZSIsImRyYWdnYWJsZSIsImNvbnRyb2xzRGl2IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNvbnRhaW5lcklkIiwiaWQiLCJleGlzdGluZ0ZpZWxkIiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImFwcGVuZENoaWxkIiwiZm9yRWFjaCIsImNoZWNrYm94SW5kZXgiLCJjYkVsIiwiYnV0dG9uSW5kZXgiLCJjb25zb2xlIiwibG9nIiwiZ2V0Um9sZUluZGV4Iiwicm9sZXMiLCJyb2xlIiwiaW5kZXhPZiIsImdldEZpZWxkU2V0dGluZ3MiLCJyZXF1aXJlZCIsInJlc3VsdCIsInZhbHVlIiwidXBkYXRlQ3NzVHJhbnNmb3JtIiwia2V5IiwiY29tcG9uZW50cyIsIm1hdGNoQWxsIiwiZmlsdGVyIiwiY29tcG9uZW50IiwiVmVyZG9jc0ZpZWxkU2lnbmF0dXJlIiwidGhpcyIsImhhbmRsZVNob3ciLCJoaWRlRGlhbG9nIiwiZGlhbG9nIiwicmVtb3ZlIiwiaGFuZGxlQWRvcHQiLCJlIiwidGVtcFNpZ25hdHVyZSIsImRldGFpbCIsImZpZWxkQ2hhbmdlIiwiZW1pdCIsInJvbGVpbmRleCIsImFkZEV2ZW50TGlzdGVuZXIiLCJib2R5IiwiYXBwZW5kIiwicmVuZGVyIiwiYmFzZTY0IiwiYmFja2dyb3VuZENvbG9yIiwiaCIsIkhvc3QiLCJjbGFzcyIsInNyYyIsImFsdCIsIm9uQ2xpY2siLCJpY29uIiwibGFiZWwiLCJwbGFjZWhvbGRlciIsIm9uSW5wdXQiLCJWZXJkb2NzU2lnbmF0dXJlRGlhbG9nIiwiY29tcG9uZW50V2lsbExvYWQiLCJlbnRlcmVkTmFtZSIsIkZvbnRGYWNlIiwibG9hZCIsInRoZW4iLCJmb250IiwiZm9udHMiLCJhZGQiLCJmb250TG9hZGVkIiwiY29tcG9uZW50RGlkTG9hZCIsInJlZHJhd1NpZ25hdHVyZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsImNhbnZhc0VsZW1lbnQiLCJjYW52YXNXaWR0aCIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwiY2xlYXJSZWN0IiwiZm9udFNpemUiLCJtZWFzdXJlVGV4dCIsInRleHRBbGlnbiIsInRleHRCYXNlbGluZSIsImZpbGxUZXh0IiwiaGFuZGxlTmFtZUNoYW5nZSIsInRhcmdldCIsImhhbmRsZUNhbmNlbCIsInN0b3BQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwiY2FuY2VsIiwiZGF0YSIsInRvRGF0YVVSTCIsIm5leHQiLCJyZWYiLCJkaXNwbGF5Iiwic2l6ZSIsInZhcmlhbnQiLCJWZXJkb2NzVG9vbGJhckljb24iLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHJpbmciLCJwb3BwZXJJbnN0YW5jZSIsImNyZWF0ZVBvcHBlciIsImljb25FbCIsInRvb2x0aXAiLCJkaXNjb25uZWN0ZWRDYWxsYmFjayIsImRlc3Ryb3kiLCJzaG93IiwidXBkYXRlIiwiaGlkZSIsInJlbW92ZUF0dHJpYnV0ZSIsImlubmVySFRNTCIsIm9uTW91c2VFbnRlciIsIm9uRm9jdXMiLCJvbk1vdXNlTGVhdmUiLCJvbkJsdXIiLCJ0ZXh0IiwiJCIsImNhbGwiLCJ1bmN1cnJ5VGhpcyIsImNyZWF0ZUl0ZXJhdG9yQ29uc3RydWN0b3IiLCJjcmVhdGVJdGVyUmVzdWx0T2JqZWN0IiwicmVxdWlyZU9iamVjdENvZXJjaWJsZSIsInRvTGVuZ3RoIiwiYW5PYmplY3QiLCJpc051bGxPclVuZGVmaW5lZCIsImNsYXNzb2YiLCJpc1JlZ0V4cCIsImdldFJlZ0V4cEZsYWdzIiwiZ2V0TWV0aG9kIiwiZGVmaW5lQnVpbHRJbiIsImZhaWxzIiwid2VsbEtub3duU3ltYm9sIiwic3BlY2llc0NvbnN0cnVjdG9yIiwiYWR2YW5jZVN0cmluZ0luZGV4IiwicmVnRXhwRXhlYyIsIkludGVybmFsU3RhdGVNb2R1bGUiLCJJU19QVVJFIiwiTUFUQ0hfQUxMIiwic2V0SW50ZXJuYWxTdGF0ZSIsInNldCIsImdldEludGVybmFsU3RhdGUiLCJnZXR0ZXJGb3IiLCJSRUdFWFBfU1RSSU5HIiwiUmVnRXhwUHJvdG90eXBlIiwiUmVnRXhwIiwicHJvdG90eXBlIiwiJFR5cGVFcnJvciIsIlR5cGVFcnJvciIsInN0cmluZ0luZGV4T2YiLCJuYXRpdmVNYXRjaEFsbCIsIldPUktTX1dJVEhfTk9OX0dMT0JBTF9SRUdFWCIsIiRSZWdFeHBTdHJpbmdJdGVyYXRvciIsIlJlZ0V4cFN0cmluZ0l0ZXJhdG9yIiwicmVnZXhwIiwic3RyaW5nIiwiJGdsb2JhbCIsImZ1bGxVbmljb2RlIiwiZ2xvYmFsIiwidW5pY29kZSIsImRvbmUiLCJzdGF0ZSIsIlIiLCJTIiwibWF0Y2giLCJsYXN0SW5kZXgiLCIkbWF0Y2hBbGwiLCJtYXRjaGVyIiwiQyIsImZsYWdzIiwic291cmNlIiwicHJvdG8iLCJmb3JjZWQiLCJyeCIsIk8iXSwibWFwcGluZ3MiOiI7Z0tBOEJPLFNBQVNBLFFBQVFDLFdBQ3BCLE9BQVFBLFVBQVksSUFDaEIsS0FBSyxFQUNELE9BQXFCLElBQWRBLFVBQWtCLHlCQUEyQiwyQkFDeEQsS0FBSyxFQUNELE1BQU8seUJBQ1gsS0FBSyxFQUNELE1BQU8seUJBQ1gsS0FBSyxFQUNELE1BQU8sMkJBQ1gsS0FBSyxFQUNELE1BQU8sMkJBQ1gsS0FBSyxFQUNELE1BQU8sMEJBQ1gsS0FBSyxFQUNELE1BQU8sMkJB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UUFBVSxJQUFJQyxFQUFFQSxJQUFNdkIsT0FBU2lCLEVBQUVRLE9BQVNSLEVBQUdPLE9BQzdDYixXQUFhUCxjQUFjb0IsTUFBTyxLQUNsQ1osZUFBaUJSLGNBQWNvQixNQUFPLEtBQ3RDRixRQUFRRixVQUFZMUMsU0FBU3VDLEVBQUVHLFdBQ3hCLElBQUliLHNCQUFzQmUsUUFBU0osRUFBR1AsUUFBU0MsWUFDeEQsRUFJQXhDLEVBQUUsQ0FBRWpDLE9BQVEsU0FBVXVGLE9BQU8sRUFBTUMsT0FBUXJCLDZCQUErQixDQUN4RTNILFNBQVUsU0FBU0EsU0FBUzhILFFBQzFCLElBQ0llLE1BQU9OLEVBQUdJLFFBQVNNLEdBRG5CQyxFQUFJcEQsdUJBQXVCMUYsTUFFL0IsR0FBSzZGLGtCQUFrQjZCLFNBU2hCLEdBQUlILDRCQUE2QixPQUFPRCxlQUFld0IsRUFBR3BCLFlBVGpDLENBQzlCLEdBQUkzQixTQUFTMkIsVUFDWGUsTUFBUXRFLFNBQVN1Qix1QkFBdUJNLGVBQWUwQixZQUNqREwsY0FBY29CLE1BQU8sTUFBTSxNQUFNdEIsV0FBVyxpREFFcEQsR0FBSUksNEJBQTZCLE9BQU9ELGVBQWV3QixFQUFHcEIsUUFHMUQsUUFEZ0J2SyxLQURoQm9MLFFBQVV0QyxVQUFVeUIsT0FBUWhCLGFBQ0NELFNBQThCLFVBQW5CWCxRQUFRNEIsVUFBcUJhLFFBQVVELFdBQzNFQyxRQUFTLE9BQU9qRCxLQUFLaUQsUUFBU2IsT0FBUW9CLEVBQzVDLENBR0EsT0FGQVgsRUFBSWhFLFNBQVMyRSxHQUNiRCxHQUFLLElBQUk1QixPQUFPUyxPQUFRLEtBQ2pCakIsUUFBVW5CLEtBQUtnRCxVQUFXTyxHQUFJVixHQUFLVSxHQUFHbkMsV0FBV3lCLEVBQzFELElBR0YxQixTQUFXQyxhQUFhTSxpQkFBbUJkLGNBQWNjLGdCQUFpQk4sVUFBVzRCLFUiLCJmaWxlIjoiMjQuOWFhMDhhOWQuaWZyYW1lLmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2l2ZW4gYSBgcmdiYShyLGcsYixhKWAgc3RyaW5nIHZhbHVlLCByZXR1cm5zIHRoZSBoZXggZXF1aXZhbGVudCwgZHJvcHBpbmcgdGhlIGFscGhhIGNoYW5uZWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRSR0IocmdiYSkge1xuICAgIHZhciByZ2JOdW1iZXJzID0gcmdiYS5yZXBsYWNlKCdyZ2JhKCcsICcnKS5yZXBsYWNlKCcpJywgJycpLnNwbGl0KCcsJyk7XG4gICAgdmFyIHJnYk9iamVjdCA9IHtcbiAgICAgICAgcmVkOiArcmdiTnVtYmVyc1swXSxcbiAgICAgICAgZ3JlZW46ICtyZ2JOdW1iZXJzWzFdLFxuICAgICAgICBibHVlOiArcmdiTnVtYmVyc1syXSxcbiAgICAgICAgYWxwaGE6ICtyZ2JOdW1iZXJzWzNdLFxuICAgIH07XG4gICAgdmFyIGFscGhhID0gMSAtIHJnYk9iamVjdC5hbHBoYTtcbiAgICB2YXIgcmVkID0gTWF0aC5yb3VuZCgocmdiT2JqZWN0LmFscGhhICogKHJnYk9iamVjdC5yZWQgLyAyNTUpICsgYWxwaGEpICogMjU1KTtcbiAgICB2YXIgZ3JlZW4gPSBNYXRoLnJvdW5kKChyZ2JPYmplY3QuYWxwaGEgKiAocmdiT2JqZWN0LmdyZWVuIC8gMjU1KSArIGFscGhhKSAqIDI1NSk7XG4gICAgdmFyIGJsdWUgPSBNYXRoLnJvdW5kKChyZ2JPYmplY3QuYWxwaGEgKiAocmdiT2JqZWN0LmJsdWUgLyAyNTUpICsgYWxwaGEpICogMjU1KTtcbiAgICByZXR1cm4gJyMnICsgcmdiVG9IZXgocmVkKSArIHJnYlRvSGV4KGdyZWVuKSArIHJnYlRvSGV4KGJsdWUpO1xufVxuLyoqXG4gKiBHaXZlbiBhbiBSR0Igc3RyaW5nIHZhbHVlLCByZXR1cm5zIHRoZSBoZXggZXF1aXZhbGVudC5cbiAqL1xuZnVuY3Rpb24gcmdiVG9IZXgocmdiKSB7XG4gICAgdmFyIGhleCA9IHJnYi50b1N0cmluZygxNik7XG4gICAgaWYgKGhleC5sZW5ndGggPCAyKSB7XG4gICAgICAgIHJldHVybiAnMCcgKyBoZXg7XG4gICAgfVxuICAgIHJldHVybiBoZXg7XG59XG4vKipcbiAqIEdpdmVuIGEgc2lnbmVyIHJvbGUgaW5kZXgsIHJldHVybiB0aGUgY29sb3IgY29kZSBmb3IgdGhhdCBzaWduZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRSR0JBKHJvbGVJbmRleCkge1xuICAgIHN3aXRjaCAocm9sZUluZGV4ICUgMTApIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgcmV0dXJuIHJvbGVJbmRleCA9PT0gMCA/ICdyZ2JhKDI1NSwgMTkzLCA3LCAwLjQpJyA6ICdyZ2JhKDEzNCwgMTM0LCAxMzQsIDAuMyknOyAvLyAjRkZFNjlDXG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSgxNTYsIDM5LCAxNzYsIC40KSc7IC8vICcjRTNDM0U5J1xuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoMzMsIDE1MCwgMjQzLCAuNCknOyAvLyAnI0MxRTFGQidcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDIyMCwgMjMxLCAxMTcsIDAuMyknO1xuICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoMTIxLCAxMzQsIDIwMywgMC4zKSc7XG4gICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSg3NywgMTgyLCAxNzIsIDAuMyknO1xuICAgICAgICBjYXNlIDY6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoMjU1LCAyMDIsIDE2NSwgMC4zKSc7XG4gICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSgyLCAyNDcsIDE5MCwgMC4zKSc7XG4gICAgICAgIGNhc2UgODpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSgyNTUsIDEzOCwgMTAxLCAwLjMpJztcbiAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDgyLCAyNTUsIDc5LCAwLjMpJztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSgyMjksIDExNSwgMTU1LCAwLjMpJztcbiAgICB9XG59XG4vKipcbiAqIEdpdmVuIGEgcm9sZSBuYW1lLCByZXR1cm4gYSBjb2xvciBjb2RlIGZvciBpdC4gVGhpcyB3b3JrcyBieSBjb21wdXRpbmcgYSBoYXNoIGNvZGUgc28gdGhlIHNwZWNpZmljIGNvbG9yIHJldHVybmVkXG4gKiBpcyBub3Qgc3BlY2lmaWVkIGV4cGxpY2l0bHksIGJ1dCB3aWxsIGJlIHRoZSBzYW1lIGZvciBldmVyeSBjYWxsIHdpdGggdGhlIHNhbWUgaW5wdXQgdmFsdWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBuYW1lVG9SR0JBKHN0cikge1xuICAgIGlmICghIXN0cikge1xuICAgICAgICB2YXIgdmFsaWROdW0gPSBwYXJzZUludChzdHIuc2xpY2UoLTEpLCAxMCk7XG4gICAgICAgIGlmICghaXNOYU4odmFsaWROdW0pKSB7XG4gICAgICAgICAgICBzdHIgKz0gKHZhbGlkTnVtICogOTkpLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGhhc2ggPSAwO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaGFzaCA9IHN0ci5jaGFyQ29kZUF0KGkpICsgKChoYXNoIDw8IDUpIC0gaGFzaCk7XG4gICAgICAgIH1cbiAgICAgICAgaGFzaCA9IE1hdGgucm91bmQoaGFzaCAvIDEuMyk7XG4gICAgICAgIHZhciBjID0gKGhhc2ggJiAweDAwZmZmZjA4KS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTtcbiAgICAgICAgdmFyIGhleCA9ICcjJyArICcwMDAwMCcuc3Vic3RyaW5nKDAsIDYgLSBjLmxlbmd0aCkgKyBjO1xuICAgICAgICB2YXIgcmVzdWx0ID0gL14jPyhbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KSQvaS5leGVjKGhleCk7XG4gICAgICAgIHZhciBjb2xvciA9IHtcbiAgICAgICAgICAgIHI6IHBhcnNlSW50KHJlc3VsdFsxXSwgMTYpLFxuICAgICAgICAgICAgZzogcGFyc2VJbnQocmVzdWx0WzJdLCAxNiksXG4gICAgICAgICAgICBiOiBwYXJzZUludChyZXN1bHRbM10sIDE2KSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIFwicmdiYShcIi5jb25jYXQoY29sb3IuciwgXCIsIFwiKS5jb25jYXQoY29sb3IuZywgXCIsIFwiKS5jb25jYXQoY29sb3IuYiwgXCIsIDAuMilcIik7XG4gICAgfVxufVxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gb2J0YWluIGEgY29sb3IgY29kZSBnaXZlbiBhIHJvbGUgbmFtZSBnaXZlbiB2YXJpb3VzIHBvc3NpYmxlIGlucHV0cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJvbGVDb2xvcihuYW1lLCByb2xlcywgaW5kZXgpIHtcbiAgICBpZiAoaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIGdldFJHQkEoaW5kZXgpO1xuICAgIH1cbiAgICBlbHNlIGlmIChyb2xlcyAmJiByb2xlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZhciByb2xlSW5kZXggPSByb2xlcy5maW5kSW5kZXgoZnVuY3Rpb24gKHJvbGUpIHsgcmV0dXJuIHJvbGUubmFtZSA9PT0gbmFtZTsgfSk7XG4gICAgICAgIGlmIChyb2xlSW5kZXggPiAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIHJvbGVzW3JvbGVJbmRleF0ucmdiYSB8fCBnZXRSR0JBKHJvbGVJbmRleCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbmFtZVRvUkdCQShuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG5hbWVUb1JHQkEobmFtZSk7XG4gICAgfVxufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGdldFJUb3AoeSwgZmllbGRIZWlnaHQsIGlUZXh0SGVpZ2h0LCB5UmF0aW8pIHtcbiAgICByZXR1cm4gaVRleHRIZWlnaHQgLSAoeSArIGZpZWxkSGVpZ2h0KSAqIHlSYXRpbztcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRSTGVmdCh4LCByYXRpbykge1xuICAgIHJldHVybiB4ICogcmF0aW87XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0UlZhbHVlKHksIHJhdGlvKSB7XG4gICAgcmV0dXJuIHkgKiByYXRpbztcbn1cbmV4cG9ydCBmdW5jdGlvbiBibG9iVG9CYXNlNjQoaW1hZ2UpIHtcbiAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZmlsZVJlYWRlci5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBET01FeGNlcHRpb24oJ1Byb2JsZW0gcmVhZGluZyBibG9iLicpKTtcbiAgICAgICAgfTtcbiAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXNvbHZlKGZpbGVSZWFkZXIucmVzdWx0KTtcbiAgICAgICAgfTtcbiAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGltYWdlKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNjYWxlKHIsIG4pIHtcbiAgICByZXR1cm4gciAqIG47XG59XG4iLCIvLyBUaGVzZSBzaG91bGQgcHJvYmFibHkgYWxsIG1vdmUgdG8gSlMtU0RLXG5pbXBvcnQge3Jlc2NhbGV9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9VdGlscy9GaWVsZHMnO1xuLy8gaW1wb3J0IHtnZXRSR0JBfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvVXRpbHMvQ29sb3JzJztcbmltcG9ydCB7SVRlbXBsYXRlRmllbGR9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9UZW1wbGF0ZXMvVHlwZXMnO1xuaW1wb3J0IHtJRG9jdW1lbnRGaWVsZH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL0VudmVsb3Blcy9UeXBlcyc7XG5pbXBvcnQge0lEb2N1bWVudFBhZ2VJbmZvfSBmcm9tICcuL1R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGludGVnZXJTZXF1ZW5jZSA9IChzdGFydDogbnVtYmVyLCBjb3VudDogbnVtYmVyKTogbnVtYmVyW10gPT5cbiAgQXJyYXkoY291bnQpXG4gICAgLmZpbGwoMSlcbiAgICAubWFwKChfLCBpbmRleCkgPT4gaW5kZXggKyBzdGFydCk7XG5cbmV4cG9ydCBjb25zdCBmdWxsTmFtZVRvSW5pdGlhbHMgPSAobmFtZTogc3RyaW5nKSA9PlxuICBuYW1lXG4gICAgLnNwbGl0KCcgJylcbiAgICAubWFwKHdvcmQgPT4gd29yZFswXSlcbiAgICAuam9pbignJyk7XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0V2lkdGggPSAoZmllbGQ6IElUZW1wbGF0ZUZpZWxkIHwgSURvY3VtZW50RmllbGQpID0+IHtcbiAgc3dpdGNoIChmaWVsZC50eXBlKSB7XG4gICAgY2FzZSAnYXR0YWNobWVudCc6XG4gICAgY2FzZSAncGF5bWVudCc6XG4gICAgICByZXR1cm4gMjQ7XG4gICAgY2FzZSAnY2hlY2tib3gnOlxuICAgIGNhc2UgJ2NoZWNrYm94X2dyb3VwJzpcbiAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOlxuICAgICAgcmV0dXJuIDE0O1xuICAgIGNhc2UgJ3NpZ25hdHVyZSc6XG4gICAgY2FzZSAnaW5pdGlhbCc6XG4gICAgICByZXR1cm4gODI7XG4gIH1cblxuICByZXR1cm4gMTUwO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRIZWlnaHQgPSAoZmllbGQ6IElUZW1wbGF0ZUZpZWxkIHwgSURvY3VtZW50RmllbGQpID0+IHtcbiAgc3dpdGNoIChmaWVsZC50eXBlKSB7XG4gICAgY2FzZSAnYXR0YWNobWVudCc6XG4gICAgY2FzZSAncGF5bWVudCc6XG4gICAgICByZXR1cm4gMjQ7XG4gICAgY2FzZSAnY2hlY2tib3gnOlxuICAgIGNhc2UgJ2NoZWNrYm94X2dyb3VwJzpcbiAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOlxuICAgICAgcmV0dXJuIDE0O1xuICAgIGNhc2UgJ3NpZ25hdHVyZSc6XG4gICAgY2FzZSAnaW5pdGlhbCc6XG4gICAgICByZXR1cm4gNDE7XG4gIH1cblxuICByZXR1cm4gNTA7XG59O1xuXG5leHBvcnQgY29uc3Qgc2V0Q29udHJvbFN0eWxlcyA9IChlbDogSFRNTEVsZW1lbnQsIGZpZWxkOiBJVGVtcGxhdGVGaWVsZCB8IElEb2N1bWVudEZpZWxkLCB4U2NhbGU6IG51bWJlciwgeVNjYWxlOiBudW1iZXIsIG9wdGlvbj86IG51bWJlcikgPT4ge1xuICBjb25zdCBzZXR0aW5ncyA9IChmaWVsZCBhcyBJVGVtcGxhdGVGaWVsZCkuc2V0dGluZyB8fCAoZmllbGQgYXMgSURvY3VtZW50RmllbGQpLnNldHRpbmdzO1xuICBsZXQge3ggPSAwLCB5ID0gMCwgd2lkdGggPSBkZWZhdWx0V2lkdGgoZmllbGQpLCBoZWlnaHQgPSBkZWZhdWx0SGVpZ2h0KGZpZWxkKX0gPSBzZXR0aW5ncztcblxuICBjb25zdCBvcHRpb25TZXR0aW5ncyA9IG9wdGlvbiAhPT0gdW5kZWZpbmVkICYmIHNldHRpbmdzLm9wdGlvbnNbb3B0aW9uXSA/IHNldHRpbmdzLm9wdGlvbnNbb3B0aW9uXSA6IG51bGw7XG4gIGlmIChvcHRpb25TZXR0aW5ncykge1xuICAgIHggPSBvcHRpb25TZXR0aW5ncy54ID8/IHg7XG4gICAgeSA9IG9wdGlvblNldHRpbmdzLnkgPz8geTtcbiAgICB3aWR0aCA9IG9wdGlvblNldHRpbmdzLndpZHRoID8/IHdpZHRoO1xuICAgIGhlaWdodCA9IG9wdGlvblNldHRpbmdzLmhlaWdodCA/PyBoZWlnaHQ7XG4gIH1cblxuICBlbC5zdHlsZS53aWR0aCA9IGAke3dpZHRofXB4YDtcbiAgZWwuc3R5bGUuaGVpZ2h0ID0gYCR7aGVpZ2h0fXB4YDtcbiAgZWwuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICBlbC5zdHlsZS5sZWZ0ID0gYCR7cmVzY2FsZSh4U2NhbGUsIHgpfXB4YDtcbiAgZWwuc3R5bGUuYm90dG9tID0gYCR7cmVzY2FsZSh5U2NhbGUsIHkpfXB4YDtcbiAgZWwuc3R5bGUudHJhbnNmb3JtID0gYHNjYWxlKCR7eFNjYWxlfSwgJHt5U2NhbGV9KWA7XG4gIC8vIGVsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGZpZWxkWydyZ2JhJ10gfHwgZ2V0UkdCQShyb2xlSW5kZXgpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEZpZWxkSWQgPSAoZmllbGQ6IElUZW1wbGF0ZUZpZWxkIHwgSURvY3VtZW50RmllbGQpID0+IHtcbiAgcmV0dXJuIGB2ZXJkb2NzLWRvYy1mbGQtJHtmaWVsZC5uYW1lfWA7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0RmllbGRPcHRpb25JZCA9IChmaWVsZDogSVRlbXBsYXRlRmllbGQgfCBJRG9jdW1lbnRGaWVsZCwgaW5kZXg6IG51bWJlcikgPT4ge1xuICByZXR1cm4gYHZlcmRvY3MtZG9jLWZsZC0ke2ZpZWxkLm5hbWV9LSR7aW5kZXh9YDtcbn07XG5cbmludGVyZmFjZSBJRmllbGRPcHRpb25zIHtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBlZGl0YWJsZT86IGJvb2xlYW47XG4gIGRyYWdnYWJsZT86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCByZW5kZXJEb2N1bWVudEZpZWxkID0gKGZpZWxkOiBJVGVtcGxhdGVGaWVsZCB8IElEb2N1bWVudEZpZWxkLCBkb2NQYWdlOiBJRG9jdW1lbnRQYWdlSW5mbywgcm9sZUluZGV4OiBudW1iZXIsIGZpZWxkT3B0aW9uczogSUZpZWxkT3B0aW9ucykgPT4ge1xuICBjb25zdCB7ZGlzYWJsZWQgPSBmYWxzZSwgZWRpdGFibGUgPSBmYWxzZSwgZHJhZ2dhYmxlID0gZmFsc2V9ID0gZmllbGRPcHRpb25zO1xuICBjb25zdCBjb250cm9sc0RpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRvY1BhZ2UuY29udGFpbmVySWQgKyAnLWNvbnRyb2xzJyk7XG4gIGlmICghY29udHJvbHNEaXYpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBzd2l0Y2ggKGZpZWxkLnR5cGUpIHtcbiAgICBjYXNlICdhdHRhY2htZW50JzpcbiAgICBjYXNlICdkYXRlJzpcbiAgICBjYXNlICdkcm9wZG93bic6XG4gICAgY2FzZSAnaW5pdGlhbCc6XG4gICAgY2FzZSAncGF5bWVudCc6XG4gICAgY2FzZSAnc2lnbmF0dXJlJzpcbiAgICBjYXNlICd0aW1lc3RhbXAnOlxuICAgIGNhc2UgJ3RleHRhcmVhJzpcbiAgICBjYXNlICd0ZXh0Ym94Jzoge1xuICAgICAgY29uc3QgaWQgPSBnZXRGaWVsZElkKGZpZWxkKTtcbiAgICAgIGNvbnN0IGV4aXN0aW5nRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICBpZiAoZXhpc3RpbmdGaWVsZCkge1xuICAgICAgICBzZXRDb250cm9sU3R5bGVzKGV4aXN0aW5nRmllbGQsIGZpZWxkLCBkb2NQYWdlLnhTY2FsZSwgZG9jUGFnZS55U2NhbGUpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGVsOiBhbnkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGB2ZXJkb2NzLWZpZWxkLSR7ZmllbGQudHlwZX1gKTtcbiAgICAgIGVsLmZpZWxkID0gZmllbGQ7XG4gICAgICBlbC5zZXRBdHRyaWJ1dGUoJ2lkJywgaWQpO1xuICAgICAgZWwuc2V0QXR0cmlidXRlKCdyb2xlSW5kZXgnLCByb2xlSW5kZXgpO1xuICAgICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICAgIGVsLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICAgIH1cbiAgICAgIGlmIChlZGl0YWJsZSkge1xuICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoJ2VkaXRhYmxlJywgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBpZiAoZHJhZ2dhYmxlKSB7XG4gICAgICAgIGVsLnNldEF0dHJpYnV0ZSgnZHJhZ2dhYmxlJywgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBzZXRDb250cm9sU3R5bGVzKGVsLCBmaWVsZCwgZG9jUGFnZS54U2NhbGUsIGRvY1BhZ2UueVNjYWxlKTtcbiAgICAgIGNvbnRyb2xzRGl2LmFwcGVuZENoaWxkKGVsKTtcblxuICAgICAgcmV0dXJuIGVsO1xuICAgIH1cblxuICAgIGNhc2UgJ2NoZWNrYm94X2dyb3VwJzpcbiAgICAgICgoZmllbGQgYXMgYW55KS5zZXR0aW5ncyB8fCAoZmllbGQgYXMgYW55KS5zZXR0aW5nIHx8IHt9KS5vcHRpb25zLmZvckVhY2goKF8sIGNoZWNrYm94SW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBnZXRGaWVsZE9wdGlvbklkKGZpZWxkLCBjaGVja2JveEluZGV4KTtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdGaWVsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgICAgICAgaWYgKGV4aXN0aW5nRmllbGQpIHtcbiAgICAgICAgICBzZXRDb250cm9sU3R5bGVzKGV4aXN0aW5nRmllbGQsIGZpZWxkLCBkb2NQYWdlLnhTY2FsZSwgZG9jUGFnZS55U2NhbGUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGNiRWw6IGFueSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYHZlcmRvY3MtZmllbGQtY2hlY2tib3hgKTtcbiAgICAgICAgY2JFbC5maWVsZCA9IGZpZWxkO1xuICAgICAgICBjYkVsLnNldEF0dHJpYnV0ZSgnaWQnLCBpZCk7XG4gICAgICAgIGNiRWwuc2V0QXR0cmlidXRlKCdyb2xlSW5kZXgnLCByb2xlSW5kZXgpO1xuICAgICAgICBjYkVsLnNldEF0dHJpYnV0ZSgnb3B0aW9uJywgY2hlY2tib3hJbmRleCk7XG4gICAgICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgICAgIGNiRWwuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIHNldENvbnRyb2xTdHlsZXMoY2JFbCwgZmllbGQsIGRvY1BhZ2UueFNjYWxlLCBkb2NQYWdlLnlTY2FsZSwgY2hlY2tib3hJbmRleCk7XG4gICAgICAgIGNvbnRyb2xzRGl2LmFwcGVuZENoaWxkKGNiRWwpO1xuXG4gICAgICAgIHJldHVybiBjYkVsO1xuICAgICAgfSk7XG5cbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAncmFkaW9fYnV0dG9uX2dyb3VwJzpcbiAgICAgICgoZmllbGQgYXMgYW55KS5zZXR0aW5ncyB8fCAoZmllbGQgYXMgYW55KS5zZXR0aW5nIHx8IHt9KS5vcHRpb25zLmZvckVhY2goKF8sIGJ1dHRvbkluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IGlkID0gZ2V0RmllbGRPcHRpb25JZChmaWVsZCwgYnV0dG9uSW5kZXgpO1xuICAgICAgICBjb25zdCBleGlzdGluZ0ZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgICAgICBpZiAoZXhpc3RpbmdGaWVsZCkge1xuICAgICAgICAgIHNldENvbnRyb2xTdHlsZXMoZXhpc3RpbmdGaWVsZCwgZmllbGQsIGRvY1BhZ2UueFNjYWxlLCBkb2NQYWdlLnlTY2FsZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY2JFbDogYW55ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgdmVyZG9jcy1maWVsZC1yYWRpby1idXR0b25gKTtcbiAgICAgICAgY2JFbC5maWVsZCA9IGZpZWxkO1xuICAgICAgICBjYkVsLnNldEF0dHJpYnV0ZSgnaWQnLCBpZCk7XG4gICAgICAgIGNiRWwuc2V0QXR0cmlidXRlKCdyb2xlSW5kZXgnLCByb2xlSW5kZXgpO1xuICAgICAgICBjYkVsLnNldEF0dHJpYnV0ZSgnb3B0aW9uJywgYnV0dG9uSW5kZXgpO1xuICAgICAgICBpZiAoZGlzYWJsZWQpIHtcbiAgICAgICAgICBjYkVsLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBzZXRDb250cm9sU3R5bGVzKGNiRWwsIGZpZWxkLCBkb2NQYWdlLnhTY2FsZSwgZG9jUGFnZS55U2NhbGUsIGJ1dHRvbkluZGV4KTtcbiAgICAgICAgY29udHJvbHNEaXYuYXBwZW5kQ2hpbGQoY2JFbCk7XG5cbiAgICAgICAgcmV0dXJuIGNiRWw7XG4gICAgICB9KTtcblxuICAgICAgYnJlYWs7XG5cbiAgICAvLyBjYXNlICdhdHRhY2htZW50JzpcbiAgICAvLyAgIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmVyZG9jcy1maWVsZC1hdHRhY2htZW50Jyk7XG4gICAgLy8gICBlbC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgcmVzdWx0IHx8ICcnKTtcbiAgICAvLyAgIGJyZWFrO1xuICAgIC8vIGNhc2UgJ3BheW1lbnQnOlxuICAgIC8vICAgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd2ZXJkb2NzLWZpZWxkLXBheW1lbnQnKTtcbiAgICAvLyAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBjb25zb2xlLmxvZygnW1BSRVZJRVddIFNraXBwaW5nIHVuc3VwcG9ydGVkIGZpZWxkIHR5cGUnLCBmaWVsZCk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGdldFJvbGVJbmRleCA9IChyb2xlczogc3RyaW5nW10sIHJvbGU6IHN0cmluZykgPT4gcm9sZXMuaW5kZXhPZihyb2xlKSB8fCAwO1xuXG4vLyBUT0RPOiBXZSBjYW4gY2xlYW4gdGhpcyB1cCBhIGxvdCBpZiB3ZSBhbHRlciB0aGUgQVBJIHRvIGVtaXQgYm90aCBzZXR0aW5nIGFuZCBzZXR0aW5ncyByZWdhcmRsZXNzIG9mIHRoZSBzb3VyY2UgdHlwZSxcbi8vICAgYnV0IHRoZW4gbWVyZ2UgdGhlIFNESyB0eXBlcyB0byBlbmNvdXJhZ2UgZGV2ZWxvcGVycyB0byB1c2UganVzdCBgc2V0dGluZ3NgLlxuZXhwb3J0IGNvbnN0IGdldEZpZWxkU2V0dGluZ3MgPSAoZmllbGQ6IElUZW1wbGF0ZUZpZWxkIHwgSURvY3VtZW50RmllbGQpID0+IHtcbiAgaWYgKChmaWVsZCBhcyBJVGVtcGxhdGVGaWVsZCkuc2V0dGluZykge1xuICAgIHJldHVybiAoZmllbGQgYXMgSVRlbXBsYXRlRmllbGQpLnNldHRpbmc7XG4gIH1cblxuICBpZiAoKGZpZWxkIGFzIElEb2N1bWVudEZpZWxkKS5zZXR0aW5ncykge1xuICAgIHJldHVybiAoZmllbGQgYXMgSURvY3VtZW50RmllbGQpLnNldHRpbmdzO1xuICB9XG5cbiAgcmV0dXJuIHt4OiAwLCB5OiAwLCByZXF1aXJlZDogZmFsc2UsIGRpc2FibGVkOiBmYWxzZSwgcmVzdWx0OiAnJywgdmFsdWU6ICcnfTtcbn07XG5cbi8qKlxuICogSGVscGVyIGZ1bmN0aW9uIHRvIHNhZmVseSBzZXQvdXBkYXRlIGNvbXBvbmVudHMgaW4gYSBDU1MgdHJhbnNmb3JtIGF0dHJpYnV0ZS4gVHJhbnNmb3JtIGlzIG5vcm1hbGx5IHNldCBhcyBhIHN0cmluZyBvZlxuICogYG9wZXJhdGlvbjEocGFyYW0pIG9wZXJhdGlvbjIocGFyYW0pIC4uLmAgY29tcG9uZW50cywgd2hpY2ggbWFrZXMgdXBkYXRpbmcgdGhlbSBhIGJpdCBvZiBhIHBhaW4uIFRoaXMgd2lsbCByZW1vdmUgdGhlXG4gKiBzcGVjaWZpZWQgY29tcG9uZW50IGlmIGl0J3MgYWxyZWFkeSBzZXQgYW5kIHJlcGxhY2UgaXQgd2l0aCB0aGUgbmV3IHZhbHVlLCB3aXRob3V0IHRvdWNoaW5nIHRoZSBvdGhlciBjb21wb25lbnRzIHRoYXRcbiAqIG1heSBhbHJlYWR5IGJlIHNldC4gTm90ZSB0aGF0IHRoaXMgb3BlcmF0aW9uIG1vdmVzIHRoZSBjb21wb25lbnQgdG8gdGhlIGVuZCBvZiB0aGUgdHJhbnNmb3JtIGNoYWluIHNvIGl0J3Mgbm90IG1lYW50XG4gKiB0byBiZSB1c2VkIGZvciBvcmRlci1zZW5zaXRpdmUgY29tcG9uZW50cyBlLmcuIHRyYW5zbGF0ZS10aGVuLXJvdGF0ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHVwZGF0ZUNzc1RyYW5zZm9ybSA9IChlbDogSFRNTEVsZW1lbnQsIGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKSA9PiB7XG4gIC8vIGUuZy4gJ3NjYWxlKDEuODc5MDgsIDEuODc5MDgpIHRyYW5zbGF0ZSgwcHgsIDBweCk7J1xuICBjb25zdCBjdXJyZW50VHJhbnNmb3JtID0gZWwuc3R5bGUudHJhbnNmb3JtO1xuICAvLyBlLmcuIFsnc2NhbGUoMS44NzkwOCwgMS44NzkwOCknLCAnc2NhbGUnLCAnMS44NzkwOCwgMS44NzkwOCcsIC4uLl0sIFsgJ3RyYW5zbGF0ZSgwcHgsIDBweCknLCAndHJhbnNsYXRlJywgJzBweCwgMHB4J11dXG4gIGNvbnN0IGNvbXBvbmVudHMgPSBbLi4uY3VycmVudFRyYW5zZm9ybS5tYXRjaEFsbCgvKFxcdyspXFwoKFteKV0qKVxcKS9naSldO1xuICBlbC5zdHlsZS50cmFuc2Zvcm0gPSBbXG4gICAgY29tcG9uZW50cyAvL1xuICAgICAgLmZpbHRlcihjb21wb25lbnQgPT4gY29tcG9uZW50WzFdICE9PSBrZXkpIC8vIFJlbW92ZSB0aGUgZW50cnkgaWYgaXQncyBhbHJlYWR5IHNldFxuICAgICAgLm1hcChjb21wb25lbnQgPT4gY29tcG9uZW50WzBdKSwgLy8gQ29udmVydCBiYWNrIHRoZSByZW1haW5pbmcgZW50cmllc1xuICAgIGAke2tleX0oJHt2YWx1ZX0pYCxcbiAgXS5qb2luKCcgJyk7XG59O1xuIiwiQGltcG9ydCAnLi4vLi4vLi4vdGhlbWUuc2Nzcyc7XG5cbnZlcmRvY3MtZmllbGQtc2lnbmF0dXJlIHtcbiAgZm9udC1mYW1pbHk6ICR2ZXJkb2NzLXByaW1hcnktZm9udDtcbiAgd2lkdGg6IDgzcHg7XG4gIGhlaWdodDogMzZweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZXR0ZXItc3BhY2luZzogMC4zcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b20gbGVmdDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICYuZGlzYWJsZWQge1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgfVxuXG4gIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1heC1oZWlnaHQ6IDEwMCU7XG4gIH1cblxuICBidXR0b24ge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGZvbnQtc2l6ZTogMTFweDtcblxuICAgICYuaGlkZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gICYucmVxdWlyZWQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMDQsIDAsIDApO1xuICB9XG5cbiAgJi5mb2N1c2VkIHtcbiAgICBhbmltYXRpb246IHZlcmRvY3MtZmllbGQtcHVsc2UgMC43NXMgMjtcbiAgfVxuXG4gIHZlcmRvY3MtYnV0dG9uLXBhbmVsIHtcbiAgICB0b3A6IC0zcHg7XG4gICAgbGVmdDogLTJweDtcbiAgICBvcGFjaXR5OiAwLjU7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC42KTtcblxuICAgICZbZGF0YS1hY3RpdmVdLFxuICAgICY6aG92ZXIge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG5cbiAgICAuaWNvbiB7XG4gICAgICBzdmcge1xuICAgICAgICBmaWxsOiAjMzMzMzMzO1xuICAgICAgfVxuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAjMDAwMDAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQge2dldFJHQkF9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9VdGlscy9Db2xvcnMnO1xuaW1wb3J0IHtJVGVtcGxhdGVGaWVsZH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9UeXBlcyc7XG5pbXBvcnQge0lEb2N1bWVudEZpZWxkfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvRW52ZWxvcGVzL1R5cGVzJztcbmltcG9ydCB7Q29tcG9uZW50LCBoLCBIb3N0LCBQcm9wLCBFdmVudCwgRXZlbnRFbWl0dGVyLCBNZXRob2QsIFN0YXRlfSBmcm9tICdAc3RlbmNpbC9jb3JlJztcbmltcG9ydCB7Z2V0RmllbGRTZXR0aW5nc30gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbHMnO1xuXG5jb25zdCBzZXR0aW5nc0ljb24gPVxuICAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjBcIiB3aWR0aD1cIjIwXCI+PHBhdGggZD1cIm03LjUgMTguNS0uMzEyLTIuNjY3cS0uMTg4LS4xMjUtLjM5Ni0uMjUtLjIwOS0uMTI1LS4zOTYtLjIyOWwtMi40NzkgMS4wNjMtMi41MjEtNC4zMzQgMi4xMjUtMS42MjVxLjAyMS0uMTA0LjAyMS0uMjI5di0uNDU4cTAtLjEyNS0uMDIxLS4yMjlMMS4zOTYgNy45MTdsMi41MjEtNC4zMTMgMi41IDEuMDQycS4xNjYtLjEwNC4zNzUtLjIyOS4yMDgtLjEyNS4zOTYtLjIyOUw3LjUgMS41aDVsLjMxMiAyLjY4OHEuMTg4LjEwNC4zOTYuMjI5LjIwOS4xMjUuMzk2LjIyOWwyLjQ3OS0xLjA0MiAyLjUyMSA0LjMxMy0yLjEyNSAxLjYyNXYuOTE2bDIuMTI1IDEuNjI1LTIuNTIxIDQuMzM0LTIuNS0xLjA2M3EtLjE2Ni4xMDQtLjM3NS4yMjktLjIwOC4xMjUtLjM5Ni4yNUwxMi41IDE4LjVabTIuNDc5LTUuNTIxcTEuMjI5IDAgMi4xMDQtLjg3NVQxMi45NTggMTBxMC0xLjIyOS0uODc1LTIuMTA0dC0yLjEwNC0uODc1cS0xLjIwOCAwLTIuMDk0Ljg3NVE3IDguNzcxIDcgMTB0Ljg4NSAyLjEwNHEuODg2Ljg3NSAyLjA5NC44NzVabTAtMS43NXEtLjUgMC0uODY0LS4zNjRROC43NSAxMC41IDguNzUgMTB0LjM2NS0uODY1cS4zNjQtLjM2NC44NjQtLjM2NHQuODY1LjM2NHEuMzY0LjM2NS4zNjQuODY1dC0uMzY0Ljg2NXEtLjM2NS4zNjQtLjg2NS4zNjRaTTEwLjAyMSAxMFptLS43OTIgNi41MjFoMS41NDJsLjI1LTIuMTQ2cS42MjUtLjE2NyAxLjE5OC0uNTEuNTczLS4zNDQgMS4wMzEtLjgyM2wyLjAyMS44NTQuNzcxLTEuMjcxLTEuNzcxLTEuMzU0cS4xMDQtLjI5Mi4xNTYtLjYxNS4wNTItLjMyMy4wNTItLjY1NiAwLS4yOTItLjA1Mi0uNjA0LS4wNTItLjMxMy0uMTM1LS42NDZsMS43Ny0xLjM3NS0uNzctMS4yNzEtMi4wMjEuODc1cS0uNDc5LS41LTEuMDQyLS44MzMtLjU2Mi0uMzM0LTEuMTg3LS41bC0uMjcxLTIuMTY3SDkuMjA4bC0uMjUgMi4xNjdxLS42MjUuMTY2LTEuMTg3LjUtLjU2My4zMzMtMS4wNDIuODEybC0yLS44NTQtLjc3MSAxLjI3MSAxLjczIDEuMzU0cS0uMDg0LjMzMy0uMTM2LjY1NlE1LjUgOS43MDggNS41IDEwdC4wNTIuNjA0cS4wNTIuMzEzLjEzNi42NjdsLTEuNzMgMS4zNTQuNzcxIDEuMjcxIDItLjgzNHEuNDc5LjQ1OSAxLjA0Mi43OTIuNTYyLjMzNCAxLjE4Ny41WlwiLz48L3N2Zz4nO1xuXG4vKipcbiAqIERpc3BsYXlzIGEgc2lnbmF0dXJlIGZpZWxkLiBJZiBhIHNpZ25hdHVyZSBhbHJlYWR5IGV4aXN0cywgaXQgd2lsbCBiZSBkaXNwbGF5ZWQgYW5kIHRoZSBmaWVsZCB3aWxsIGJlIGRpc2FibGVkLiBPdGhlcndpc2UsIGEgcGxhY2Vob2xkZXJcbiAqIGJ1dHRvbiB3aWxsIGJlIHNob3duLiBDbGlja2luZyB0aGUgYnV0dG9uIHdpbGwgc2hvdyBhIGRpYWxvZyB0byBhZG9wdCBhIHNpZ25hdHVyZS5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHRhZzogJ3ZlcmRvY3MtZmllbGQtc2lnbmF0dXJlJyxcbiAgc3R5bGVVcmw6ICd2ZXJkb2NzLWZpZWxkLXNpZ25hdHVyZS5zY3NzJyxcbiAgc2hhZG93OiBmYWxzZSxcbn0pXG5leHBvcnQgY2xhc3MgVmVyZG9jc0ZpZWxkU2lnbmF0dXJlIHtcbiAgLyoqXG4gICAqIFRoZSBkb2N1bWVudCBvciB0ZW1wbGF0ZSBmaWVsZCB0byBkaXNwbGF5LlxuICAgKi9cbiAgQFByb3AoKSBmaWVsZDogSURvY3VtZW50RmllbGQgfCBJVGVtcGxhdGVGaWVsZCB8IG51bGwgPSBudWxsO1xuXG4gIC8qKlxuICAgKiBJZiBzZXQsIHRoZSBzaWduYXR1cmUgY3JlYXRpb24gZGlhbG9nIHdpbGwgYmUgaW5pdGlhbGl6ZWQgd2l0aCB0aGlzIHRleHQuXG4gICAqL1xuICBAUHJvcCgpIG5hbWU/OiBzdHJpbmcgPSAnJztcblxuICAvKipcbiAgICogSWYgc2V0LCBvdmVycmlkZXMgdGhlIGZpZWxkJ3Mgc2V0dGluZ3Mgb2JqZWN0LiBQcmltYXJpbHkgdXNlZCB0byBzdXBwb3J0IFwicHJldmlld1wiIG1vZGVzIHdoZXJlIGFsbCBmaWVsZHMgYXJlIGRpc2FibGVkLlxuICAgKi9cbiAgQFByb3AoKSBkaXNhYmxlZD86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogSWYgc2V0LCBhIHNldHRpbmdzIGljb24gd2lsbCBiZSBkaXNwbGF5ZWQgb24gaG92ZXIuIFRoZSBzZXR0aW5ncyBzaG93biBhbGxvdyB0aGUgZmllbGQncyByZWNpcGllbnQgYW5kIG90aGVyIHNldHRpbmdzIHRvIGJlXG4gICAqIGNoYW5nZWQsIHNvIGl0IHNob3VsZCB0eXBpY2FsbHkgb25seSBiZSBlbmFibGVkIGluIHRoZSBCdWlsZGVyLlxuICAgKi9cbiAgQFByb3AoKSBlZGl0YWJsZT86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogSWYgc2V0LCB0aGUgZmllbGQgbWF5IGJlIGRyYWdnZWQgdG8gYSBuZXcgbG9jYXRpb24uIFRoaXMgc2hvdWxkIG9ubHkgYmUgZW5hYmxlZCBpbiB0aGUgQnVpbGRlciwgb3IgZm9yIHNlbGYtcGxhY2VkIGZpZWxkcy5cbiAgICovXG4gIEBQcm9wKCkgbW92ZWFibGU/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIElmIHNldCwgdGhlIGZpZWxkIHdpbGwgYmUgY29sb3JlZCB1c2luZyB0aGlzIGluZGV4IHZhbHVlIHRvIHNlbGVjdCB0aGUgYmFja2dyb3VuZCBjb2xvci5cbiAgICovXG4gIEBQcm9wKCkgcm9sZWluZGV4PzogbnVtYmVyID0gMDtcblxuICAvKipcbiAgICogRXZlbnQgZW1pdHRlZCB3aGVuIHRoZSBmaWVsZCBoYXMgY2hhbmdlZC5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBmaWVsZENoYW5nZTogRXZlbnRFbWl0dGVyPHN0cmluZz47XG5cbiAgLyoqXG4gICAqIEV2ZW50IGZpcmVkIG9uIGV2ZXJ5IGNoYXJhY3RlciBlbnRlcmVkIGludG8gLyBkZWxldGVkIGZyb20gdGhlIGZpZWxkLlxuICAgKi9cbiAgQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIHNldHRpbmdzUHJlc3M6IEV2ZW50RW1pdHRlcjtcblxuICBATWV0aG9kKCkgYXN5bmMgZm9jdXNGaWVsZCgpIHtcbiAgICB0aGlzLmhhbmRsZVNob3coKTtcbiAgICBjb25zb2xlLmxvZygnZm9jdXNlZCcsIHRoaXMpO1xuICB9XG5cbiAgQFN0YXRlKClcbiAgdGVtcFNpZ25hdHVyZTogc3RyaW5nID0gJyc7XG5cbiAgcHJpdmF0ZSBkaWFsb2c/OiBhbnk7XG5cbiAgaGlkZURpYWxvZygpIHtcbiAgICB0aGlzLmRpYWxvZz8ucmVtb3ZlKCk7XG4gICAgdGhpcy5kaWFsb2cgPSBudWxsO1xuICB9XG5cbiAgaGFuZGxlQWRvcHQoZTogYW55KSB7XG4gICAgY29uc29sZS5sb2coJ1tTSUdOQVRVUkVdIEFkb3B0ZWQgc2lnbmF0dXJlJyk7XG4gICAgdGhpcy50ZW1wU2lnbmF0dXJlID0gZS5kZXRhaWw7XG4gICAgdGhpcy5maWVsZENoYW5nZT8uZW1pdCh0aGlzLnRlbXBTaWduYXR1cmUpO1xuICAgIHRoaXMuaGlkZURpYWxvZygpO1xuICB9XG5cbiAgaGFuZGxlU2hvdygpIHtcbiAgICB0aGlzLmRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZlcmRvY3Mtc2lnbmF0dXJlLWRpYWxvZycpO1xuICAgIHRoaXMuZGlhbG9nLnNldEF0dHJpYnV0ZSgnbmFtZScsIHRoaXMubmFtZSk7XG4gICAgdGhpcy5kaWFsb2cuc2V0QXR0cmlidXRlKCdyb2xlaW5kZXgnLCB0aGlzLnJvbGVpbmRleCk7XG4gICAgdGhpcy5kaWFsb2cuYWRkRXZlbnRMaXN0ZW5lcignY2FuY2VsJywgKCkgPT4gdGhpcy5oaWRlRGlhbG9nKCkpO1xuICAgIHRoaXMuZGlhbG9nLmFkZEV2ZW50TGlzdGVuZXIoJ25leHQnLCBlID0+IHRoaXMuaGFuZGxlQWRvcHQoZSkpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kKHRoaXMuZGlhbG9nKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBzZXR0aW5ncyA9IGdldEZpZWxkU2V0dGluZ3ModGhpcy5maWVsZCk7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLnRlbXBTaWduYXR1cmUgfHwgc2V0dGluZ3MuYmFzZTY0O1xuICAgIGNvbnN0IGRpc2FibGVkID0gdGhpcy5kaXNhYmxlZCA/PyBzZXR0aW5ncy5kaXNhYmxlZCA/PyBmYWxzZTtcbiAgICBjb25zdCBiYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLmZpZWxkWydyZ2JhJ10gfHwgZ2V0UkdCQSh0aGlzLnJvbGVpbmRleCk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPEhvc3QgY2xhc3M9e3tyZXF1aXJlZDogdGhpcy5maWVsZD8ucmVxdWlyZWQsIGRpc2FibGVkfX0gc3R5bGU9e3tiYWNrZ3JvdW5kQ29sb3J9fT5cbiAgICAgICAge3ZhbHVlID8gPGltZyBzcmM9e3RoaXMudGVtcFNpZ25hdHVyZSB8fCBzZXR0aW5ncy5iYXNlNjR9IGFsdD1cIlNpZ25hdHVyZVwiIC8+IDogPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiAhZGlzYWJsZWQgJiYgdGhpcy5oYW5kbGVTaG93KCl9PlNpZ25hdHVyZTwvYnV0dG9uPn1cblxuICAgICAgICB7dGhpcy5lZGl0YWJsZSAmJiAoXG4gICAgICAgICAgPHZlcmRvY3MtYnV0dG9uLXBhbmVsIGljb249e3NldHRpbmdzSWNvbn0+XG4gICAgICAgICAgICA8aDY+RmllbGQgU2V0dGluZ3M8L2g2PlxuICAgICAgICAgICAgPGZvcm0+XG4gICAgICAgICAgICAgIDx2ZXJkb2NzLXNlbGVjdC1pbnB1dFxuICAgICAgICAgICAgICAgIGxhYmVsPVwiUmVjaXBpZW50XCJcbiAgICAgICAgICAgICAgICBvcHRpb25zPXtbXG4gICAgICAgICAgICAgICAgICB7bGFiZWw6ICdCdXllcicsIHZhbHVlOiAnQnV5ZXInfSxcbiAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ1NlbGxlcicsIHZhbHVlOiAnU2VsbGVyJ30sXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgICA8dmVyZG9jcy10ZXh0LWlucHV0IGxhYmVsPVwiRmllbGQgTmFtZVwiIHZhbHVlPVwiXCIgcGxhY2Vob2xkZXI9XCJTdG9yZWQgZmllbGQgbmFtZS4uLlwiIG9uSW5wdXQ9e2UgPT4gY29uc29sZS5sb2coJ2lwdCcsIGUpfSAvPlxuICAgICAgICAgICAgICA8dmVyZG9jcy10ZXh0LWlucHV0IGxhYmVsPVwiUGxhY2Vob2xkZXJcIiB2YWx1ZT1cIlwiIHBsYWNlaG9sZGVyPVwiUGxhY2Vob2xkZXIgdGV4dC4uLlwiIG9uSW5wdXQ9e2UgPT4gY29uc29sZS5sb2coJ2lwdCcsIGUpfSAvPlxuICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgIDwvdmVyZG9jcy1idXR0b24tcGFuZWw+XG4gICAgICAgICl9XG4gICAgICA8L0hvc3Q+XG4gICAgKTtcbiAgfVxufVxuIiwiQGltcG9ydCAnLi4vLi4vLi4vdGhlbWUuc2Nzcyc7XG5cbnZlcmRvY3Mtc2lnbmF0dXJlLWRpYWxvZyB7XG4gIGZvbnQtZmFtaWx5OiAkcHJpbWFyeS1mb250O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDAwO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiAjMDAwMDAwN2Y7XG5cbiAgLmRpYWxvZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAzNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBib3gtc2hhZG93OiAzcHggM3B4IDVweCAxcHggcmdiYSg0MCwgNDAsIDQwLCAwLjQpO1xuICAgIGJhY2tncm91bmQ6ICRkaWFsb2ctYmc7XG4gIH1cblxuICAuaGVhZGluZyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIHBhZGRpbmc6IDIwcHggMjBweCAwIDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cblxuICAuY29udGVudCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gIH1cblxuICAuYnV0dG9ucyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW46IDIwcHggMCAwIDA7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICB2ZXJkb2NzLWJ1dHRvbiB7XG4gICAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICB9XG4gIH1cblxuICBjYW52YXMge1xuICAgIGJhY2tncm91bmQ6ICR2ZXJkb2NzLWdyZXktNDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICAvLyBUT0RPOiBUaGUgb3JpZ2luYWwgYXBwIGhhZCBhbiBhc3BlY3QgcmF0aW8gb2YgKDgwIC8gMzA1KSAqIChzaWduYXR1cmVCb2R5V2lkdGggLSAyMClcbiAgICBoZWlnaHQ6IDc5cHg7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGJveC1zaGFkb3c6IDAgMCA2cHggMCAjMDAwMDAwMWY7XG4gIH1cblxuICAuZGlzY2xhaW1lciB7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICBwYWRkaW5nOiA4cHggMDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gIH1cblxuICAuYXMtc2hvd24ge1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBtYXJnaW46IDRweCAwIDIwcHggNHB4O1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpO1xuICB9XG5cbiAgLnRhYnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcblxuICAgIC50YWIge1xuICAgICAgcGFkZGluZzogOHB4IDE1cHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRsaWdodC1ib3JkZXItY29sb3I7XG4gICAgICB9XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogJHByaW1hcnktY29sb3I7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQge0NvbXBvbmVudCwgUHJvcCwgaCwgRXZlbnQsIEV2ZW50RW1pdHRlciwgU3RhdGUsIEhvc3R9IGZyb20gJ0BzdGVuY2lsL2NvcmUnO1xuXG4vKipcbiAqIERpc3BsYXkgYSBkaWFsb2cgdGhhdCBhbGxvd3MgdGhlIHVzZXIgdG8gc3BlY2lmeSBhIHNpZ25hdHVyZSBpbWFnZSwgZWl0aGVyIGJ5IHVzaW5nIGEgc2lnbmF0dXJlLWZvbnQtZ2VuZXJhdGVkIGltYWdlXG4gKiBiYXNlZCBvbiB0aGVpciBmdWxsIG5hbWUsIG9yIGJ5IGhhbmQtZHJhd2luZyB0aGVpciBzaWduYXR1cmUgd2l0aCBhIG1vdXNlIG9yIHRhYmxldC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHRhZzogJ3ZlcmRvY3Mtc2lnbmF0dXJlLWRpYWxvZycsXG4gIHN0eWxlVXJsOiAndmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nLnNjc3MnLFxufSlcbmV4cG9ydCBjbGFzcyBWZXJkb2NzU2lnbmF0dXJlRGlhbG9nIHtcbiAgcHJpdmF0ZSBjYW52YXNFbGVtZW50PzogSFRNTENhbnZhc0VsZW1lbnQ7XG5cbiAgLyoqXG4gICAqIEluaXRpYWwgc2lnbmF0dXJlIHRleHRcbiAgICovXG4gIEBQcm9wKCkgbmFtZTogc3RyaW5nID0gJyc7XG5cbiAgLyoqXG4gICAqIEZpcmVkIHdoZW4gdGhlIHVzZXIgY29tcGxldGVzIHRoZSBkaWFsb2cgYW5kIGNsaWNrcyBBZG9wdC4gVGhlIGV2ZW50IGRldGFpbCB3aWxsIGNvbnRhaW4gYSBiYXNlNjQtZW5jb2RlZCBzdHJpbmdcbiAgICogcmVwcmVzZW50YXRpb24gb2YgdGhlIHNpZ25hdHVyZSBhZG9wdGVkLlxuICAgKi9cbiAgQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIG5leHQ6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuXG4gIC8qKlxuICAgKiBGaXJlZCBpZiB0aGUgdXNlciBjYW5jZWxzIHRoZSBkaWFsb2cuXG4gICAqL1xuICBARXZlbnQoe2NvbXBvc2VkOiB0cnVlfSkgY2FuY2VsOiBFdmVudEVtaXR0ZXI7XG5cbiAgQFN0YXRlKCkgZm9udExvYWRlZCA9IGZhbHNlO1xuXG4gIEBTdGF0ZSgpIGVudGVyZWROYW1lOiBzdHJpbmcgPSAnJztcblxuICBAU3RhdGUoKSBtb2RlOiBzdHJpbmcgPSAndHlwZSc7XG5cbiAgY29tcG9uZW50V2lsbExvYWQoKSB7XG4gICAgdGhpcy5lbnRlcmVkTmFtZSA9IHRoaXMubmFtZTtcblxuICAgIGNvbnN0IGRzID0gbmV3IEZvbnRGYWNlKCdEYW5jaW5nIFNjcmlwdCcsICd1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2RhbmNpbmdzY3JpcHQvdjE5L0lmMmNYVHI2WVMtekY0Uy1rY1NXU1ZpX3N4anNvaEQ5RjUwUnV1N0JNU28zU3VwNmhOWDZwbFJQLndvZmYpJyk7XG4gICAgZHMubG9hZCgpLnRoZW4oZm9udCA9PiB7XG4gICAgICBkb2N1bWVudC5mb250cy5hZGQoZm9udCk7XG4gICAgICB0aGlzLmZvbnRMb2FkZWQgPSB0cnVlO1xuICAgIH0pO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTG9hZCgpIHtcbiAgICB0aGlzLnJlZHJhd1NpZ25hdHVyZSgpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIHRoaXMucmVkcmF3U2lnbmF0dXJlKCk7XG4gIH1cblxuICByZWRyYXdTaWduYXR1cmUoKSB7XG4gICAgaWYgKCF0aGlzLmNhbnZhc0VsZW1lbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBjYW52YXNXaWR0aCA9IHRoaXMuY2FudmFzRWxlbWVudC53aWR0aDtcblxuICAgIGNvbnN0IGNvbnRleHQgPSB0aGlzLmNhbnZhc0VsZW1lbnQuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICBjb250ZXh0LmNsZWFyUmVjdCgwLCAwLCB0aGlzLmNhbnZhc0VsZW1lbnQud2lkdGgsIHRoaXMuY2FudmFzRWxlbWVudC5oZWlnaHQpO1xuXG4gICAgbGV0IGZvbnRTaXplID0gMTAwO1xuICAgIGRvIHtcbiAgICAgIGZvbnRTaXplIC09IDI7XG4gICAgICBjb250ZXh0LmZvbnQgPSBgJHtmb250U2l6ZX1weCBEYW5jaW5nIFNjcmlwdGA7XG4gICAgfSB3aGlsZSAoY29udGV4dC5tZWFzdXJlVGV4dCh0aGlzLmVudGVyZWROYW1lKS53aWR0aCA+IGNhbnZhc1dpZHRoIC0gMzIpOyAvLyAzMnB4IHBhZGRpbmcgZWFjaCBzaWRlXG5cbiAgICBjb250ZXh0LnRleHRBbGlnbiA9ICdjZW50ZXInO1xuICAgIGNvbnRleHQudGV4dEJhc2VsaW5lID0gJ21pZGRsZSc7XG4gICAgY29udGV4dC5mb250ID0gYCR7Zm9udFNpemV9cHggRGFuY2luZyBTY3JpcHRgO1xuICAgIGNvbnRleHQuZmlsbFRleHQodGhpcy5lbnRlcmVkTmFtZSwgdGhpcy5jYW52YXNFbGVtZW50LndpZHRoIC8gMiwgdGhpcy5jYW52YXNFbGVtZW50LmhlaWdodCAvIDIpO1xuICB9XG5cbiAgaGFuZGxlTmFtZUNoYW5nZShlOiBhbnkpIHtcbiAgICB0aGlzLmVudGVyZWROYW1lID0gZS50YXJnZXQudmFsdWU7XG4gIH1cblxuICBoYW5kbGVDYW5jZWwoZTogYW55KSB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5jYW5jZWwuZW1pdCgpO1xuICB9XG5cbiAgaGFuZGxlQWRvcHQoZTogYW55KSB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgZGF0YSA9IHRoaXMuY2FudmFzRWxlbWVudC50b0RhdGFVUkwoJ2ltYWdlL3BuZycpO1xuICAgIHRoaXMubmV4dC5lbWl0KGRhdGEpO1xuICB9XG5cbiAgLypcbiAgc2VsQ29sb3IoaGV4OiBzdHJpbmcpIHtcbiAgICB0aGlzLmNvbG9yID0gaGV4O1xuICAgIHRoaXMuYW5pbWF0ZURyYXcoKTtcbiAgfVxuXG4gIHN0b3BEcmF3KCkge1xuICAgIHRoaXMucGFpbnQgPSBmYWxzZTtcbiAgICB0aGlzLmFkb3B0ZWRBbmRTaWduZWQgPSAhdGhpcy5oYXNTaWduYXR1cmUoKTtcbiAgfVxuXG4gIGRyYXcoZSkge1xuICAgIHRoaXMucGFpbnQgPSB0cnVlO1xuICAgIHRoaXMuYWRkUG9pbnRzKGUsIGZhbHNlKTtcbiAgICB0aGlzLmFuaW1hdGVEcmF3KCk7XG4gIH1cblxuICByZWNvcmRQb2ludHMoZSkge1xuICAgIGlmICh0aGlzLnBhaW50KSB7XG4gICAgICB0aGlzLmFkZFBvaW50cyhlLCB0cnVlKTtcbiAgICAgIHRoaXMuYW5pbWF0ZURyYXcoKTtcbiAgICB9XG4gIH1cblxuICBhbmltYXRlRHJhdygpIHtcbiAgICB0aGlzLmNhbnZhcy5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXMuY2FudmFzLm9mZnNldFdpZHRoLCB0aGlzLmNhbnZhcy5jYW52YXMub2Zmc2V0SGVpZ2h0KTtcblxuICAgIHRoaXMuY2FudmFzLnN0cm9rZVN0eWxlID0gdGhpcy5jb2xvciB8fCAnIzAwMDAwMCc7XG4gICAgdGhpcy5jYW52YXMubGluZUpvaW4gPSAncm91bmQnO1xuICAgIHRoaXMuY2FudmFzLmxpbmVXaWR0aCA9IDM7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucG9pbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLmNhbnZhcy5iZWdpblBhdGgoKTtcbiAgICAgIGlmICh0aGlzLnBvaW50c1tpXS5kcmFnICYmIGkpIHtcbiAgICAgICAgdGhpcy5jYW52YXMubW92ZVRvKHRoaXMucG9pbnRzW2kgLSAxXS54LCB0aGlzLnBvaW50c1tpIC0gMV0ueSk7XG4gICAgICAgIC8vIHRoaXMuY2FudmFzLmFyYyh0aGlzLnBvaW50c1tpIC0gMV0ueCwgdGhpcy5wb2ludHNbaSAtIDFdLnksIDIsIDAsIDIgKiBNYXRoLlBJLCBmYWxzZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNhbnZhcy5tb3ZlVG8odGhpcy5wb2ludHNbaV0ueCAtIDEsIHRoaXMucG9pbnRzW2ldLnkpO1xuICAgICAgICAvLyB0aGlzLmNhbnZhcy5hcmModGhpcy5wb2ludHNbaV0ueCwgdGhpcy5wb2ludHNbaV0ueSwgMiwgMCwgMiAqIE1hdGguUEksIGZhbHNlKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jYW52YXMubGluZVRvKHRoaXMucG9pbnRzW2ldLngsIHRoaXMucG9pbnRzW2ldLnkpO1xuICAgICAgdGhpcy5jYW52YXMuY2xvc2VQYXRoKCk7XG4gICAgICB0aGlzLmNhbnZhcy5zdHJva2UoKTtcbiAgICB9XG4gIH1cblxuICBkcmF3Q3VydmUoY29sb3I6IHN0cmluZywgY3VydmU6IG51bWJlcikge1xuICAgIHRoaXMuY2FudmFzLmJlZ2luUGF0aCgpO1xuICB9XG5cblxuXG4gIGFkZFBvaW50cyhlLCBkcmFnOiBib29sZWFuKSB7XG4gICAgaWYgKHdpbmRvdykge1xuICAgICAgbGV0IHg7XG4gICAgICBsZXQgeTtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGlmIChlLnRvdWNoZXMgJiYgZS50b3VjaGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgeCA9IGUudG91Y2hlc1swXS5jbGllbnRYO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeCA9IGUuY2xpZW50WDtcbiAgICAgIH1cblxuICAgICAgaWYgKGUudG91Y2hlcyAmJiBlLnRvdWNoZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB5ID0gZS50b3VjaGVzWzBdLmNsaWVudFk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB5ID0gZS5jbGllbnRZO1xuICAgICAgfVxuICAgICAgY29uc3QgcmVjdCA9IHRoaXMuc2lnbmF0dXJlQ2FudmFzLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICB0aGlzLnBvaW50cy5wdXNoKHtcbiAgICAgICAgeDogeCAtIHJlY3QubGVmdCxcbiAgICAgICAgeTogeSAtIHJlY3QudG9wLFxuICAgICAgICBkcmFnOiBkcmFnXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjbGVhclBhZCgpIHtcbiAgICB0aGlzLmNhbnZhcy5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXMuY2FudmFzLm9mZnNldFdpZHRoLCB0aGlzLmNhbnZhcy5jYW52YXMub2Zmc2V0SGVpZ2h0KTtcbiAgICB0aGlzLnBvaW50cyA9IFtdO1xuICAgIHRoaXMuYWRvcHRlZEFuZFNpZ25lZCA9ICF0aGlzLmhhc1NpZ25hdHVyZSgpO1xuICB9XG5cbiAgICBhc3luYyBhZG9wdEFuZFNpZ24oKSB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuYWRvcHRlZEFuZFNpZ25lZCA9IHRydWU7XG4gICAgICBhd2FpdCB0aGlzLnVwZGF0ZUZ1bGxOYW1lKCk7XG4gICAgICBhd2FpdCB0aGlzLmNhcHR1cmVTaWduYXR1cmVGcm9tQ2FudmFzKCk7XG4gICAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5zaWduYXR1cmVNb2RlID09PSAnU2lnbmF0dXJlJyA/ICdTYXZpbmcgU2lnbmF0dXJlJyA6ICdTYXZpbmcgSW5pdGlhbCc7XG4gICAgICB0aGlzLnNuYWNrYmFyU2VydmljZS5vcGVuKG1lc3NhZ2UsICdPSycsIHRoaXMuc25hY2tiYXJTZXJ2aWNlLmluaXRDb25maWcobnVsbCwgJ2JvdHRvbScpKTtcbiAgICAgIHRoaXMuaGFuZGxlTW9kZSgpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgdGhpcy5zbmFja2JhclNlcnZpY2Uub3BlbignRmFpbGVkIHRvIGFwcGx5IHNpZ25hdHVyZScsICdPSycsIHRoaXMuc25hY2tiYXJTZXJ2aWNlLmluaXRDb25maWcobnVsbCwgJ2JvdHRvbScpKTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVNb2RlKCkge1xuICAgIGxldCBjdXJyZW50RmllbGQ7XG4gICAgc3dpdGNoICh0aGlzLm1vZGUpIHtcbiAgICAgIGNhc2UgJ3NpZ25lcnZpZXcnOlxuICAgICAgICBpZiAodGhpcy5zaWduYXR1cmVNb2RlID09PSAnU2lnbmF0dXJlJykge1xuICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5wb3N0U2lnbmF0dXJlQmxvYigpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0LmlkICYmIHJlc3VsdC51cmwpIHtcbiAgICAgICAgICAgICAgY3VycmVudEZpZWxkID0gdGhpcy5zaWduYXR1cmVTZXJ2aWNlLmN1cnJGaWVsZDtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnVwZGF0ZVNpZ25lZChjdXJyZW50RmllbGQuZk5hbWUsIHRydWUpO1xuICAgICAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2UudG9nZ2xlU2lnKGZhbHNlKTtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldFNpZ25hdHVyZUlkKHJlc3VsdC5pZCk7XG4gICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5wdXRTaWduYXR1cmVGaWVsZCh0aGlzLmVudmVsb3BlSWQsIHRoaXMuZmllbGROYW1lLCByZXN1bHQuaWQpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50VHJhY2tlci5jcmVhdGVFdmVudCh7XG4gICAgICAgICAgICAgICAgICBjYXRlZ29yeTogJ3ZlcmRvYycsXG4gICAgICAgICAgICAgICAgICBhY3Rpb246ICd2ZXJkb2Mgc2lnbmVkJyxcbiAgICAgICAgICAgICAgICAgIGxhYmVsOiBgdmVyZG9jIGlkOiAke3RoaXMuZW52ZWxvcGVJZH1gXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBpZiAocmVzICYmIHJlcy5zZXR0aW5ncykge1xuICAgICAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldFNpZ25hdHVyZURhdGEocmVzLnNldHRpbmdzLmJhc2U2NCk7XG4gICAgICAgICAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2Uuc2V0U2lnbmF0dXJlSWQocmVzLnNldHRpbmdzLnNpZ25hdHVyZV9pZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc25hY2tiYXJTZXJ2aWNlLmRpc21pc3MoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZy5jbG9zZSh7IHN0YXR1czogJ3NhdmVkJywgdGVtcF9zaWc6IHJlcy5zZXR0aW5ncy5iYXNlNjQsIHNpZ19pZDogcmVzLnNldHRpbmdzLnNpZ25hdHVyZV9pZCB9KTtcbiAgICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNuYWNrYmFyU2VydmljZS5vcGVuKCdGYWlsZWQgdG8gc2F2ZSBzaWduYXR1cmUuIFBsZWFzZSB0cnkgYWdhaW4uJywgJ0RJU01JU1MnLCB7XG4gICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzAwMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuYWRvcHRlZEFuZFNpZ25lZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBlcnI7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5wb3N0SW5pdGlhbEJsb2IoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICBpZiAocmVzdWx0ICYmIHJlc3VsdC5pZCAmJiByZXN1bHQudXJsKSB7XG4gICAgICAgICAgICAgIGN1cnJlbnRGaWVsZCA9IHRoaXMuc2lnbmF0dXJlU2VydmljZS5jdXJyRmllbGQ7XG4gICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS51cGRhdGVJbml0aWFsZWQoY3VycmVudEZpZWxkLmZOYW1lLCB0cnVlKTtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldEluaXRpYWxJZChyZXN1bHQuaWQpO1xuICAgICAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2UudG9nZ2xlU2lnKGZhbHNlKTtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnB1dEluaXRpYWxGaWVsZCh0aGlzLmVudmVsb3BlSWQsIHRoaXMuZmllbGROYW1lLCByZXN1bHQuaWQpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVzICYmIHJlcy5zZXR0aW5ncykge1xuICAgICAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldEluaXRpYWxEYXRhKHJlcy5zZXR0aW5ncy5iYXNlNjQpO1xuICAgICAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldEluaXRpYWxJZChyZXMuc2V0dGluZ3MuaW5pdGlhbF9pZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc25hY2tiYXJTZXJ2aWNlLmRpc21pc3MoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZy5jbG9zZSh7IHN0YXR1czogJ3NhdmVkJywgdGVtcF9pbnQ6IHJlcy5zZXR0aW5ncy5iYXNlNjQsIGludF9pZDogcmVzLnNldHRpbmdzLmluaXRpYWxfaWQgfSk7XG4gICAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zbmFja2JhclNlcnZpY2Uub3BlbignRmFpbGVkIHRvIHNhdmUgaW5pdGlhbC4gUGxlYXNlIHRyeSBhZ2Fpbi4nLCAnRElTTUlTUycsIHtcbiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAwXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5hZG9wdGVkQW5kU2lnbmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVycjtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gICAqL1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEhvc3Qgb25DbGljaz17ZSA9PiB0aGlzLmhhbmRsZUNhbmNlbChlKX0+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJkaWFsb2dcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGluZ1wiPkNyZWF0ZSBZb3VyIFNpZ25hdHVyZTwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRcIj5cbiAgICAgICAgICAgIDx2ZXJkb2NzLXRleHQtaW5wdXQgcGxhY2Vob2xkZXI9XCJGdWxsIE5hbWUuLi5cIiBsYWJlbD1cIkZ1bGwgTmFtZVwiIHZhbHVlPXt0aGlzLmVudGVyZWROYW1lfSBvbklucHV0PXtlID0+IHRoaXMuaGFuZGxlTmFtZUNoYW5nZShlKX0gb25DbGljaz17ZSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpfSAvPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFzLXNob3duXCI+QXMgc2hvd24gb24gZHJpdmVyJ3MgbGljZW5zZSBvciBnb3Z0LiBJRCBjYXJkLjwvZGl2PlxuXG4gICAgICAgICAgICB7Lyo8ZGl2IGNsYXNzPVwidGFic1wiPiovfVxuICAgICAgICAgICAgey8qICA8ZGl2IGNsYXNzPXt7dGFiOiB0cnVlLCBhY3RpdmU6IHRoaXMubW9kZSA9PT0gJ3R5cGUnfX0gb25DbGljaz17KCkgPT4gKHRoaXMubW9kZSA9ICd0eXBlJyl9PiovfVxuICAgICAgICAgICAgey8qICAgIFR5cGUqL31cbiAgICAgICAgICAgIHsvKiAgPC9kaXY+Ki99XG4gICAgICAgICAgICB7Lyo8ZGl2IGNsYXNzPXt7dGFiOiB0cnVlLCBhY3RpdmU6IHRoaXMubW9kZSA9PT0gJ2RyYXcnfX0gb25DbGljaz17KCkgPT4gKHRoaXMubW9kZSA9ICdkcmF3Jyl9PiovfVxuICAgICAgICAgICAgey8qICBEcmF3Ki99XG4gICAgICAgICAgICB7Lyo8L2Rpdj4qL31cbiAgICAgICAgICAgIHsvKjwvZGl2PiovfVxuXG4gICAgICAgICAgICB7dGhpcy5mb250TG9hZGVkID8gPGNhbnZhcyByZWY9e2VsID0+ICh0aGlzLmNhbnZhc0VsZW1lbnQgPSBlbCBhcyBIVE1MQ2FudmFzRWxlbWVudCl9IC8+IDogPGRpdiBzdHlsZT17e2Rpc3BsYXk6ICdub25lJ319IC8+fVxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlzY2xhaW1lclwiPlxuICAgICAgICAgICAgICBCeSBjbGlja2luZyBBZG9wdCwgSSBhZ3JlZSB0aGF0IHRoZSBzaWduYXR1cmUgd2lsbCBiZSB0aGUgZWxlY3Ryb25pYyByZXByZXNlbnRhdGlvbiBvZiBteSBzaWduYXR1cmUgZm9yIGFsbCBwdXJwb3NlcyB3aGVuIEkgKG9yIG15IGFnZW50KSB1c2UgdGhlbSBvbiBkb2N1bWVudHMsXG4gICAgICAgICAgICAgIGluY2x1ZGluZyBsZWdhbGx5IGJpbmRpbmcgY29udHJhY3RzICZtZGFzaDsganVzdCB0aGUgc2FtZSBhcyBhIHBlbi1hbmQtcGFwZXIgc2lnbmF0dXJlIG9yIGluaXRpYWwuXG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbnNcIj5cbiAgICAgICAgICAgICAgPHZlcmRvY3MtYnV0dG9uIGxhYmVsPVwiQ0FOQ0VMXCIgc2l6ZT1cIm5vcm1hbFwiIHZhcmlhbnQ9XCJvdXRsaW5lXCIgb25DbGljaz17ZSA9PiB0aGlzLmhhbmRsZUNhbmNlbChlKX0gLz5cbiAgICAgICAgICAgICAgPHZlcmRvY3MtYnV0dG9uIGxhYmVsPVwiQWRvcHQgJiBTaWduXCIgc2l6ZT1cIm5vcm1hbFwiIG9uQ2xpY2s9e2UgPT4gdGhpcy5oYW5kbGVBZG9wdChlKX0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvSG9zdD5cbiAgICApO1xuICB9XG59XG4iLCJAaW1wb3J0ICcuLi8uLi8uLi90aGVtZS5zY3NzJztcblxudmVyZG9jcy10b29sYmFyLWljb24ge1xuICBmb250LWZhbWlseTogJHZlcmRvY3MtcHJpbWFyeS1mb250O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cbiAgLmljb24ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICBzdmcge1xuICAgICAgZmlsbDogJGNob2ljZS1hdmFpbGFibGUtY29sb3I7XG4gICAgfVxuICB9XG5cbiAgLnRvb2x0aXAge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggMXB4ICM5OTk5OTk7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICBjb2xvcjogJGxhYmVsLWNvbG9yO1xuICAgIG1heC13aWR0aDogMjQwcHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgcGFkZGluZzogNXB4IDEwcHg7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgei1pbmRleDogMTAwMDA7XG5cbiAgICAuYXJyb3csXG4gICAgLmFycm93OjpiZWZvcmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDhweDtcbiAgICAgIGhlaWdodDogOHB4O1xuICAgICAgYmFja2dyb3VuZDogaW5oZXJpdDtcbiAgICB9XG5cbiAgICAuYXJyb3cge1xuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgdG9wOiAtNHB4O1xuICAgIH1cblxuICAgIC5hcnJvdzo6YmVmb3JlIHtcbiAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB9XG5cbiAgICAmW2RhdGEtc2hvd10ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgJltkYXRhLXBvcHBlci1wbGFjZW1lbnRePSd0b3AnXSA+IC5hcnJvdyB7XG4gICAgICBib3R0b206IC00cHg7XG4gICAgfVxuXG4gICAgJltkYXRhLXBvcHBlci1wbGFjZW1lbnRePSdib3R0b20nXSA+IC5hcnJvdyB7XG4gICAgICB0b3A6IC00cHg7XG4gICAgfVxuXG4gICAgJltkYXRhLXBvcHBlci1wbGFjZW1lbnRePSdsZWZ0J10gPiAuYXJyb3cge1xuICAgICAgcmlnaHQ6IC00cHg7XG4gICAgfVxuXG4gICAgJltkYXRhLXBvcHBlci1wbGFjZW1lbnRePSdyaWdodCddID4gLmFycm93IHtcbiAgICAgIGxlZnQ6IC00cHg7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQge2NyZWF0ZVBvcHBlciwgSW5zdGFuY2V9IGZyb20gJ0Bwb3BwZXJqcy9jb3JlJztcbmltcG9ydCB7Q29tcG9uZW50LCBoLCBIb3N0LCBQcm9wLCBTdGF0ZX0gZnJvbSAnQHN0ZW5jaWwvY29yZSc7XG4vLyBpbXBvcnQge0NvbXBvbmVudCwgRXZlbnQsIEV2ZW50RW1pdHRlciwgaCwgSG9zdCwgUHJvcCwgU3RhdGV9IGZyb20gJ0BzdGVuY2lsL2NvcmUnO1xuXG4vKipcbiAqIERpc3BsYXlzIGEgc2ltcGxlIGhlbHAgaWNvbi4gVXBvbiBob3ZlciBvciBmb2N1cywgYSB0b29sdGlwIHdpbGwgYmUgZGlzcGxheWVkIHdpdGggaGVscCB0ZXh0LlxuICovXG5AQ29tcG9uZW50KHtcbiAgdGFnOiAndmVyZG9jcy10b29sYmFyLWljb24nLFxuICBzdHlsZVVybDogJ3ZlcmRvY3MtdG9vbGJhci1pY29uLnNjc3MnLFxuICBzaGFkb3c6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBWZXJkb2NzVG9vbGJhckljb24ge1xuICBpY29uRWw6IEhUTUxEaXZFbGVtZW50O1xuICB0b29sdGlwOiBIVE1MRGl2RWxlbWVudDtcbiAgcG9wcGVySW5zdGFuY2U6IEluc3RhbmNlO1xuXG4gIC8qKlxuICAgKiBIZWxwIHRleHQgdG8gZGlzcGxheSBvbiBob3Zlci9mb2N1c1xuICAgKi9cbiAgQFByb3AoKSB0ZXh0OiBzdHJpbmcgPSAnJztcblxuICAvKipcbiAgICogU1ZHIGljb24gdG8gZGlzcGxheVxuICAgKi9cbiAgQFByb3AoKSBpY29uOiBzdHJpbmcgPSAnJztcblxuICAvKipcbiAgICogVHJpZ2dlcmVkIHdoZW4gdGhlIGljb24gaXMgcHJlc3NlZFxuICAgKi9cbiAgLy8gQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIHByZXNzOiBFdmVudEVtaXR0ZXI7XG5cbiAgQFN0YXRlKCkgY29udGFpbmVySWQgPSBgdmVyZG9jcy10b29sYmFyLWljb24tJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTEpfWA7XG5cbiAgY29tcG9uZW50RGlkTG9hZCgpIHtcbiAgICB0aGlzLnBvcHBlckluc3RhbmNlID0gY3JlYXRlUG9wcGVyKHRoaXMuaWNvbkVsLCB0aGlzLnRvb2x0aXAsIHtcbiAgICAgIC8vIHBsYWNlbWVudDogJ3RvcC1lbmQnLFxuICAgICAgLy8gbW9kaWZpZXJzOiBbe25hbWU6ICdvZmZzZXQnLCBvcHRpb25zOiB7b2Zmc2V0OiBbMCwgMTBdfX1dLFxuICAgIH0pO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgaWYgKHRoaXMucG9wcGVySW5zdGFuY2UpIHtcbiAgICAgIHRoaXMucG9wcGVySW5zdGFuY2UuZGVzdHJveSgpO1xuICAgICAgdGhpcy5wb3BwZXJJbnN0YW5jZSA9IG51bGw7XG4gICAgfVxuICB9XG5cbiAgc2hvdygpIHtcbiAgICB0aGlzLnRvb2x0aXA/LnNldEF0dHJpYnV0ZSgnZGF0YS1zaG93JywgJycpO1xuICAgIHRoaXMucG9wcGVySW5zdGFuY2U/LnVwZGF0ZSgpLmNhdGNoKCgpID0+IHt9KTtcbiAgfVxuXG4gIGhpZGUoKSB7XG4gICAgdGhpcy50b29sdGlwPy5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtc2hvdycpO1xuICB9XG5cbiAgLy8gaGFuZGxlUHJlc3MoKSB7XG4gIC8vICAgdGhpcy5wcmVzcz8uZW1pdCgpO1xuICAvLyB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8SG9zdCBjbGFzcz17e319PlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgYXJpYS1kZXNjcmliZWRieT17dGhpcy5jb250YWluZXJJZH1cbiAgICAgICAgICBjbGFzcz1cImljb25cIlxuICAgICAgICAgIGlubmVySFRNTD17dGhpcy5pY29ufVxuICAgICAgICAgIG9uTW91c2VFbnRlcj17KCkgPT4gdGhpcy5zaG93KCl9XG4gICAgICAgICAgb25Gb2N1cz17KCkgPT4gdGhpcy5zaG93KCl9XG4gICAgICAgICAgb25Nb3VzZUxlYXZlPXsoKSA9PiB0aGlzLmhpZGUoKX1cbiAgICAgICAgICBvbkJsdXI9eygpID0+IHRoaXMuaGlkZSgpfVxuICAgICAgICAgIHJlZj17ZWwgPT4gKHRoaXMuaWNvbkVsID0gZWwgYXMgSFRNTERpdkVsZW1lbnQpfVxuICAgICAgICAvPlxuICAgICAgICA8ZGl2IGlkPXt0aGlzLmNvbnRhaW5lcklkfSByb2xlPVwidG9vbHRpcFwiIGNsYXNzPVwidG9vbHRpcFwiIGRhdGEtcG9wcGVyLXBsYWNlbWVudD1cImJvdHRvbVwiIHJlZj17ZWwgPT4gKHRoaXMudG9vbHRpcCA9IGVsIGFzIEhUTUxEaXZFbGVtZW50KX0+XG4gICAgICAgICAge3RoaXMudGV4dH1cbiAgICAgICAgICA8ZGl2IGRhdGEtcG9wcGVyLWFycm93PVwidHJ1ZVwiIGNsYXNzPVwiYXJyb3dcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvSG9zdD5cbiAgICApO1xuICB9XG59XG4iLCIndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBlcy9uby1zdHJpbmctcHJvdG90eXBlLW1hdGNoYWxsIC0tIHNhZmUgKi9cbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcy1jbGF1c2UnKTtcbnZhciBjcmVhdGVJdGVyYXRvckNvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9yLWNyZWF0ZS1jb25zdHJ1Y3RvcicpO1xudmFyIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLWl0ZXItcmVzdWx0LW9iamVjdCcpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7XG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgaXNOdWxsT3JVbmRlZmluZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtbnVsbC1vci11bmRlZmluZWQnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtcmVnZXhwJyk7XG52YXIgZ2V0UmVnRXhwRmxhZ3MgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWdldC1mbGFncycpO1xudmFyIGdldE1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtbWV0aG9kJyk7XG52YXIgZGVmaW5lQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4nKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIEludGVybmFsU3RhdGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKTtcbnZhciBJU19QVVJFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXB1cmUnKTtcblxudmFyIE1BVENIX0FMTCA9IHdlbGxLbm93blN5bWJvbCgnbWF0Y2hBbGwnKTtcbnZhciBSRUdFWFBfU1RSSU5HID0gJ1JlZ0V4cCBTdHJpbmcnO1xudmFyIFJFR0VYUF9TVFJJTkdfSVRFUkFUT1IgPSBSRUdFWFBfU1RSSU5HICsgJyBJdGVyYXRvcic7XG52YXIgc2V0SW50ZXJuYWxTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuc2V0O1xudmFyIGdldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmdldHRlckZvcihSRUdFWFBfU1RSSU5HX0lURVJBVE9SKTtcbnZhciBSZWdFeHBQcm90b3R5cGUgPSBSZWdFeHAucHJvdG90eXBlO1xudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG52YXIgc3RyaW5nSW5kZXhPZiA9IHVuY3VycnlUaGlzKCcnLmluZGV4T2YpO1xudmFyIG5hdGl2ZU1hdGNoQWxsID0gdW5jdXJyeVRoaXMoJycubWF0Y2hBbGwpO1xuXG52YXIgV09SS1NfV0lUSF9OT05fR0xPQkFMX1JFR0VYID0gISFuYXRpdmVNYXRjaEFsbCAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICBuYXRpdmVNYXRjaEFsbCgnYScsIC8uLyk7XG59KTtcblxudmFyICRSZWdFeHBTdHJpbmdJdGVyYXRvciA9IGNyZWF0ZUl0ZXJhdG9yQ29uc3RydWN0b3IoZnVuY3Rpb24gUmVnRXhwU3RyaW5nSXRlcmF0b3IocmVnZXhwLCBzdHJpbmcsICRnbG9iYWwsIGZ1bGxVbmljb2RlKSB7XG4gIHNldEludGVybmFsU3RhdGUodGhpcywge1xuICAgIHR5cGU6IFJFR0VYUF9TVFJJTkdfSVRFUkFUT1IsXG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAgc3RyaW5nOiBzdHJpbmcsXG4gICAgZ2xvYmFsOiAkZ2xvYmFsLFxuICAgIHVuaWNvZGU6IGZ1bGxVbmljb2RlLFxuICAgIGRvbmU6IGZhbHNlXG4gIH0pO1xufSwgUkVHRVhQX1NUUklORywgZnVuY3Rpb24gbmV4dCgpIHtcbiAgdmFyIHN0YXRlID0gZ2V0SW50ZXJuYWxTdGF0ZSh0aGlzKTtcbiAgaWYgKHN0YXRlLmRvbmUpIHJldHVybiBjcmVhdGVJdGVyUmVzdWx0T2JqZWN0KHVuZGVmaW5lZCwgdHJ1ZSk7XG4gIHZhciBSID0gc3RhdGUucmVnZXhwO1xuICB2YXIgUyA9IHN0YXRlLnN0cmluZztcbiAgdmFyIG1hdGNoID0gcmVnRXhwRXhlYyhSLCBTKTtcbiAgaWYgKG1hdGNoID09PSBudWxsKSB7XG4gICAgc3RhdGUuZG9uZSA9IHRydWU7XG4gICAgcmV0dXJuIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QodW5kZWZpbmVkLCB0cnVlKTtcbiAgfVxuICBpZiAoc3RhdGUuZ2xvYmFsKSB7XG4gICAgaWYgKHRvU3RyaW5nKG1hdGNoWzBdKSA9PT0gJycpIFIubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKFIubGFzdEluZGV4KSwgc3RhdGUudW5pY29kZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QobWF0Y2gsIGZhbHNlKTtcbiAgfVxuICBzdGF0ZS5kb25lID0gdHJ1ZTtcbiAgcmV0dXJuIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QobWF0Y2gsIGZhbHNlKTtcbn0pO1xuXG52YXIgJG1hdGNoQWxsID0gZnVuY3Rpb24gKHN0cmluZykge1xuICB2YXIgUiA9IGFuT2JqZWN0KHRoaXMpO1xuICB2YXIgUyA9IHRvU3RyaW5nKHN0cmluZyk7XG4gIHZhciBDID0gc3BlY2llc0NvbnN0cnVjdG9yKFIsIFJlZ0V4cCk7XG4gIHZhciBmbGFncyA9IHRvU3RyaW5nKGdldFJlZ0V4cEZsYWdzKFIpKTtcbiAgdmFyIG1hdGNoZXIsICRnbG9iYWwsIGZ1bGxVbmljb2RlO1xuICBtYXRjaGVyID0gbmV3IEMoQyA9PT0gUmVnRXhwID8gUi5zb3VyY2UgOiBSLCBmbGFncyk7XG4gICRnbG9iYWwgPSAhIX5zdHJpbmdJbmRleE9mKGZsYWdzLCAnZycpO1xuICBmdWxsVW5pY29kZSA9ICEhfnN0cmluZ0luZGV4T2YoZmxhZ3MsICd1Jyk7XG4gIG1hdGNoZXIubGFzdEluZGV4ID0gdG9MZW5ndGgoUi5sYXN0SW5kZXgpO1xuICByZXR1cm4gbmV3ICRSZWdFeHBTdHJpbmdJdGVyYXRvcihtYXRjaGVyLCBTLCAkZ2xvYmFsLCBmdWxsVW5pY29kZSk7XG59O1xuXG4vLyBgU3RyaW5nLnByb3RvdHlwZS5tYXRjaEFsbGAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hhbGxcbiQoeyB0YXJnZXQ6ICdTdHJpbmcnLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiBXT1JLU19XSVRIX05PTl9HTE9CQUxfUkVHRVggfSwge1xuICBtYXRjaEFsbDogZnVuY3Rpb24gbWF0Y2hBbGwocmVnZXhwKSB7XG4gICAgdmFyIE8gPSByZXF1aXJlT2JqZWN0Q29lcmNpYmxlKHRoaXMpO1xuICAgIHZhciBmbGFncywgUywgbWF0Y2hlciwgcng7XG4gICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChyZWdleHApKSB7XG4gICAgICBpZiAoaXNSZWdFeHAocmVnZXhwKSkge1xuICAgICAgICBmbGFncyA9IHRvU3RyaW5nKHJlcXVpcmVPYmplY3RDb2VyY2libGUoZ2V0UmVnRXhwRmxhZ3MocmVnZXhwKSkpO1xuICAgICAgICBpZiAoIX5zdHJpbmdJbmRleE9mKGZsYWdzLCAnZycpKSB0aHJvdyAkVHlwZUVycm9yKCdgLm1hdGNoQWxsYCBkb2VzIG5vdCBhbGxvdyBub24tZ2xvYmFsIHJlZ2V4ZXMnKTtcbiAgICAgIH1cbiAgICAgIGlmIChXT1JLU19XSVRIX05PTl9HTE9CQUxfUkVHRVgpIHJldHVybiBuYXRpdmVNYXRjaEFsbChPLCByZWdleHApO1xuICAgICAgbWF0Y2hlciA9IGdldE1ldGhvZChyZWdleHAsIE1BVENIX0FMTCk7XG4gICAgICBpZiAobWF0Y2hlciA9PT0gdW5kZWZpbmVkICYmIElTX1BVUkUgJiYgY2xhc3NvZihyZWdleHApID09ICdSZWdFeHAnKSBtYXRjaGVyID0gJG1hdGNoQWxsO1xuICAgICAgaWYgKG1hdGNoZXIpIHJldHVybiBjYWxsKG1hdGNoZXIsIHJlZ2V4cCwgTyk7XG4gICAgfSBlbHNlIGlmIChXT1JLU19XSVRIX05PTl9HTE9CQUxfUkVHRVgpIHJldHVybiBuYXRpdmVNYXRjaEFsbChPLCByZWdleHApO1xuICAgIFMgPSB0b1N0cmluZyhPKTtcbiAgICByeCA9IG5ldyBSZWdFeHAocmVnZXhwLCAnZycpO1xuICAgIHJldHVybiBJU19QVVJFID8gY2FsbCgkbWF0Y2hBbGwsIHJ4LCBTKSA6IHJ4W01BVENIX0FMTF0oUyk7XG4gIH1cbn0pO1xuXG5JU19QVVJFIHx8IE1BVENIX0FMTCBpbiBSZWdFeHBQcm90b3R5cGUgfHwgZGVmaW5lQnVpbHRJbihSZWdFeHBQcm90b3R5cGUsIE1BVENIX0FMTCwgJG1hdGNoQWxsKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=
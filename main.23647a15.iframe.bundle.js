/*! For license information please see main.23647a15.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),index_bc9b2c82=(__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./dist/esm/index-bc9b2c82.js")),dist=__webpack_require__("./node_modules/@pxtrn/storybook-addon-docs-stencil/dist/index.js"),docs=__webpack_require__("./dist/docs.json");!function defineCustomElements(win,options){"undefined"==typeof window?Promise.resolve():function patchEsm(){return Object(index_bc9b2c82.g)()}().then((function(){return Object(index_bc9b2c82.c)([["verdocs-template-fields",[[0,"verdocs-template-fields",{endpoint:[16],templateId:[1,"template-id"],pdfUrl:[32],template:[32]}]]],["verdocs-sign",[[0,"verdocs-sign",{endpoint:[16],documentId:[1,"document-id"],roleId:[1,"role-id"],inviteCode:[1,"invite-code"],recipient:[32],signerToken:[32],pdfUrl:[32],recipientIndex:[32],document:[32],fields:[32],hasSignature:[32],nextButtonLabel:[32],focusedField:[32]}]]],["verdocs-build",[[0,"verdocs-build",{endpoint:[16],templateId:[1,"template-id"],step:[32],pdfUrl:[32],template:[32]}]]],["verdocs-field-initial",[[0,"verdocs-field-initial",{field:[16],recipient:[16],disabled:[4],initials:[1],editable:[4],moveable:[4],tempInitials:[32],focusField:[64]}]]],["verdocs-auth",[[0,"verdocs-auth",{endpoint:[16],visible:[4],logo:[1],debug:[4],isAuthenticated:[32],displayMode:[32],username:[32],password:[32],loggingIn:[32],activeSession:[32],loginError:[32]}]]],["verdocs-field-date",[[0,"verdocs-field-date",{field:[16],recipient:[16],disabled:[4],editable:[4],moveable:[4],focused:[32],containerId:[32],focusField:[64]}]]],["verdocs-field-textarea",[[0,"verdocs-field-textarea",{field:[16],recipient:[16],disabled:[4],editable:[4],moveable:[4],focused:[32],focusField:[64]}]]],["verdocs-field-textbox",[[0,"verdocs-field-textbox",{field:[16],recipient:[16],disabled:[4],editable:[4],moveable:[4],containerId:[32],focused:[32],focusField:[64]}]]],["verdocs-field-timestamp",[[0,"verdocs-field-timestamp",{field:[16],recipient:[16],disabled:[4],editable:[4],moveable:[4],focused:[32],focusField:[64]}]]],["verdocs-preview",[[0,"verdocs-preview",{endpoint:[16],templateId:[1,"template-id"],pdfUrl:[32],template:[32]}]]],["verdocs-search",[[0,"verdocs-search",{endpoint:[16]}]]],["verdocs-contact-picker",[[0,"verdocs-contact-picker",{endpoint:[16],templateRole:[16],contactSuggestions:[16],name:[32],email:[32],phone:[32],message:[32],showSuggestions:[32],showMessage:[32],delegator:[32]}]]],["verdocs-send",[[0,"verdocs-send",{endpoint:[16],templateId:[1,"template-id"],template:[32],pdfUrl:[32],containerId:[32],rolesAtLevel:[32],showPickerForId:[32],sessionContacts:[32],recipientsAssigned:[32]}]]],["verdocs-field-attachment",[[0,"verdocs-field-attachment",{field:[16],recipient:[16],disabled:[4],focusField:[64]}]]],["verdocs-kba-dialog",[[0,"verdocs-kba-dialog",{step:[2],steps:[2],helptitle:[1],helptext:[1],mode:[1],label:[1],placeholder:[1],choices:[16],open:[4],response:[32]}]]],["verdocs-field-dropdown",[[0,"verdocs-field-dropdown",{field:[16],recipient:[16],disabled:[4],focused:[32],focusField:[64]}]]],["verdocs-field-payment",[[0,"verdocs-field-payment",{field:[16],recipient:[16],disabled:[4],fields:[16],pageNum:[2,"page-num"],roleName:[1,"role-name"],fieldId:[1,"field-id"],recipients:[8],selectedRoleName:[1,"selected-role-name"],pdfPages:[16],currentSignature:[1,"current-signature"],currentSignatureId:[1,"current-signature-id"],currentInitial:[1,"current-initial"],currentInitialId:[1,"current-initial-id"],focused:[4],signed:[4],preparedMessage:[32],signatureUrl:[32]}]]],["verdocs-organization-card",[[0,"verdocs-organization-card",{organization:[16]}]]],["verdocs-search-tabs",[[0,"verdocs-search-tabs",{selected:[32]}]]],["verdocs-status-indicator",[[0,"verdocs-status-indicator",{size:[1],theme:[1],status:[1],document:[16],isOpen:[32],recipientStatusIcons:[32],containerId:[32]}]]],["verdocs-template-card",[[0,"verdocs-template-card",{template:[16]}]]],["verdocs-template-properties",[[0,"verdocs-template-properties",{endpoint:[16],templateRole:[16],contactSuggestions:[16],name:[32],email:[32],phone:[32],message:[32],showSuggestions:[32],showMessage:[32],delegator:[32]}]]],["verdocs-template-tags",[[0,"verdocs-template-tags",{tags:[16]}]]],["verdocs-toggle",[[0,"verdocs-toggle",{options:[16],theme:[1],selectedOption:[32]}]]],["verdocs-button",[[0,"verdocs-button",{label:[1],startIcon:[1,"start-icon"],endIcon:[1,"end-icon"],size:[1],type:[1],variant:[1],disabled:[4]}]]],["verdocs-initial-dialog",[[0,"verdocs-initial-dialog",{initials:[1],open:[4],fontLoaded:[32],enteredInitials:[32],mode:[32]}]]],["verdocs-ok-dialog",[[0,"verdocs-ok-dialog",{heading:[1],message:[1],open:[4],cancel:[4]}]]],["verdocs-upload-dialog",[[0,"verdocs-upload-dialog",{open:[4],draggingOver:[32],decodedFiles:[32]}]]],["verdocs-signature-dialog",[[0,"verdocs-signature-dialog",{name:[1],open:[4],fontLoaded:[32],enteredName:[32],mode:[32]}]]],["verdocs-field-signature_2",[[0,"verdocs-field-signature",{field:[16],name:[1],recipient:[16],disabled:[4],editable:[4],moveable:[4],tempSignature:[32],focusField:[64]}],[0,"verdocs-toolbar-icon",{text:[1],icon:[1],containerId:[32]}]]],["verdocs-template-create_2",[[0,"verdocs-template-recipients",{endpoint:[16],templateRole:[16],contactSuggestions:[16],name:[32],email:[32],phone:[32],message:[32],showSuggestions:[32],showMessage:[32],delegator:[32],sender:[32],showingSenderDialog:[32],orderedRoles:[32]}],[0,"verdocs-template-create",{endpoint:[16],filePath:[32]}]]],["verdocs-toggle-button",[[0,"verdocs-toggle-button",{active:[4],icon:[1],label:[1],size:[1],_active:[32]}]]],["verdocs-dropdown_3",[[0,"verdocs-dropdown",{options:[16],open:[4],isOpen:[32]}],[0,"verdocs-field-checkbox",{field:[16],recipient:[16],option:[2],disabled:[4]}],[0,"verdocs-field-radio-button",{field:[16],recipient:[16],option:[2],disabled:[4]}]]],["verdocs-quick-functions_3",[[0,"verdocs-quick-functions",{endpoint:[16]}],[0,"verdocs-search-activity",{endpoint:[16],type:[1],options:[8],emptyMessage:[32],authFailure:[32],title:[32],recent:[32],saved:[32],starred:[32]}],[0,"verdocs-search-box",{endpoint:[16],placeholder:[1],type:[1],query:[1],grabsFocus:[4,"grabs-focus"],focusField:[64]}]]],["verdocs-help-icon_3",[[0,"verdocs-template-sender-dialog",{value:[1],open:[4],newValue:[32]}],[0,"verdocs-help-icon",{text:[1],containerId:[32]}],[0,"verdocs-radio-button",{checked:[4],name:[1],value:[1],disabled:[4]}]]],["verdocs-document-page_3",[[0,"verdocs-view",{endpoint:[16],rotation:[2],pageLayers:[16],source:[1],loadProgress:[32],numPages:[32]}],[0,"verdocs-document-page",{pageNumber:[2,"page-number"],virtualWidth:[2,"virtual-width"],virtualHeight:[2,"virtual-height"],layers:[16],containerId:[32],renderedWidth:[32],renderedHeight:[32],skipFirstNotification:[32]}],[0,"verdocs-loader"]]],["verdocs-button-panel_3",[[4,"verdocs-button-panel",{icon:[1]}],[0,"verdocs-select-input",{value:[1],label:[1],options:[16],disabled:[4],_value:[32]}],[0,"verdocs-text-input",{value:[1],label:[1],placeholder:[1],autocomplete:[1],type:[1],disabled:[4],_value:[32]}]]]],options)}))}(),docs&&Object(dist.setStencilDocJson)(docs);var parameters={controls:{hideNoControlsWarning:!0,matchers:{color:/(background|color)$/i,date:/Date$/}},viewMode:"docs",docs:{iframeHeight:500,extractArgTypes:dist.extractArgTypes,extractComponentDescription:dist.extractComponentDescription},layout:"centered",backgrounds:{default:"light",values:[{name:"light",value:"#eeeeee"},{name:"medium",value:"#5c6575"},{name:"dark",value:"#33364b"}]}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}window.addEventListener("load",(function clickDocsButtonOnFirstLoad(){window.removeEventListener("load",clickDocsButtonOnFirstLoad);try{window.parent.document.evaluate("//button[contains(., 'Docs')]",window.parent.document,null,XPathResult.ANY_TYPE,null).iterateNext().click()}catch(error){}})),Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return Object(ClientApi.d)(value);case"argTypes":return Object(ClientApi.b)(value);case"decorators":return value.forEach((function(decorator){return Object(ClientApi.f)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.g)(loader,!1)}));case"parameters":return Object(ClientApi.h)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.e)(enhancer)}));case"render":return Object(ClientApi.i)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.h)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./dist/docs.json":function(module){module.exports=JSON.parse('{"timestamp":"2022-11-22T15:01:14","compiler":{"name":"@stencil/core","version":"2.17.4","typescriptVersion":"4.5.4"},"components":[{"filePath":"./src/components/embeds/verdocs-auth/verdocs-auth.tsx","encapsulation":"none","tag":"verdocs-auth","docs":"Display an authentication dialog that allows the user to login or sign up. Callbacks are provided for events that\\noccur during the process (especially successful completion). The success callback will be fired immediately if the\\nuser is already authenticated with a valid session, so this component may not always display visibly.\\n\\nTo simplify some types of authentication flows, a visibility flag can force this component to never display. This\\nallows you to susbcribe to notifications from the\\n\\nThis embed is responsive / mobile-friendly, but the calling application should provide at least a 300px wide\\ncontainer to allow sufficient space for the required forms.\\n\\nAs noted below, the primary event is `authenticated`. This will always be fired at least once, immediately after\\nthe widget is rendered and the user\'s status has been checked. It may be fired again as the user completes (or\\ncancels) authentication steps.\\n\\nAuthentication is required to demonstrate this Element. You may do this in Storybook by using the Auth\\nembed. This Element will reuse the same session produced by logging in via that Embed.\\n\\n```typescript\\ninterface IAuthStatus {\\n  // If true, the user is authenticated with a valid session\\n  authenticated: boolean;\\n\\n  // Details for the user\'s session\\n  session: IActiveSession | null;\\n}\\n```","docsTags":[],"usage":{},"props":[{"name":"debug","type":"boolean","mutable":false,"attr":"debug","reflectToAttr":false,"docs":"If the user is authenticated, this embed will normally render invisibly. If debug is set true, a summary\\nif the user\'s session details will be displayed instead. This may be useful while debugging authentication\\nflows in new applications.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"logo","type":"string","mutable":false,"attr":"logo","reflectToAttr":false,"docs":"By default, a Verdocs logo will be displayed above the login/signup forms. This may be used to\\noverride its source. (Alternatively, you may simply hide it via CSS overrides.) Logos should be\\nin SVG format for best results.","docsTags":[],"default":"\'https://verdocs.com/assets/blue-logo.svg\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"visible","type":"boolean","mutable":false,"attr":"visible","reflectToAttr":false,"docs":"Normally, if the user has a valid session, this embed will be invisible, otherwise it will display\\nlogin / signup forms. If this is set to false, this embed will be invisible in both cases. Apps may\\nuse this to verify if a user has a valid session without needing a separate call to Verdocs JS SDK.","docsTags":[],"default":"true","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"authenticated","detail":"IAuthStatus","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when session authentication process has completed. Check the event contents for completion status.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button","verdocs-text-input","verdocs-ok-dialog"],"dependencyGraph":{"verdocs-auth":["verdocs-button","verdocs-text-input","verdocs-ok-dialog"],"verdocs-ok-dialog":["verdocs-button"]}},{"filePath":"./src/components/embeds/verdocs-build/verdocs-build.tsx","encapsulation":"none","tag":"verdocs-build","docs":"Display a template building experience.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The ID of the template to create the document from.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-template-create","verdocs-template-recipients"],"dependencyGraph":{"verdocs-build":["verdocs-template-create","verdocs-template-recipients"],"verdocs-template-create":["verdocs-button"],"verdocs-template-recipients":["verdocs-button","verdocs-template-sender-dialog"],"verdocs-template-sender-dialog":["verdocs-radio-button","verdocs-help-icon","verdocs-button"]}},{"filePath":"./src/components/controls/verdocs-button/verdocs-button.tsx","encapsulation":"none","tag":"verdocs-button","docs":"Display a simple button.\\n\\nThree variants are supported. `standard` and `outline` buttons look like traditional form buttons and are ideal candidates for \'Ok\' and\\n\'Cancel\' options in most cases. `text` buttons are intended to be used inline in content blocks or for more subtle button options.\\n(Auth uses text buttons for the Forgot Password and Sign Up options.)\\n\\nFour sizes are also supported. Most use cases will call for the `normal` size, but a `small` size is ideal for more subtle controls, such\\nas pagination or other secondary functions. `medium` buttons are slightly larger to provide balance in forms where other items are also\\nbigger, and `large` buttons are for cases where the page has mostly white-space and the buttons need to fill more space.\\n\\nIcons may be placed either before (\\"start\\") or after (\\"end\\") the button label. Icons should be SVG objects passed as strings and will\\nbe rendered as HTML inside the button label area. It is important that the root <SVG> tag contains a default `fill=\\"#ffffff\\"` setting\\nfor the base color, and that child elements below it do not. This allows the button color to carry into the icon properly.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Whether the button should be disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"endIcon","type":"string","mutable":false,"attr":"end-icon","reflectToAttr":false,"docs":"If desired, a suffix icon for the button","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"The label for the button.","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":true},{"name":"size","type":"\\"large\\" | \\"medium\\" | \\"normal\\" | \\"small\\"","mutable":false,"attr":"size","reflectToAttr":false,"docs":"The size (height) of the button.","docsTags":[],"default":"\'normal\'","values":[{"value":"large","type":"string"},{"value":"medium","type":"string"},{"value":"normal","type":"string"},{"value":"small","type":"string"}],"optional":false,"required":false},{"name":"startIcon","type":"string","mutable":false,"attr":"start-icon","reflectToAttr":false,"docs":"If desired, a prefix icon for the button","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false},{"name":"type","type":"\\"button\\" | \\"reset\\" | \\"submit\\"","mutable":false,"attr":"type","reflectToAttr":false,"docs":"The type of the button.","docsTags":[],"default":"\'button\'","values":[{"value":"button","type":"string"},{"value":"reset","type":"string"},{"value":"submit","type":"string"}],"optional":false,"required":false},{"name":"variant","type":"\\"outline\\" | \\"standard\\" | \\"text\\"","mutable":false,"attr":"variant","reflectToAttr":false,"docs":"The display variant of the button.","docsTags":[],"default":"\'standard\'","values":[{"value":"outline","type":"string"},{"value":"standard","type":"string"},{"value":"text","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"press","detail":"any","bubbles":false,"cancelable":true,"composed":true,"docs":"Event fired when the button is pressed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-auth","verdocs-contact-picker","verdocs-initial-dialog","verdocs-kba-dialog","verdocs-ok-dialog","verdocs-send","verdocs-sign","verdocs-signature-dialog","verdocs-template-create","verdocs-template-recipients","verdocs-template-sender-dialog","verdocs-upload-dialog"],"dependencies":[],"dependencyGraph":{"verdocs-auth":["verdocs-button"],"verdocs-contact-picker":["verdocs-button"],"verdocs-initial-dialog":["verdocs-button"],"verdocs-kba-dialog":["verdocs-button"],"verdocs-ok-dialog":["verdocs-button"],"verdocs-send":["verdocs-button"],"verdocs-sign":["verdocs-button"],"verdocs-signature-dialog":["verdocs-button"],"verdocs-template-create":["verdocs-button"],"verdocs-template-recipients":["verdocs-button"],"verdocs-template-sender-dialog":["verdocs-button"],"verdocs-upload-dialog":["verdocs-button"]}},{"filePath":"./src/components/controls/verdocs-button-panel/verdocs-button-panel.tsx","encapsulation":"none","tag":"verdocs-button-panel","docs":"Displays a clickable icon. When clicked, a customizable drop-down panel will be displayed.","docsTags":[],"usage":{},"props":[{"name":"icon","type":"string","mutable":false,"attr":"icon","reflectToAttr":false,"docs":"SVG icon to display","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-date","verdocs-field-initial","verdocs-field-signature","verdocs-field-textarea","verdocs-field-textbox","verdocs-field-timestamp"],"dependencies":[],"dependencyGraph":{"verdocs-field-date":["verdocs-button-panel"],"verdocs-field-initial":["verdocs-button-panel"],"verdocs-field-signature":["verdocs-button-panel"],"verdocs-field-textarea":["verdocs-button-panel"],"verdocs-field-textbox":["verdocs-button-panel"],"verdocs-field-timestamp":["verdocs-button-panel"]}},{"filePath":"./src/components/elements/verdocs-contact-picker/verdocs-contact-picker.tsx","encapsulation":"none","tag":"verdocs-contact-picker","docs":"Displays a contact picker suitable for filling out Recipient objects when sending Documents.\\n\\nThis picker can also be integrated with a backend to provide contact list / suggestion / address-book style behavior. As the\\nuser interacts with the component, the text entered in the name field is sent back to the parent via the `searchContacts` event.\\nThe parent can use that text as a query string to call a backend to obtain appropriate contacts to show. This list may also be\\nhard-coded ahead of time to provide the user with smart suggestions on initial display, such as \\"Recently Used\\" contacts, or\\nto always display the user\'s own contact record.","docsTags":[],"usage":{},"props":[{"name":"contactSuggestions","type":"(IEmailContact | IPhoneContact)[]","mutable":false,"reflectToAttr":false,"docs":"If set, suggestions will be displayed in a drop-down list to the user. It is recommended that the number\\nof suggestions be limited to the 5 best matching records.","docsTags":[],"default":"[]","values":[{"type":"(IEmailContact"},{"type":"IPhoneContact)[]"}],"optional":false,"required":false},{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateRole","type":"IRole","mutable":false,"reflectToAttr":false,"docs":"The role that this contact will be assigned to.","docsTags":[],"default":"null","values":[{"type":"IRole"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"contactSelected","detail":"IContactSelectEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]},{"event":"searchContacts","detail":"IContactSearchEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user enters text in the search field. The calling application may use this to update\\nthe `contactSuggestions` property.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-send"],"dependencies":["verdocs-toggle-button","verdocs-button"],"dependencyGraph":{"verdocs-contact-picker":["verdocs-toggle-button","verdocs-button"],"verdocs-send":["verdocs-contact-picker"]}},{"filePath":"./src/components/elements/verdocs-document-page/verdocs-document-page.tsx","encapsulation":"none","tag":"verdocs-document-page","docs":"Represents one document page. This is primarily a layout container used to coordinate positions of\\npage-related layers such as the page itself, signature fields, etc.","docsTags":[],"usage":{},"props":[{"name":"layers","type":"IPageLayer[]","mutable":false,"reflectToAttr":false,"docs":"The layers that will be rendered. The DOM structure will be a DIV container with one child DIV for each layer.\\nThe parent DIV will have a unique ID, and each child DIV will have that ID with the layer name appended, e.g.\\nif `pages` was [\'page\', \'fields\'] the structure will be:\\n\\n```\\n    <div id=\\"verdocs-document-page-ker2fr1p9\\">\\n      <div id=\\"verdocs-document-page-ker2fr1p9-page\\"></div>\\n      <div id=\\"verdocs-document-page-ker2fr1p9-fields\\"></div>\\n    </div>\\n```","docsTags":[],"default":"[{name: \'page\', type: \'canvas\'}]","values":[{"type":"IPageLayer[]"}],"optional":false,"required":false},{"name":"pageNumber","type":"number","mutable":false,"attr":"page-number","reflectToAttr":false,"docs":"The page number being rendered. Not used internally but included in callbacks/events beacuse page numbers\\nare used everywhere in document handling.","docsTags":[],"default":"1","values":[{"type":"number"}],"optional":false,"required":false},{"name":"virtualHeight","type":"number","mutable":false,"attr":"virtual-height","reflectToAttr":false,"docs":"The \\"virtual\\" height of the page canvas.  Defaults to 792 which at 72dpi is 11\\" tall. This is used to compute\\nthe aspect ratio of the final rendered element.","docsTags":[],"default":"792","values":[{"type":"number"}],"optional":false,"required":false},{"name":"virtualWidth","type":"number","mutable":false,"attr":"virtual-width","reflectToAttr":false,"docs":"The \\"virtual\\" width of the page canvas. Defaults to 612 which at 72dpi is 8.5\\" wide. This is used to compute\\nthe aspect ratio of the final rendered element.","docsTags":[],"default":"612","values":[{"type":"number"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"pageRendered","detail":"IDocumentPageInfo","bubbles":true,"cancelable":true,"composed":true,"docs":"Fired when a page has been rendered. This is also fired when the page is resized.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-view"],"dependencies":[],"dependencyGraph":{"verdocs-view":["verdocs-document-page"]}},{"filePath":"./src/components/controls/verdocs-dropdown/verdocs-dropdown.tsx","encapsulation":"none","tag":"verdocs-dropdown","docs":"Display a drop-down menu button. A menu of the specified options will be displayed when the button is pressed. The menu will be hidden\\nwhen the button is pressed again, or an option is selected.","docsTags":[],"usage":{},"props":[{"name":"open","type":"boolean","mutable":false,"attr":"open","reflectToAttr":false,"docs":"If set, the component will be open by default. This is primarily intended to be used for testing.","docsTags":[],"values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"options","type":"IMenuOption[]","mutable":false,"reflectToAttr":false,"docs":"The menu options to display.","docsTags":[],"default":"[]","values":[{"type":"IMenuOption[]"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"optionSelected","detail":"IMenuOption","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when a menu option is clicked.\\nWeb Component events need to be \\"composed\\" to cross the Shadow DOM and be received by parent frameworks.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-sign"],"dependencies":[],"dependencyGraph":{"verdocs-sign":["verdocs-dropdown"]}},{"filePath":"./src/components/elements/verdocs-field-attachment/verdocs-field-attachment.tsx","encapsulation":"none","tag":"verdocs-field-attachment","docs":"Displays a signature field. Various field types are supported, including traditional Signature and Initials types as well as\\ninput types like text and checkbox.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-upload-dialog"],"dependencyGraph":{"verdocs-field-attachment":["verdocs-upload-dialog"],"verdocs-upload-dialog":["verdocs-button"]}},{"filePath":"./src/components/elements/verdocs-field-checkbox-group/verdocs-field-checkbox.tsx","encapsulation":"none","tag":"verdocs-field-checkbox","docs":"Displays a signature field. Various field types are supported, including traditional Signature and Initials types as well as\\ninput types like text and checkbox.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"option","type":"number","mutable":false,"attr":"option","reflectToAttr":false,"docs":"The index of the settings option this particular checkbox is for","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":false,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"fieldChange","detail":"{ option: number; value: boolean; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-sign"],"dependencies":[],"dependencyGraph":{"verdocs-sign":["verdocs-field-checkbox"]}},{"filePath":"./src/components/elements/verdocs-field-date/verdocs-field-date.tsx","encapsulation":"none","tag":"verdocs-field-date","docs":"Displays a date field. When tapped or clicked, the input element will display a date picker component.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"fieldBlur","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field gains focus.","docsTags":[]},{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]},{"event":"fieldFocus","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field loses focus.","docsTags":[]},{"event":"fieldInput","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]},{"event":"settingsPress","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-select-input","verdocs-text-input"],"dependencyGraph":{"verdocs-field-date":["verdocs-button-panel","verdocs-select-input","verdocs-text-input"]}},{"filePath":"./src/components/elements/verdocs-field-dropdown/verdocs-field-dropdown.tsx","encapsulation":"none","tag":"verdocs-field-dropdown","docs":"Displays a signature field. Various field types are supported, including traditional Signature and Initials types as well as\\ninput types like text and checkbox.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"fieldBlur","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field gains focus.","docsTags":[]},{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]},{"event":"fieldFocus","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field loses focus.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/elements/verdocs-field-initial/verdocs-field-initial.tsx","encapsulation":"none","tag":"verdocs-field-initial","docs":"Displays an initial field. If an initial already exists, it will be displayed and the field will be disabled. Otherwise, a placeholder\\nbutton will be shown. Clicking the button will show a dialog to adopt an initial.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"initials","type":"string","mutable":false,"attr":"initials","reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"adopt","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event emitted when an initial block is adopted by the user. The event detail will contain the base64 string of the initial image.","docsTags":[]},{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event emitted when the user cancels the process.","docsTags":[]},{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]},{"event":"settingsPress","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-initial-dialog","verdocs-button-panel","verdocs-select-input","verdocs-text-input"],"dependencyGraph":{"verdocs-field-initial":["verdocs-initial-dialog","verdocs-button-panel","verdocs-select-input","verdocs-text-input"],"verdocs-initial-dialog":["verdocs-text-input","verdocs-button"]}},{"filePath":"./src/components/elements/verdocs-field-payment/verdocs-field-payment.tsx","encapsulation":"none","tag":"verdocs-field-payment","docs":"Displays a signature field. Various field types are supported, including traditional Signature and Initials types as well as\\ninput types like text and checkbox.","docsTags":[],"usage":{},"props":[{"name":"currentInitial","type":"string","mutable":false,"attr":"current-initial","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"currentInitialId","type":"string","mutable":false,"attr":"current-initial-id","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"currentSignature","type":"string","mutable":false,"attr":"current-signature","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"currentSignatureId","type":"string","mutable":false,"attr":"current-signature-id","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"fieldId","type":"string","mutable":false,"attr":"field-id","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"fields","type":"any[]","mutable":false,"reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"any[]"}],"optional":false,"required":false},{"name":"focused","type":"boolean","mutable":false,"attr":"focused","reflectToAttr":false,"docs":"","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"pageNum","type":"number","mutable":false,"attr":"page-num","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"number"}],"optional":false,"required":false},{"name":"pdfPages","type":"any[]","mutable":false,"reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"any[]"}],"optional":false,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false},{"name":"recipients","type":"any","mutable":false,"attr":"recipients","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"any"}],"optional":false,"required":false},{"name":"roleName","type":"string","mutable":false,"attr":"role-name","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"selectedRoleName","type":"string","mutable":false,"attr":"selected-role-name","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"signed","type":"boolean","mutable":false,"attr":"signed","reflectToAttr":false,"docs":"","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"initialComplete","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"","docsTags":[]},{"event":"signatureComplete","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/elements/verdocs-field-radio-button-group/verdocs-field-radio-button.tsx","encapsulation":"none","tag":"verdocs-field-radio-button","docs":"Displays a radio button.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"option","type":"number","mutable":false,"attr":"option","reflectToAttr":false,"docs":"The index of the settings option this particular checkbox is for","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":false,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"fieldChange","detail":"{ option: number; value: boolean; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-sign"],"dependencies":[],"dependencyGraph":{"verdocs-sign":["verdocs-field-radio-button"]}},{"filePath":"./src/components/elements/verdocs-field-signature/verdocs-field-signature.tsx","encapsulation":"none","tag":"verdocs-field-signature","docs":"Displays a signature field. If a signature already exists, it will be displayed and the field will be disabled. Otherwise, a placeholder\\nbutton will be shown. Clicking the button will show a dialog to adopt a signature.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","mutable":false,"attr":"name","reflectToAttr":false,"docs":"If set, the signature creation dialog will be initialized with this text.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":true,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"If set, the signature creation dialog will be initialized from this object.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event emitted when the field has changed.","docsTags":[]},{"event":"settingsPress","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-fields"],"dependencies":["verdocs-signature-dialog","verdocs-button-panel","verdocs-select-input","verdocs-text-input"],"dependencyGraph":{"verdocs-field-signature":["verdocs-signature-dialog","verdocs-button-panel","verdocs-select-input","verdocs-text-input"],"verdocs-signature-dialog":["verdocs-text-input","verdocs-button"],"verdocs-template-fields":["verdocs-field-signature"]}},{"filePath":"./src/components/elements/verdocs-field-textarea/verdocs-field-textarea.tsx","encapsulation":"none","tag":"verdocs-field-textarea","docs":"Display a multi-line text input field.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"fieldBlur","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field gains focus.","docsTags":[]},{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]},{"event":"fieldFocus","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field loses focus.","docsTags":[]},{"event":"fieldInput","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-select-input","verdocs-text-input"],"dependencyGraph":{"verdocs-field-textarea":["verdocs-button-panel","verdocs-select-input","verdocs-text-input"]}},{"filePath":"./src/components/elements/verdocs-field-textbox/verdocs-field-textbox.tsx","encapsulation":"none","tag":"verdocs-field-textbox","docs":"Display a text input field.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"fieldBlur","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field gains focus.","docsTags":[]},{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]},{"event":"fieldFocus","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field loses focus.","docsTags":[]},{"event":"fieldInput","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-select-input","verdocs-text-input"],"dependencyGraph":{"verdocs-field-textbox":["verdocs-button-panel","verdocs-select-input","verdocs-text-input"]}},{"filePath":"./src/components/elements/verdocs-field-timestamp/verdocs-field-timestamp.tsx","encapsulation":"none","tag":"verdocs-field-timestamp","docs":"Display a timestamp field.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, overrides the field\'s settings object. Primarily used to support \\"preview\\" modes where all fields are disabled.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"editable","type":"boolean","mutable":false,"attr":"editable","reflectToAttr":false,"docs":"If set, a settings icon will be displayed on hover. The settings shown allow the field\'s recipient and other settings to be\\nchanged, so it should typically only be enabled in the Builder.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"field","type":"IDocumentField | ITemplateField","mutable":false,"reflectToAttr":false,"docs":"The document or template field to display.","docsTags":[],"default":"null","values":[{"type":"IDocumentField"},{"type":"ITemplateField"}],"optional":false,"required":false},{"name":"moveable","type":"boolean","mutable":false,"attr":"moveable","reflectToAttr":false,"docs":"If set, the field may be dragged to a new location. This should only be enabled in the Builder, or for self-placed fields.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"recipient","type":"IRecipient","mutable":false,"reflectToAttr":false,"docs":"The recipient completing the form, if known.","docsTags":[],"values":[{"type":"IRecipient"}],"optional":true,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"fieldBlur","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field gains focus.","docsTags":[]},{"event":"fieldChange","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]},{"event":"fieldFocus","detail":"boolean","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field loses focus.","docsTags":[]},{"event":"fieldInput","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]},{"event":"settingsPress","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired on every character entered into / deleted from the field.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button-panel","verdocs-select-input","verdocs-text-input"],"dependencyGraph":{"verdocs-field-timestamp":["verdocs-button-panel","verdocs-select-input","verdocs-text-input"]}},{"filePath":"./src/components/controls/verdocs-help-icon/verdocs-help-icon.tsx","encapsulation":"none","tag":"verdocs-help-icon","docs":"Displays a simple help icon. Upon hover or focus, a tooltip will be displayed with help text.","docsTags":[],"usage":{},"props":[{"name":"text","type":"string","mutable":false,"attr":"text","reflectToAttr":false,"docs":"Help text to display on hover/focus","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-sender-dialog"],"dependencies":[],"dependencyGraph":{"verdocs-template-sender-dialog":["verdocs-help-icon"]}},{"filePath":"./src/components/dialogs/verdocs-initial-dialog/verdocs-initial-dialog.tsx","encapsulation":"none","tag":"verdocs-initial-dialog","docs":"Display a dialog that allows the user to specify an initials image, either by using a signature-font-generated image\\nbased on their full name, or by hand-drawing their initials with a mouse or tablet.","docsTags":[],"usage":{},"props":[{"name":"initials","type":"string","mutable":false,"attr":"initials","reflectToAttr":false,"docs":"Initial signature text","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"open","type":"boolean","mutable":false,"attr":"open","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"adopt","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the initials are adopted.","docsTags":[]},{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the step is cancelled.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-initial"],"dependencies":["verdocs-text-input","verdocs-button"],"dependencyGraph":{"verdocs-initial-dialog":["verdocs-text-input","verdocs-button"],"verdocs-field-initial":["verdocs-initial-dialog"]}},{"filePath":"./src/components/dialogs/verdocs-kba-dialog/verdocs-kba-dialog.tsx","encapsulation":"none","tag":"verdocs-kba-dialog","docs":"Display a text input field. This adds a partially-transparent overlay and screen-centered dialog\\nbox with a message and optional header/title. An OK button is shown that will dismiss the message.\\nIt can also be dismissed by clicking the background overlay.","docsTags":[],"usage":{},"props":[{"name":"choices","type":"string[]","mutable":false,"reflectToAttr":false,"docs":"For choice challenges, a set of choices to choose from. 6 choices is recommended to fit most screen sizes.","docsTags":[],"default":"[\'553 Arbor Dr\', \'18 Lacey Ln\', \'23A Ball Ct\', \'2375 Cavallo Blvd\', \'23-1 RR-7\', \'151 Boulder Rd\']","values":[{"type":"string[]"}],"optional":false,"required":false},{"name":"helptext","type":"string","mutable":false,"attr":"helptext","reflectToAttr":false,"docs":"If set, a help/instructions box will be displayed with this text","docsTags":[],"default":"\'Please check your text messages for a security code, and enter the code below.\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"helptitle","type":"string","mutable":false,"attr":"helptitle","reflectToAttr":false,"docs":"If set, a help/instructions box will be displayed with this title","docsTags":[],"default":"\'One Time Code\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"For text input challenges, the label to display next to the input field.","docsTags":[],"default":"\'PIN\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"mode","type":"\\"choice\\" | \\"text\\"","mutable":false,"attr":"mode","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"\'choice\'","values":[{"value":"choice","type":"string"},{"value":"text","type":"string"}],"optional":false,"required":false},{"name":"open","type":"boolean","mutable":false,"attr":"open","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"placeholder","type":"string","mutable":false,"attr":"placeholder","reflectToAttr":false,"docs":"For text input challenges, the placeholder to display inside the input field.","docsTags":[],"default":"\'Enter your PIN...\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"step","type":"number","mutable":false,"attr":"step","reflectToAttr":false,"docs":"Which step this confirmation is for, in a multi-step process. Ignored if `steps` is < 2.","docsTags":[],"default":"1","values":[{"type":"number"}],"optional":false,"required":false},{"name":"steps","type":"number","mutable":false,"attr":"steps","reflectToAttr":false,"docs":"How many steps exist in a multi-step process. Set to 1 for a single-step process (hides the indicator).","docsTags":[],"default":"3","values":[{"type":"number"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the closure reason.","docsTags":[]},{"event":"done","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the closure reason.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-button"],"dependencyGraph":{"verdocs-kba-dialog":["verdocs-button"]}},{"filePath":"./src/components/controls/verdocs-loader/verdocs-loader.tsx","encapsulation":"none","tag":"verdocs-loader","docs":"Animated loader placeholder. There are currently no configuration options for this control.","docsTags":[],"usage":{},"props":[],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-preview","verdocs-sign","verdocs-template-fields","verdocs-view"],"dependencies":[],"dependencyGraph":{"verdocs-preview":["verdocs-loader"],"verdocs-sign":["verdocs-loader"],"verdocs-template-fields":["verdocs-loader"],"verdocs-view":["verdocs-loader"]}},{"filePath":"./src/components/dialogs/verdocs-ok-dialog/verdocs-ok-dialog.tsx","encapsulation":"none","tag":"verdocs-ok-dialog","docs":"Display a simple text dialog box with an Ok button. This adds a partially-transparent overlay and screen-centered dialog\\nbox with a message and optional header/title. An OK button is shown that will dismiss the message.\\nIt can also be dismissed by clicking the background overlay.","docsTags":[],"usage":{},"props":[{"name":"cancel","type":"boolean","mutable":false,"attr":"cancel","reflectToAttr":false,"docs":"If set, a cancel button will also be displayed. Note that the dialog is always cancelable by clicking the background\\noverlay to dismiss it.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"heading","type":"string","mutable":false,"attr":"heading","reflectToAttr":false,"docs":"The title of the dialog. \\"title\\" is a reserved word, so we use heading.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"message","type":"string","mutable":false,"attr":"message","reflectToAttr":false,"docs":"The message content to display.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"open","type":"boolean","mutable":false,"attr":"open","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"closed","detail":"\\"cancel\\" | \\"ok\\"","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the closure reason.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-auth"],"dependencies":["verdocs-button"],"dependencyGraph":{"verdocs-ok-dialog":["verdocs-button"],"verdocs-auth":["verdocs-ok-dialog"]}},{"filePath":"./src/components/controls/verdocs-organization-card/verdocs-organization-card.tsx","encapsulation":"none","tag":"verdocs-organization-card","docs":"Display a pop-up describing the company that was hovered over","docsTags":[],"usage":{},"props":[{"name":"organization","type":"IOrganization","mutable":false,"reflectToAttr":false,"docs":"The organization to display","docsTags":[],"values":[{"type":"IOrganization"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/embeds/verdocs-preview/verdocs-preview.tsx","encapsulation":"none","tag":"verdocs-preview","docs":"Display a template preview experience.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The ID of the template to create the document from.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-view","verdocs-loader"],"dependencyGraph":{"verdocs-preview":["verdocs-view","verdocs-loader"],"verdocs-view":["verdocs-loader","verdocs-document-page"]}},{"filePath":"./src/components/elements/verdocs-quick-functions/verdocs-quick-functions.tsx","encapsulation":"none","tag":"verdocs-quick-functions","docs":"Display quick-function buttons for creating templates and documents.\\n\\nAuthentication is required to demonstrate this Element. You may do this in Storybook by using the Auth\\nembed. This Element will reuse the same session produced by logging in via that Embed.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"createDocument","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when an entry is clicked.","docsTags":[]},{"event":"createTemplate","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when an entry is clicked.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-search"],"dependencies":[],"dependencyGraph":{"verdocs-search":["verdocs-quick-functions"]}},{"filePath":"./src/components/controls/verdocs-radio-button/verdocs-radio-button.tsx","encapsulation":"none","tag":"verdocs-radio-button","docs":"Displays a radio button. Note that this is different from the `verdocs-field-radio-button` component, which is designed\\nto be used in signing experiences and contains settings that connect to template fields. This is just a simple radio\\nbutton for UI displays e.g. dialogs and .","docsTags":[],"usage":{},"props":[{"name":"checked","type":"boolean","mutable":false,"attr":"checked","reflectToAttr":false,"docs":"Whether the radio button is currently selected.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"If set, the button will still be displayed but not selectable.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","mutable":false,"attr":"name","reflectToAttr":false,"docs":"HTML form field name for the input.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"value","type":"string","mutable":false,"attr":"value","reflectToAttr":false,"docs":"Value to track with the input.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"selected","detail":"{ value: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the input field value changes. Note that this will only be fired on blur, tab-out, ENTER key press, etc.\\nIt is generally the best event to subscribe to than `input` for most cases EXCEPT autocomplete fields that need to see every\\nkeypress.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-sender-dialog"],"dependencies":[],"dependencyGraph":{"verdocs-template-sender-dialog":["verdocs-radio-button"]}},{"filePath":"./src/components/embeds/verdocs-search/verdocs-search.tsx","encapsulation":"none","tag":"verdocs-search","docs":"","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-search-box","verdocs-search-activity","verdocs-quick-functions"],"dependencyGraph":{"verdocs-search":["verdocs-search-box","verdocs-search-activity","verdocs-quick-functions"]}},{"filePath":"./src/components/elements/verdocs-search-activity/verdocs-search-activity.tsx","encapsulation":"none","tag":"verdocs-search-activity","docs":"Display a list of starred items.\\n\\nAuthentication is required to demonstrate this Element. You may do this in Storybook by using the Auth\\nembed. This Element will reuse the same session produced by logging in via that Embed.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"options","type":"any","mutable":false,"attr":"options","reflectToAttr":false,"docs":"","docsTags":[],"values":[{"type":"any"}],"optional":false,"required":false},{"name":"type","type":"\\"recent\\" | \\"saved\\" | \\"starred\\"","mutable":false,"attr":"type","reflectToAttr":false,"docs":"","docsTags":[],"default":"\'recent\'","values":[{"value":"recent","type":"string"},{"value":"saved","type":"string"},{"value":"starred","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"entrySelected","detail":"IRecentSearch","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when an entry is clicked.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-search"],"dependencies":[],"dependencyGraph":{"verdocs-search":["verdocs-search-activity"]}},{"filePath":"./src/components/elements/verdocs-search-box/verdocs-search-box.tsx","encapsulation":"none","tag":"verdocs-search-box","docs":"Displays a customizable input box for search queries.\\n\\nAuthentication is required to demonstrate this Element. You may do this in Storybook by using the Auth\\nembed. This Element will reuse the same session produced by logging in via that Embed.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"grabsFocus","type":"boolean","mutable":false,"attr":"grabs-focus","reflectToAttr":false,"docs":"If set, the input field will attempt to \\"grab\\" focus after being rendered.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"placeholder","type":"string","mutable":false,"attr":"placeholder","reflectToAttr":false,"docs":"The placeholder to display in the input field.","docsTags":[],"default":"\'search documents, templates, people...\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"query","type":"string","mutable":false,"attr":"query","reflectToAttr":false,"docs":"The text search string entered by the user.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"type","type":"\\"all\\" | \\"document\\" | \\"organization\\" | \\"template\\"","mutable":false,"attr":"type","reflectToAttr":false,"docs":"If set to a value other than \'all\', a removeable filter indicator will be displayed.","docsTags":[],"default":"\'all\'","values":[{"value":"all","type":"string"},{"value":"document","type":"string"},{"value":"organization","type":"string"},{"value":"template","type":"string"}],"optional":false,"required":false}],"methods":[{"name":"focusField","returns":{"type":"Promise<void>","docs":""},"signature":"focusField() => Promise<void>","parameters":[],"docs":"","docsTags":[]}],"events":[{"event":"queryChanged","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the query string.","docsTags":[]},{"event":"searchClicked","detail":"ISearchEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]},{"event":"typeChanged","detail":"\\"all\\" | \\"document\\" | \\"organization\\" | \\"template\\"","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-search"],"dependencies":[],"dependencyGraph":{"verdocs-search":["verdocs-search-box"]}},{"filePath":"./src/components/elements/verdocs-search-tabs/verdocs-search-tabs.tsx","encapsulation":"none","tag":"verdocs-search-tabs","docs":"","docsTags":[],"usage":{},"props":[],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/controls/verdocs-select-input/verdocs-select-input.tsx","encapsulation":"none","tag":"verdocs-select-input","docs":"Display a text input field. This is just a standard HTML input field with minimal markup to fit the\\nvisual styles of the other components. Note that events \\"bubble\\" from the input field to the container,\\nso you can subscribe to the same DOM events (input, blur, etc) that a normal input would emmit.","docsTags":[],"usage":{},"props":[{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Should the field be disabled?","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"The label for the field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"options","type":"{ label: string; value: string; }[]","mutable":false,"reflectToAttr":false,"docs":"The options to list.","docsTags":[],"values":[{"type":"{ label: string; value: string; }[]"}],"optional":false,"required":false},{"name":"value","type":"string","mutable":false,"attr":"value","reflectToAttr":false,"docs":"The initial value for the input field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-date","verdocs-field-initial","verdocs-field-signature","verdocs-field-textarea","verdocs-field-textbox","verdocs-field-timestamp"],"dependencies":[],"dependencyGraph":{"verdocs-field-date":["verdocs-select-input"],"verdocs-field-initial":["verdocs-select-input"],"verdocs-field-signature":["verdocs-select-input"],"verdocs-field-textarea":["verdocs-select-input"],"verdocs-field-textbox":["verdocs-select-input"],"verdocs-field-timestamp":["verdocs-select-input"]}},{"filePath":"./src/components/embeds/verdocs-send/verdocs-send.tsx","encapsulation":"none","tag":"verdocs-send","docs":"Display a form to collect recipient information for a new Document. If used anonymously, the specified `templateId` must be public.\\nIf the user is authenticated","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The ID of the template to create the document from.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"The user canceled the process.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]},{"event":"send","detail":"{ recipientsAssigned: IRole[]; }","bubbles":true,"cancelable":true,"composed":true,"docs":"The user completed the form and clicked send.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-contact-picker","verdocs-button"],"dependencyGraph":{"verdocs-send":["verdocs-contact-picker","verdocs-button"],"verdocs-contact-picker":["verdocs-toggle-button","verdocs-button"]}},{"filePath":"./src/components/embeds/verdocs-sign/verdocs-sign.tsx","encapsulation":"none","tag":"verdocs-sign","docs":"Display a document signing experience.\\n\\n***NOTE: This sample document will reset every 10 minutes...***","docsTags":[],"usage":{},"props":[{"name":"documentId","type":"string","mutable":false,"attr":"document-id","reflectToAttr":false,"docs":"The ID of the document to sign.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false},{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"inviteCode","type":"string","mutable":false,"attr":"invite-code","reflectToAttr":false,"docs":"The invite code for the signer.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false},{"name":"roleId","type":"string","mutable":false,"attr":"role-id","reflectToAttr":false,"docs":"The name of the role that will be signing.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-field-checkbox","verdocs-field-radio-button","verdocs-dropdown","verdocs-button","verdocs-view","verdocs-loader"],"dependencyGraph":{"verdocs-sign":["verdocs-field-checkbox","verdocs-field-radio-button","verdocs-dropdown","verdocs-button","verdocs-view","verdocs-loader"],"verdocs-view":["verdocs-loader","verdocs-document-page"]}},{"filePath":"./src/components/dialogs/verdocs-signature-dialog/verdocs-signature-dialog.tsx","encapsulation":"none","tag":"verdocs-signature-dialog","docs":"Display a dialog that allows the user to specify a signature image, either by using a signature-font-generated image\\nbased on their full name, or by hand-drawing their signature with a mouse or tablet.","docsTags":[],"usage":{},"props":[{"name":"name","type":"string","mutable":false,"attr":"name","reflectToAttr":false,"docs":"Initial signature text","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"open","type":"boolean","mutable":false,"attr":"open","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"adopt","detail":"string","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when a signature is adopted.","docsTags":[]},{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the step is cancelled.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-signature"],"dependencies":["verdocs-text-input","verdocs-button"],"dependencyGraph":{"verdocs-signature-dialog":["verdocs-text-input","verdocs-button"],"verdocs-field-signature":["verdocs-signature-dialog"]}},{"filePath":"./src/components/controls/verdocs-status-indicator/verdocs-status-indicator.tsx","encapsulation":"none","tag":"verdocs-status-indicator","docs":"Displays an icon and message describing a document\'s completion status. For convenience, the status may be passed in either\\ndirectly as a status field or the whole document object may be passed in.\\n\\nIf the document is provided, the status flag will indicate the document\'s overall status. This also makes the component clickable\\nto display a popup panel with per-recipient status data.\\n\\nIf the status is provided as a string it can be either a `TRecipientStatus` or `TDocumentStatus` value.","docsTags":[],"usage":{},"props":[{"name":"document","type":"IDocument","mutable":false,"reflectToAttr":false,"docs":"The document to display status for. Ignored if `status` is set directly.","docsTags":[],"values":[{"type":"IDocument"}],"optional":true,"required":false},{"name":"size","type":"\\"normal\\" | \\"small\\"","mutable":false,"attr":"size","reflectToAttr":false,"docs":"The size (height) of the indicator. The small variant is suitable for use in densely populated components such as table rows.","docsTags":[],"default":"\'normal\'","values":[{"value":"normal","type":"string"},{"value":"small","type":"string"}],"optional":false,"required":false},{"name":"status","type":"\\"accepted\\" | \\"canceled\\" | \\"complete\\" | \\"declined\\" | \\"in progress\\" | \\"invited\\" | \\"opened\\" | \\"pending\\" | \\"signed\\" | \\"submitted\\"","mutable":false,"attr":"status","reflectToAttr":false,"docs":"The status to display.","docsTags":[],"values":[{"value":"accepted","type":"string"},{"value":"canceled","type":"string"},{"value":"complete","type":"string"},{"value":"declined","type":"string"},{"value":"in progress","type":"string"},{"value":"invited","type":"string"},{"value":"opened","type":"string"},{"value":"pending","type":"string"},{"value":"signed","type":"string"},{"value":"submitted","type":"string"}],"optional":true,"required":false},{"name":"theme","type":"\\"dark\\" | \\"light\\"","mutable":false,"attr":"theme","reflectToAttr":false,"docs":"The theme to use for diplay.","docsTags":[],"default":"\'light\'","values":[{"value":"dark","type":"string"},{"value":"light","type":"string"}],"optional":true,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/controls/verdocs-template-card/verdocs-template-card.tsx","encapsulation":"none","tag":"verdocs-template-card","docs":"Displays a summary of a template","docsTags":[],"usage":{},"props":[{"name":"template","type":"ITemplate","mutable":false,"reflectToAttr":false,"docs":"The template for which the card will be rendered.","docsTags":[],"values":[{"type":"ITemplate"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/elements/verdocs-template-create/verdocs-template-create.tsx","encapsulation":"none","tag":"verdocs-template-create","docs":"Displays a file upload mechanism suitable for the first step of creating a template.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"fileUploaded","detail":"{ filePath: string; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-build"],"dependencies":["verdocs-button"],"dependencyGraph":{"verdocs-template-create":["verdocs-button"],"verdocs-build":["verdocs-template-create"]}},{"filePath":"./src/components/elements/verdocs-template-fields/verdocs-template-fields.tsx","encapsulation":"none","tag":"verdocs-template-fields","docs":"Displays a builder experience for laying out fields in a template. Note that this experience requires a large display area to\\npresent all of the required controls, so it is primarily intended to be used in desktop environments.","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateId","type":"string","mutable":false,"attr":"template-id","reflectToAttr":false,"docs":"The ID of the template to create the document from.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"save","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the fields are saved.","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":["verdocs-toolbar-icon","verdocs-field-signature","verdocs-view","verdocs-loader"],"dependencyGraph":{"verdocs-template-fields":["verdocs-toolbar-icon","verdocs-field-signature","verdocs-view","verdocs-loader"],"verdocs-field-signature":["verdocs-signature-dialog","verdocs-button-panel","verdocs-select-input","verdocs-text-input"],"verdocs-signature-dialog":["verdocs-text-input","verdocs-button"],"verdocs-view":["verdocs-loader","verdocs-document-page"]}},{"filePath":"./src/components/elements/verdocs-template-properties/verdocs-template-properties.tsx","encapsulation":"none","tag":"verdocs-template-properties","docs":"Displays a contact picker suitable for filling out Recipient objects when sending Documents.\\n\\nThis picker can also be integrated with a backend to provide contact list / suggestion / address-book style behavior. As the\\nuser interacts with the component, the text entered in the name field is sent back to the parent via the `searchContacts` event.\\nThe parent can use that text as a query string to call a backend to obtain appropriate contacts to show. This list may also be\\nhard-coded ahead of time to provide the user with smart suggestions on initial display, such as \\"Recently Used\\" contacts, or\\nto always display the user\'s own contact record.","docsTags":[],"usage":{},"props":[{"name":"contactSuggestions","type":"(IEmailContact | IPhoneContact)[]","mutable":false,"reflectToAttr":false,"docs":"If set, suggestions will be displayed in a drop-down list to the user. It is recommended that the number\\nof suggestions be limited to the 5 best matching records.","docsTags":[],"default":"[]","values":[{"type":"(IEmailContact"},{"type":"IPhoneContact)[]"}],"optional":false,"required":false},{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateRole","type":"IRole","mutable":false,"reflectToAttr":false,"docs":"The role that this contact will be assigned to.","docsTags":[],"default":"null","values":[{"type":"IRole"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"contactSelected","detail":"IContactSelectEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]},{"event":"searchContacts","detail":"IContactSearchEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user enters text in the search field. The calling application may use this to update\\nthe `contactSuggestions` property.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/elements/verdocs-template-recipients/verdocs-template-recipients.tsx","encapsulation":"none","tag":"verdocs-template-recipients","docs":"Displays a contact picker suitable for filling out Recipient objects when sending Documents.\\n\\nThis picker can also be integrated with a backend to provide contact list / suggestion / address-book style behavior. As the\\nuser interacts with the component, the text entered in the name field is sent back to the parent via the `searchContacts` event.\\nThe parent can use that text as a query string to call a backend to obtain appropriate contacts to show. This list may also be\\nhard-coded ahead of time to provide the user with smart suggestions on initial display, such as \\"Recently Used\\" contacts, or\\nto always display the user\'s own contact record.","docsTags":[],"usage":{},"props":[{"name":"contactSuggestions","type":"(IEmailContact | IPhoneContact)[]","mutable":false,"reflectToAttr":false,"docs":"If set, suggestions will be displayed in a drop-down list to the user. It is recommended that the number\\nof suggestions be limited to the 5 best matching records.","docsTags":[],"default":"[]","values":[{"type":"(IEmailContact"},{"type":"IPhoneContact)[]"}],"optional":false,"required":false},{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"templateRole","type":"IRole","mutable":false,"reflectToAttr":false,"docs":"The role that this contact will be assigned to.","docsTags":[],"default":"null","values":[{"type":"IRole"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user cancels the dialog.","docsTags":[]},{"event":"contactSelected","detail":"IContactSelectEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user changes the type.","docsTags":[]},{"event":"searchContacts","detail":"IContactSearchEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the user enters text in the search field. The calling application may use this to update\\nthe `contactSuggestions` property.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-build"],"dependencies":["verdocs-button","verdocs-template-sender-dialog"],"dependencyGraph":{"verdocs-template-recipients":["verdocs-button","verdocs-template-sender-dialog"],"verdocs-template-sender-dialog":["verdocs-radio-button","verdocs-help-icon","verdocs-button"],"verdocs-build":["verdocs-template-recipients"]}},{"filePath":"./src/components/dialogs/verdocs-template-sender-dialog/verdocs-template-sender-dialog.tsx","encapsulation":"none","tag":"verdocs-template-sender-dialog","docs":"Display a dialog that allows a template sender to be selected.","docsTags":[],"usage":{},"props":[{"name":"open","type":"boolean","mutable":false,"attr":"open","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"value","type":"TemplateSenderTypes.CREATOR | TemplateSenderTypes.EVERYONE | TemplateSenderTypes.EVERYONE_AS_CREATOR | TemplateSenderTypes.ORGANIZATION_MEMBER | TemplateSenderTypes.ORGANIZATION_MEMBER_AS_CREATOR","mutable":false,"attr":"value","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"TemplateSenderTypes.EVERYONE","values":[{"type":"TemplateSenderTypes.CREATOR"},{"type":"TemplateSenderTypes.EVERYONE"},{"type":"TemplateSenderTypes.EVERYONE_AS_CREATOR"},{"type":"TemplateSenderTypes.ORGANIZATION_MEMBER"},{"type":"TemplateSenderTypes.ORGANIZATION_MEMBER_AS_CREATOR"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the closure reason.","docsTags":[]},{"event":"done","detail":"{ sender: TemplateSenderTypes; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the closure reason.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-recipients"],"dependencies":["verdocs-radio-button","verdocs-help-icon","verdocs-button"],"dependencyGraph":{"verdocs-template-sender-dialog":["verdocs-radio-button","verdocs-help-icon","verdocs-button"],"verdocs-template-recipients":["verdocs-template-sender-dialog"]}},{"filePath":"./src/components/controls/verdocs-template-tags/verdocs-template-tags.tsx","encapsulation":"none","tag":"verdocs-template-tags","docs":"Displays a message listing a template\'s tags.","docsTags":[],"usage":{},"props":[{"name":"tags","type":"any[]","mutable":false,"reflectToAttr":false,"docs":"The tags to display","docsTags":[],"values":[{"type":"any[]"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/controls/verdocs-text-input/verdocs-text-input.tsx","encapsulation":"none","tag":"verdocs-text-input","docs":"Display a text input field. This is just a standard HTML input field with minimal markup to fit the\\nvisual styles of the other components. Note that events \\"bubble\\" from the input field to the container,\\nso you can subscribe to the same DOM events (input, blur, etc) that a normal input would emmit.","docsTags":[],"usage":{},"props":[{"name":"autocomplete","type":"string","mutable":false,"attr":"autocomplete","reflectToAttr":false,"docs":"If desired, the autocomplete attribute to set.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Should the field be disabled?","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"The label for the field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"placeholder","type":"string","mutable":false,"attr":"placeholder","reflectToAttr":false,"docs":"The placeholder for the field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"type","type":"\\"email\\" | \\"number\\" | \\"password\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\"","mutable":false,"attr":"type","reflectToAttr":false,"docs":"The type of field to render. Only text-type fields are allowed here for the current styling. Additional types\\n(e.g. a date picker) will be supported by other controls in the future.","docsTags":[],"default":"\'text\'","values":[{"value":"email","type":"string"},{"value":"number","type":"string"},{"value":"password","type":"string"},{"value":"search","type":"string"},{"value":"tel","type":"string"},{"value":"text","type":"string"},{"value":"url","type":"string"}],"optional":false,"required":false},{"name":"value","type":"string","mutable":false,"attr":"value","reflectToAttr":false,"docs":"The initial value for the input field.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-auth","verdocs-field-date","verdocs-field-initial","verdocs-field-signature","verdocs-field-textarea","verdocs-field-textbox","verdocs-field-timestamp","verdocs-initial-dialog","verdocs-signature-dialog"],"dependencies":[],"dependencyGraph":{"verdocs-auth":["verdocs-text-input"],"verdocs-field-date":["verdocs-text-input"],"verdocs-field-initial":["verdocs-text-input"],"verdocs-field-signature":["verdocs-text-input"],"verdocs-field-textarea":["verdocs-text-input"],"verdocs-field-textbox":["verdocs-text-input"],"verdocs-field-timestamp":["verdocs-text-input"],"verdocs-initial-dialog":["verdocs-text-input"],"verdocs-signature-dialog":["verdocs-text-input"]}},{"filePath":"./src/components/controls/verdocs-toggle/verdocs-toggle.tsx","encapsulation":"none","tag":"verdocs-toggle","docs":"Displays a label and a set of buttons, also allowing a default selection of a button\\n\\n```typescript\\n\\n```","docsTags":[],"usage":{},"props":[{"name":"options","type":"IToggleIconButtons","mutable":false,"reflectToAttr":false,"docs":"The tags to display","docsTags":[],"values":[{"type":"IToggleIconButtons"}],"optional":false,"required":false},{"name":"theme","type":"\\"dark\\" | \\"light\\"","mutable":false,"attr":"theme","reflectToAttr":false,"docs":"The \\"theme\\" to be used","docsTags":[],"values":[{"value":"dark","type":"string"},{"value":"light","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":[],"dependencies":[],"dependencyGraph":{}},{"filePath":"./src/components/controls/verdocs-toggle-button/verdocs-toggle-button.tsx","encapsulation":"none","tag":"verdocs-toggle-button","docs":"Displays a single button that can be toggled on or off by clicking it.","docsTags":[],"usage":{},"props":[{"name":"active","type":"boolean","mutable":false,"attr":"active","reflectToAttr":false,"docs":"","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"icon","type":"string","mutable":false,"attr":"icon","reflectToAttr":false,"docs":"If set, should be an SVG object. This will be rendered as the button\'s visible element. If icon is supplied, label is ignored.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":true,"required":false},{"name":"label","type":"string","mutable":false,"attr":"label","reflectToAttr":false,"docs":"If set, should be an SVG object. This will be rendered as the button\'s visible element. If icon is supplied, label is ignored.","docsTags":[],"default":"null","values":[{"type":"string"}],"optional":true,"required":false},{"name":"size","type":"\\"normal\\" | \\"small\\"","mutable":false,"attr":"size","reflectToAttr":false,"docs":"How large the button should be. Small buttons are intended for dialog boxes and other smaller scale UI regions.","docsTags":[],"default":"\'normal\'","values":[{"value":"normal","type":"string"},{"value":"small","type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"toggle","detail":"{ active: boolean; }","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the button is pressed.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-contact-picker"],"dependencies":[],"dependencyGraph":{"verdocs-contact-picker":["verdocs-toggle-button"]}},{"filePath":"./src/components/controls/verdocs-toolbar-icon/verdocs-toolbar-icon.tsx","encapsulation":"none","tag":"verdocs-toolbar-icon","docs":"Displays a simple help icon. Upon hover or focus, a tooltip will be displayed with help text.","docsTags":[],"usage":{},"props":[{"name":"icon","type":"string","mutable":false,"attr":"icon","reflectToAttr":false,"docs":"SVG icon to display","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"text","type":"string","mutable":false,"attr":"text","reflectToAttr":false,"docs":"Help text to display on hover/focus","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"press","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Triggered when the icon is pressed","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-template-fields"],"dependencies":[],"dependencyGraph":{"verdocs-template-fields":["verdocs-toolbar-icon"]}},{"filePath":"./src/components/dialogs/verdocs-upload-dialog/verdocs-upload-dialog.tsx","encapsulation":"none","tag":"verdocs-upload-dialog","docs":"Display a file upload experience.","docsTags":[],"usage":{},"props":[{"name":"open","type":"boolean","mutable":false,"attr":"open","reflectToAttr":false,"docs":"Whether the dialog is currently being displayed. This allows it to be added to the DOM before being displayed.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"cancel","detail":"any","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the closure reason.","docsTags":[]},{"event":"done","detail":"FileWithData[]","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired when the dialog is closed. The event data will contain the closure reason.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-field-attachment"],"dependencies":["verdocs-button"],"dependencyGraph":{"verdocs-upload-dialog":["verdocs-button"],"verdocs-field-attachment":["verdocs-upload-dialog"]}},{"filePath":"./src/components/embeds/verdocs-view/verdocs-view.tsx","encapsulation":"none","tag":"verdocs-view","docs":"","docsTags":[],"usage":{},"props":[{"name":"endpoint","type":"VerdocsEndpoint","mutable":false,"reflectToAttr":false,"docs":"The endpoint to use to communicate with Verdocs. If not set, the default endpoint will be used.","docsTags":[],"default":"VerdocsEndpoint.getDefault()","values":[{"type":"VerdocsEndpoint"}],"optional":false,"required":false},{"name":"pageLayers","type":"IPageLayer[]","mutable":false,"reflectToAttr":false,"docs":"Layers will be passed through to the individual pages inside this component.","docsTags":[],"default":"[\\n    {name: \'page\', type: \'canvas\'},\\n    {name: \'controls\', type: \'div\'},\\n  ]","values":[{"type":"IPageLayer[]"}],"optional":false,"required":false},{"name":"rotation","type":"0 | 180 | 270 | 90","mutable":false,"attr":"rotation","reflectToAttr":false,"docs":"Rotate the PDF in degrees","docsTags":[],"default":"0","values":[{"value":"0","type":"number"},{"value":"180","type":"number"},{"value":"270","type":"number"},{"value":"90","type":"number"}],"optional":false,"required":false},{"name":"source","type":"string","mutable":false,"attr":"source","reflectToAttr":false,"docs":"Src of the PDF to load and render","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"pageChange","detail":"number","bubbles":true,"cancelable":true,"composed":true,"docs":"Fired when a page has been changed","docsTags":[]},{"event":"pageInit","detail":"number","bubbles":true,"cancelable":true,"composed":true,"docs":"Fired when a page has been initialized","docsTags":[]},{"event":"pageLoaded","detail":"number","bubbles":true,"cancelable":true,"composed":true,"docs":"Fired when a page has been changed","docsTags":[]},{"event":"pageRendered","detail":"IPageRenderEvent","bubbles":true,"cancelable":true,"composed":true,"docs":"Fired when a page has been rendered","docsTags":[]},{"event":"scaleChange","detail":"number","bubbles":true,"cancelable":true,"composed":true,"docs":"Fired when a page has been scaled","docsTags":[]},{"event":"sdkError","detail":"SDKError","bubbles":true,"cancelable":true,"composed":true,"docs":"Event fired if an error occurs. The event details will contain information about the error. Most errors will\\nterminate the process, and the calling application should correct the condition and re-render the component.","docsTags":[]}],"listeners":[],"styles":[],"slots":[],"parts":[],"dependents":["verdocs-preview","verdocs-sign","verdocs-template-fields"],"dependencies":["verdocs-loader","verdocs-document-page"],"dependencyGraph":{"verdocs-view":["verdocs-loader","verdocs-document-page"],"verdocs-preview":["verdocs-view"],"verdocs-sign":["verdocs-view"],"verdocs-template-fields":["verdocs-view"]}}]}')},"./dist/esm lazy recursive ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$":function(module,exports,__webpack_require__){var map={"./verdocs-auth.entry.js":["./dist/esm/verdocs-auth.entry.js",0,1,2,23],"./verdocs-build.entry.js":["./dist/esm/verdocs-build.entry.js",0,1,2,36],"./verdocs-button-panel_3.entry.js":["./dist/esm/verdocs-button-panel_3.entry.js",3,37],"./verdocs-button.entry.js":["./dist/esm/verdocs-button.entry.js",38],"./verdocs-contact-picker.entry.js":["./dist/esm/verdocs-contact-picker.entry.js",0,1,2,39],"./verdocs-document-page_3.entry.js":["./dist/esm/verdocs-document-page_3.entry.js",0,1,2,13],"./verdocs-dropdown_3.entry.js":["./dist/esm/verdocs-dropdown_3.entry.js",3,24],"./verdocs-field-attachment.entry.js":["./dist/esm/verdocs-field-attachment.entry.js",40],"./verdocs-field-date.entry.js":["./dist/esm/verdocs-field-date.entry.js",15],"./verdocs-field-dropdown.entry.js":["./dist/esm/verdocs-field-dropdown.entry.js",25],"./verdocs-field-initial.entry.js":["./dist/esm/verdocs-field-initial.entry.js",26],"./verdocs-field-payment.entry.js":["./dist/esm/verdocs-field-payment.entry.js",27],"./verdocs-field-signature_2.entry.js":["./dist/esm/verdocs-field-signature_2.entry.js",3,28],"./verdocs-field-textarea.entry.js":["./dist/esm/verdocs-field-textarea.entry.js",29],"./verdocs-field-textbox.entry.js":["./dist/esm/verdocs-field-textbox.entry.js",3,30],"./verdocs-field-timestamp.entry.js":["./dist/esm/verdocs-field-timestamp.entry.js",31],"./verdocs-help-icon_3.entry.js":["./dist/esm/verdocs-help-icon_3.entry.js",3,22],"./verdocs-initial-dialog.entry.js":["./dist/esm/verdocs-initial-dialog.entry.js",41],"./verdocs-kba-dialog.entry.js":["./dist/esm/verdocs-kba-dialog.entry.js",42],"./verdocs-ok-dialog.entry.js":["./dist/esm/verdocs-ok-dialog.entry.js",43],"./verdocs-organization-card.entry.js":["./dist/esm/verdocs-organization-card.entry.js",44],"./verdocs-preview.entry.js":["./dist/esm/verdocs-preview.entry.js",0,1,2,18],"./verdocs-quick-functions_3.entry.js":["./dist/esm/verdocs-quick-functions_3.entry.js",0,1,2,20],"./verdocs-search-tabs.entry.js":["./dist/esm/verdocs-search-tabs.entry.js",45],"./verdocs-search.entry.js":["./dist/esm/verdocs-search.entry.js",0,1,2,46],"./verdocs-send.entry.js":["./dist/esm/verdocs-send.entry.js",0,1,2,17],"./verdocs-sign.entry.js":["./dist/esm/verdocs-sign.entry.js",0,1,2,19],"./verdocs-signature-dialog.entry.js":["./dist/esm/verdocs-signature-dialog.entry.js",47],"./verdocs-status-indicator.entry.js":["./dist/esm/verdocs-status-indicator.entry.js",3,16],"./verdocs-template-card.entry.js":["./dist/esm/verdocs-template-card.entry.js",48],"./verdocs-template-create_2.entry.js":["./dist/esm/verdocs-template-create_2.entry.js",0,1,2,7,49],"./verdocs-template-fields.entry.js":["./dist/esm/verdocs-template-fields.entry.js",0,1,2,7,21],"./verdocs-template-properties.entry.js":["./dist/esm/verdocs-template-properties.entry.js",0,1,2,50],"./verdocs-template-tags.entry.js":["./dist/esm/verdocs-template-tags.entry.js",51],"./verdocs-toggle-button.entry.js":["./dist/esm/verdocs-toggle-button.entry.js",52],"./verdocs-toggle.entry.js":["./dist/esm/verdocs-toggle.entry.js",53],"./verdocs-upload-dialog.entry.js":["./dist/esm/verdocs-upload-dialog.entry.js",32]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((function(){return __webpack_require__(id)}))}webpackAsyncContext.keys=function webpackAsyncContextKeys(){return Object.keys(map)},webpackAsyncContext.id="./dist/esm lazy recursive ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$",module.exports=webpackAsyncContext},"./dist/esm/index-bc9b2c82.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Fragment})),__webpack_require__.d(__webpack_exports__,"b",(function(){return Host})),__webpack_require__.d(__webpack_exports__,"c",(function(){return bootstrapLazy})),__webpack_require__.d(__webpack_exports__,"d",(function(){return createEvent})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getElement})),__webpack_require__.d(__webpack_exports__,"f",(function(){return h})),__webpack_require__.d(__webpack_exports__,"g",(function(){return promiseResolve})),__webpack_require__.d(__webpack_exports__,"h",(function(){return registerInstance}));__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.set.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.string.trim.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.some.js"),__webpack_require__("./node_modules/core-js/modules/es.parse-float.js"),__webpack_require__("./node_modules/core-js/modules/es.number.is-nan.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.map.js"),__webpack_require__("./node_modules/core-js/modules/web.url.js"),__webpack_require__("./node_modules/core-js/modules/web.timers.js"),__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.reflect.construct.js");function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),Object.defineProperty(subClass,"prototype",{writable:!1}),superClass&&_setPrototypeOf(subClass,superClass)}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){if(call&&("object"==typeof call||"function"==typeof call))return call;if(void 0!==call)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(self)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _wrapNativeSuper(Class){var _cache="function"==typeof Map?new Map:void 0;return _wrapNativeSuper=function _wrapNativeSuper(Class){if(null===Class||!function _isNativeFunction(fn){return-1!==Function.toString.call(fn).indexOf("[native code]")}(Class))return Class;if("function"!=typeof Class)throw new TypeError("Super expression must either be null or a function");if(void 0!==_cache){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper)}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor)}return Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(Wrapper,Class)},_wrapNativeSuper(Class)}function _construct(Parent,args,Class){return _construct=_isNativeReflectConstruct()?Reflect.construct.bind():function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var instance=new(Function.bind.apply(Parent,a));return Class&&_setPrototypeOf(instance,Class.prototype),instance},_construct.apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return generator._invoke=function(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}(innerFn,self,context),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;this._invoke=function(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}}function maybeInvokeDelegate(delegate,context){var method=delegate.iterator[context.method];if(void 0===method){if(context.delegate=null,"throw"===context.method){if(delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method))return ContinueSentinel;context.method="throw",context.arg=new TypeError("The iterator does not provide a 'throw' method")}return ContinueSentinel}var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,define(Gp,"constructor",GeneratorFunctionPrototype),define(GeneratorFunctionPrototype,"constructor",GeneratorFunction),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(object){var keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var contentRef,hostTagName,useNativeShadowDom=!1,checkSlotFallbackVisibility=!1,checkSlotRelocate=!1,isSvgMode=!1,queuePending=!1,win="undefined"!=typeof window?window:{},doc=win.document||{head:{}},plt={$flags$:0,$resourcesUrl$:"",jmp:function jmp(h){return h()},raf:function raf(h){return requestAnimationFrame(h)},ael:function ael(el,eventName,listener,opts){return el.addEventListener(eventName,listener,opts)},rel:function rel(el,eventName,listener,opts){return el.removeEventListener(eventName,listener,opts)},ce:function ce(eventName,opts){return new CustomEvent(eventName,opts)}},promiseResolve=function promiseResolve(v){return Promise.resolve(v)},supportsConstructableStylesheets=function(){try{return new CSSStyleSheet,"function"==typeof(new CSSStyleSheet).replaceSync}catch(e){}return!1}(),HYDRATED_CSS="{visibility:hidden}.hydrated{visibility:inherit}",rootAppliedStyles=new WeakMap,registerStyle=function registerStyle(scopeId,cssText,allowCS){var style=styles.get(scopeId);supportsConstructableStylesheets&&allowCS?"string"==typeof(style=style||new CSSStyleSheet)?style=cssText:style.replaceSync(cssText):style=cssText,styles.set(scopeId,style)},attachStyles=function attachStyles(hostRef){var cmpMeta=hostRef.$cmpMeta$,elm=hostRef.$hostElement$,endAttachStyles=(cmpMeta.$tagName$,function(){});!function addStyle(styleContainerNode,cmpMeta,mode,hostElm){var scopeId=getScopeId(cmpMeta),style=styles.get(scopeId);if(styleContainerNode=11===styleContainerNode.nodeType?styleContainerNode:doc,style)if("string"==typeof style){styleContainerNode=styleContainerNode.head||styleContainerNode;var styleElm,appliedStyles=rootAppliedStyles.get(styleContainerNode);appliedStyles||rootAppliedStyles.set(styleContainerNode,appliedStyles=new Set),appliedStyles.has(scopeId)||((styleElm=doc.createElement("style")).innerHTML=style,styleContainerNode.insertBefore(styleElm,styleContainerNode.querySelector("link")),appliedStyles&&appliedStyles.add(scopeId))}else styleContainerNode.adoptedStyleSheets.includes(style)||(styleContainerNode.adoptedStyleSheets=[].concat(_toConsumableArray(styleContainerNode.adoptedStyleSheets),[style]))}(elm.getRootNode(),cmpMeta),endAttachStyles()},getScopeId=function getScopeId(cmp,mode){return"sc-"+cmp.$tagName$},EMPTY_OBJ={},isComplexType=function isComplexType(o){return"object"===(o=typeof o)||"function"===o},h=function h(nodeName,vnodeData){for(var child=null,key=null,slotName=null,simple=!1,lastSimple=!1,vNodeChildren=[],walk=function walk(c){for(var i=0;i<c.length;i++)child=c[i],Array.isArray(child)?walk(child):null!=child&&"boolean"!=typeof child&&((simple="function"!=typeof nodeName&&!isComplexType(child))&&(child=String(child)),simple&&lastSimple?vNodeChildren[vNodeChildren.length-1].$text$+=child:vNodeChildren.push(simple?newVNode(null,child):child),lastSimple=simple)},_len=arguments.length,children=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++)children[_key-2]=arguments[_key];if(walk(children),vnodeData){vnodeData.key&&(key=vnodeData.key),vnodeData.name&&(slotName=vnodeData.name);var classData=vnodeData.className||vnodeData.class;classData&&(vnodeData.class="object"!=typeof classData?classData:Object.keys(classData).filter((function(k){return classData[k]})).join(" "))}if("function"==typeof nodeName)return nodeName(null===vnodeData?{}:vnodeData,vNodeChildren,vdomFnUtils);var vnode=newVNode(nodeName,null);return vnode.$attrs$=vnodeData,vNodeChildren.length>0&&(vnode.$children$=vNodeChildren),vnode.$key$=key,vnode.$name$=slotName,vnode},newVNode=function newVNode(tag,text){var vnode={$flags$:0,$tag$:tag,$text$:text,$elm$:null,$children$:null,$attrs$:null,$key$:null,$name$:null};return vnode},Host={},vdomFnUtils={forEach:function forEach(children,cb){return children.map(convertToPublic).forEach(cb)},map:function map(children,cb){return children.map(convertToPublic).map(cb).map(convertToPrivate)}},convertToPublic=function convertToPublic(node){return{vattrs:node.$attrs$,vchildren:node.$children$,vkey:node.$key$,vname:node.$name$,vtag:node.$tag$,vtext:node.$text$}},convertToPrivate=function convertToPrivate(node){if("function"==typeof node.vtag){var vnodeData=Object.assign({},node.vattrs);return node.vkey&&(vnodeData.key=node.vkey),node.vname&&(vnodeData.name=node.vname),h.apply(void 0,[node.vtag,vnodeData].concat(_toConsumableArray(node.vchildren||[])))}var vnode=newVNode(node.vtag,node.vtext);return vnode.$attrs$=node.vattrs,vnode.$children$=node.vchildren,vnode.$key$=node.vkey,vnode.$name$=node.vname,vnode},setAccessor=function setAccessor(elm,memberName,oldValue,newValue,isSvg,flags){if(oldValue!==newValue){var isProp=isMemberInElement(elm,memberName),ln=memberName.toLowerCase();if("class"===memberName){var classList=elm.classList,oldClasses=parseClassList(oldValue),newClasses=parseClassList(newValue);classList.remove.apply(classList,_toConsumableArray(oldClasses.filter((function(c){return c&&!newClasses.includes(c)})))),classList.add.apply(classList,_toConsumableArray(newClasses.filter((function(c){return c&&!oldClasses.includes(c)}))))}else if("style"===memberName){for(var prop in oldValue)newValue&&null!=newValue[prop]||(prop.includes("-")?elm.style.removeProperty(prop):elm.style[prop]="");for(var _prop in newValue)oldValue&&newValue[_prop]===oldValue[_prop]||(_prop.includes("-")?elm.style.setProperty(_prop,newValue[_prop]):elm.style[_prop]=newValue[_prop])}else if("key"===memberName);else if("ref"===memberName)newValue&&newValue(elm);else if(isProp||"o"!==memberName[0]||"n"!==memberName[1]){var isComplex=isComplexType(newValue);if((isProp||isComplex&&null!==newValue)&&!isSvg)try{if(elm.tagName.includes("-"))elm[memberName]=newValue;else{var n=null==newValue?"":newValue;"list"===memberName?isProp=!1:null!=oldValue&&elm[memberName]==n||(elm[memberName]=n)}}catch(e){}null==newValue||!1===newValue?!1===newValue&&""!==elm.getAttribute(memberName)||elm.removeAttribute(memberName):(!isProp||4&flags||isSvg)&&!isComplex&&(newValue=!0===newValue?"":newValue,elm.setAttribute(memberName,newValue))}else memberName="-"===memberName[2]?memberName.slice(3):isMemberInElement(win,ln)?ln.slice(2):ln[2]+memberName.slice(3),oldValue&&plt.rel(elm,memberName,oldValue,!1),newValue&&plt.ael(elm,memberName,newValue,!1)}},parseClassListRegex=/\s/,parseClassList=function parseClassList(value){return value?value.split(parseClassListRegex):[]},updateElement=function updateElement(oldVnode,newVnode,isSvgMode,memberName){var elm=11===newVnode.$elm$.nodeType&&newVnode.$elm$.host?newVnode.$elm$.host:newVnode.$elm$,oldVnodeAttrs=oldVnode&&oldVnode.$attrs$||EMPTY_OBJ,newVnodeAttrs=newVnode.$attrs$||EMPTY_OBJ;for(memberName in oldVnodeAttrs)memberName in newVnodeAttrs||setAccessor(elm,memberName,oldVnodeAttrs[memberName],void 0,isSvgMode,newVnode.$flags$);for(memberName in newVnodeAttrs)setAccessor(elm,memberName,oldVnodeAttrs[memberName],newVnodeAttrs[memberName],isSvgMode,newVnode.$flags$)},createElm=function createElm(oldParentVNode,newParentVNode,childIndex,parentElm){var elm,childNode,oldVNode,newVNode=newParentVNode.$children$[childIndex],i=0;if(useNativeShadowDom||(checkSlotRelocate=!0,"slot"===newVNode.$tag$&&(newVNode.$flags$|=newVNode.$children$?2:1)),null!==newVNode.$text$)elm=newVNode.$elm$=doc.createTextNode(newVNode.$text$);else if(1&newVNode.$flags$)elm=newVNode.$elm$=doc.createTextNode("");else{if(isSvgMode||(isSvgMode="svg"===newVNode.$tag$),elm=newVNode.$elm$=doc.createElementNS(isSvgMode?"http://www.w3.org/2000/svg":"http://www.w3.org/1999/xhtml",2&newVNode.$flags$?"slot-fb":newVNode.$tag$),isSvgMode&&"foreignObject"===newVNode.$tag$&&(isSvgMode=!1),updateElement(null,newVNode,isSvgMode),newVNode.$children$)for(i=0;i<newVNode.$children$.length;++i)(childNode=createElm(oldParentVNode,newVNode,i))&&elm.appendChild(childNode);"svg"===newVNode.$tag$?isSvgMode=!1:"foreignObject"===elm.tagName&&(isSvgMode=!0)}return elm["s-hn"]=hostTagName,3&newVNode.$flags$&&(elm["s-sr"]=!0,elm["s-cr"]=contentRef,elm["s-sn"]=newVNode.$name$||"",(oldVNode=oldParentVNode&&oldParentVNode.$children$&&oldParentVNode.$children$[childIndex])&&oldVNode.$tag$===newVNode.$tag$&&oldParentVNode.$elm$&&putBackInOriginalLocation(oldParentVNode.$elm$,!1)),elm},putBackInOriginalLocation=function putBackInOriginalLocation(parentElm,recursive){plt.$flags$|=1;for(var oldSlotChildNodes=parentElm.childNodes,i=oldSlotChildNodes.length-1;i>=0;i--){var childNode=oldSlotChildNodes[i];childNode["s-hn"]!==hostTagName&&childNode["s-ol"]&&(parentReferenceNode(childNode).insertBefore(childNode,referenceNode(childNode)),childNode["s-ol"].remove(),childNode["s-ol"]=void 0,checkSlotRelocate=!0),recursive&&putBackInOriginalLocation(childNode,recursive)}plt.$flags$&=-2},addVnodes=function addVnodes(parentElm,before,parentVNode,vnodes,startIdx,endIdx){for(var childNode,containerElm=parentElm["s-cr"]&&parentElm["s-cr"].parentNode||parentElm;startIdx<=endIdx;++startIdx)vnodes[startIdx]&&(childNode=createElm(null,parentVNode,startIdx))&&(vnodes[startIdx].$elm$=childNode,containerElm.insertBefore(childNode,referenceNode(before)))},removeVnodes=function removeVnodes(vnodes,startIdx,endIdx,vnode,elm){for(;startIdx<=endIdx;++startIdx)(vnode=vnodes[startIdx])&&(elm=vnode.$elm$,callNodeRefs(vnode),checkSlotFallbackVisibility=!0,elm["s-ol"]?elm["s-ol"].remove():putBackInOriginalLocation(elm,!0),elm.remove())},updateChildren=function updateChildren(parentElm,oldCh,newVNode,newCh){for(var node,elmToMove,oldStartIdx=0,newStartIdx=0,idxInOld=0,i=0,oldEndIdx=oldCh.length-1,oldStartVnode=oldCh[0],oldEndVnode=oldCh[oldEndIdx],newEndIdx=newCh.length-1,newStartVnode=newCh[0],newEndVnode=newCh[newEndIdx];oldStartIdx<=oldEndIdx&&newStartIdx<=newEndIdx;)if(null==oldStartVnode)oldStartVnode=oldCh[++oldStartIdx];else if(null==oldEndVnode)oldEndVnode=oldCh[--oldEndIdx];else if(null==newStartVnode)newStartVnode=newCh[++newStartIdx];else if(null==newEndVnode)newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldStartVnode,newStartVnode))patch(oldStartVnode,newStartVnode),oldStartVnode=oldCh[++oldStartIdx],newStartVnode=newCh[++newStartIdx];else if(isSameVnode(oldEndVnode,newEndVnode))patch(oldEndVnode,newEndVnode),oldEndVnode=oldCh[--oldEndIdx],newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldStartVnode,newEndVnode))"slot"!==oldStartVnode.$tag$&&"slot"!==newEndVnode.$tag$||putBackInOriginalLocation(oldStartVnode.$elm$.parentNode,!1),patch(oldStartVnode,newEndVnode),parentElm.insertBefore(oldStartVnode.$elm$,oldEndVnode.$elm$.nextSibling),oldStartVnode=oldCh[++oldStartIdx],newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldEndVnode,newStartVnode))"slot"!==oldStartVnode.$tag$&&"slot"!==newEndVnode.$tag$||putBackInOriginalLocation(oldEndVnode.$elm$.parentNode,!1),patch(oldEndVnode,newStartVnode),parentElm.insertBefore(oldEndVnode.$elm$,oldStartVnode.$elm$),oldEndVnode=oldCh[--oldEndIdx],newStartVnode=newCh[++newStartIdx];else{for(idxInOld=-1,i=oldStartIdx;i<=oldEndIdx;++i)if(oldCh[i]&&null!==oldCh[i].$key$&&oldCh[i].$key$===newStartVnode.$key$){idxInOld=i;break}idxInOld>=0?((elmToMove=oldCh[idxInOld]).$tag$!==newStartVnode.$tag$?node=createElm(oldCh&&oldCh[newStartIdx],newVNode,idxInOld):(patch(elmToMove,newStartVnode),oldCh[idxInOld]=void 0,node=elmToMove.$elm$),newStartVnode=newCh[++newStartIdx]):(node=createElm(oldCh&&oldCh[newStartIdx],newVNode,newStartIdx),newStartVnode=newCh[++newStartIdx]),node&&parentReferenceNode(oldStartVnode.$elm$).insertBefore(node,referenceNode(oldStartVnode.$elm$))}oldStartIdx>oldEndIdx?addVnodes(parentElm,null==newCh[newEndIdx+1]?null:newCh[newEndIdx+1].$elm$,newVNode,newCh,newStartIdx,newEndIdx):newStartIdx>newEndIdx&&removeVnodes(oldCh,oldStartIdx,oldEndIdx)},isSameVnode=function isSameVnode(vnode1,vnode2){return vnode1.$tag$===vnode2.$tag$&&("slot"===vnode1.$tag$?vnode1.$name$===vnode2.$name$:vnode1.$key$===vnode2.$key$)},referenceNode=function referenceNode(node){return node&&node["s-ol"]||node},parentReferenceNode=function parentReferenceNode(node){return(node["s-ol"]?node["s-ol"]:node).parentNode},patch=function patch(oldVNode,newVNode){var defaultHolder,elm=newVNode.$elm$=oldVNode.$elm$,oldChildren=oldVNode.$children$,newChildren=newVNode.$children$,tag=newVNode.$tag$,text=newVNode.$text$;null===text?(isSvgMode="svg"===tag||"foreignObject"!==tag&&isSvgMode,"slot"===tag||updateElement(oldVNode,newVNode,isSvgMode),null!==oldChildren&&null!==newChildren?updateChildren(elm,oldChildren,newVNode,newChildren):null!==newChildren?(null!==oldVNode.$text$&&(elm.textContent=""),addVnodes(elm,null,newVNode,newChildren,0,newChildren.length-1)):null!==oldChildren&&removeVnodes(oldChildren,0,oldChildren.length-1),isSvgMode&&"svg"===tag&&(isSvgMode=!1)):(defaultHolder=elm["s-cr"])?defaultHolder.parentNode.textContent=text:oldVNode.$text$!==text&&(elm.data=text)},updateFallbackSlotVisibility=function updateFallbackSlotVisibility(elm){var childNode,i,ilen,j,slotNameAttr,nodeType,childNodes=elm.childNodes;for(i=0,ilen=childNodes.length;i<ilen;i++)if(1===(childNode=childNodes[i]).nodeType){if(childNode["s-sr"])for(slotNameAttr=childNode["s-sn"],childNode.hidden=!1,j=0;j<ilen;j++)if(nodeType=childNodes[j].nodeType,childNodes[j]["s-hn"]!==childNode["s-hn"]||""!==slotNameAttr){if(1===nodeType&&slotNameAttr===childNodes[j].getAttribute("slot")){childNode.hidden=!0;break}}else if(1===nodeType||3===nodeType&&""!==childNodes[j].textContent.trim()){childNode.hidden=!0;break}updateFallbackSlotVisibility(childNode)}},relocateNodes=[],relocateSlotContent=function relocateSlotContent(elm){for(var childNode,node,hostContentNodes,slotNameAttr,relocateNodeData,j,i=0,childNodes=elm.childNodes,ilen=childNodes.length;i<ilen;i++){if((childNode=childNodes[i])["s-sr"]&&(node=childNode["s-cr"])&&node.parentNode)for(hostContentNodes=node.parentNode.childNodes,slotNameAttr=childNode["s-sn"],j=hostContentNodes.length-1;j>=0;j--)(node=hostContentNodes[j])["s-cn"]||node["s-nr"]||node["s-hn"]===childNode["s-hn"]||(isNodeLocatedInSlot(node,slotNameAttr)?(relocateNodeData=relocateNodes.find((function(r){return r.$nodeToRelocate$===node})),checkSlotFallbackVisibility=!0,node["s-sn"]=node["s-sn"]||slotNameAttr,relocateNodeData?relocateNodeData.$slotRefNode$=childNode:relocateNodes.push({$slotRefNode$:childNode,$nodeToRelocate$:node}),node["s-sr"]&&relocateNodes.map((function(relocateNode){isNodeLocatedInSlot(relocateNode.$nodeToRelocate$,node["s-sn"])&&(relocateNodeData=relocateNodes.find((function(r){return r.$nodeToRelocate$===node})))&&!relocateNode.$slotRefNode$&&(relocateNode.$slotRefNode$=relocateNodeData.$slotRefNode$)}))):relocateNodes.some((function(r){return r.$nodeToRelocate$===node}))||relocateNodes.push({$nodeToRelocate$:node}));1===childNode.nodeType&&relocateSlotContent(childNode)}},isNodeLocatedInSlot=function isNodeLocatedInSlot(nodeToRelocate,slotNameAttr){return 1===nodeToRelocate.nodeType?null===nodeToRelocate.getAttribute("slot")&&""===slotNameAttr||nodeToRelocate.getAttribute("slot")===slotNameAttr:nodeToRelocate["s-sn"]===slotNameAttr||""===slotNameAttr},callNodeRefs=function callNodeRefs(vNode){vNode.$attrs$&&vNode.$attrs$.ref&&vNode.$attrs$.ref(null),vNode.$children$&&vNode.$children$.map(callNodeRefs)},renderVdom=function renderVdom(hostRef,renderFnResults){var hostElm=hostRef.$hostElement$,cmpMeta=hostRef.$cmpMeta$,oldVNode=hostRef.$vnode$||newVNode(null,null),rootVnode=function isHost(node){return node&&node.$tag$===Host}(renderFnResults)?renderFnResults:h(null,null,renderFnResults);if(hostTagName=hostElm.tagName,rootVnode.$tag$=null,rootVnode.$flags$|=4,hostRef.$vnode$=rootVnode,rootVnode.$elm$=oldVNode.$elm$=hostElm,contentRef=hostElm["s-cr"],useNativeShadowDom=0!=(1&cmpMeta.$flags$),checkSlotFallbackVisibility=!1,patch(oldVNode,rootVnode),plt.$flags$|=1,checkSlotRelocate){var relocateData,nodeToRelocate,orgLocationNode,parentNodeRef,insertBeforeNode,refNode;relocateSlotContent(rootVnode.$elm$);for(var i=0;i<relocateNodes.length;i++)(nodeToRelocate=(relocateData=relocateNodes[i]).$nodeToRelocate$)["s-ol"]||((orgLocationNode=doc.createTextNode(""))["s-nr"]=nodeToRelocate,nodeToRelocate.parentNode.insertBefore(nodeToRelocate["s-ol"]=orgLocationNode,nodeToRelocate));for(i=0;i<relocateNodes.length;i++)if(nodeToRelocate=(relocateData=relocateNodes[i]).$nodeToRelocate$,relocateData.$slotRefNode$){for(parentNodeRef=relocateData.$slotRefNode$.parentNode,insertBeforeNode=relocateData.$slotRefNode$.nextSibling,orgLocationNode=nodeToRelocate["s-ol"];orgLocationNode=orgLocationNode.previousSibling;)if((refNode=orgLocationNode["s-nr"])&&refNode["s-sn"]===nodeToRelocate["s-sn"]&&parentNodeRef===refNode.parentNode&&(!(refNode=refNode.nextSibling)||!refNode["s-nr"])){insertBeforeNode=refNode;break}(!insertBeforeNode&&parentNodeRef!==nodeToRelocate.parentNode||nodeToRelocate.nextSibling!==insertBeforeNode)&&nodeToRelocate!==insertBeforeNode&&(!nodeToRelocate["s-hn"]&&nodeToRelocate["s-ol"]&&(nodeToRelocate["s-hn"]=nodeToRelocate["s-ol"].parentNode.nodeName),parentNodeRef.insertBefore(nodeToRelocate,insertBeforeNode))}else 1===nodeToRelocate.nodeType&&(nodeToRelocate.hidden=!0)}checkSlotFallbackVisibility&&updateFallbackSlotVisibility(rootVnode.$elm$),plt.$flags$&=-2,relocateNodes.length=0},getElement=function getElement(ref){return getHostRef(ref).$hostElement$},createEvent=function createEvent(ref,name,flags){var elm=getElement(ref);return{emit:function emit(detail){return emitEvent(elm,name,{bubbles:!!(4&flags),composed:!!(2&flags),cancelable:!!(1&flags),detail:detail})}}},emitEvent=function emitEvent(elm,name,opts){var ev=plt.ce(name,opts);return elm.dispatchEvent(ev),ev},attachToAncestor=function attachToAncestor(hostRef,ancestorComponent){ancestorComponent&&!hostRef.$onRenderResolve$&&ancestorComponent["s-p"]&&ancestorComponent["s-p"].push(new Promise((function(r){return hostRef.$onRenderResolve$=r})))},scheduleUpdate=function scheduleUpdate(hostRef,isInitialLoad){if(hostRef.$flags$|=16,!(4&hostRef.$flags$)){attachToAncestor(hostRef,hostRef.$ancestorComponent$);return writeTask((function dispatch(){return dispatchHooks(hostRef,isInitialLoad)}))}hostRef.$flags$|=512},dispatchHooks=function dispatchHooks(hostRef,isInitialLoad){var promise,endSchedule=(hostRef.$cmpMeta$.$tagName$,function(){}),instance=hostRef.$lazyInstance$;return isInitialLoad&&(promise=safeCall(instance,"componentWillLoad")),endSchedule(),then(promise,(function(){return updateComponent(hostRef,instance,isInitialLoad)}))},updateComponent=function(){var _ref=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(hostRef,instance,isInitialLoad){var elm,endUpdate,rc,endRender,childrenPromises,postUpdate;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:elm=hostRef.$hostElement$,hostRef.$cmpMeta$.$tagName$,endUpdate=function(){},rc=elm["s-rc"],isInitialLoad&&attachStyles(hostRef),hostRef.$cmpMeta$.$tagName$,endRender=function(){},callRender(hostRef,instance),rc&&(rc.map((function(cb){return cb()})),elm["s-rc"]=void 0),endRender(),endUpdate(),childrenPromises=elm["s-p"],postUpdate=function postUpdate(){return postUpdateComponent(hostRef)},0===childrenPromises.length?postUpdate():(Promise.all(childrenPromises).then(postUpdate),hostRef.$flags$|=4,childrenPromises.length=0);case 12:case"end":return _context.stop()}}),_callee)})));return function updateComponent(_x,_x2,_x3){return _ref.apply(this,arguments)}}(),callRender=function callRender(hostRef,instance,elm){try{instance=instance.render(),hostRef.$flags$&=-17,hostRef.$flags$|=2,renderVdom(hostRef,instance)}catch(e){consoleError(e,hostRef.$hostElement$)}return null},postUpdateComponent=function postUpdateComponent(hostRef){hostRef.$cmpMeta$.$tagName$;var elm=hostRef.$hostElement$,endPostUpdate=function(){},instance=hostRef.$lazyInstance$,ancestorComponent=hostRef.$ancestorComponent$;safeCall(instance,"componentDidRender"),64&hostRef.$flags$?(safeCall(instance,"componentDidUpdate"),endPostUpdate()):(hostRef.$flags$|=64,addHydratedFlag(elm),safeCall(instance,"componentDidLoad"),endPostUpdate(),hostRef.$onReadyResolve$(elm),ancestorComponent||appDidLoad()),hostRef.$onInstanceResolve$(elm),hostRef.$onRenderResolve$&&(hostRef.$onRenderResolve$(),hostRef.$onRenderResolve$=void 0),512&hostRef.$flags$&&nextTick((function(){return scheduleUpdate(hostRef,!1)})),hostRef.$flags$&=-517},appDidLoad=function appDidLoad(who){addHydratedFlag(doc.documentElement),nextTick((function(){return emitEvent(win,"appload",{detail:{namespace:"verdocs-web-sdk"}})}))},safeCall=function safeCall(instance,method,arg){if(instance&&instance[method])try{return instance[method](arg)}catch(e){consoleError(e)}},then=function then(promise,thenFn){return promise&&promise.then?promise.then(thenFn):thenFn()},addHydratedFlag=function addHydratedFlag(elm){return elm.classList.add("hydrated")},setValue=function setValue(ref,propName,newVal,cmpMeta){var hostRef=getHostRef(ref),elm=hostRef.$hostElement$,oldVal=hostRef.$instanceValues$.get(propName),flags=hostRef.$flags$,instance=hostRef.$lazyInstance$;newVal=function parsePropertyValue(propValue,propType){return null==propValue||isComplexType(propValue)?propValue:4&propType?"false"!==propValue&&(""===propValue||!!propValue):2&propType?parseFloat(propValue):1&propType?String(propValue):propValue}(newVal,cmpMeta.$members$[propName][0]);var areBothNaN=Number.isNaN(oldVal)&&Number.isNaN(newVal);if((!(8&flags)||void 0===oldVal)&&(newVal!==oldVal&&!areBothNaN)&&(hostRef.$instanceValues$.set(propName,newVal),instance)){if(cmpMeta.$watchers$&&128&flags){var watchMethods=cmpMeta.$watchers$[propName];watchMethods&&watchMethods.map((function(watchMethodName){try{instance[watchMethodName](newVal,oldVal,propName)}catch(e){consoleError(e,elm)}}))}2==(18&flags)&&scheduleUpdate(hostRef,!1)}},proxyComponent=function proxyComponent(Cstr,cmpMeta,flags){if(cmpMeta.$members$){Cstr.watchers&&(cmpMeta.$watchers$=Cstr.watchers);var members=Object.entries(cmpMeta.$members$),prototype=Cstr.prototype;if(members.map((function(_ref2){var _ref3=_slicedToArray(_ref2,2),memberName=_ref3[0],memberFlags=_slicedToArray(_ref3[1],1)[0];31&memberFlags||2&flags&&32&memberFlags?Object.defineProperty(prototype,memberName,{get:function get(){return function getValue(ref,propName){return getHostRef(ref).$instanceValues$.get(propName)}(this,memberName)},set:function set(newValue){setValue(this,memberName,newValue,cmpMeta)},configurable:!0,enumerable:!0}):1&flags&&64&memberFlags&&Object.defineProperty(prototype,memberName,{value:function value(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];var ref=getHostRef(this);return ref.$onInstancePromise$.then((function(){var _ref$$lazyInstance$;return(_ref$$lazyInstance$=ref.$lazyInstance$)[memberName].apply(_ref$$lazyInstance$,args)}))}})})),1&flags){var attrNameToPropName=new Map;prototype.attributeChangedCallback=function(attrName,_oldValue,newValue){var _this=this;plt.jmp((function(){var propName=attrNameToPropName.get(attrName);if(_this.hasOwnProperty(propName))newValue=_this[propName],delete _this[propName];else if(prototype.hasOwnProperty(propName)&&"number"==typeof _this[propName]&&_this[propName]==newValue)return;_this[propName]=(null!==newValue||"boolean"!=typeof _this[propName])&&newValue}))},Cstr.observedAttributes=members.filter((function(_ref4){var _ref5=_slicedToArray(_ref4,2);_ref5[0];return 15&_ref5[1][0]})).map((function(_ref6){var _ref7=_slicedToArray(_ref6,2),propName=_ref7[0],attrName=_ref7[1][1]||propName;return attrNameToPropName.set(attrName,propName),attrName}))}}return Cstr},initializeComponent=function(){var _ref8=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(elm,hostRef,cmpMeta,hmrVersionId,Cstr){var endLoad,endNewInstance,style,scopeId,endRegisterStyles,ancestorComponent,schedule;return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:if(0!=(32&hostRef.$flags$)){_context2.next=17;break}if(hostRef.$flags$|=32,!(Cstr=loadModule(cmpMeta)).then){_context2.next=9;break}return endLoad=function(){},_context2.next=7,Cstr;case 7:Cstr=_context2.sent,endLoad();case 9:Cstr.isProxied||(cmpMeta.$watchers$=Cstr.watchers,proxyComponent(Cstr,cmpMeta,2),Cstr.isProxied=!0),cmpMeta.$tagName$,endNewInstance=function(){},hostRef.$flags$|=8;try{new Cstr(hostRef)}catch(e){consoleError(e)}hostRef.$flags$&=-9,hostRef.$flags$|=128,endNewInstance(),Cstr.style&&(style=Cstr.style,scopeId=getScopeId(cmpMeta),styles.has(scopeId)||(cmpMeta.$tagName$,endRegisterStyles=function(){},registerStyle(scopeId,style,!!(1&cmpMeta.$flags$)),endRegisterStyles()));case 17:ancestorComponent=hostRef.$ancestorComponent$,schedule=function schedule(){return scheduleUpdate(hostRef,!0)},ancestorComponent&&ancestorComponent["s-rc"]?ancestorComponent["s-rc"].push(schedule):schedule();case 20:case"end":return _context2.stop()}}),_callee2)})));return function initializeComponent(_x4,_x5,_x6,_x7,_x8){return _ref8.apply(this,arguments)}}(),_connectedCallback=function connectedCallback(elm){if(0==(1&plt.$flags$)){var hostRef=getHostRef(elm),cmpMeta=hostRef.$cmpMeta$,endConnected=(cmpMeta.$tagName$,function(){});if(!(1&hostRef.$flags$)){hostRef.$flags$|=1,12&cmpMeta.$flags$&&setContentReference(elm);for(var ancestorComponent=elm;ancestorComponent=ancestorComponent.parentNode||ancestorComponent.host;)if(ancestorComponent["s-p"]){attachToAncestor(hostRef,hostRef.$ancestorComponent$=ancestorComponent);break}cmpMeta.$members$&&Object.entries(cmpMeta.$members$).map((function(_ref9){var _ref10=_slicedToArray(_ref9,2),memberName=_ref10[0];if(31&_slicedToArray(_ref10[1],1)[0]&&elm.hasOwnProperty(memberName)){var value=elm[memberName];delete elm[memberName],elm[memberName]=value}})),initializeComponent(elm,hostRef,cmpMeta)}endConnected()}},setContentReference=function setContentReference(elm){var contentRefElm=elm["s-cr"]=doc.createComment("");contentRefElm["s-cn"]=!0,elm.insertBefore(contentRefElm,elm.firstChild)},_disconnectedCallback=function disconnectedCallback(elm){if(0==(1&plt.$flags$)){var instance=getHostRef(elm).$lazyInstance$;safeCall(instance,"disconnectedCallback")}},bootstrapLazy=function bootstrapLazy(lazyBundles){var appLoadFallback,options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},endBootstrap=function(){},cmpTags=[],exclude=options.exclude||[],customElements=win.customElements,head=doc.head,metaCharset=head.querySelector("meta[charset]"),visibilityStyle=doc.createElement("style"),deferredConnectedCallbacks=[],isBootstrapping=!0;Object.assign(plt,options),plt.$resourcesUrl$=new URL(options.resourcesUrl||"./",doc.baseURI).href,lazyBundles.map((function(lazyBundle){lazyBundle[1].map((function(compactMeta){var cmpMeta={$flags$:compactMeta[0],$tagName$:compactMeta[1],$members$:compactMeta[2],$listeners$:compactMeta[3]};cmpMeta.$members$=compactMeta[2],cmpMeta.$watchers$={};var tagName=cmpMeta.$tagName$,HostElement=function(_HTMLElement){_inherits(HostElement,_HTMLElement);var _super=_createSuper(HostElement);function HostElement(self){var _this2;return _classCallCheck(this,HostElement),self=_assertThisInitialized(_this2=_super.call(this,self)),registerHost(self,cmpMeta),_this2}return _createClass(HostElement,[{key:"connectedCallback",value:function connectedCallback(){var _this3=this;appLoadFallback&&(clearTimeout(appLoadFallback),appLoadFallback=null),isBootstrapping?deferredConnectedCallbacks.push(this):plt.jmp((function(){return _connectedCallback(_this3)}))}},{key:"disconnectedCallback",value:function disconnectedCallback(){var _this4=this;plt.jmp((function(){return _disconnectedCallback(_this4)}))}},{key:"componentOnReady",value:function componentOnReady(){return getHostRef(this).$onReadyPromise$}}]),HostElement}(_wrapNativeSuper(HTMLElement));cmpMeta.$lazyBundleId$=lazyBundle[0],exclude.includes(tagName)||customElements.get(tagName)||(cmpTags.push(tagName),customElements.define(tagName,proxyComponent(HostElement,cmpMeta,1)))}))})),visibilityStyle.innerHTML=cmpTags+HYDRATED_CSS,visibilityStyle.setAttribute("data-styles",""),head.insertBefore(visibilityStyle,metaCharset?metaCharset.nextSibling:head.firstChild),isBootstrapping=!1,deferredConnectedCallbacks.length?deferredConnectedCallbacks.map((function(host){return host.connectedCallback()})):plt.jmp((function(){return appLoadFallback=setTimeout(appDidLoad,30)})),endBootstrap()},Fragment=function Fragment(_,children){return children},hostRefs=new WeakMap,getHostRef=function getHostRef(ref){return hostRefs.get(ref)},registerInstance=function registerInstance(lazyInstance,hostRef){return hostRefs.set(hostRef.$lazyInstance$=lazyInstance,hostRef)},registerHost=function registerHost(elm,cmpMeta){var hostRef={$flags$:0,$hostElement$:elm,$cmpMeta$:cmpMeta,$instanceValues$:new Map};return hostRef.$onInstancePromise$=new Promise((function(r){return hostRef.$onInstanceResolve$=r})),hostRef.$onReadyPromise$=new Promise((function(r){return hostRef.$onReadyResolve$=r})),elm["s-p"]=[],elm["s-rc"]=[],hostRefs.set(elm,hostRef)},isMemberInElement=function isMemberInElement(elm,memberName){return memberName in elm},consoleError=function consoleError(e,el){return(0,console.error)(e,el)},cmpModules=new Map,loadModule=function loadModule(cmpMeta,hostRef,hmrVersionId){var exportName=cmpMeta.$tagName$.replace(/-/g,"_"),bundleId=cmpMeta.$lazyBundleId$,module=cmpModules.get(bundleId);return module?module[exportName]:__webpack_require__("./dist/esm lazy recursive ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$")("./"+bundleId+".entry.js").then((function(importedModule){return cmpModules.set(bundleId,importedModule),importedModule[exportName]}),consoleError)},styles=new Map,queueDomReads=[],queueDomWrites=[],queueTask=function queueTask(queue,write){return function(cb){queue.push(cb),queuePending||(queuePending=!0,write&&4&plt.$flags$?nextTick(flush):plt.raf(flush))}},consume=function consume(queue){for(var i=0;i<queue.length;i++)try{queue[i](performance.now())}catch(e){consoleError(e)}queue.length=0},flush=function flush(){consume(queueDomReads),consume(queueDomWrites),(queuePending=queueDomReads.length>0)&&plt.raf(flush)},nextTick=function nextTick(cb){return promiseResolve().then(cb)},writeTask=queueTask(queueDomWrites,!0)},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/@storybook/builder-webpack4/node_modules/webpack/buildin/module.js")(module))},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$":function(module,exports,__webpack_require__){var map={"./components/controls/verdocs-button-panel/verdocs-button-panel.stories.tsx":"./src/components/controls/verdocs-button-panel/verdocs-button-panel.stories.tsx","./components/controls/verdocs-button/verdocs-button.stories.tsx":"./src/components/controls/verdocs-button/verdocs-button.stories.tsx","./components/controls/verdocs-dropdown/verdocs-dropdown.stories.tsx":"./src/components/controls/verdocs-dropdown/verdocs-dropdown.stories.tsx","./components/controls/verdocs-help-icon/verdocs-help-icon.stories.tsx":"./src/components/controls/verdocs-help-icon/verdocs-help-icon.stories.tsx","./components/controls/verdocs-loader/verdocs-loader.stories.tsx":"./src/components/controls/verdocs-loader/verdocs-loader.stories.tsx","./components/controls/verdocs-organization-card/verdocs-organization-card.stories.tsx":"./src/components/controls/verdocs-organization-card/verdocs-organization-card.stories.tsx","./components/controls/verdocs-radio-button/verdocs-radio-button.stories.tsx":"./src/components/controls/verdocs-radio-button/verdocs-radio-button.stories.tsx","./components/controls/verdocs-select-input/verdocs-select-input.stories.tsx":"./src/components/controls/verdocs-select-input/verdocs-select-input.stories.tsx","./components/controls/verdocs-status-indicator/verdocs-status-indicator.stories.tsx":"./src/components/controls/verdocs-status-indicator/verdocs-status-indicator.stories.tsx","./components/controls/verdocs-template-card/verdocs-template-card.stories.tsx":"./src/components/controls/verdocs-template-card/verdocs-template-card.stories.tsx","./components/controls/verdocs-template-tags/verdocs-template-tags.stories.tsx":"./src/components/controls/verdocs-template-tags/verdocs-template-tags.stories.tsx","./components/controls/verdocs-text-input/verdocs-text-input.stories.tsx":"./src/components/controls/verdocs-text-input/verdocs-text-input.stories.tsx","./components/controls/verdocs-toggle-button/verdocs-toggle-button.stories.tsx":"./src/components/controls/verdocs-toggle-button/verdocs-toggle-button.stories.tsx","./components/controls/verdocs-toggle/verdocs-toggle.stories.tsx":"./src/components/controls/verdocs-toggle/verdocs-toggle.stories.tsx","./components/controls/verdocs-toolbar-icon/verdocs-toolbar-icon.stories.tsx":"./src/components/controls/verdocs-toolbar-icon/verdocs-toolbar-icon.stories.tsx","./components/dialogs/verdocs-initial-dialog/verdocs-initial-dialog.stories.tsx":"./src/components/dialogs/verdocs-initial-dialog/verdocs-initial-dialog.stories.tsx","./components/dialogs/verdocs-kba-dialog/verdocs-kba-dialog.stories.tsx":"./src/components/dialogs/verdocs-kba-dialog/verdocs-kba-dialog.stories.tsx","./components/dialogs/verdocs-ok-dialog/verdocs-ok-dialog.stories.tsx":"./src/components/dialogs/verdocs-ok-dialog/verdocs-ok-dialog.stories.tsx","./components/dialogs/verdocs-signature-dialog/verdocs-signature-dialog.stories.tsx":"./src/components/dialogs/verdocs-signature-dialog/verdocs-signature-dialog.stories.tsx","./components/dialogs/verdocs-template-sender-dialog/verdocs-template-sender-dialog.stories.tsx":"./src/components/dialogs/verdocs-template-sender-dialog/verdocs-template-sender-dialog.stories.tsx","./components/dialogs/verdocs-upload-dialog/verdocs-upload-dialog.stories.tsx":"./src/components/dialogs/verdocs-upload-dialog/verdocs-upload-dialog.stories.tsx","./components/elements/verdocs-contact-picker/verdocs-contact-picker.stories.tsx":"./src/components/elements/verdocs-contact-picker/verdocs-contact-picker.stories.tsx","./components/elements/verdocs-field-attachment/verdocs-field-attachment.stories.tsx":"./src/components/elements/verdocs-field-attachment/verdocs-field-attachment.stories.tsx","./components/elements/verdocs-field-checkbox-group/verdocs-field-checkbox.stories.tsx":"./src/components/elements/verdocs-field-checkbox-group/verdocs-field-checkbox.stories.tsx","./components/elements/verdocs-field-date/verdocs-field-date.stories.tsx":"./src/components/elements/verdocs-field-date/verdocs-field-date.stories.tsx","./components/elements/verdocs-field-dropdown/verdocs-field-dropdown.stories.tsx":"./src/components/elements/verdocs-field-dropdown/verdocs-field-dropdown.stories.tsx","./components/elements/verdocs-field-initial/verdocs-field-initial.stories.tsx":"./src/components/elements/verdocs-field-initial/verdocs-field-initial.stories.tsx","./components/elements/verdocs-field-payment/verdocs-field-payment.stories.tsx":"./src/components/elements/verdocs-field-payment/verdocs-field-payment.stories.tsx","./components/elements/verdocs-field-radio-button-group/verdocs-field-radio-button.stories.tsx":"./src/components/elements/verdocs-field-radio-button-group/verdocs-field-radio-button.stories.tsx","./components/elements/verdocs-field-signature/verdocs-field-signature.stories.tsx":"./src/components/elements/verdocs-field-signature/verdocs-field-signature.stories.tsx","./components/elements/verdocs-field-textarea/verdocs-field-textarea.stories.tsx":"./src/components/elements/verdocs-field-textarea/verdocs-field-textarea.stories.tsx","./components/elements/verdocs-field-textbox/verdocs-field-textbox.stories.tsx":"./src/components/elements/verdocs-field-textbox/verdocs-field-textbox.stories.tsx","./components/elements/verdocs-field-timestamp/verdocs-field-timestamp.stories.tsx":"./src/components/elements/verdocs-field-timestamp/verdocs-field-timestamp.stories.tsx","./components/elements/verdocs-quick-functions/verdocs-quick-functions.stories.tsx":"./src/components/elements/verdocs-quick-functions/verdocs-quick-functions.stories.tsx","./components/elements/verdocs-search-activity/verdocs-search-activity.stories.tsx":"./src/components/elements/verdocs-search-activity/verdocs-search-activity.stories.tsx","./components/elements/verdocs-search-box/verdocs-search-box.stories.tsx":"./src/components/elements/verdocs-search-box/verdocs-search-box.stories.tsx","./components/elements/verdocs-search-tabs/verdocs-search-tabs.stories.tsx":"./src/components/elements/verdocs-search-tabs/verdocs-search-tabs.stories.tsx","./components/elements/verdocs-template-create/verdocs-template-create.stories.tsx":"./src/components/elements/verdocs-template-create/verdocs-template-create.stories.tsx","./components/elements/verdocs-template-fields/verdocs-template-fields.stories.tsx":"./src/components/elements/verdocs-template-fields/verdocs-template-fields.stories.tsx","./components/elements/verdocs-template-properties/verdocs-template-properties.stories.tsx":"./src/components/elements/verdocs-template-properties/verdocs-template-properties.stories.tsx","./components/elements/verdocs-template-recipients/verdocs-template-recipients.stories.tsx":"./src/components/elements/verdocs-template-recipients/verdocs-template-recipients.stories.tsx","./components/embeds/verdocs-auth/verdocs-auth.stories.tsx":"./src/components/embeds/verdocs-auth/verdocs-auth.stories.tsx","./components/embeds/verdocs-build/verdocs-build.stories.tsx":"./src/components/embeds/verdocs-build/verdocs-build.stories.tsx","./components/embeds/verdocs-preview/verdocs-preview.stories.tsx":"./src/components/embeds/verdocs-preview/verdocs-preview.stories.tsx","./components/embeds/verdocs-search/verdocs-search.stories.tsx":"./src/components/embeds/verdocs-search/verdocs-search.stories.tsx","./components/embeds/verdocs-send/verdocs-send.stories.tsx":"./src/components/embeds/verdocs-send/verdocs-send.stories.tsx","./components/embeds/verdocs-sign/verdocs-sign.stories.tsx":"./src/components/embeds/verdocs-sign/verdocs-sign.stories.tsx","./components/embeds/verdocs-view/verdocs-view.stories.tsx":"./src/components/embeds/verdocs-view/verdocs-view.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"./src/components/controls/verdocs-button-panel/verdocs-button-panel.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ButtonPanel",(function(){return ButtonPanel}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Button Panel",component:"verdocs-button-panel",args:{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="M7.6 13.925q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375ZM5.3 22.85q-1.325 0-2.238-.912-.912-.913-.912-2.238V6.3q0-1.325.912-2.238.913-.912 2.238-.912H6v-2h2.575v2h6.85v-2H18v2h.7q1.325 0 2.238.912.912.913.912 2.238v13.4q0 1.325-.912 2.238-.913.912-2.238.912Zm0-3.15h13.4V10H5.3v9.7ZM5.3 8h13.4V6.3H5.3Zm0 0V6.3 8Z"/></svg>'},argTypes:{},parameters:{layout:"fullscreen"}};var ButtonPanel=function ButtonPanel(_ref){var icon=_ref.icon;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n  <verdocs-button-panel .icon=",'>\n    <h6>Field Settings</h6>\n    <form>\n      <label>Field 1</label>\n      <input type="text" placeholder="Field 1..." />\n      <label>Field 2</label>\n      <input type="text" placeholder="Field 2..." />\n    </form>\n  </verdocs-button-panel>\n'])),icon)};ButtonPanel.parameters=Object.assign({storySource:{source:'({icon}) => html`\n  <verdocs-button-panel .icon=${icon}>\n    <h6>Field Settings</h6>\n    <form>\n      <label>Field 1</label>\n      <input type="text" placeholder="Field 1..." />\n      <label>Field 2</label>\n      <input type="text" placeholder="Field 2..." />\n    </form>\n  </verdocs-button-panel>\n`'}},ButtonPanel.parameters)},"./src/components/controls/verdocs-button/verdocs-button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Button",(function(){return Button}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Button",component:"verdocs-button",args:{label:"Click Me",type:"button",size:"normal",variant:"standard",disabled:!1},argTypes:{startIcon:{defaultValue:!1,control:{type:"boolean"}},endIcon:{defaultValue:!1,control:{type:"boolean"}},press:{action:"press",table:{disable:!0}}}};var Button=function Button(_ref){var label=_ref.label,size=_ref.size,variant=_ref.variant,disabled=_ref.disabled,startIcon=_ref.startIcon,endIcon=_ref.endIcon,press=_ref.press;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-button\n    .label=","\n    .startIcon=","\n    .endIcon=","\n    .size=","\n    .variant=","\n    .disabled=","\n    @press=","\n  />"])),label,startIcon?'\n  <svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="24px" viewBox="0 0 24 24" width="24px" fill="#ffffff">\n    <g>\n      <rect fill="none" height="24" width="24"/>\n    </g>\n    <g>\n      <g>\n        <path d="M12,2C6.48,2,2,6.48,2,12c0,5.52,4.48,10,10,10s10-4.48,10-10C22,6.48,17.52,2,12,2z M12,20c-4.42,0-8-3.58-8-8 c0-4.42,3.58-8,8-8s8,3.58,8,8C20,16.42,16.42,20,12,20z"/>\n        <circle cx="7" cy="12" r="1.5"/>\n        <circle cx="12" cy="12" r="1.5"/>\n        <circle cx="17" cy="12" r="1.5"/>\n      </g>\n    </g>\n  </svg>\n':null,endIcon?'\n<svg width="10" height="26" viewBox="0 0 10 26" fill="#ffffff" xmlns="http://www.w3.org/2000/svg">\n<g clip-path="url(#clip0_31568_3647)">\n<path d="M9.64682 13.431L2.10645 20.9466C1.86503 21.1853 1.47466 21.1853 1.23324 20.9466L0.216218 19.9411C-0.0251976 19.7025 -0.0251976 19.3165 0.216218 19.0778L6.30296 12.9993L0.216218 6.9208C-0.0251976 6.68213 -0.0251976 6.29619 0.216218 6.05752L1.23324 5.05205C1.47466 4.81338 1.86503 4.81338 2.10645 5.05205L9.64682 12.5677C9.88824 12.8064 9.88824 13.1923 9.64682 13.431Z"/>\n</g>\n<defs>\n<clipPath id="clip0_31568_3647">\n<rect width="9.86207" height="26"/>\n</clipPath>\n</defs>\n</svg>\n':null,size,variant,disabled,press)};Button.parameters=Object.assign({storySource:{source:"({label, size, variant, disabled, startIcon, endIcon, press}) =>\n  html`<verdocs-button\n    .label=${label}\n    .startIcon=${startIcon ? CircleIcon : null}\n    .endIcon=${endIcon ? ArrowIcon : null}\n    .size=${size}\n    .variant=${variant}\n    .disabled=${disabled}\n    @press=${press}\n  />`"}},Button.parameters)},"./src/components/controls/verdocs-dropdown/verdocs-dropdown.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DropdownMenu",(function(){return DropdownMenu}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Dropdown Menu",component:"verdocs-dropdown",args:{options:[{label:"Option 1"},{label:"Disabled Option",disabled:!0},{label:"Option 2"}]},argTypes:{optionSelected:{action:"optionSelected",table:{disable:!0}}}};var DropdownMenu=function DropdownMenu(_ref){var options=_ref.options,optionSelected=_ref.optionSelected;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-dropdown .options="," @optionSelected="," />"])),options,optionSelected)};DropdownMenu.parameters=Object.assign({storySource:{source:"({options, optionSelected}) => html`<verdocs-dropdown .options=${options} @optionSelected=${optionSelected} />`"}},DropdownMenu.parameters)},"./src/components/controls/verdocs-help-icon/verdocs-help-icon.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"HelpIcon",(function(){return HelpIcon}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Help Icon",component:"verdocs-help-icon",args:{text:"Sample help text"},argTypes:{},parameters:{layout:"fullscreen"}};var HelpIcon=function HelpIcon(_ref){var text=_ref.text;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-help-icon .text="," /> "])),text)};HelpIcon.parameters=Object.assign({storySource:{source:"({text}) => html`<verdocs-help-icon .text=${text} /> `"}},HelpIcon.parameters)},"./src/components/controls/verdocs-loader/verdocs-loader.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Loader",(function(){return Loader}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Loader",component:"verdocs-loader",args:{},argTypes:{}};var Loader=function Loader(_ref){return function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure undefined")}(_ref),Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-loader />"])))};Loader.parameters=Object.assign({storySource:{source:"({}) => html`<verdocs-loader />`"}},Loader.parameters)},"./src/components/controls/verdocs-organization-card/verdocs-organization-card.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"OrganizationCard",(function(){return OrganizationCard}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Organization Card",component:"verdocs-organization-card",args:{organization:{id:"3",name:"ACME Widgets, LLC",address:null,phone:null,business_name:null,is_business:!0,address2:null,contact_email:null,timezone:null,envelope_responsible:!1}},argTypes:{}};var OrganizationCard=function OrganizationCard(_ref){var organization=_ref.organization;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-organization-card .organization="," />"])),organization)};OrganizationCard.parameters=Object.assign({storySource:{source:"({organization}) => html`<verdocs-organization-card .organization=${organization} />`"}},OrganizationCard.parameters)},"./src/components/controls/verdocs-radio-button/verdocs-radio-button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"RadioButton",(function(){return RadioButton}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Radio Button",component:"verdocs-radio-button",args:{checked:!1,name:"test",value:"1",disabled:!1},argTypes:{}};var RadioButton=function RadioButton(_ref){var checked=_ref.checked,name=_ref.name,value=_ref.value,disabled=_ref.disabled;return Object(lit_html__WEBPACK_IMPORTED_MODULE_3__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}([" <verdocs-radio-button .checked="," .name="," .value="," .disabled="," /> "])),checked,name,value,disabled)};RadioButton.parameters=Object.assign({storySource:{source:"({checked, name, value, disabled}) => html` <verdocs-radio-button .checked=${checked} .name=${name} .value=${value} .disabled=${disabled} /> `"}},RadioButton.parameters)},"./src/components/controls/verdocs-select-input/verdocs-select-input.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SelectInput",(function(){return SelectInput}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Select Input",component:"verdocs-select-input",args:{label:"Name",value:"",options:[{label:"Option 1",value:"1"},{label:"Option 2",value:"2"},{label:"Option 3",value:"3"}]},argTypes:{change:{action:"change",table:{disable:!0}}}};var SelectInput=function SelectInput(_ref){var type=_ref.type,label=_ref.label,value=_ref.value,placeholder=_ref.placeholder,options=_ref.options,disabled=_ref.disabled,change=_ref.change;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-select-input .type="," .label="," .placeholder="," .value="," .options="," .disabled="," @change="," />"])),type,label,placeholder,value,options,disabled,change)};SelectInput.parameters=Object.assign({storySource:{source:"({type, label, value, placeholder, options, disabled, change}) =>\n  html`<verdocs-select-input .type=${type} .label=${label} .placeholder=${placeholder} .value=${value} .options=${options} .disabled=${disabled} @change=${change} />`"}},SelectInput.parameters)},"./src/components/controls/verdocs-status-indicator/verdocs-status-indicator.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"StatusIndicator",(function(){return StatusIndicator}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Status Indicator",component:"verdocs-status-indicator",args:{document:0,status:"complete",theme:"light",size:"normal"},argTypes:{document:{options:[0,1],mapping:{0:{id:"1234",status:"complete",recipients:[{role_name:"Tax Preparer",status:"submitted",full_name:"Bill Board",sequence:1,type:"signer"},{role_name:"Recipient 1",status:"submitted",full_name:"Ante Bellum",sequence:2,type:"signer"},{role_name:"Recipient 2",status:"opened",full_name:"Sarah Bellum",sequence:2,type:"signer"},{role_name:"Office Manager",status:"pending",full_name:"Paige Turner",sequence:3,type:"approver"}]},1:null},control:{type:"select",labels:{0:"Sample Document",1:"Not Set"}}},status:{defaultValue:"",options:[0,"complete","pending","in progress","declined","canceled","invited","opened","accepted","signed","submitted"],mapping:{0:null,complete:"complete",pending:"pending","in progress":"in progress",declined:"declined",canceled:"canceled",invited:"invited",opened:"opened",accepted:"accepted",signed:"signed",submitted:"submitted"},control:{type:"select",labels:{0:"Not Set",complete:"Complete",pending:"Pending","in progress":"In Progress",declined:"Declined",canceled:"Canceled",invited:"Invited",opened:"Opened",accepted:"Accepted",signed:"Signed",submitted:"Submitted"}}}}};var StatusIndicator=function StatusIndicator(_ref){var theme=_ref.theme,size=_ref.size,status=_ref.status,document=_ref.document;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['<verdocs-status-indicator .theme="','" .size="','" .status="','" .document="','" />'])),theme,size,status,document)};StatusIndicator.parameters=Object.assign({storySource:{source:'({theme, size, status, document}) =>\n  html`<verdocs-status-indicator .theme="${theme}" .size="${size}" .status="${status}" .document="${document}" />`'}},StatusIndicator.parameters)},"./src/components/controls/verdocs-template-card/verdocs-template-card.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TemplateCard",(function(){return TemplateCard}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Template Card",component:"verdocs-template-card",args:{template:{counter:2,star_counter:10,name:"IRS Form I-9",id:"1",profile_id:"2",created_at:"2021-11-14T13:57:21Z",updated_at:"2021-11-14T13:57:21Z",last_used_at:"2021-11-14T13:57:21Z",organization_id:"3",is_personal:!1,is_public:!0,sender:"creator",description:"IRS Form I-9",organization:{id:"3",name:"ACME Widgets, LLC",address:null,phone:null,business_name:null,is_business:!0,address2:null,contact_email:null,timezone:null,envelope_responsible:!1},template_document:{url:"url",name:"IRS Form I-9",page_numbers:3,id:"4",updated_at:"2021-11-14T13:57:21Z",created_at:"2021-11-14T13:57:21Z",template_id:"1",mime:"application/pdf",thumbnail_url:"https://verdocs.com/en/wp-content/uploads/2021/12/Screen-Shot-2021-12-30-at-2.26.08-PM-e1640892536786.png"}}},argTypes:{}};var TemplateCard=function TemplateCard(_ref){var template=_ref.template;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-card .template="," />"])),template)};TemplateCard.parameters=Object.assign({storySource:{source:"({template}) => html`<verdocs-template-card .template=${template} />`"}},TemplateCard.parameters)},"./src/components/controls/verdocs-template-tags/verdocs-template-tags.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TemplateTags",(function(){return TemplateTags}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Template Tags",component:"verdocs-template-tags",args:{tags:["contractors","taxes","irs"]},argTypes:{}};var TemplateTags=function TemplateTags(_ref){var tags=_ref.tags,theme=_ref.theme;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['<verdocs-template-tags .tags="','" .theme="','" />'])),tags,theme)};TemplateTags.parameters=Object.assign({storySource:{source:'({tags, theme}) => html`<verdocs-template-tags .tags="${tags}" .theme="${theme}" />`'}},TemplateTags.parameters)},"./src/components/controls/verdocs-text-input/verdocs-text-input.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TextInput",(function(){return TextInput}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Text Input",component:"verdocs-text-input",args:{label:"Name",value:"",placeholder:"Enter your name..."},argTypes:{input:{action:"input",table:{disable:!0}}}};var TextInput=function TextInput(_ref){var type=_ref.type,label=_ref.label,value=_ref.value,placeholder=_ref.placeholder,disabled=_ref.disabled,input=_ref.input;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-text-input .type="," .label="," .placeholder="," .value="," .disabled="," @input="," />"])),type,label,placeholder,value,disabled,input)};TextInput.parameters=Object.assign({storySource:{source:"({type, label, value, placeholder, disabled, input}) =>\n  html`<verdocs-text-input .type=${type} .label=${label} .placeholder=${placeholder} .value=${value} .disabled=${disabled} @input=${input} />`"}},TextInput.parameters)},"./src/components/controls/verdocs-toggle-button/verdocs-toggle-button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ToggleButton",(function(){return ToggleButton}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Toggle Button",component:"verdocs-toggle-button",args:{icon:'<svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiBox-root css-1om0hkc" focusable="false" aria-hidden="true" viewBox="0 0 24 24"><path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"></path></svg>',label:"Use",size:"normal",active:!1}};var ToggleButton=function ToggleButton(_ref){var icon=_ref.icon,label=_ref.label,size=_ref.size,active=_ref.active;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-toggle-button .icon="," .label="," .size="," .active="," />"])),icon,label,size,active)};ToggleButton.parameters=Object.assign({storySource:{source:"({icon, label, size, active}) => html`<verdocs-toggle-button .icon=${icon} .label=${label} .size=${size} .active=${active} />`"}},ToggleButton.parameters)},"./src/components/controls/verdocs-toggle/verdocs-toggle.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Toggle",(function(){return Toggle}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Toggle",component:"verdocs-toggle",args:{options:{label:"View as",defaultSelection:1,buttons:[{id:"list-view",icon:'<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><rect fill="none" height="24" width="24"/><path d="M3,5v14h18V5H3z M7,7v2H5V7H7z M5,13v-2h2v2H5z M5,15h2v2H5V15z M19,17H9v-2h10V17z M19,13H9v-2h10V13z M19,9H9V7h10V9z"/></svg>'},{id:"grid-view",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M3 5v14h19V5H3zm17 4h-2.25V7H20v2zM9.25 11h2.25v2H9.25v-2zm-2 2H5v-2h2.25v2zm4.25-4H9.25V7h2.25v2zm2-2h2.25v2H13.5V7zm-2 8v2H9.25v-2h2.25zm2 0h2.25v2H13.5v-2zm0-2v-2h2.25v2H13.5zm4.25-2H20v2h-2.25v-2zM7.25 7v2H5V7h2.25zM5 15h2.25v2H5v-2zm12.75 2v-2H20v2h-2.25z"/></svg>'}]}}};var Toggle=function Toggle(_ref){var options=_ref.options,theme=_ref.theme;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-toggle .options="," .theme=","></verdocs-toggle>"])),options,theme)};Toggle.parameters=Object.assign({storySource:{source:"({options, theme}) => html`<verdocs-toggle .options=${options} .theme=${theme}></verdocs-toggle>`"}},Toggle.parameters)},"./src/components/controls/verdocs-toolbar-icon/verdocs-toolbar-icon.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ToolbarIcon",(function(){return ToolbarIcon}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Toolbar Icon",component:"verdocs-toolbar-icon",args:{text:"Sample tooltip text",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="M7.6 13.925q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375ZM5.3 22.85q-1.325 0-2.238-.912-.912-.913-.912-2.238V6.3q0-1.325.912-2.238.913-.912 2.238-.912H6v-2h2.575v2h6.85v-2H18v2h.7q1.325 0 2.238.912.912.913.912 2.238v13.4q0 1.325-.912 2.238-.913.912-2.238.912Zm0-3.15h13.4V10H5.3v9.7ZM5.3 8h13.4V6.3H5.3Zm0 0V6.3 8Z"/></svg>'},argTypes:{},parameters:{layout:"fullscreen"}};var ToolbarIcon=function ToolbarIcon(_ref){var text=_ref.text,icon=_ref.icon;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-toolbar-icon .text="," .icon="," /> "])),text,icon)};ToolbarIcon.parameters=Object.assign({storySource:{source:"({text, icon}) => html`<verdocs-toolbar-icon .text=${text} .icon=${icon} /> `"}},ToolbarIcon.parameters)},"./src/components/dialogs/verdocs-initial-dialog/verdocs-initial-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"InitialDialog",(function(){return InitialDialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Initial Dialog",component:"verdocs-initial-dialog",args:{open:!0,initials:"PT"},argTypes:{closed:{action:"closed",table:{disable:!0}}}};var InitialDialog=function InitialDialog(_ref){var initials=_ref.initials,open=_ref.open,closed=_ref.closed;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-initial-dialog .initials="," .open="," @closed="," />"])),initials,open,closed)};InitialDialog.parameters=Object.assign({storySource:{source:"({initials, open, closed}) => html`<verdocs-initial-dialog .initials=${initials} .open=${open} @closed=${closed} />`"}},InitialDialog.parameters)},"./src/components/dialogs/verdocs-kba-dialog/verdocs-kba-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"KBADialog",(function(){return KBADialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/KBA Dialog",component:"verdocs-kba-dialog",args:{open:!0,mode:"choice",helptitle:"One Time Code",helptext:"Please check your text messages for a security code, and enter the code below.",label:"PIN",placeholder:"Enter your PIN...",step:1,steps:3,choices:["553 Arbor Dr","18 Lacey Ln","23A Ball Ct","2375 Cavallo Blvd","23-1 RR-7","151 Boulder Rd"]},argTypes:{closed:{action:"closed",table:{disable:!0}}}};var KBADialog=function KBADialog(_ref){var helptitle=_ref.helptitle,helptext=_ref.helptext,label=_ref.label,placeholder=_ref.placeholder,mode=_ref.mode,step=_ref.step,steps=_ref.steps,choices=_ref.choices,open=_ref.open,closed=_ref.closed;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-kba-dialog\n    .mode=","\n    .helptitle=","\n    .helptext=","\n    .label=","\n    .placeholder=","\n    .step=","\n    .steps=","\n    .choices=","\n    .open=","\n    @closed=","\n  />"])),mode,helptitle,helptext,label,placeholder,step,steps,choices,open,closed)};KBADialog.parameters=Object.assign({storySource:{source:"({helptitle, helptext, label, placeholder, mode, step, steps, choices, open, closed}) =>\n  html`<verdocs-kba-dialog\n    .mode=${mode}\n    .helptitle=${helptitle}\n    .helptext=${helptext}\n    .label=${label}\n    .placeholder=${placeholder}\n    .step=${step}\n    .steps=${steps}\n    .choices=${choices}\n    .open=${open}\n    @closed=${closed}\n  />`"}},KBADialog.parameters)},"./src/components/dialogs/verdocs-ok-dialog/verdocs-ok-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"OkDialog",(function(){return OkDialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Ok Dialog",component:"verdocs-ok-dialog",args:{open:!0,cancel:!0,heading:"Login Error",message:"Login failed. Please check your username and password and try again."},argTypes:{closed:{action:"closed",table:{disable:!0}}}};var OkDialog=function OkDialog(_ref){var heading=_ref.heading,message=_ref.message,open=_ref.open,cancel=_ref.cancel,closed=_ref.closed;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-ok-dialog .heading="," .message="," .open="," .cancel="," @closed="," />"])),heading,message,open,cancel,closed)};OkDialog.parameters=Object.assign({storySource:{source:"({heading, message, open, cancel, closed}) =>\n  html`<verdocs-ok-dialog .heading=${heading} .message=${message} .open=${open} .cancel=${cancel} @closed=${closed} />`"}},OkDialog.parameters)},"./src/components/dialogs/verdocs-signature-dialog/verdocs-signature-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SignatureDialog",(function(){return SignatureDialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Signature Dialog",component:"verdocs-signature-dialog",args:{open:!0,name:"Paige Turner"},argTypes:{closed:{action:"closed",table:{disable:!0}}}};var SignatureDialog=function SignatureDialog(_ref){var name=_ref.name,open=_ref.open,closed=_ref.closed;return Object(lit_html__WEBPACK_IMPORTED_MODULE_3__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-signature-dialog .name="," .open="," @closed="," />"])),name,open,closed)};SignatureDialog.parameters=Object.assign({storySource:{source:"({name, open, closed}) => html`<verdocs-signature-dialog .name=${name} .open=${open} @closed=${closed} />`"}},SignatureDialog.parameters)},"./src/components/dialogs/verdocs-template-sender-dialog/verdocs-template-sender-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TemplateSenderDialog",(function(){return TemplateSenderDialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Template Sender Dialog",component:"verdocs-template-sender-dialog",args:{open:!0,message:"Login failed. Please check your username and password and try again."},argTypes:{closed:{action:"closed",table:{disable:!0}}}};var TemplateSenderDialog=function TemplateSenderDialog(_ref){var message=_ref.message,open=_ref.open,closed=_ref.closed;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-sender-dialog .message="," .open="," @closed="," />"])),message,open,closed)};TemplateSenderDialog.parameters=Object.assign({storySource:{source:"({message, open, closed}) => html`<verdocs-template-sender-dialog .message=${message} .open=${open} @closed=${closed} />`"}},TemplateSenderDialog.parameters)},"./src/components/dialogs/verdocs-upload-dialog/verdocs-upload-dialog.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"UploadDialog",(function(){return UploadDialog}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Dialogs/Upload Dialog",component:"verdocs-upload-dialog",args:{open:!0,message:"Login failed. Please check your username and password and try again."},argTypes:{closed:{action:"closed",table:{disable:!0}}}};var UploadDialog=function UploadDialog(_ref){var message=_ref.message,open=_ref.open,closed=_ref.closed;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-upload-dialog .message="," .open="," @closed="," />"])),message,open,closed)};UploadDialog.parameters=Object.assign({storySource:{source:"({message, open, closed}) => html`<verdocs-upload-dialog .message=${message} .open=${open} @closed=${closed} />`"}},UploadDialog.parameters)},"./src/components/elements/verdocs-contact-picker/verdocs-contact-picker.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ContactPicker",(function(){return ContactPicker}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Controls/Contact Picker",component:"verdocs-contact-picker",args:{templateRole:{template_id:"65cbba07-d0ac-4b62-afe3-25d186238938",name:"Recipient 1",full_name:"",email:"",phone:"",type:"signer",sequence:1,message:""},contactSuggestions:[{name:"Me",email:"myuser@nomail.com",phone:"212-555-6664"},{name:"Will Power",email:"will.power@nomail.com",avatar:"https://i.pravatar.cc/48?img=59"},{name:"Paige Turner",email:"paige.turner@nomail.com",phone:"212-555-6664",avatar:"https://i.pravatar.cc/48?img=41"},{name:"Bill Board",phone:"212-555-6664"}]},argTypes:{searchContacts:{action:"searchContacts"},cancel:{action:"cancel"},contactSelected:{action:"contactSelected"}}};var ContactPicker=function ContactPicker(_ref){var templateRole=_ref.templateRole,contactSuggestions=_ref.contactSuggestions,searchContacts=_ref.searchContacts,cancel=_ref.cancel,contactSelected=_ref.contactSelected;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-contact-picker\n    .templateRole=","\n    .contactSuggestions=","\n    @searchContacts=","\n    @cancel=","\n    @contactSelected=","\n  />"])),templateRole,contactSuggestions,searchContacts,cancel,contactSelected)};ContactPicker.parameters=Object.assign({storySource:{source:"({templateRole, contactSuggestions, searchContacts, cancel, contactSelected}) =>\n  html`<verdocs-contact-picker\n    .templateRole=${templateRole}\n    .contactSuggestions=${contactSuggestions}\n    @searchContacts=${searchContacts}\n    @cancel=${cancel}\n    @contactSelected=${contactSelected}\n  />`"}},ContactPicker.parameters)},"./src/components/elements/verdocs-field-attachment/verdocs-field-attachment.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attachment",(function(){return Attachment}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Attachment",component:"verdocs-field-attachment",args:{field:{x:0,y:0},disabled:!1},argTypes:{}};var Attachment=function Attachment(_ref){var field=_ref.field,disabled=_ref.disabled;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-attachment .field="," .disabled="," />"])),field,disabled)};Attachment.parameters=Object.assign({storySource:{source:"({field, disabled}) => html`<verdocs-field-attachment .field=${field} .disabled=${disabled} />`"}},Attachment.parameters)},"./src/components/elements/verdocs-field-checkbox-group/verdocs-field-checkbox.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Checkbox",(function(){return Checkbox}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Checkbox",component:"verdocs-field-checkbox",args:{field:{settings:{x:0,y:0}},option:0,disabled:!1},argTypes:{}};var Checkbox=function Checkbox(_ref){var field=_ref.field,option=_ref.option,disabled=_ref.disabled;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-checkbox .field="," .option="," .disabled="," />"])),field,option,disabled)};Checkbox.parameters=Object.assign({storySource:{source:"({field, option, disabled}) => html`<verdocs-field-checkbox .field=${field} .option=${option} .disabled=${disabled} />`"}},Checkbox.parameters)},"./src/components/elements/verdocs-field-date/verdocs-field-date.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Date",(function(){return Date}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Date",component:"verdocs-field-date",args:{field:{settings:{x:0,y:0}},disabled:!1},argTypes:{}};var Date=function Date(_ref){var field=_ref.field,disabled=_ref.disabled;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['<verdocs-field-date .field="','.disabled" ='," />"])),field,disabled)};Date.parameters=Object.assign({storySource:{source:'({field, disabled}) => html`<verdocs-field-date .field="${field}.disabled" =${disabled} />`'}},Date.parameters)},"./src/components/elements/verdocs-field-dropdown/verdocs-field-dropdown.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Dropdown",(function(){return Dropdown}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Dropdown",component:"verdocs-field-dropdown",args:{field:{settings:{x:0,y:0,options:[{id:"id1",value:"Option 1"}]}}},argTypes:{}};var Dropdown=function Dropdown(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-dropdown .field="," />"])),field)};Dropdown.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-dropdown .field=${field} />`"}},Dropdown.parameters)},"./src/components/elements/verdocs-field-initial/verdocs-field-initial.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Initial",(function(){return Initial}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Initial",component:"verdocs-field-initial",args:{initials:"PT",field:{settings:{x:0,y:0}}},argTypes:{}};var Initial=function Initial(_ref){var initials=_ref.initials,field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-initial .field="," .initials="," />"])),field,initials)};Initial.parameters=Object.assign({storySource:{source:"({initials, field}) => html`<verdocs-field-initial .field=${field} .initials=${initials} />`"}},Initial.parameters)},"./src/components/elements/verdocs-field-payment/verdocs-field-payment.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Payment",(function(){return Payment}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Payment",component:"verdocs-field-payment",args:{field:{settings:{x:0,y:0}}},argTypes:{}};var Payment=function Payment(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-payment .field="," />"])),field)};Payment.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-payment .field=${field} />`"}},Payment.parameters)},"./src/components/elements/verdocs-field-radio-button-group/verdocs-field-radio-button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"RadioButton",(function(){return RadioButton}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Radio Button",component:"verdocs-field-radio-button",args:{field:{settings:{x:0,y:0,checked:!1,name:"radio-1"}}},argTypes:{}};var RadioButton=function RadioButton(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-radio-button .field="," />"])),field)};RadioButton.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-radio-button .field=${field} />`"}},RadioButton.parameters)},"./src/components/elements/verdocs-field-signature/verdocs-field-signature.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Signature",(function(){return Signature}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Signature",component:"verdocs-field-signature",args:{name:"Paige Turner",field:{settings:{x:0,y:0}}},argTypes:{}};var Signature=function Signature(_ref){var name=_ref.name,field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_3__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-signature .name="," .field="," />"])),name,field)};Signature.parameters=Object.assign({storySource:{source:"({name, field}) => html`<verdocs-field-signature .name=${name} .field=${field} />`"}},Signature.parameters)},"./src/components/elements/verdocs-field-textarea/verdocs-field-textarea.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Textarea",(function(){return Textarea}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Textarea",component:"verdocs-field-textarea",args:{field:{settings:{placeholder:"Email address...",x:0,y:0}}},argTypes:{}};var Textarea=function Textarea(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-textarea .field="," />"])),field)};Textarea.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-textarea .field=${field} />`"}},Textarea.parameters)},"./src/components/elements/verdocs-field-textbox/verdocs-field-textbox.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Textbox",(function(){return Textbox}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Textbox",component:"verdocs-field-textbox",args:{field:{settings:{x:0,y:0}},disabled:!1},argTypes:{}};var Textbox=function Textbox(_ref){var field=_ref.field,disabled=_ref.disabled;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-textbox .field="," .disabled="," />"])),field,disabled)};Textbox.parameters=Object.assign({storySource:{source:"({field, disabled}) => html`<verdocs-field-textbox .field=${field} .disabled=${disabled} />`"}},Textbox.parameters)},"./src/components/elements/verdocs-field-timestamp/verdocs-field-timestamp.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Timestamp",(function(){return Timestamp}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Fields/Timestamp",component:"verdocs-field-timestamp",args:{field:{name:"timestampP1-8",recipient_role:"Recipient 2",envelope_id:"96ccc2e9-1bb8-4be8-9dbd-7113107383ee",page:1,type:"timestamp",required:!0,settings:{x:426.99999999999994,y:493.25,width:64,height:15},validator:null,label:null,prepared:!1,recipients:[]}},argTypes:{}};var Timestamp=function Timestamp(_ref){var field=_ref.field;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-field-timestamp .field="," />"])),field)};Timestamp.parameters=Object.assign({storySource:{source:"({field}) => html`<verdocs-field-timestamp .field=${field} />`"}},Timestamp.parameters)},"./src/components/elements/verdocs-quick-functions/verdocs-quick-functions.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"QuickFunctions",(function(){return QuickFunctions}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Search/Quick Functions",component:"verdocs-quick-functions",args:{options:{title:"Quick Create"}},argTypes:{createTemplate:{action:"createTemplate"},createDocument:{action:"createDocument"}}};var QuickFunctions=function QuickFunctions(_ref){var options=_ref.options,createTemplate=_ref.createTemplate,createDocument=_ref.createDocument;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-quick-functions .options="," @createTemplate="," @createDocument="," tall />"])),options,createTemplate,createDocument)};QuickFunctions.parameters=Object.assign({storySource:{source:"({options, createTemplate, createDocument}) =>\n  html`<verdocs-quick-functions .options=${options} @createTemplate=${createTemplate} @createDocument=${createDocument} tall />`"}},QuickFunctions.parameters)},"./src/components/elements/verdocs-search-activity/verdocs-search-activity.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SearchActivity",(function(){return SearchActivity}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Search/Search Activity",component:"verdocs-search-activity",args:{},argTypes:{type:{defaultValue:"recent"},entrySelected:{action:"entrySelected"}}};var SearchActivity=function SearchActivity(_ref){var type=_ref.type,entrySelected=_ref.entrySelected;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-search-activity .type="," @entrySelected="," tall />"])),type,entrySelected)};SearchActivity.parameters=Object.assign({storySource:{source:"({type, entrySelected}) => html`<verdocs-search-activity .type=${type} @entrySelected=${entrySelected} tall />`"}},SearchActivity.parameters)},"./src/components/elements/verdocs-search-box/verdocs-search-box.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SearchBox",(function(){return SearchBox}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Search/Search Box",component:"verdocs-search-box",args:{type:"all"},argTypes:{searchClicked:{action:"searchClicked"},typeChanged:{action:"typeChanged"},queryChanged:{action:"queryChanged"},type:{type:"string",control:"radio",options:["all","document","template","organization"]}},parameters:{layout:"fullscreen"}};var SearchBox=function SearchBox(_ref){var type=_ref.type,searchClicked=_ref.searchClicked,typeChanged=_ref.typeChanged,queryChanged=_ref.queryChanged;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-search-box .type="," @searchClicked="," @typeChanged="," @queryChanged="," />"])),type,searchClicked,typeChanged,queryChanged)};SearchBox.parameters=Object.assign({storySource:{source:"({type, searchClicked, typeChanged, queryChanged}) =>\n  html`<verdocs-search-box .type=${type} @searchClicked=${searchClicked} @typeChanged=${typeChanged} @queryChanged=${queryChanged} />`"}},SearchBox.parameters)},"./src/components/elements/verdocs-search-tabs/verdocs-search-tabs.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Tabs",(function(){return Tabs}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js");__webpack_exports__.default={title:"Search/Tabs",component:"verdocs-search-tabs",args:{},argTypes:{}};var listener={handleEvent:function handleEvent(e){Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.action)("selected",e)},capture:!0},Tabs=function Tabs(_ref){var options=_ref.options;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-search-tabs .options="," @optionSelected="," tall />"])),options,listener)};Tabs.parameters=Object.assign({storySource:{source:"({options}) => html`<verdocs-search-tabs .options=${options} @optionSelected=${listener} tall />`"}},Tabs.parameters)},"./src/components/elements/verdocs-template-create/verdocs-template-create.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TemplateCreate",(function(){return TemplateCreate}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Elements/Template Create",component:"verdocs-template-create",args:{templateRole:{template_id:"65cbba07-d0ac-4b62-afe3-25d186238938",name:"Recipient 1",full_name:"",email:"",phone:"",type:"signer",sequence:1,message:""},contactSuggestions:[{name:"Me",email:"myuser@nomail.com",phone:"212-555-6664"},{name:"Will Power",email:"will.power@nomail.com",avatar:"https://i.pravatar.cc/48?img=59"},{name:"Paige Turner",email:"paige.turner@nomail.com",phone:"212-555-6664",avatar:"https://i.pravatar.cc/48?img=41"},{name:"Bill Board",phone:"212-555-6664"}]},argTypes:{searchContacts:{action:"searchContacts"},cancel:{action:"cancel"},contactSelected:{action:"contactSelected"}}};var TemplateCreate=function TemplateCreate(_ref){var templateRole=_ref.templateRole,contactSuggestions=_ref.contactSuggestions,searchContacts=_ref.searchContacts,cancel=_ref.cancel,contactSelected=_ref.contactSelected;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-create\n    .templateRole=","\n    .contactSuggestions=","\n    @searchContacts=","\n    @cancel=","\n    @contactSelected=","\n  />"])),templateRole,contactSuggestions,searchContacts,cancel,contactSelected)};TemplateCreate.parameters=Object.assign({storySource:{source:"({templateRole, contactSuggestions, searchContacts, cancel, contactSelected}) =>\n  html`<verdocs-template-create\n    .templateRole=${templateRole}\n    .contactSuggestions=${contactSuggestions}\n    @searchContacts=${searchContacts}\n    @cancel=${cancel}\n    @contactSelected=${contactSelected}\n  />`"}},TemplateCreate.parameters)},"./src/components/elements/verdocs-template-fields/verdocs-template-fields.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TemplateFields",(function(){return TemplateFields}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Elements/Template Fields",component:"verdocs-template-fields",args:{templateId:"d2338742-f3a1-465b-8592-806587413cc1"},argTypes:{cancel:{action:"cancel"},save:{action:"save"}},parameters:{layout:"fullscreen"}};var TemplateFields=function TemplateFields(_ref){var templateId=_ref.templateId,cancel=_ref.cancel,save=_ref.save;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-fields .templateId="," @cancel="," @save="," />"])),templateId,cancel,save)};TemplateFields.parameters=Object.assign({storySource:{source:"({templateId, cancel, save}) => html`<verdocs-template-fields .templateId=${templateId} @cancel=${cancel} @save=${save} />`"}},TemplateFields.parameters)},"./src/components/elements/verdocs-template-properties/verdocs-template-properties.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TemplateProperties",(function(){return TemplateProperties}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Elements/Template Properties",component:"verdocs-template-properties",args:{templateRole:{template_id:"65cbba07-d0ac-4b62-afe3-25d186238938",name:"Recipient 1",full_name:"",email:"",phone:"",type:"signer",sequence:1,message:""},contactSuggestions:[{name:"Me",email:"myuser@nomail.com",phone:"212-555-6664"},{name:"Will Power",email:"will.power@nomail.com",avatar:"https://i.pravatar.cc/48?img=59"},{name:"Paige Turner",email:"paige.turner@nomail.com",phone:"212-555-6664",avatar:"https://i.pravatar.cc/48?img=41"},{name:"Bill Board",phone:"212-555-6664"}]},argTypes:{searchContacts:{action:"searchContacts"},cancel:{action:"cancel"},contactSelected:{action:"contactSelected"}}};var TemplateProperties=function TemplateProperties(_ref){var templateRole=_ref.templateRole,contactSuggestions=_ref.contactSuggestions,searchContacts=_ref.searchContacts,cancel=_ref.cancel,contactSelected=_ref.contactSelected;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-properties\n    .templateRole=","\n    .contactSuggestions=","\n    @searchContacts=","\n    @cancel=","\n    @contactSelected=","\n  />"])),templateRole,contactSuggestions,searchContacts,cancel,contactSelected)};TemplateProperties.parameters=Object.assign({storySource:{source:"({templateRole, contactSuggestions, searchContacts, cancel, contactSelected}) =>\n  html`<verdocs-template-properties\n    .templateRole=${templateRole}\n    .contactSuggestions=${contactSuggestions}\n    @searchContacts=${searchContacts}\n    @cancel=${cancel}\n    @contactSelected=${contactSelected}\n  />`"}},TemplateProperties.parameters)},"./src/components/elements/verdocs-template-recipients/verdocs-template-recipients.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TemplateRecipients",(function(){return TemplateRecipients}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Elements/Template Recipients",component:"verdocs-template-recipients",args:{templateRole:{template_id:"65cbba07-d0ac-4b62-afe3-25d186238938",name:"Recipient 1",full_name:"",email:"",phone:"",type:"signer",sequence:1,message:""},contactSuggestions:[{name:"Me",email:"myuser@nomail.com",phone:"212-555-6664"},{name:"Will Power",email:"will.power@nomail.com",avatar:"https://i.pravatar.cc/48?img=59"},{name:"Paige Turner",email:"paige.turner@nomail.com",phone:"212-555-6664",avatar:"https://i.pravatar.cc/48?img=41"},{name:"Bill Board",phone:"212-555-6664"}]},argTypes:{searchContacts:{action:"searchContacts"},cancel:{action:"cancel"},contactSelected:{action:"contactSelected"}}};var TemplateRecipients=function TemplateRecipients(_ref){var templateRole=_ref.templateRole,contactSuggestions=_ref.contactSuggestions,searchContacts=_ref.searchContacts,cancel=_ref.cancel,contactSelected=_ref.contactSelected;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-template-recipients\n    .templateRole=","\n    .contactSuggestions=","\n    @searchContacts=","\n    @cancel=","\n    @contactSelected=","\n  />"])),templateRole,contactSuggestions,searchContacts,cancel,contactSelected)};TemplateRecipients.parameters=Object.assign({storySource:{source:"({templateRole, contactSuggestions, searchContacts, cancel, contactSelected}) =>\n  html`<verdocs-template-recipients\n    .templateRole=${templateRole}\n    .contactSuggestions=${contactSuggestions}\n    @searchContacts=${searchContacts}\n    @cancel=${cancel}\n    @contactSelected=${contactSelected}\n  />`"}},TemplateRecipients.parameters)},"./src/components/embeds/verdocs-auth/verdocs-auth.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Auth",(function(){return Auth}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/Auth",component:"verdocs-auth",args:{debug:!0,visible:!0,logo:"https://verdocs.com/assets/blue-logo.svg"},argTypes:{sdkError:{action:"error",table:{disable:!0}},authenticated:{action:"authenticated",table:{disable:!0}}}};var Auth=function Auth(_ref){var visible=_ref.visible,logo=_ref.logo,debug=_ref.debug,authenticated=_ref.authenticated,sdkError=_ref.sdkError;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-auth .visible="," .logo="," .debug="," @authenticated="," @sdkError="," />"])),visible,logo,debug,authenticated,sdkError)};Auth.parameters=Object.assign({storySource:{source:"({visible, logo, debug, authenticated, sdkError}) =>\n  html`<verdocs-auth .visible=${visible} .logo=${logo} .debug=${debug} @authenticated=${authenticated} @sdkError=${sdkError} />`"}},Auth.parameters)},"./src/components/embeds/verdocs-build/verdocs-build.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Build",(function(){return Build}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/Build",component:"verdocs-build",parameters:{layout:"fullscreen"}};var Build=function Build(_ref){return function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure undefined")}(_ref),Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-build />"])))};Build.parameters=Object.assign({storySource:{source:"({}) => html`<verdocs-build />`"}},Build.parameters)},"./src/components/embeds/verdocs-preview/verdocs-preview.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Preview",(function(){return Preview}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/Preview",component:"verdocs-preview",args:{templateId:"d2338742-f3a1-465b-8592-806587413cc1"},argTypes:{templateId:{control:{type:"string"}}},parameters:{layout:"fullscreen"}};var Preview=function Preview(_ref){var templateId=_ref.templateId;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-preview .templateId="," />"])),templateId)};Preview.parameters=Object.assign({storySource:{source:"({templateId}) => html`<verdocs-preview .templateId=${templateId} />`"}},Preview.parameters)},"./src/components/embeds/verdocs-search/verdocs-search.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Search",(function(){return Search}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js");__webpack_exports__.default={title:"Embeds/Search",component:"verdocs-search",args:{},argTypes:{}};var listener={handleEvent:function handleEvent(e){Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.action)("selected",e)},capture:!0},Search=function Search(_ref){var options=_ref.options;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-search .options="," @optionSelected="," tall />"])),options,listener)};Search.parameters=Object.assign({storySource:{source:"({options}) => html`<verdocs-search .options=${options} @optionSelected=${listener} tall />`"}},Search.parameters)},"./src/components/embeds/verdocs-send/verdocs-send.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Send",(function(){return Send}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/Send",component:"verdocs-send",args:{templateId:"d2338742-f3a1-465b-8592-806587413cc1"},argTypes:{templateId:{control:{type:"string"}}},parameters:{layout:"fullscreen"}};var Send=function Send(_ref){var templateId=_ref.templateId;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-send .templateId="," />"])),templateId)};Send.parameters=Object.assign({storySource:{source:"({templateId}) => html`<verdocs-send .templateId=${templateId} />`"}},Send.parameters)},"./src/components/embeds/verdocs-sign/verdocs-sign.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Sign",(function(){return Sign}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/Sign",component:"verdocs-sign",args:{documentId:"fa2e6afa-4da8-4c6e-ab37-27ec366b090b",roleId:"Seller",inviteCode:"06cecc76ad9b3d02a8fadab5b0aad065"},argTypes:{documentId:{control:{type:"string"}},roleId:{control:{type:"string"}},inviteCode:{control:{type:"string"}}},parameters:{layout:"fullscreen"}};var Sign=function Sign(_ref){var documentId=_ref.documentId,roleId=_ref.roleId,inviteCode=_ref.inviteCode;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-sign .documentId="," .roleId="," .inviteCode="," />"])),documentId,roleId,inviteCode)};Sign.parameters=Object.assign({storySource:{source:"({documentId, roleId, inviteCode}) => html`<verdocs-sign .documentId=${documentId} .roleId=${roleId} .inviteCode=${inviteCode} />`"}},Sign.parameters)},"./src/components/embeds/verdocs-view/verdocs-view.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"View",(function(){return View}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Embeds/View",component:"verdocs-view",args:{source:"https://stage-api.verdocs.com/envelopes/64d7eb5a-a4fb-4044-accf-a0b9ba530e42/envelope_documents/bd92fcfa-63fd-4b94-856e-e7f4c7c0b2e1?file=true"},argTypes:{},parameters:{layout:"fullscreen"}};var View=function View(_ref){var source=_ref.source;return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["<verdocs-view .source="," />"])),source)};View.parameters=Object.assign({storySource:{source:"({source}) => html`<verdocs-view .source=${source} />`"}},View.parameters)},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@pxtrn/storybook-addon-docs-stencil/dist/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,11,12]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vQGxhenktZXh0ZXJuYWwtZW50cnlwb2ludCIsIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvY2xpZW50L3BhdGNoLWVzbS5qcyIsIndlYnBhY2s6Ly8vLi8uc3Rvcnlib29rL3ByZXZpZXcuanMiLCJ3ZWJwYWNrOi8vLy4vLnN0b3J5Ym9vay9wcmV2aWV3LmpzLWdlbmVyYXRlZC1jb25maWctZW50cnkuanMiLCJ3ZWJwYWNrOi8vLy4vZGlzdC9lc20gbGF6eSBeXFwuXFwvLipcXC5lbnRyeVxcLmpzJCBpbmNsdWRlOiBcXC5lbnRyeVxcLmpzJCBleGNsdWRlOiBcXC5zeXN0ZW1cXC5lbnRyeVxcLmpzJCBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovLy9Ac3RlbmNpbC9jb3JlL2ludGVybmFsL2FwcC1kYXRhIiwid2VicGFjazovLy9ub2RlX21vZHVsZXMvQHN0ZW5jaWwvY29yZS9pbnRlcm5hbC9jbGllbnQiLCJ3ZWJwYWNrOi8vLy4vZ2VuZXJhdGVkLXN0b3JpZXMtZW50cnkuanMiLCJ3ZWJwYWNrOi8vL1xcLikoPzQzYTAiLCJ3ZWJwYWNrOi8vL1xcLikoIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtYnV0dG9uLXBhbmVsL3ZlcmRvY3MtYnV0dG9uLXBhbmVsLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtYnV0dG9uL3ZlcmRvY3MtYnV0dG9uLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtZHJvcGRvd24vdmVyZG9jcy1kcm9wZG93bi5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLWhlbHAtaWNvbi92ZXJkb2NzLWhlbHAtaWNvbi5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLWxvYWRlci92ZXJkb2NzLWxvYWRlci5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLW9yZ2FuaXphdGlvbi1jYXJkL3ZlcmRvY3Mtb3JnYW5pemF0aW9uLWNhcmQuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1yYWRpby1idXR0b24vdmVyZG9jcy1yYWRpby1idXR0b24uc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1zZWxlY3QtaW5wdXQvdmVyZG9jcy1zZWxlY3QtaW5wdXQuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1zdGF0dXMtaW5kaWNhdG9yL3ZlcmRvY3Mtc3RhdHVzLWluZGljYXRvci5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLXRlbXBsYXRlLWNhcmQvdmVyZG9jcy10ZW1wbGF0ZS1jYXJkLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdGVtcGxhdGUtdGFncy92ZXJkb2NzLXRlbXBsYXRlLXRhZ3Muc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy10ZXh0LWlucHV0L3ZlcmRvY3MtdGV4dC1pbnB1dC5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLXRvZ2dsZS1idXR0b24vdmVyZG9jcy10b2dnbGUtYnV0dG9uLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdG9nZ2xlL3ZlcmRvY3MtdG9nZ2xlLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdG9vbGJhci1pY29uL3ZlcmRvY3MtdG9vbGJhci1pY29uLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2RpYWxvZ3MvdmVyZG9jcy1pbml0aWFsLWRpYWxvZy92ZXJkb2NzLWluaXRpYWwtZGlhbG9nLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2RpYWxvZ3MvdmVyZG9jcy1rYmEtZGlhbG9nL3ZlcmRvY3Mta2JhLWRpYWxvZy5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9kaWFsb2dzL3ZlcmRvY3Mtb2stZGlhbG9nL3ZlcmRvY3Mtb2stZGlhbG9nLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2RpYWxvZ3MvdmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nL3ZlcmRvY3Mtc2lnbmF0dXJlLWRpYWxvZy5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9kaWFsb2dzL3ZlcmRvY3MtdGVtcGxhdGUtc2VuZGVyLWRpYWxvZy92ZXJkb2NzLXRlbXBsYXRlLXNlbmRlci1kaWFsb2cuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZGlhbG9ncy92ZXJkb2NzLXVwbG9hZC1kaWFsb2cvdmVyZG9jcy11cGxvYWQtZGlhbG9nLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtY29udGFjdC1waWNrZXIvdmVyZG9jcy1jb250YWN0LXBpY2tlci5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLWF0dGFjaG1lbnQvdmVyZG9jcy1maWVsZC1hdHRhY2htZW50LnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtY2hlY2tib3gtZ3JvdXAvdmVyZG9jcy1maWVsZC1jaGVja2JveC5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLWRhdGUvdmVyZG9jcy1maWVsZC1kYXRlLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtZHJvcGRvd24vdmVyZG9jcy1maWVsZC1kcm9wZG93bi5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLWluaXRpYWwvdmVyZG9jcy1maWVsZC1pbml0aWFsLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtcGF5bWVudC92ZXJkb2NzLWZpZWxkLXBheW1lbnQuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC1yYWRpby1idXR0b24tZ3JvdXAvdmVyZG9jcy1maWVsZC1yYWRpby1idXR0b24uc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC1zaWduYXR1cmUvdmVyZG9jcy1maWVsZC1zaWduYXR1cmUuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC10ZXh0YXJlYS92ZXJkb2NzLWZpZWxkLXRleHRhcmVhLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtdGV4dGJveC92ZXJkb2NzLWZpZWxkLXRleHRib3guc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC10aW1lc3RhbXAvdmVyZG9jcy1maWVsZC10aW1lc3RhbXAuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1xdWljay1mdW5jdGlvbnMvdmVyZG9jcy1xdWljay1mdW5jdGlvbnMuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1zZWFyY2gtYWN0aXZpdHkvdmVyZG9jcy1zZWFyY2gtYWN0aXZpdHkuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1zZWFyY2gtYm94L3ZlcmRvY3Mtc2VhcmNoLWJveC5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXNlYXJjaC10YWJzL3ZlcmRvY3Mtc2VhcmNoLXRhYnMuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1jcmVhdGUvdmVyZG9jcy10ZW1wbGF0ZS1jcmVhdGUuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1maWVsZHMvdmVyZG9jcy10ZW1wbGF0ZS1maWVsZHMuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1wcm9wZXJ0aWVzL3ZlcmRvY3MtdGVtcGxhdGUtcHJvcGVydGllcy5zdG9yaWVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXRlbXBsYXRlLXJlY2lwaWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1yZWNpcGllbnRzLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLWF1dGgvdmVyZG9jcy1hdXRoLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLWJ1aWxkL3ZlcmRvY3MtYnVpbGQuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZW1iZWRzL3ZlcmRvY3MtcHJldmlldy92ZXJkb2NzLXByZXZpZXcuc3Rvcmllcy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZW1iZWRzL3ZlcmRvY3Mtc2VhcmNoL3ZlcmRvY3Mtc2VhcmNoLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLXNlbmQvdmVyZG9jcy1zZW5kLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLXNpZ24vdmVyZG9jcy1zaWduLnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLXZpZXcvdmVyZG9jcy12aWV3LnN0b3JpZXMudHN4Iiwid2VicGFjazovLy8uL3N0b3J5Ym9vay1pbml0LWZyYW1ld29yay1lbnRyeS5qcyJdLCJuYW1lcyI6WyJkZWZpbmVDdXN0b21FbGVtZW50cyIsIndpbiIsIm9wdGlvbnMiLCJ3aW5kb3ciLCJQcm9taXNlIiwicmVzb2x2ZSIsInBhdGNoRXNtIiwicHJvbWlzZVJlc29sdmUiLCJ0aGVuIiwiYm9vdHN0cmFwTGF6eSIsImRvY0pzb24iLCJzZXRTdGVuY2lsRG9jSnNvbiIsInBhcmFtZXRlcnMiLCJjb250cm9scyIsImhpZGVOb0NvbnRyb2xzV2FybmluZyIsIm1hdGNoZXJzIiwiY29sb3IiLCJkYXRlIiwidmlld01vZGUiLCJkb2NzIiwiaWZyYW1lSGVpZ2h0IiwiZXh0cmFjdEFyZ1R5cGVzIiwiZXh0cmFjdENvbXBvbmVudERlc2NyaXB0aW9uIiwibGF5b3V0IiwiYmFja2dyb3VuZHMiLCJkZWZhdWx0IiwidmFsdWVzIiwibmFtZSIsInZhbHVlIiwib3duS2V5cyIsIm9iamVjdCIsImVudW1lcmFibGVPbmx5Iiwia2V5cyIsIk9iamVjdCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bWJvbHMiLCJmaWx0ZXIiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX2RlZmluZVByb3BlcnR5Iiwib2JqIiwia2V5IiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGlja0RvY3NCdXR0b25PbkZpcnN0TG9hZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJwYXJlbnQiLCJkb2N1bWVudCIsImV2YWx1YXRlIiwiWFBhdGhSZXN1bHQiLCJBTllfVFlQRSIsIml0ZXJhdGVOZXh0IiwiY2xpY2siLCJlcnJvciIsImNvbmZpZyIsImZvckVhY2giLCJhZGRBcmdzIiwiYWRkQXJnVHlwZXMiLCJkZWNvcmF0b3IiLCJhZGREZWNvcmF0b3IiLCJsb2FkZXIiLCJhZGRMb2FkZXIiLCJhZGRQYXJhbWV0ZXJzIiwiX29iamVjdFNwcmVhZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImVuaGFuY2VyIiwiYWRkQXJnVHlwZXNFbmhhbmNlciIsImFkZEFyZ3NFbmhhbmNlciIsInNldEdsb2JhbFJlbmRlciIsInYiLCJjb25zb2xlIiwibG9nIiwibWFwIiwid2VicGFja0FzeW5jQ29udGV4dCIsInJlcSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJvIiwiZSIsIkVycm9yIiwiY29kZSIsImlkcyIsImlkIiwiYWxsIiwic2xpY2UiLCJ3ZWJwYWNrQXN5bmNDb250ZXh0S2V5cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJjb250ZW50UmVmIiwiaG9zdFRhZ05hbWUiLCJ1c2VOYXRpdmVTaGFkb3dEb20iLCJjaGVja1Nsb3RGYWxsYmFja1Zpc2liaWxpdHkiLCJjaGVja1Nsb3RSZWxvY2F0ZSIsImlzU3ZnTW9kZSIsInF1ZXVlUGVuZGluZyIsImRvYyIsImhlYWQiLCJwbHQiLCIkZmxhZ3MkIiwiJHJlc291cmNlc1VybCQiLCJqbXAiLCJoIiwicmFmIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiYWVsIiwiZWwiLCJldmVudE5hbWUiLCJsaXN0ZW5lciIsIm9wdHMiLCJyZWwiLCJjZSIsIkN1c3RvbUV2ZW50Iiwic3VwcG9ydHNDb25zdHJ1Y3RhYmxlU3R5bGVzaGVldHMiLCJDU1NTdHlsZVNoZWV0IiwicmVwbGFjZVN5bmMiLCJIWURSQVRFRF9DU1MiLCJyb290QXBwbGllZFN0eWxlcyIsIldlYWtNYXAiLCJyZWdpc3RlclN0eWxlIiwic2NvcGVJZCIsImNzc1RleHQiLCJhbGxvd0NTIiwic3R5bGUiLCJzdHlsZXMiLCJnZXQiLCJzZXQiLCJhdHRhY2hTdHlsZXMiLCJob3N0UmVmIiwiY21wTWV0YSIsIiRjbXBNZXRhJCIsImVsbSIsIiRob3N0RWxlbWVudCQiLCJlbmRBdHRhY2hTdHlsZXMiLCIkdGFnTmFtZSQiLCJhZGRTdHlsZSIsInN0eWxlQ29udGFpbmVyTm9kZSIsIm1vZGUiLCJob3N0RWxtIiwiZ2V0U2NvcGVJZCIsIm5vZGVUeXBlIiwic3R5bGVFbG0iLCJhcHBsaWVkU3R5bGVzIiwiU2V0IiwiaGFzIiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsImluc2VydEJlZm9yZSIsInF1ZXJ5U2VsZWN0b3IiLCJhZGQiLCJhZG9wdGVkU3R5bGVTaGVldHMiLCJpbmNsdWRlcyIsImdldFJvb3ROb2RlIiwiY21wIiwiRU1QVFlfT0JKIiwiaXNDb21wbGV4VHlwZSIsIm5vZGVOYW1lIiwidm5vZGVEYXRhIiwiY2hpbGQiLCJzbG90TmFtZSIsInNpbXBsZSIsImxhc3RTaW1wbGUiLCJ2Tm9kZUNoaWxkcmVuIiwid2FsayIsImMiLCJBcnJheSIsImlzQXJyYXkiLCJTdHJpbmciLCIkdGV4dCQiLCJuZXdWTm9kZSIsImNoaWxkcmVuIiwiY2xhc3NEYXRhIiwiY2xhc3NOYW1lIiwiayIsImpvaW4iLCJ2ZG9tRm5VdGlscyIsInZub2RlIiwiJGF0dHJzJCIsIiRjaGlsZHJlbiQiLCIka2V5JCIsIiRuYW1lJCIsInRhZyIsInRleHQiLCIkdGFnJCIsIiRlbG0kIiwiSG9zdCIsImNiIiwiY29udmVydFRvUHVibGljIiwiY29udmVydFRvUHJpdmF0ZSIsIm5vZGUiLCJ2YXR0cnMiLCJ2Y2hpbGRyZW4iLCJ2a2V5Iiwidm5hbWUiLCJ2dGFnIiwidnRleHQiLCJhc3NpZ24iLCJzZXRBY2Nlc3NvciIsIm1lbWJlck5hbWUiLCJvbGRWYWx1ZSIsIm5ld1ZhbHVlIiwiaXNTdmciLCJmbGFncyIsImlzUHJvcCIsImlzTWVtYmVySW5FbGVtZW50IiwibG4iLCJ0b0xvd2VyQ2FzZSIsImNsYXNzTGlzdCIsIm9sZENsYXNzZXMiLCJwYXJzZUNsYXNzTGlzdCIsIm5ld0NsYXNzZXMiLCJyZW1vdmUiLCJwcm9wIiwicmVtb3ZlUHJvcGVydHkiLCJzZXRQcm9wZXJ0eSIsImlzQ29tcGxleCIsInRhZ05hbWUiLCJuIiwiZ2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwicGFyc2VDbGFzc0xpc3RSZWdleCIsInNwbGl0IiwidXBkYXRlRWxlbWVudCIsIm9sZFZub2RlIiwibmV3Vm5vZGUiLCJob3N0Iiwib2xkVm5vZGVBdHRycyIsIm5ld1Zub2RlQXR0cnMiLCJ1bmRlZmluZWQiLCJjcmVhdGVFbG0iLCJvbGRQYXJlbnRWTm9kZSIsIm5ld1BhcmVudFZOb2RlIiwiY2hpbGRJbmRleCIsInBhcmVudEVsbSIsImNoaWxkTm9kZSIsIm9sZFZOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjcmVhdGVFbGVtZW50TlMiLCJhcHBlbmRDaGlsZCIsInB1dEJhY2tJbk9yaWdpbmFsTG9jYXRpb24iLCJyZWN1cnNpdmUiLCJvbGRTbG90Q2hpbGROb2RlcyIsImNoaWxkTm9kZXMiLCJwYXJlbnRSZWZlcmVuY2VOb2RlIiwicmVmZXJlbmNlTm9kZSIsImFkZFZub2RlcyIsImJlZm9yZSIsInBhcmVudFZOb2RlIiwidm5vZGVzIiwic3RhcnRJZHgiLCJlbmRJZHgiLCJjb250YWluZXJFbG0iLCJwYXJlbnROb2RlIiwicmVtb3ZlVm5vZGVzIiwiY2FsbE5vZGVSZWZzIiwidXBkYXRlQ2hpbGRyZW4iLCJvbGRDaCIsIm5ld0NoIiwiZWxtVG9Nb3ZlIiwib2xkU3RhcnRJZHgiLCJuZXdTdGFydElkeCIsImlkeEluT2xkIiwib2xkRW5kSWR4Iiwib2xkU3RhcnRWbm9kZSIsIm9sZEVuZFZub2RlIiwibmV3RW5kSWR4IiwibmV3U3RhcnRWbm9kZSIsIm5ld0VuZFZub2RlIiwiaXNTYW1lVm5vZGUiLCJwYXRjaCIsIm5leHRTaWJsaW5nIiwidm5vZGUxIiwidm5vZGUyIiwiZGVmYXVsdEhvbGRlciIsIm9sZENoaWxkcmVuIiwibmV3Q2hpbGRyZW4iLCJ0ZXh0Q29udGVudCIsImRhdGEiLCJ1cGRhdGVGYWxsYmFja1Nsb3RWaXNpYmlsaXR5IiwiaWxlbiIsImoiLCJzbG90TmFtZUF0dHIiLCJoaWRkZW4iLCJ0cmltIiwicmVsb2NhdGVOb2RlcyIsInJlbG9jYXRlU2xvdENvbnRlbnQiLCJob3N0Q29udGVudE5vZGVzIiwicmVsb2NhdGVOb2RlRGF0YSIsImlzTm9kZUxvY2F0ZWRJblNsb3QiLCJmaW5kIiwiciIsIiRub2RlVG9SZWxvY2F0ZSQiLCIkc2xvdFJlZk5vZGUkIiwicmVsb2NhdGVOb2RlIiwic29tZSIsIm5vZGVUb1JlbG9jYXRlIiwidk5vZGUiLCJyZWYiLCJyZW5kZXJWZG9tIiwicmVuZGVyRm5SZXN1bHRzIiwiJHZub2RlJCIsInJvb3RWbm9kZSIsImlzSG9zdCIsInJlbG9jYXRlRGF0YSIsIm9yZ0xvY2F0aW9uTm9kZSIsInBhcmVudE5vZGVSZWYiLCJpbnNlcnRCZWZvcmVOb2RlIiwicmVmTm9kZSIsInByZXZpb3VzU2libGluZyIsImdldEVsZW1lbnQiLCJnZXRIb3N0UmVmIiwiY3JlYXRlRXZlbnQiLCJlbWl0IiwiZGV0YWlsIiwiZW1pdEV2ZW50IiwiYnViYmxlcyIsImNvbXBvc2VkIiwiY2FuY2VsYWJsZSIsImV2IiwiZGlzcGF0Y2hFdmVudCIsImF0dGFjaFRvQW5jZXN0b3IiLCJhbmNlc3RvckNvbXBvbmVudCIsIiRvblJlbmRlclJlc29sdmUkIiwic2NoZWR1bGVVcGRhdGUiLCJpc0luaXRpYWxMb2FkIiwiJGFuY2VzdG9yQ29tcG9uZW50JCIsIndyaXRlVGFzayIsImRpc3BhdGNoIiwiZGlzcGF0Y2hIb29rcyIsInByb21pc2UiLCJlbmRTY2hlZHVsZSIsImluc3RhbmNlIiwiJGxhenlJbnN0YW5jZSQiLCJzYWZlQ2FsbCIsInVwZGF0ZUNvbXBvbmVudCIsImVuZFVwZGF0ZSIsInJjIiwiZW5kUmVuZGVyIiwiY2FsbFJlbmRlciIsImNoaWxkcmVuUHJvbWlzZXMiLCJwb3N0VXBkYXRlIiwicG9zdFVwZGF0ZUNvbXBvbmVudCIsInJlbmRlciIsImNvbnNvbGVFcnJvciIsImVuZFBvc3RVcGRhdGUiLCJhZGRIeWRyYXRlZEZsYWciLCIkb25SZWFkeVJlc29sdmUkIiwiYXBwRGlkTG9hZCIsIiRvbkluc3RhbmNlUmVzb2x2ZSQiLCJuZXh0VGljayIsIndobyIsImRvY3VtZW50RWxlbWVudCIsIm5hbWVzcGFjZSIsIm1ldGhvZCIsImFyZyIsInRoZW5GbiIsInNldFZhbHVlIiwicHJvcE5hbWUiLCJuZXdWYWwiLCJvbGRWYWwiLCIkaW5zdGFuY2VWYWx1ZXMkIiwicGFyc2VQcm9wZXJ0eVZhbHVlIiwicHJvcFZhbHVlIiwicHJvcFR5cGUiLCJwYXJzZUZsb2F0IiwiJG1lbWJlcnMkIiwiYXJlQm90aE5hTiIsIk51bWJlciIsImlzTmFOIiwiJHdhdGNoZXJzJCIsIndhdGNoTWV0aG9kcyIsIndhdGNoTWV0aG9kTmFtZSIsInByb3h5Q29tcG9uZW50IiwiQ3N0ciIsIndhdGNoZXJzIiwibWVtYmVycyIsImVudHJpZXMiLCJwcm90b3R5cGUiLCJtZW1iZXJGbGFncyIsImdldFZhbHVlIiwidGhpcyIsImFyZ3MiLCIkb25JbnN0YW5jZVByb21pc2UkIiwiYXR0ck5hbWVUb1Byb3BOYW1lIiwiTWFwIiwiYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrIiwiYXR0ck5hbWUiLCJfb2xkVmFsdWUiLCJoYXNPd25Qcm9wZXJ0eSIsIm9ic2VydmVkQXR0cmlidXRlcyIsImluaXRpYWxpemVDb21wb25lbnQiLCJobXJWZXJzaW9uSWQiLCJsb2FkTW9kdWxlIiwiZW5kTG9hZCIsImlzUHJveGllZCIsImVuZE5ld0luc3RhbmNlIiwiZW5kUmVnaXN0ZXJTdHlsZXMiLCJzY2hlZHVsZSIsImNvbm5lY3RlZENhbGxiYWNrIiwiZW5kQ29ubmVjdGVkIiwic2V0Q29udGVudFJlZmVyZW5jZSIsImNvbnRlbnRSZWZFbG0iLCJjcmVhdGVDb21tZW50IiwiZmlyc3RDaGlsZCIsImRpc2Nvbm5lY3RlZENhbGxiYWNrIiwibGF6eUJ1bmRsZXMiLCJhcHBMb2FkRmFsbGJhY2siLCJlbmRCb290c3RyYXAiLCJjbXBUYWdzIiwiZXhjbHVkZSIsImN1c3RvbUVsZW1lbnRzIiwibWV0YUNoYXJzZXQiLCJ2aXNpYmlsaXR5U3R5bGUiLCJkZWZlcnJlZENvbm5lY3RlZENhbGxiYWNrcyIsImlzQm9vdHN0cmFwcGluZyIsIlVSTCIsInJlc291cmNlc1VybCIsImJhc2VVUkkiLCJocmVmIiwibGF6eUJ1bmRsZSIsImNvbXBhY3RNZXRhIiwiJGxpc3RlbmVycyQiLCJIb3N0RWxlbWVudCIsInNlbGYiLCJyZWdpc3Rlckhvc3QiLCJjbGVhclRpbWVvdXQiLCJjb21wb25lbnRPblJlYWR5IiwiJG9uUmVhZHlQcm9taXNlJCIsIkhUTUxFbGVtZW50IiwiJGxhenlCdW5kbGVJZCQiLCJkZWZpbmUiLCJzZXRUaW1lb3V0IiwiRnJhZ21lbnQiLCJfIiwiaG9zdFJlZnMiLCJyZWdpc3Rlckluc3RhbmNlIiwibGF6eUluc3RhbmNlIiwiY21wTW9kdWxlcyIsImV4cG9ydE5hbWUiLCJyZXBsYWNlIiwiYnVuZGxlSWQiLCJpbXBvcnRlZE1vZHVsZSIsInF1ZXVlRG9tUmVhZHMiLCJxdWV1ZURvbVdyaXRlcyIsInF1ZXVlVGFzayIsInF1ZXVlIiwid3JpdGUiLCJmbHVzaCIsImNvbnN1bWUiLCJwZXJmb3JtYW5jZSIsIm5vdyIsInJlcXVpcmUiLCJjb25maWd1cmUiLCJ3ZWJwYWNrQ29udGV4dCIsIndlYnBhY2tDb250ZXh0UmVzb2x2ZSIsIndlYnBhY2tDb250ZXh0S2V5cyIsIndlYnBhY2tFbXB0eUNvbnRleHQiLCJ0aXRsZSIsImNvbXBvbmVudCIsImljb24iLCJhcmdUeXBlcyIsIkJ1dHRvblBhbmVsIiwiaHRtbCIsInN0b3J5U291cmNlIiwibGFiZWwiLCJ0eXBlIiwic2l6ZSIsInZhcmlhbnQiLCJkaXNhYmxlZCIsInN0YXJ0SWNvbiIsImRlZmF1bHRWYWx1ZSIsImNvbnRyb2wiLCJlbmRJY29uIiwicHJlc3MiLCJhY3Rpb24iLCJ0YWJsZSIsImRpc2FibGUiLCJCdXR0b24iLCJvcHRpb25TZWxlY3RlZCIsIkRyb3Bkb3duTWVudSIsIkhlbHBJY29uIiwiTG9hZGVyIiwib3JnYW5pemF0aW9uIiwiYWRkcmVzcyIsInBob25lIiwiYnVzaW5lc3NfbmFtZSIsImlzX2J1c2luZXNzIiwiYWRkcmVzczIiLCJjb250YWN0X2VtYWlsIiwidGltZXpvbmUiLCJlbnZlbG9wZV9yZXNwb25zaWJsZSIsIk9yZ2FuaXphdGlvbkNhcmQiLCJjaGVja2VkIiwiUmFkaW9CdXR0b24iLCJjaGFuZ2UiLCJTZWxlY3RJbnB1dCIsInBsYWNlaG9sZGVyIiwic3RhdHVzIiwidGhlbWUiLCJtYXBwaW5nIiwicmVjaXBpZW50cyIsInJvbGVfbmFtZSIsImZ1bGxfbmFtZSIsInNlcXVlbmNlIiwibGFiZWxzIiwiU3RhdHVzSW5kaWNhdG9yIiwidGVtcGxhdGUiLCJjb3VudGVyIiwic3Rhcl9jb3VudGVyIiwicHJvZmlsZV9pZCIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkX2F0IiwibGFzdF91c2VkX2F0Iiwib3JnYW5pemF0aW9uX2lkIiwiaXNfcGVyc29uYWwiLCJpc19wdWJsaWMiLCJzZW5kZXIiLCJkZXNjcmlwdGlvbiIsInRlbXBsYXRlX2RvY3VtZW50IiwidXJsIiwicGFnZV9udW1iZXJzIiwidGVtcGxhdGVfaWQiLCJtaW1lIiwidGh1bWJuYWlsX3VybCIsIlRlbXBsYXRlQ2FyZCIsInRhZ3MiLCJUZW1wbGF0ZVRhZ3MiLCJpbnB1dCIsIlRleHRJbnB1dCIsImFjdGl2ZSIsIlRvZ2dsZUJ1dHRvbiIsImRlZmF1bHRTZWxlY3Rpb24iLCJidXR0b25zIiwiVG9nZ2xlIiwiVG9vbGJhckljb24iLCJvcGVuIiwiaW5pdGlhbHMiLCJjbG9zZWQiLCJJbml0aWFsRGlhbG9nIiwiaGVscHRpdGxlIiwiaGVscHRleHQiLCJzdGVwIiwic3RlcHMiLCJjaG9pY2VzIiwiS0JBRGlhbG9nIiwiY2FuY2VsIiwiaGVhZGluZyIsIm1lc3NhZ2UiLCJPa0RpYWxvZyIsIlNpZ25hdHVyZURpYWxvZyIsIlRlbXBsYXRlU2VuZGVyRGlhbG9nIiwiVXBsb2FkRGlhbG9nIiwidGVtcGxhdGVSb2xlIiwiZW1haWwiLCJjb250YWN0U3VnZ2VzdGlvbnMiLCJhdmF0YXIiLCJzZWFyY2hDb250YWN0cyIsImNvbnRhY3RTZWxlY3RlZCIsIkNvbnRhY3RQaWNrZXIiLCJmaWVsZCIsIngiLCJ5IiwiQXR0YWNobWVudCIsInNldHRpbmdzIiwib3B0aW9uIiwiQ2hlY2tib3giLCJEYXRlIiwiRHJvcGRvd24iLCJJbml0aWFsIiwiUGF5bWVudCIsIlNpZ25hdHVyZSIsIlRleHRhcmVhIiwiVGV4dGJveCIsInJlY2lwaWVudF9yb2xlIiwiZW52ZWxvcGVfaWQiLCJwYWdlIiwicmVxdWlyZWQiLCJ3aWR0aCIsImhlaWdodCIsInZhbGlkYXRvciIsInByZXBhcmVkIiwiVGltZXN0YW1wIiwiY3JlYXRlVGVtcGxhdGUiLCJjcmVhdGVEb2N1bWVudCIsIlF1aWNrRnVuY3Rpb25zIiwiZW50cnlTZWxlY3RlZCIsIlNlYXJjaEFjdGl2aXR5Iiwic2VhcmNoQ2xpY2tlZCIsInR5cGVDaGFuZ2VkIiwicXVlcnlDaGFuZ2VkIiwiU2VhcmNoQm94IiwiaGFuZGxlRXZlbnQiLCJjYXB0dXJlIiwiVGFicyIsIlRlbXBsYXRlQ3JlYXRlIiwidGVtcGxhdGVJZCIsInNhdmUiLCJUZW1wbGF0ZUZpZWxkcyIsIlRlbXBsYXRlUHJvcGVydGllcyIsIlRlbXBsYXRlUmVjaXBpZW50cyIsImRlYnVnIiwidmlzaWJsZSIsImxvZ28iLCJzZGtFcnJvciIsImF1dGhlbnRpY2F0ZWQiLCJBdXRoIiwiQnVpbGQiLCJQcmV2aWV3IiwiU2VhcmNoIiwiU2VuZCIsImRvY3VtZW50SWQiLCJyb2xlSWQiLCJpbnZpdGVDb2RlIiwiU2lnbiIsIlZpZXciXSwibWFwcGluZ3MiOiI7c2lEQUdvQyxTQUF2QkEscUJBQXdCQyxJQUFLQyxTQUNsQixvQkFBWEMsT0FBK0JDLFFBQVFDLFVDQ25DLFNBQVhDLFdBZUYsT0FBT0MsMEJBQ1YsQ0RoQlFELEdBQVdFLE1BQUssV0FFdkIsT0FBT0MseUJBQWMsQ0FBQyxDQUFELDBCQUE0QixFQUFFLDRCQUFTLGsyTUFBQVAsUUFDM0QsR0FDSCxDRU5BRixHQUtJVSxNQUFTQywrQkFBa0JELE1BRXhCLElBQU1FLFdBQWEsQ0FFeEJDLFNBQVUsQ0FDUkMsdUJBQXVCLEVBRXZCQyxTQUFVLENBQ1JDLE1BQU8sdUJBQ1BDLEtBQU0sVUFLVkMsU0FBVSxPQUNWQyxLQUFNLENBQ0pDLGFBQWMsSUFDZEMscUNBQ0FDLDhEQUVGQyxPQUFRLFdBQ1JDLFlBQWEsQ0FDWEMsUUFBUyxRQUNUQyxPQUFRLENBQ04sQ0FDRUMsS0FBTSxRQUNOQyxNQUFPLFdBRVQsQ0FDRUQsS0FBTSxTQUNOQyxNQUFPLFdBRVQsQ0FDRUQsS0FBTSxPQUNOQyxNQUFPLGNDMUNmLFNBQVNDLFFBQVFDLE9BQVFDLGdCQUFrQixJQUFJQyxLQUFPQyxPQUFPRCxLQUFLRixRQUFTLEdBQUlHLE9BQU9DLHNCQUF1QixDQUFFLElBQUlDLFFBQVVGLE9BQU9DLHNCQUFzQkosUUFBU0MsaUJBQW1CSSxRQUFVQSxRQUFRQyxRQUFPLFNBQVVDLEtBQU8sT0FBT0osT0FBT0sseUJBQXlC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bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBib290c3RyYXBMYXp5IH0gZnJvbSAnQHN0ZW5jaWwvY29yZSc7XG5pbXBvcnQgeyBwYXRjaEVzbSB9IGZyb20gJ0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvY2xpZW50L3BhdGNoLWVzbSc7XG5pbXBvcnQgeyBnbG9iYWxTY3JpcHRzIH0gZnJvbSAnQHN0ZW5jaWwvY29yZS9pbnRlcm5hbC9hcHAtZ2xvYmFscyc7XG5leHBvcnQgY29uc3QgZGVmaW5lQ3VzdG9tRWxlbWVudHMgPSAod2luLCBvcHRpb25zKSA9PiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICByZXR1cm4gcGF0Y2hFc20oKS50aGVuKCgpID0+IHtcbiAgZ2xvYmFsU2NyaXB0cygpO1xuICByZXR1cm4gYm9vdHN0cmFwTGF6eShbLyohX19TVEVOQ0lMX0xBWllfREFUQV9fKi9dLCBvcHRpb25zKTtcbiAgfSk7XG59O1xuIiwiLypcbiBTdGVuY2lsIENsaWVudCBQYXRjaCBFc20gdjIuMTcuNCB8IE1JVCBMaWNlbnNlZCB8IGh0dHBzOi8vc3RlbmNpbGpzLmNvbVxuICovXG5pbXBvcnQgeyBCVUlMRCB9IGZyb20gJ0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvYXBwLWRhdGEnO1xuaW1wb3J0IHsgQ1NTLCBwbHQsIHdpbiwgcHJvbWlzZVJlc29sdmUgfSBmcm9tICdAc3RlbmNpbC9jb3JlJztcbmNvbnN0IHBhdGNoRXNtID0gKCkgPT4ge1xuICAgIC8vIE5PVEUhISBUaGlzIGZuIGNhbm5vdCB1c2UgYXN5bmMvYXdhaXQhXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGlmIChCVUlMRC5jc3NWYXJTaGltICYmICEoQ1NTICYmIENTUy5zdXBwb3J0cyAmJiBDU1Muc3VwcG9ydHMoJ2NvbG9yJywgJ3ZhcigtLWMpJykpKSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgcmV0dXJuIGltcG9ydCgvKiB3ZWJwYWNrQ2h1bmtOYW1lOiBcInBvbHlmaWxscy1jc3Mtc2hpbVwiICovICcuL2Nzcy1zaGltLmpzJykudGhlbigoKSA9PiB7XG4gICAgICAgICAgICBpZiAoKHBsdC4kY3NzU2hpbSQgPSB3aW4uX19jc3NzaGltKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwbHQuJGNzc1NoaW0kLmkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIGZvciBiZXR0ZXIgbWluaWZpY2F0aW9uXG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoKTtcbn07XG5leHBvcnQgeyBwYXRjaEVzbSB9O1xuIiwiLy8gaW1wb3J0ICcuLi93d3cvYnVpbGQvdmVyZG9jcy13ZWItc2RrLmNzcyc7XG5cbmltcG9ydCB7ZGVmaW5lQ3VzdG9tRWxlbWVudHN9IGZyb20gJy4uL2Rpc3QvZXNtL2xvYWRlcic7XG5kZWZpbmVDdXN0b21FbGVtZW50cygpO1xuXG5pbXBvcnQge2V4dHJhY3RBcmdUeXBlcywgZXh0cmFjdENvbXBvbmVudERlc2NyaXB0aW9uLCBzZXRTdGVuY2lsRG9jSnNvbn0gZnJvbSAnQHB4dHJuL3N0b3J5Ym9vay1hZGRvbi1kb2NzLXN0ZW5jaWwnO1xuaW1wb3J0IGRvY0pzb24gZnJvbSAnLi4vZGlzdC9kb2NzLmpzb24nO1xuXG5pZiAoZG9jSnNvbikgc2V0U3RlbmNpbERvY0pzb24oZG9jSnNvbik7XG5cbmV4cG9ydCBjb25zdCBwYXJhbWV0ZXJzID0ge1xuICAvLyBhY3Rpb25zOiB7YXJnVHlwZXNSZWdleDogJ15vbltBLVpdLionfSxcbiAgY29udHJvbHM6IHtcbiAgICBoaWRlTm9Db250cm9sc1dhcm5pbmc6IHRydWUsXG4gICAgLy8gQXV0b21hdGljYWxseSBjb25zaWRlciBhcmdzIHRoYXQgc3RhcnQgd2l0aCBjb2xvci9kYXRlIHRvIGJlIHNwZWNpYWwgY29udHJvbHNcbiAgICBtYXRjaGVyczoge1xuICAgICAgY29sb3I6IC8oYmFja2dyb3VuZHxjb2xvcikkL2ksXG4gICAgICBkYXRlOiAvRGF0ZSQvLFxuICAgIH0sXG4gIH0sXG4gIC8vIEF1dG9tYXRpY2FsbHkgY29uc2lkZXIgYXJncyB0aGF0IHN0YXJ0IHdpdGggJ29uJyB0byBiZSBhY3Rpb25zXG4gIC8vIGFjdGlvbnM6IHthcmdUeXBlc1JlZ2V4OiAnXm9uLionfSxcbiAgdmlld01vZGU6ICdkb2NzJyxcbiAgZG9jczoge1xuICAgIGlmcmFtZUhlaWdodDogNTAwLFxuICAgIGV4dHJhY3RBcmdUeXBlcyxcbiAgICBleHRyYWN0Q29tcG9uZW50RGVzY3JpcHRpb24sXG4gIH0sXG4gIGxheW91dDogJ2NlbnRlcmVkJyxcbiAgYmFja2dyb3VuZHM6IHtcbiAgICBkZWZhdWx0OiAnbGlnaHQnLFxuICAgIHZhbHVlczogW1xuICAgICAge1xuICAgICAgICBuYW1lOiAnbGlnaHQnLFxuICAgICAgICB2YWx1ZTogJyNlZWVlZWUnLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ21lZGl1bScsXG4gICAgICAgIHZhbHVlOiAnIzVjNjU3NScsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiAnZGFyaycsXG4gICAgICAgIHZhbHVlOiAnIzMzMzY0YicsXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG59O1xuXG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3N0b3J5Ym9va2pzL3N0b3J5Ym9vay9pc3N1ZXMvMTMxMjgjaXNzdWVjb21tZW50LTc5ODkyNzE3NlxuZnVuY3Rpb24gY2xpY2tEb2NzQnV0dG9uT25GaXJzdExvYWQoKSB7XG4gIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdsb2FkJywgY2xpY2tEb2NzQnV0dG9uT25GaXJzdExvYWQpO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgZG9jc0J1dHRvblNlbGVjdG9yID0gd2luZG93LnBhcmVudC5kb2N1bWVudC5ldmFsdWF0ZShcIi8vYnV0dG9uW2NvbnRhaW5zKC4sICdEb2NzJyldXCIsIHdpbmRvdy5wYXJlbnQuZG9jdW1lbnQsIG51bGwsIFhQYXRoUmVzdWx0LkFOWV9UWVBFLCBudWxsKTtcblxuICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3NCdXR0b25TZWxlY3Rvci5pdGVyYXRlTmV4dCgpO1xuXG4gICAgYnV0dG9uLmNsaWNrKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gRG8gbm90aGluZyBpZiBpdCB3YXNuJ3QgYWJsZSB0byBjbGljayBvbiBEb2NzIGJ1dHRvbi5cbiAgfVxufVxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGNsaWNrRG9jc0J1dHRvbk9uRmlyc3RMb2FkKTtcbiIsImZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9uby11bnJlc29sdmVkICovXG5pbXBvcnQgeyBhZGREZWNvcmF0b3IsIGFkZFBhcmFtZXRlcnMsIGFkZExvYWRlciwgYWRkQXJncywgYWRkQXJnVHlwZXMsIGFkZEFyZ3NFbmhhbmNlciwgYWRkQXJnVHlwZXNFbmhhbmNlciwgc2V0R2xvYmFsUmVuZGVyIH0gZnJvbSAnL2hvbWUvcnVubmVyL3dvcmsvd2ViLXNkay93ZWItc2RrL3ZlcmRvY3Mtd2ViLXNkay9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9jbGllbnQtYXBpJztcbmltcG9ydCAqIGFzIGNvbmZpZyBmcm9tICcvaG9tZS9ydW5uZXIvd29yay93ZWItc2RrL3dlYi1zZGsvdmVyZG9jcy13ZWItc2RrLy5zdG9yeWJvb2svcHJldmlldy5qcyc7XG5PYmplY3Qua2V5cyhjb25maWcpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICB2YXIgdmFsdWUgPSBjb25maWdba2V5XTtcblxuICBzd2l0Y2ggKGtleSkge1xuICAgIGNhc2UgJ2FyZ3MnOlxuICAgICAge1xuICAgICAgICByZXR1cm4gYWRkQXJncyh2YWx1ZSk7XG4gICAgICB9XG5cbiAgICBjYXNlICdhcmdUeXBlcyc6XG4gICAgICB7XG4gICAgICAgIHJldHVybiBhZGRBcmdUeXBlcyh2YWx1ZSk7XG4gICAgICB9XG5cbiAgICBjYXNlICdkZWNvcmF0b3JzJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLmZvckVhY2goZnVuY3Rpb24gKGRlY29yYXRvcikge1xuICAgICAgICAgIHJldHVybiBhZGREZWNvcmF0b3IoZGVjb3JhdG9yLCBmYWxzZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgY2FzZSAnbG9hZGVycyc6XG4gICAgICB7XG4gICAgICAgIHJldHVybiB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uIChsb2FkZXIpIHtcbiAgICAgICAgICByZXR1cm4gYWRkTG9hZGVyKGxvYWRlciwgZmFsc2UpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ3BhcmFtZXRlcnMnOlxuICAgICAge1xuICAgICAgICByZXR1cm4gYWRkUGFyYW1ldGVycyhfb2JqZWN0U3ByZWFkKHt9LCB2YWx1ZSksIGZhbHNlKTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ2FyZ1R5cGVzRW5oYW5jZXJzJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLmZvckVhY2goZnVuY3Rpb24gKGVuaGFuY2VyKSB7XG4gICAgICAgICAgcmV0dXJuIGFkZEFyZ1R5cGVzRW5oYW5jZXIoZW5oYW5jZXIpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ2FyZ3NFbmhhbmNlcnMnOlxuICAgICAge1xuICAgICAgICByZXR1cm4gdmFsdWUuZm9yRWFjaChmdW5jdGlvbiAoZW5oYW5jZXIpIHtcbiAgICAgICAgICByZXR1cm4gYWRkQXJnc0VuaGFuY2VyKGVuaGFuY2VyKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICBjYXNlICdyZW5kZXInOlxuICAgICAge1xuICAgICAgICByZXR1cm4gc2V0R2xvYmFsUmVuZGVyKHZhbHVlKTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ2dsb2JhbHMnOlxuICAgIGNhc2UgJ2dsb2JhbFR5cGVzJzpcbiAgICAgIHtcbiAgICAgICAgdmFyIHYgPSB7fTtcbiAgICAgICAgdltrZXldID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBhZGRQYXJhbWV0ZXJzKHYsIGZhbHNlKTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ19fbmFtZWRFeHBvcnRzT3JkZXInOlxuICAgIGNhc2UgJ2RlY29yYXRlU3RvcnknOlxuICAgIGNhc2UgJ3JlbmRlclRvRE9NJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIG51bGw7IC8vIFRoaXMga2V5IGlzIG5vdCBoYW5kbGVkIGRpcmVjdGx5IGluIHY2IG1vZGUuXG4gICAgICB9XG5cbiAgICBkZWZhdWx0OlxuICAgICAge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLXRlbXBsYXRlXG4gICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhrZXkgKyAnIHdhcyBub3Qgc3VwcG9ydGVkIDooICEnKTtcbiAgICAgIH1cbiAgfVxufSk7IiwidmFyIG1hcCA9IHtcblx0XCIuL3ZlcmRvY3MtYXV0aC5lbnRyeS5qc1wiOiBbXG5cdFx0XCIuL2Rpc3QvZXNtL3ZlcmRvY3MtYXV0aC5lbnRyeS5qc1wiLFxuXHRcdDAsXG5cdFx0MSxcblx0XHQyLFxuXHRcdDIzXG5cdF0sXG5cdFwiLi92ZXJkb2NzLWJ1aWxkLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1idWlsZC5lbnRyeS5qc1wiLFxuXHRcdDAsXG5cdFx0MSxcblx0XHQyLFxuXHRcdDM2XG5cdF0sXG5cdFwiLi92ZXJkb2NzLWJ1dHRvbi1wYW5lbF8zLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1idXR0b24tcGFuZWxfMy5lbnRyeS5qc1wiLFxuXHRcdDMsXG5cdFx0Mzdcblx0XSxcblx0XCIuL3ZlcmRvY3MtYnV0dG9uLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1idXR0b24uZW50cnkuanNcIixcblx0XHQzOFxuXHRdLFxuXHRcIi4vdmVyZG9jcy1jb250YWN0LXBpY2tlci5lbnRyeS5qc1wiOiBbXG5cdFx0XCIuL2Rpc3QvZXNtL3ZlcmRvY3MtY29udGFjdC1waWNrZXIuZW50cnkuanNcIixcblx0XHQwLFxuXHRcdDEsXG5cdFx0Mixcblx0XHQzOVxuXHRdLFxuXHRcIi4vdmVyZG9jcy1kb2N1bWVudC1wYWdlXzMuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLWRvY3VtZW50LXBhZ2VfMy5lbnRyeS5qc1wiLFxuXHRcdDAsXG5cdFx0MSxcblx0XHQyLFxuXHRcdDEzXG5cdF0sXG5cdFwiLi92ZXJkb2NzLWRyb3Bkb3duXzMuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLWRyb3Bkb3duXzMuZW50cnkuanNcIixcblx0XHQzLFxuXHRcdDI0XG5cdF0sXG5cdFwiLi92ZXJkb2NzLWZpZWxkLWF0dGFjaG1lbnQuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLWZpZWxkLWF0dGFjaG1lbnQuZW50cnkuanNcIixcblx0XHQ0MFxuXHRdLFxuXHRcIi4vdmVyZG9jcy1maWVsZC1kYXRlLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1maWVsZC1kYXRlLmVudHJ5LmpzXCIsXG5cdFx0MTVcblx0XSxcblx0XCIuL3ZlcmRvY3MtZmllbGQtZHJvcGRvd24uZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLWZpZWxkLWRyb3Bkb3duLmVudHJ5LmpzXCIsXG5cdFx0MjVcblx0XSxcblx0XCIuL3ZlcmRvY3MtZmllbGQtaW5pdGlhbC5lbnRyeS5qc1wiOiBbXG5cdFx0XCIuL2Rpc3QvZXNtL3ZlcmRvY3MtZmllbGQtaW5pdGlhbC5lbnRyeS5qc1wiLFxuXHRcdDI2XG5cdF0sXG5cdFwiLi92ZXJkb2NzLWZpZWxkLXBheW1lbnQuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLWZpZWxkLXBheW1lbnQuZW50cnkuanNcIixcblx0XHQyN1xuXHRdLFxuXHRcIi4vdmVyZG9jcy1maWVsZC1zaWduYXR1cmVfMi5lbnRyeS5qc1wiOiBbXG5cdFx0XCIuL2Rpc3QvZXNtL3ZlcmRvY3MtZmllbGQtc2lnbmF0dXJlXzIuZW50cnkuanNcIixcblx0XHQzLFxuXHRcdDI4XG5cdF0sXG5cdFwiLi92ZXJkb2NzLWZpZWxkLXRleHRhcmVhLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1maWVsZC10ZXh0YXJlYS5lbnRyeS5qc1wiLFxuXHRcdDI5XG5cdF0sXG5cdFwiLi92ZXJkb2NzLWZpZWxkLXRleHRib3guZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLWZpZWxkLXRleHRib3guZW50cnkuanNcIixcblx0XHQzLFxuXHRcdDMwXG5cdF0sXG5cdFwiLi92ZXJkb2NzLWZpZWxkLXRpbWVzdGFtcC5lbnRyeS5qc1wiOiBbXG5cdFx0XCIuL2Rpc3QvZXNtL3ZlcmRvY3MtZmllbGQtdGltZXN0YW1wLmVudHJ5LmpzXCIsXG5cdFx0MzFcblx0XSxcblx0XCIuL3ZlcmRvY3MtaGVscC1pY29uXzMuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLWhlbHAtaWNvbl8zLmVudHJ5LmpzXCIsXG5cdFx0Myxcblx0XHQyMlxuXHRdLFxuXHRcIi4vdmVyZG9jcy1pbml0aWFsLWRpYWxvZy5lbnRyeS5qc1wiOiBbXG5cdFx0XCIuL2Rpc3QvZXNtL3ZlcmRvY3MtaW5pdGlhbC1kaWFsb2cuZW50cnkuanNcIixcblx0XHQ0MVxuXHRdLFxuXHRcIi4vdmVyZG9jcy1rYmEtZGlhbG9nLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1rYmEtZGlhbG9nLmVudHJ5LmpzXCIsXG5cdFx0NDJcblx0XSxcblx0XCIuL3ZlcmRvY3Mtb2stZGlhbG9nLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1vay1kaWFsb2cuZW50cnkuanNcIixcblx0XHQ0M1xuXHRdLFxuXHRcIi4vdmVyZG9jcy1vcmdhbml6YXRpb24tY2FyZC5lbnRyeS5qc1wiOiBbXG5cdFx0XCIuL2Rpc3QvZXNtL3ZlcmRvY3Mtb3JnYW5pemF0aW9uLWNhcmQuZW50cnkuanNcIixcblx0XHQ0NFxuXHRdLFxuXHRcIi4vdmVyZG9jcy1wcmV2aWV3LmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1wcmV2aWV3LmVudHJ5LmpzXCIsXG5cdFx0MCxcblx0XHQxLFxuXHRcdDIsXG5cdFx0MThcblx0XSxcblx0XCIuL3ZlcmRvY3MtcXVpY2stZnVuY3Rpb25zXzMuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLXF1aWNrLWZ1bmN0aW9uc18zLmVudHJ5LmpzXCIsXG5cdFx0MCxcblx0XHQxLFxuXHRcdDIsXG5cdFx0MjBcblx0XSxcblx0XCIuL3ZlcmRvY3Mtc2VhcmNoLXRhYnMuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLXNlYXJjaC10YWJzLmVudHJ5LmpzXCIsXG5cdFx0NDVcblx0XSxcblx0XCIuL3ZlcmRvY3Mtc2VhcmNoLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1zZWFyY2guZW50cnkuanNcIixcblx0XHQwLFxuXHRcdDEsXG5cdFx0Mixcblx0XHQ0NlxuXHRdLFxuXHRcIi4vdmVyZG9jcy1zZW5kLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1zZW5kLmVudHJ5LmpzXCIsXG5cdFx0MCxcblx0XHQxLFxuXHRcdDIsXG5cdFx0MTdcblx0XSxcblx0XCIuL3ZlcmRvY3Mtc2lnbi5lbnRyeS5qc1wiOiBbXG5cdFx0XCIuL2Rpc3QvZXNtL3ZlcmRvY3Mtc2lnbi5lbnRyeS5qc1wiLFxuXHRcdDAsXG5cdFx0MSxcblx0XHQyLFxuXHRcdDE5XG5cdF0sXG5cdFwiLi92ZXJkb2NzLXNpZ25hdHVyZS1kaWFsb2cuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLXNpZ25hdHVyZS1kaWFsb2cuZW50cnkuanNcIixcblx0XHQ0N1xuXHRdLFxuXHRcIi4vdmVyZG9jcy1zdGF0dXMtaW5kaWNhdG9yLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy1zdGF0dXMtaW5kaWNhdG9yLmVudHJ5LmpzXCIsXG5cdFx0Myxcblx0XHQxNlxuXHRdLFxuXHRcIi4vdmVyZG9jcy10ZW1wbGF0ZS1jYXJkLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy10ZW1wbGF0ZS1jYXJkLmVudHJ5LmpzXCIsXG5cdFx0NDhcblx0XSxcblx0XCIuL3ZlcmRvY3MtdGVtcGxhdGUtY3JlYXRlXzIuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLXRlbXBsYXRlLWNyZWF0ZV8yLmVudHJ5LmpzXCIsXG5cdFx0MCxcblx0XHQxLFxuXHRcdDIsXG5cdFx0Nyxcblx0XHQ0OVxuXHRdLFxuXHRcIi4vdmVyZG9jcy10ZW1wbGF0ZS1maWVsZHMuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLXRlbXBsYXRlLWZpZWxkcy5lbnRyeS5qc1wiLFxuXHRcdDAsXG5cdFx0MSxcblx0XHQyLFxuXHRcdDcsXG5cdFx0MjFcblx0XSxcblx0XCIuL3ZlcmRvY3MtdGVtcGxhdGUtcHJvcGVydGllcy5lbnRyeS5qc1wiOiBbXG5cdFx0XCIuL2Rpc3QvZXNtL3ZlcmRvY3MtdGVtcGxhdGUtcHJvcGVydGllcy5lbnRyeS5qc1wiLFxuXHRcdDAsXG5cdFx0MSxcblx0XHQyLFxuXHRcdDUwXG5cdF0sXG5cdFwiLi92ZXJkb2NzLXRlbXBsYXRlLXRhZ3MuZW50cnkuanNcIjogW1xuXHRcdFwiLi9kaXN0L2VzbS92ZXJkb2NzLXRlbXBsYXRlLXRhZ3MuZW50cnkuanNcIixcblx0XHQ1MVxuXHRdLFxuXHRcIi4vdmVyZG9jcy10b2dnbGUtYnV0dG9uLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy10b2dnbGUtYnV0dG9uLmVudHJ5LmpzXCIsXG5cdFx0NTJcblx0XSxcblx0XCIuL3ZlcmRvY3MtdG9nZ2xlLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy10b2dnbGUuZW50cnkuanNcIixcblx0XHQ1M1xuXHRdLFxuXHRcIi4vdmVyZG9jcy11cGxvYWQtZGlhbG9nLmVudHJ5LmpzXCI6IFtcblx0XHRcIi4vZGlzdC9lc20vdmVyZG9jcy11cGxvYWQtZGlhbG9nLmVudHJ5LmpzXCIsXG5cdFx0MzJcblx0XVxufTtcbmZ1bmN0aW9uIHdlYnBhY2tBc3luY0NvbnRleHQocmVxKSB7XG5cdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8obWFwLCByZXEpKSB7XG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdFx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0XHR0aHJvdyBlO1xuXHRcdH0pO1xuXHR9XG5cblx0dmFyIGlkcyA9IG1hcFtyZXFdLCBpZCA9IGlkc1swXTtcblx0cmV0dXJuIFByb21pc2UuYWxsKGlkcy5zbGljZSgxKS5tYXAoX193ZWJwYWNrX3JlcXVpcmVfXy5lKSkudGhlbihmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhpZCk7XG5cdH0pO1xufVxud2VicGFja0FzeW5jQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0FzeW5jQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tBc3luY0NvbnRleHQuaWQgPSBcIi4vZGlzdC9lc20gbGF6eSByZWN1cnNpdmUgXlxcXFwuXFxcXC8uKlxcXFwuZW50cnlcXFxcLmpzJCBpbmNsdWRlOiBcXFxcLmVudHJ5XFxcXC5qcyQgZXhjbHVkZTogXFxcXC5zeXN0ZW1cXFxcLmVudHJ5XFxcXC5qcyRcIjtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0FzeW5jQ29udGV4dDsiLCJleHBvcnQgY29uc3QgTkFNRVNQQUNFID0gJ3ZlcmRvY3Mtd2ViLXNkayc7XG5leHBvcnQgY29uc3QgQlVJTEQgPSAvKiB2ZXJkb2NzLXdlYi1zZGsgKi8geyBhbGxSZW5kZXJGbjogdHJ1ZSwgYXBwZW5kQ2hpbGRTbG90Rml4OiBmYWxzZSwgYXN5bmNMb2FkaW5nOiB0cnVlLCBhc3luY1F1ZXVlOiBmYWxzZSwgYXR0YWNoU3R5bGVzOiB0cnVlLCBjbG9uZU5vZGVGaXg6IGZhbHNlLCBjbXBEaWRMb2FkOiB0cnVlLCBjbXBEaWRSZW5kZXI6IHRydWUsIGNtcERpZFVubG9hZDogZmFsc2UsIGNtcERpZFVwZGF0ZTogdHJ1ZSwgY21wU2hvdWxkVXBkYXRlOiBmYWxzZSwgY21wV2lsbExvYWQ6IHRydWUsIGNtcFdpbGxSZW5kZXI6IGZhbHNlLCBjbXBXaWxsVXBkYXRlOiBmYWxzZSwgY29ubmVjdGVkQ2FsbGJhY2s6IGZhbHNlLCBjb25zdHJ1Y3RhYmxlQ1NTOiB0cnVlLCBjc3NBbm5vdGF0aW9uczogdHJ1ZSwgY3NzVmFyU2hpbTogZmFsc2UsIGRldlRvb2xzOiBmYWxzZSwgZGlzY29ubmVjdGVkQ2FsbGJhY2s6IHRydWUsIGR5bmFtaWNJbXBvcnRTaGltOiBmYWxzZSwgZWxlbWVudDogZmFsc2UsIGV2ZW50OiB0cnVlLCBoYXNSZW5kZXJGbjogdHJ1ZSwgaG9zdExpc3RlbmVyOiBmYWxzZSwgaG9zdExpc3RlbmVyVGFyZ2V0OiBmYWxzZSwgaG9zdExpc3RlbmVyVGFyZ2V0Qm9keTogZmFsc2UsIGhvc3RMaXN0ZW5lclRhcmdldERvY3VtZW50OiBmYWxzZSwgaG9zdExpc3RlbmVyVGFyZ2V0UGFyZW50OiBmYWxzZSwgaG9zdExpc3RlbmVyVGFyZ2V0V2luZG93OiBmYWxzZSwgaG90TW9kdWxlUmVwbGFjZW1lbnQ6IGZhbHNlLCBoeWRyYXRlQ2xpZW50U2lkZTogZmFsc2UsIGh5ZHJhdGVTZXJ2ZXJTaWRlOiBmYWxzZSwgaHlkcmF0ZWRBdHRyaWJ1dGU6IGZhbHNlLCBoeWRyYXRlZENsYXNzOiB0cnVlLCBpbml0aWFsaXplTmV4dFRpY2s6IGZhbHNlLCBpbnZpc2libGVQcmVoeWRyYXRpb246IHRydWUsIGlzRGVidWc6IGZhbHNlLCBpc0RldjogZmFsc2UsIGlzVGVzdGluZzogZmFsc2UsIGxhenlMb2FkOiB0cnVlLCBsaWZlY3ljbGU6IHRydWUsIGxpZmVjeWNsZURPTUV2ZW50czogZmFsc2UsIG1lbWJlcjogdHJ1ZSwgbWV0aG9kOiB0cnVlLCBtb2RlOiBmYWxzZSwgb2JzZXJ2ZUF0dHJpYnV0ZTogdHJ1ZSwgcHJvZmlsZTogZmFsc2UsIHByb3A6IHRydWUsIHByb3BCb29sZWFuOiB0cnVlLCBwcm9wTXV0YWJsZTogZmFsc2UsIHByb3BOdW1iZXI6IHRydWUsIHByb3BTdHJpbmc6IHRydWUsIHJlZmxlY3Q6IGZhbHNlLCBzYWZhcmkxMDogZmFsc2UsIHNjb3BlZDogZmFsc2UsIHNjb3BlZFNsb3RUZXh0Q29udGVudEZpeDogZmFsc2UsIHNjcmlwdERhdGFPcHRzOiBmYWxzZSwgc2hhZG93RGVsZWdhdGVzRm9jdXM6IGZhbHNlLCBzaGFkb3dEb206IGZhbHNlLCBzaGFkb3dEb21TaGltOiBmYWxzZSwgc2xvdDogdHJ1ZSwgc2xvdENoaWxkTm9kZXNGaXg6IGZhbHNlLCBzbG90UmVsb2NhdGlvbjogdHJ1ZSwgc3RhdGU6IHRydWUsIHN0eWxlOiB0cnVlLCBzdmc6IHRydWUsIHRhc2tRdWV1ZTogdHJ1ZSwgdHJhbnNmb3JtVGFnTmFtZTogZmFsc2UsIHVwZGF0YWJsZTogdHJ1ZSwgdmRvbUF0dHJpYnV0ZTogdHJ1ZSwgdmRvbUNsYXNzOiB0cnVlLCB2ZG9tRnVuY3Rpb25hbDogdHJ1ZSwgdmRvbUtleTogdHJ1ZSwgdmRvbUxpc3RlbmVyOiB0cnVlLCB2ZG9tUHJvcE9yQXR0cjogdHJ1ZSwgdmRvbVJlZjogdHJ1ZSwgdmRvbVJlbmRlcjogdHJ1ZSwgdmRvbVN0eWxlOiB0cnVlLCB2ZG9tVGV4dDogdHJ1ZSwgdmRvbVhsaW5rOiBmYWxzZSwgd2F0Y2hDYWxsYmFjazogdHJ1ZSB9O1xuZXhwb3J0IGNvbnN0IEVudiA9IC8qIHZlcmRvY3Mtd2ViLXNkayAqLyB7fTtcbiIsImxldCBzY29wZUlkO1xubGV0IGNvbnRlbnRSZWY7XG5sZXQgaG9zdFRhZ05hbWU7XG5sZXQgY3VzdG9tRXJyb3I7XG5sZXQgaSA9IDA7XG5sZXQgdXNlTmF0aXZlU2hhZG93RG9tID0gZmFsc2U7XG5sZXQgY2hlY2tTbG90RmFsbGJhY2tWaXNpYmlsaXR5ID0gZmFsc2U7XG5sZXQgY2hlY2tTbG90UmVsb2NhdGUgPSBmYWxzZTtcbmxldCBpc1N2Z01vZGUgPSBmYWxzZTtcbmxldCByZW5kZXJpbmdSZWYgPSBudWxsO1xubGV0IHF1ZXVlQ29uZ2VzdGlvbiA9IDA7XG5sZXQgcXVldWVQZW5kaW5nID0gZmFsc2U7XG4vKlxuIFN0ZW5jaWwgQ2xpZW50IFBsYXRmb3JtIHYyLjE3LjQgfCBNSVQgTGljZW5zZWQgfCBodHRwczovL3N0ZW5jaWxqcy5jb21cbiAqL1xuaW1wb3J0IHsgQlVJTEQsIE5BTUVTUEFDRSB9IGZyb20gJ0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvYXBwLWRhdGEnO1xuY29uc3Qgd2luID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB7fTtcbmNvbnN0IENTUyA9IEJVSUxELmNzc1ZhclNoaW0gPyB3aW4uQ1NTIDogbnVsbDtcbmNvbnN0IGRvYyA9IHdpbi5kb2N1bWVudCB8fCB7IGhlYWQ6IHt9IH07XG5jb25zdCBIID0gKHdpbi5IVE1MRWxlbWVudCB8fCBjbGFzcyB7XG59KTtcbmNvbnN0IHBsdCA9IHtcbiAgICAkZmxhZ3MkOiAwLFxuICAgICRyZXNvdXJjZXNVcmwkOiAnJyxcbiAgICBqbXA6IChoKSA9PiBoKCksXG4gICAgcmFmOiAoaCkgPT4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGgpLFxuICAgIGFlbDogKGVsLCBldmVudE5hbWUsIGxpc3RlbmVyLCBvcHRzKSA9PiBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgbGlzdGVuZXIsIG9wdHMpLFxuICAgIHJlbDogKGVsLCBldmVudE5hbWUsIGxpc3RlbmVyLCBvcHRzKSA9PiBlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgbGlzdGVuZXIsIG9wdHMpLFxuICAgIGNlOiAoZXZlbnROYW1lLCBvcHRzKSA9PiBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCBvcHRzKSxcbn07XG5jb25zdCBzZXRQbGF0Zm9ybUhlbHBlcnMgPSAoaGVscGVycykgPT4ge1xuICAgIE9iamVjdC5hc3NpZ24ocGx0LCBoZWxwZXJzKTtcbn07XG5jb25zdCBzdXBwb3J0c1NoYWRvdyA9IEJVSUxELnNoYWRvd0RvbVNoaW0gJiYgQlVJTEQuc2hhZG93RG9tXG4gICAgPyAvKkBfX1BVUkVfXyovICgoKSA9PiAoZG9jLmhlYWQuYXR0YWNoU2hhZG93ICsgJycpLmluZGV4T2YoJ1tuYXRpdmUnKSA+IC0xKSgpXG4gICAgOiB0cnVlO1xuY29uc3Qgc3VwcG9ydHNMaXN0ZW5lck9wdGlvbnMgPSAvKkBfX1BVUkVfXyovICgoKSA9PiB7XG4gICAgbGV0IHN1cHBvcnRzTGlzdGVuZXJPcHRpb25zID0gZmFsc2U7XG4gICAgdHJ5IHtcbiAgICAgICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ2UnLCBudWxsLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdwYXNzaXZlJywge1xuICAgICAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgICAgIHN1cHBvcnRzTGlzdGVuZXJPcHRpb25zID0gdHJ1ZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHsgfVxuICAgIHJldHVybiBzdXBwb3J0c0xpc3RlbmVyT3B0aW9ucztcbn0pKCk7XG5jb25zdCBwcm9taXNlUmVzb2x2ZSA9ICh2KSA9PiBQcm9taXNlLnJlc29sdmUodik7XG5jb25zdCBzdXBwb3J0c0NvbnN0cnVjdGFibGVTdHlsZXNoZWV0cyA9IEJVSUxELmNvbnN0cnVjdGFibGVDU1NcbiAgICA/IC8qQF9fUFVSRV9fKi8gKCgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIG5ldyBDU1NTdHlsZVNoZWV0KCk7XG4gICAgICAgICAgICByZXR1cm4gdHlwZW9mIG5ldyBDU1NTdHlsZVNoZWV0KCkucmVwbGFjZVN5bmMgPT09ICdmdW5jdGlvbic7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSkoKVxuICAgIDogZmFsc2U7XG5jb25zdCBDb250ZXh0ID0ge307XG5jb25zdCBhZGRIb3N0RXZlbnRMaXN0ZW5lcnMgPSAoZWxtLCBob3N0UmVmLCBsaXN0ZW5lcnMsIGF0dGFjaFBhcmVudExpc3RlbmVycykgPT4ge1xuICAgIGlmIChCVUlMRC5ob3N0TGlzdGVuZXIgJiYgbGlzdGVuZXJzKSB7XG4gICAgICAgIC8vIHRoaXMgaXMgY2FsbGVkIGltbWVkaWF0ZWx5IHdpdGhpbiB0aGUgZWxlbWVudCdzIGNvbnN0cnVjdG9yXG4gICAgICAgIC8vIGluaXRpYWxpemUgb3VyIGV2ZW50IGxpc3RlbmVycyBvbiB0aGUgaG9zdCBlbGVtZW50XG4gICAgICAgIC8vIHdlIGRvIHRoaXMgbm93IHNvIHRoYXQgd2UgY2FuIGxpc3RlbiB0byBldmVudHMgdGhhdCBtYXlcbiAgICAgICAgLy8gaGF2ZSBmaXJlZCBldmVuIGJlZm9yZSB0aGUgaW5zdGFuY2UgaXMgcmVhZHlcbiAgICAgICAgaWYgKEJVSUxELmhvc3RMaXN0ZW5lclRhcmdldFBhcmVudCkge1xuICAgICAgICAgICAgLy8gdGhpcyBjb21wb25lbnQgbWF5IGhhdmUgZXZlbnQgbGlzdGVuZXJzIHRoYXQgc2hvdWxkIGJlIGF0dGFjaGVkIHRvIHRoZSBwYXJlbnRcbiAgICAgICAgICAgIGlmIChhdHRhY2hQYXJlbnRMaXN0ZW5lcnMpIHtcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGlzIGJlaW5nIHJhbiBmcm9tIHdpdGhpbiB0aGUgY29ubmVjdGVkQ2FsbGJhY2tcbiAgICAgICAgICAgICAgICAvLyB3aGljaCBpcyBpbXBvcnRhbnQgc28gdGhhdCB3ZSBrbm93IHRoZSBob3N0IGVsZW1lbnQgYWN0dWFsbHkgaGFzIGEgcGFyZW50IGVsZW1lbnRcbiAgICAgICAgICAgICAgICAvLyBmaWx0ZXIgb3V0IHRoZSBsaXN0ZW5lcnMgdG8gb25seSBoYXZlIHRoZSBvbmVzIHRoYXQgQVJFIGJlaW5nIGF0dGFjaGVkIHRvIHRoZSBwYXJlbnRcbiAgICAgICAgICAgICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKChbZmxhZ3NdKSA9PiBmbGFncyAmIDMyIC8qIFRhcmdldFBhcmVudCAqLyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGlzIGJlaW5nIHJhbiBmcm9tIHdpdGhpbiB0aGUgY29tcG9uZW50IGNvbnN0cnVjdG9yXG4gICAgICAgICAgICAgICAgLy8gZXZlcnl0aGluZyBCVVQgdGhlIHBhcmVudCBlbGVtZW50IGxpc3RlbmVycyBzaG91bGQgYmUgYXR0YWNoZWQgYXQgdGhpcyB0aW1lXG4gICAgICAgICAgICAgICAgLy8gZmlsdGVyIG91dCB0aGUgbGlzdGVuZXJzIHRoYXQgYXJlIE5PVCBiZWluZyBhdHRhY2hlZCB0byB0aGUgcGFyZW50XG4gICAgICAgICAgICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcigoW2ZsYWdzXSkgPT4gIShmbGFncyAmIDMyIC8qIFRhcmdldFBhcmVudCAqLykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxpc3RlbmVycy5tYXAoKFtmbGFncywgbmFtZSwgbWV0aG9kXSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gQlVJTEQuaG9zdExpc3RlbmVyVGFyZ2V0ID8gZ2V0SG9zdExpc3RlbmVyVGFyZ2V0KGVsbSwgZmxhZ3MpIDogZWxtO1xuICAgICAgICAgICAgY29uc3QgaGFuZGxlciA9IGhvc3RMaXN0ZW5lclByb3h5KGhvc3RSZWYsIG1ldGhvZCk7XG4gICAgICAgICAgICBjb25zdCBvcHRzID0gaG9zdExpc3RlbmVyT3B0cyhmbGFncyk7XG4gICAgICAgICAgICBwbHQuYWVsKHRhcmdldCwgbmFtZSwgaGFuZGxlciwgb3B0cyk7XG4gICAgICAgICAgICAoaG9zdFJlZi4kcm1MaXN0ZW5lcnMkID0gaG9zdFJlZi4kcm1MaXN0ZW5lcnMkIHx8IFtdKS5wdXNoKCgpID0+IHBsdC5yZWwodGFyZ2V0LCBuYW1lLCBoYW5kbGVyLCBvcHRzKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5jb25zdCBob3N0TGlzdGVuZXJQcm94eSA9IChob3N0UmVmLCBtZXRob2ROYW1lKSA9PiAoZXYpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBpZiAoQlVJTEQubGF6eUxvYWQpIHtcbiAgICAgICAgICAgIGlmIChob3N0UmVmLiRmbGFncyQgJiAyNTYgLyogaXNMaXN0ZW5SZWFkeSAqLykge1xuICAgICAgICAgICAgICAgIC8vIGluc3RhbmNlIGlzIHJlYWR5LCBsZXQncyBjYWxsIGl0J3MgbWVtYmVyIG1ldGhvZCBmb3IgdGhpcyBldmVudFxuICAgICAgICAgICAgICAgIGhvc3RSZWYuJGxhenlJbnN0YW5jZSRbbWV0aG9kTmFtZV0oZXYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgKGhvc3RSZWYuJHF1ZXVlZExpc3RlbmVycyQgPSBob3N0UmVmLiRxdWV1ZWRMaXN0ZW5lcnMkIHx8IFtdKS5wdXNoKFttZXRob2ROYW1lLCBldl0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaG9zdFJlZi4kaG9zdEVsZW1lbnQkW21ldGhvZE5hbWVdKGV2KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlRXJyb3IoZSk7XG4gICAgfVxufTtcbmNvbnN0IGdldEhvc3RMaXN0ZW5lclRhcmdldCA9IChlbG0sIGZsYWdzKSA9PiB7XG4gICAgaWYgKEJVSUxELmhvc3RMaXN0ZW5lclRhcmdldERvY3VtZW50ICYmIGZsYWdzICYgNCAvKiBUYXJnZXREb2N1bWVudCAqLylcbiAgICAgICAgcmV0dXJuIGRvYztcbiAgICBpZiAoQlVJTEQuaG9zdExpc3RlbmVyVGFyZ2V0V2luZG93ICYmIGZsYWdzICYgOCAvKiBUYXJnZXRXaW5kb3cgKi8pXG4gICAgICAgIHJldHVybiB3aW47XG4gICAgaWYgKEJVSUxELmhvc3RMaXN0ZW5lclRhcmdldEJvZHkgJiYgZmxhZ3MgJiAxNiAvKiBUYXJnZXRCb2R5ICovKVxuICAgICAgICByZXR1cm4gZG9jLmJvZHk7XG4gICAgaWYgKEJVSUxELmhvc3RMaXN0ZW5lclRhcmdldFBhcmVudCAmJiBmbGFncyAmIDMyIC8qIFRhcmdldFBhcmVudCAqLylcbiAgICAgICAgcmV0dXJuIGVsbS5wYXJlbnRFbGVtZW50O1xuICAgIHJldHVybiBlbG07XG59O1xuLy8gcHJldHRpZXItaWdub3JlXG5jb25zdCBob3N0TGlzdGVuZXJPcHRzID0gKGZsYWdzKSA9PiBzdXBwb3J0c0xpc3RlbmVyT3B0aW9uc1xuICAgID8gKHtcbiAgICAgICAgcGFzc2l2ZTogKGZsYWdzICYgMSAvKiBQYXNzaXZlICovKSAhPT0gMCxcbiAgICAgICAgY2FwdHVyZTogKGZsYWdzICYgMiAvKiBDYXB0dXJlICovKSAhPT0gMCxcbiAgICB9KVxuICAgIDogKGZsYWdzICYgMiAvKiBDYXB0dXJlICovKSAhPT0gMDtcbmNvbnN0IENPTlRFTlRfUkVGX0lEID0gJ3InO1xuY29uc3QgT1JHX0xPQ0FUSU9OX0lEID0gJ28nO1xuY29uc3QgU0xPVF9OT0RFX0lEID0gJ3MnO1xuY29uc3QgVEVYVF9OT0RFX0lEID0gJ3QnO1xuY29uc3QgSFlEUkFURV9JRCA9ICdzLWlkJztcbmNvbnN0IEhZRFJBVEVEX1NUWUxFX0lEID0gJ3N0eS1pZCc7XG5jb25zdCBIWURSQVRFX0NISUxEX0lEID0gJ2MtaWQnO1xuY29uc3QgSFlEUkFURURfQ1NTID0gJ3t2aXNpYmlsaXR5OmhpZGRlbn0uaHlkcmF0ZWR7dmlzaWJpbGl0eTppbmhlcml0fSc7XG5jb25zdCBYTElOS19OUyA9ICdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJztcbmNvbnN0IGNyZWF0ZVRpbWUgPSAoZm5OYW1lLCB0YWdOYW1lID0gJycpID0+IHtcbiAgICBpZiAoQlVJTEQucHJvZmlsZSAmJiBwZXJmb3JtYW5jZS5tYXJrKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IGBzdDoke2ZuTmFtZX06JHt0YWdOYW1lfToke2krK31gO1xuICAgICAgICAvLyBTdGFydFxuICAgICAgICBwZXJmb3JtYW5jZS5tYXJrKGtleSk7XG4gICAgICAgIC8vIEVuZFxuICAgICAgICByZXR1cm4gKCkgPT4gcGVyZm9ybWFuY2UubWVhc3VyZShgW1N0ZW5jaWxdICR7Zm5OYW1lfSgpIDwke3RhZ05hbWV9PmAsIGtleSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9O1xuICAgIH1cbn07XG5jb25zdCB1bmlxdWVUaW1lID0gKGtleSwgbWVhc3VyZVRleHQpID0+IHtcbiAgICBpZiAoQlVJTEQucHJvZmlsZSAmJiBwZXJmb3JtYW5jZS5tYXJrKSB7XG4gICAgICAgIGlmIChwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lKGtleSkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBwZXJmb3JtYW5jZS5tYXJrKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGlmIChwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lKG1lYXN1cmVUZXh0KS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICBwZXJmb3JtYW5jZS5tZWFzdXJlKG1lYXN1cmVUZXh0LCBrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfTtcbiAgICB9XG59O1xuY29uc3QgaW5zcGVjdCA9IChyZWYpID0+IHtcbiAgICBjb25zdCBob3N0UmVmID0gZ2V0SG9zdFJlZihyZWYpO1xuICAgIGlmICghaG9zdFJlZikge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBmbGFncyA9IGhvc3RSZWYuJGZsYWdzJDtcbiAgICBjb25zdCBob3N0RWxlbWVudCA9IGhvc3RSZWYuJGhvc3RFbGVtZW50JDtcbiAgICByZXR1cm4ge1xuICAgICAgICByZW5kZXJDb3VudDogaG9zdFJlZi4kcmVuZGVyQ291bnQkLFxuICAgICAgICBmbGFnczoge1xuICAgICAgICAgICAgaGFzUmVuZGVyZWQ6ICEhKGZsYWdzICYgMiAvKiBoYXNSZW5kZXJlZCAqLyksXG4gICAgICAgICAgICBoYXNDb25uZWN0ZWQ6ICEhKGZsYWdzICYgMSAvKiBoYXNDb25uZWN0ZWQgKi8pLFxuICAgICAgICAgICAgaXNXYWl0aW5nRm9yQ2hpbGRyZW46ICEhKGZsYWdzICYgNCAvKiBpc1dhaXRpbmdGb3JDaGlsZHJlbiAqLyksXG4gICAgICAgICAgICBpc0NvbnN0cnVjdGluZ0luc3RhbmNlOiAhIShmbGFncyAmIDggLyogaXNDb25zdHJ1Y3RpbmdJbnN0YW5jZSAqLyksXG4gICAgICAgICAgICBpc1F1ZXVlZEZvclVwZGF0ZTogISEoZmxhZ3MgJiAxNiAvKiBpc1F1ZXVlZEZvclVwZGF0ZSAqLyksXG4gICAgICAgICAgICBoYXNJbml0aWFsaXplZENvbXBvbmVudDogISEoZmxhZ3MgJiAzMiAvKiBoYXNJbml0aWFsaXplZENvbXBvbmVudCAqLyksXG4gICAgICAgICAgICBoYXNMb2FkZWRDb21wb25lbnQ6ICEhKGZsYWdzICYgNjQgLyogaGFzTG9hZGVkQ29tcG9uZW50ICovKSxcbiAgICAgICAgICAgIGlzV2F0Y2hSZWFkeTogISEoZmxhZ3MgJiAxMjggLyogaXNXYXRjaFJlYWR5ICovKSxcbiAgICAgICAgICAgIGlzTGlzdGVuUmVhZHk6ICEhKGZsYWdzICYgMjU2IC8qIGlzTGlzdGVuUmVhZHkgKi8pLFxuICAgICAgICAgICAgbmVlZHNSZXJlbmRlcjogISEoZmxhZ3MgJiA1MTIgLyogbmVlZHNSZXJlbmRlciAqLyksXG4gICAgICAgIH0sXG4gICAgICAgIGluc3RhbmNlVmFsdWVzOiBob3N0UmVmLiRpbnN0YW5jZVZhbHVlcyQsXG4gICAgICAgIGFuY2VzdG9yQ29tcG9uZW50OiBob3N0UmVmLiRhbmNlc3RvckNvbXBvbmVudCQsXG4gICAgICAgIGhvc3RFbGVtZW50LFxuICAgICAgICBsYXp5SW5zdGFuY2U6IGhvc3RSZWYuJGxhenlJbnN0YW5jZSQsXG4gICAgICAgIHZub2RlOiBob3N0UmVmLiR2bm9kZSQsXG4gICAgICAgIG1vZGVOYW1lOiBob3N0UmVmLiRtb2RlTmFtZSQsXG4gICAgICAgIG9uUmVhZHlQcm9taXNlOiBob3N0UmVmLiRvblJlYWR5UHJvbWlzZSQsXG4gICAgICAgIG9uUmVhZHlSZXNvbHZlOiBob3N0UmVmLiRvblJlYWR5UmVzb2x2ZSQsXG4gICAgICAgIG9uSW5zdGFuY2VQcm9taXNlOiBob3N0UmVmLiRvbkluc3RhbmNlUHJvbWlzZSQsXG4gICAgICAgIG9uSW5zdGFuY2VSZXNvbHZlOiBob3N0UmVmLiRvbkluc3RhbmNlUmVzb2x2ZSQsXG4gICAgICAgIG9uUmVuZGVyUmVzb2x2ZTogaG9zdFJlZi4kb25SZW5kZXJSZXNvbHZlJCxcbiAgICAgICAgcXVldWVkTGlzdGVuZXJzOiBob3N0UmVmLiRxdWV1ZWRMaXN0ZW5lcnMkLFxuICAgICAgICBybUxpc3RlbmVyczogaG9zdFJlZi4kcm1MaXN0ZW5lcnMkLFxuICAgICAgICBbJ3MtaWQnXTogaG9zdEVsZW1lbnRbJ3MtaWQnXSxcbiAgICAgICAgWydzLWNyJ106IGhvc3RFbGVtZW50WydzLWNyJ10sXG4gICAgICAgIFsncy1sciddOiBob3N0RWxlbWVudFsncy1sciddLFxuICAgICAgICBbJ3MtcCddOiBob3N0RWxlbWVudFsncy1wJ10sXG4gICAgICAgIFsncy1yYyddOiBob3N0RWxlbWVudFsncy1yYyddLFxuICAgICAgICBbJ3Mtc2MnXTogaG9zdEVsZW1lbnRbJ3Mtc2MnXSxcbiAgICB9O1xufTtcbmNvbnN0IGluc3RhbGxEZXZUb29scyA9ICgpID0+IHtcbiAgICBpZiAoQlVJTEQuZGV2VG9vbHMpIHtcbiAgICAgICAgY29uc3Qgc3RlbmNpbCA9ICh3aW4uc3RlbmNpbCA9IHdpbi5zdGVuY2lsIHx8IHt9KTtcbiAgICAgICAgY29uc3Qgb3JpZ2luYWxJbnNwZWN0ID0gc3RlbmNpbC5pbnNwZWN0O1xuICAgICAgICBzdGVuY2lsLmluc3BlY3QgPSAocmVmKSA9PiB7XG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gaW5zcGVjdChyZWYpO1xuICAgICAgICAgICAgaWYgKCFyZXN1bHQgJiYgdHlwZW9mIG9yaWdpbmFsSW5zcGVjdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IG9yaWdpbmFsSW5zcGVjdChyZWYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfTtcbiAgICB9XG59O1xuY29uc3Qgcm9vdEFwcGxpZWRTdHlsZXMgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgcmVnaXN0ZXJTdHlsZSA9IChzY29wZUlkLCBjc3NUZXh0LCBhbGxvd0NTKSA9PiB7XG4gICAgbGV0IHN0eWxlID0gc3R5bGVzLmdldChzY29wZUlkKTtcbiAgICBpZiAoc3VwcG9ydHNDb25zdHJ1Y3RhYmxlU3R5bGVzaGVldHMgJiYgYWxsb3dDUykge1xuICAgICAgICBzdHlsZSA9IChzdHlsZSB8fCBuZXcgQ1NTU3R5bGVTaGVldCgpKTtcbiAgICAgICAgaWYgKHR5cGVvZiBzdHlsZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHN0eWxlID0gY3NzVGV4dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHN0eWxlLnJlcGxhY2VTeW5jKGNzc1RleHQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzdHlsZSA9IGNzc1RleHQ7XG4gICAgfVxuICAgIHN0eWxlcy5zZXQoc2NvcGVJZCwgc3R5bGUpO1xufTtcbmNvbnN0IGFkZFN0eWxlID0gKHN0eWxlQ29udGFpbmVyTm9kZSwgY21wTWV0YSwgbW9kZSwgaG9zdEVsbSkgPT4ge1xuICAgIGxldCBzY29wZUlkID0gZ2V0U2NvcGVJZChjbXBNZXRhLCBtb2RlKTtcbiAgICBjb25zdCBzdHlsZSA9IHN0eWxlcy5nZXQoc2NvcGVJZCk7XG4gICAgaWYgKCFCVUlMRC5hdHRhY2hTdHlsZXMpIHtcbiAgICAgICAgcmV0dXJuIHNjb3BlSWQ7XG4gICAgfVxuICAgIC8vIGlmIGFuIGVsZW1lbnQgaXMgTk9UIGNvbm5lY3RlZCB0aGVuIGdldFJvb3ROb2RlKCkgd2lsbCByZXR1cm4gdGhlIHdyb25nIHJvb3Qgbm9kZVxuICAgIC8vIHNvIHRoZSBmYWxsYmFjayBpcyB0byBhbHdheXMgdXNlIHRoZSBkb2N1bWVudCBmb3IgdGhlIHJvb3Qgbm9kZSBpbiB0aG9zZSBjYXNlc1xuICAgIHN0eWxlQ29udGFpbmVyTm9kZSA9IHN0eWxlQ29udGFpbmVyTm9kZS5ub2RlVHlwZSA9PT0gMTEgLyogRG9jdW1lbnRGcmFnbWVudCAqLyA/IHN0eWxlQ29udGFpbmVyTm9kZSA6IGRvYztcbiAgICBpZiAoc3R5bGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzdHlsZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHN0eWxlQ29udGFpbmVyTm9kZSA9IHN0eWxlQ29udGFpbmVyTm9kZS5oZWFkIHx8IHN0eWxlQ29udGFpbmVyTm9kZTtcbiAgICAgICAgICAgIGxldCBhcHBsaWVkU3R5bGVzID0gcm9vdEFwcGxpZWRTdHlsZXMuZ2V0KHN0eWxlQ29udGFpbmVyTm9kZSk7XG4gICAgICAgICAgICBsZXQgc3R5bGVFbG07XG4gICAgICAgICAgICBpZiAoIWFwcGxpZWRTdHlsZXMpIHtcbiAgICAgICAgICAgICAgICByb290QXBwbGllZFN0eWxlcy5zZXQoc3R5bGVDb250YWluZXJOb2RlLCAoYXBwbGllZFN0eWxlcyA9IG5ldyBTZXQoKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFhcHBsaWVkU3R5bGVzLmhhcyhzY29wZUlkKSkge1xuICAgICAgICAgICAgICAgIGlmIChCVUlMRC5oeWRyYXRlQ2xpZW50U2lkZSAmJlxuICAgICAgICAgICAgICAgICAgICBzdHlsZUNvbnRhaW5lck5vZGUuaG9zdCAmJlxuICAgICAgICAgICAgICAgICAgICAoc3R5bGVFbG0gPSBzdHlsZUNvbnRhaW5lck5vZGUucXVlcnlTZWxlY3RvcihgWyR7SFlEUkFURURfU1RZTEVfSUR9PVwiJHtzY29wZUlkfVwiXWApKSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGlzIG9ubHkgaGFwcGVuaW5nIG9uIG5hdGl2ZSBzaGFkb3ctZG9tLCBkbyBub3QgbmVlZHMgQ1NTIHZhciBzaGltXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlRWxtLmlubmVySFRNTCA9IHN0eWxlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKEJVSUxELmNzc1ZhclNoaW0gJiYgcGx0LiRjc3NTaGltJCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVFbG0gPSBwbHQuJGNzc1NoaW0kLmNyZWF0ZUhvc3RTdHlsZShob3N0RWxtLCBzY29wZUlkLCBzdHlsZSwgISEoY21wTWV0YS4kZmxhZ3MkICYgMTAgLyogbmVlZHNTY29wZWRFbmNhcHN1bGF0aW9uICovKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdTY29wZUlkID0gc3R5bGVFbG1bJ3Mtc2MnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXdTY29wZUlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NvcGVJZCA9IG5ld1Njb3BlSWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2UgZG9uJ3Qgd2FudCB0byBhZGQgdGhpcyBzdHlsZUlEIHRvIHRoZSBhcHBsaWVkU3R5bGVzIFNldFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNpbmNlIHRoZSBjc3NWYXJTaGltIG1pZ2h0IG5lZWQgdG8gYXBwbHkgc2V2ZXJhbCBkaWZmZXJlbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXNoZWV0cyBmb3IgdGhlIHNhbWUgY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBwbGllZFN0eWxlcyA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZUVsbSA9IGRvYy5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVFbG0uaW5uZXJIVE1MID0gc3R5bGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKEJVSUxELmh5ZHJhdGVTZXJ2ZXJTaWRlIHx8IEJVSUxELmhvdE1vZHVsZVJlcGxhY2VtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZUVsbS5zZXRBdHRyaWJ1dGUoSFlEUkFURURfU1RZTEVfSUQsIHNjb3BlSWQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlQ29udGFpbmVyTm9kZS5pbnNlcnRCZWZvcmUoc3R5bGVFbG0sIHN0eWxlQ29udGFpbmVyTm9kZS5xdWVyeVNlbGVjdG9yKCdsaW5rJykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoYXBwbGllZFN0eWxlcykge1xuICAgICAgICAgICAgICAgICAgICBhcHBsaWVkU3R5bGVzLmFkZChzY29wZUlkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQlVJTEQuY29uc3RydWN0YWJsZUNTUyAmJiAhc3R5bGVDb250YWluZXJOb2RlLmFkb3B0ZWRTdHlsZVNoZWV0cy5pbmNsdWRlcyhzdHlsZSkpIHtcbiAgICAgICAgICAgIHN0eWxlQ29udGFpbmVyTm9kZS5hZG9wdGVkU3R5bGVTaGVldHMgPSBbLi4uc3R5bGVDb250YWluZXJOb2RlLmFkb3B0ZWRTdHlsZVNoZWV0cywgc3R5bGVdO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzY29wZUlkO1xufTtcbmNvbnN0IGF0dGFjaFN0eWxlcyA9IChob3N0UmVmKSA9PiB7XG4gICAgY29uc3QgY21wTWV0YSA9IGhvc3RSZWYuJGNtcE1ldGEkO1xuICAgIGNvbnN0IGVsbSA9IGhvc3RSZWYuJGhvc3RFbGVtZW50JDtcbiAgICBjb25zdCBmbGFncyA9IGNtcE1ldGEuJGZsYWdzJDtcbiAgICBjb25zdCBlbmRBdHRhY2hTdHlsZXMgPSBjcmVhdGVUaW1lKCdhdHRhY2hTdHlsZXMnLCBjbXBNZXRhLiR0YWdOYW1lJCk7XG4gICAgY29uc3Qgc2NvcGVJZCA9IGFkZFN0eWxlKEJVSUxELnNoYWRvd0RvbSAmJiBzdXBwb3J0c1NoYWRvdyAmJiBlbG0uc2hhZG93Um9vdCA/IGVsbS5zaGFkb3dSb290IDogZWxtLmdldFJvb3ROb2RlKCksIGNtcE1ldGEsIGhvc3RSZWYuJG1vZGVOYW1lJCwgZWxtKTtcbiAgICBpZiAoKEJVSUxELnNoYWRvd0RvbSB8fCBCVUlMRC5zY29wZWQpICYmIEJVSUxELmNzc0Fubm90YXRpb25zICYmIGZsYWdzICYgMTAgLyogbmVlZHNTY29wZWRFbmNhcHN1bGF0aW9uICovKSB7XG4gICAgICAgIC8vIG9ubHkgcmVxdWlyZWQgd2hlbiB3ZSdyZSBOT1QgdXNpbmcgbmF0aXZlIHNoYWRvdyBkb20gKHNsb3QpXG4gICAgICAgIC8vIG9yIHRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgbmF0aXZlIHNoYWRvdyBkb21cbiAgICAgICAgLy8gYW5kIHRoaXMgaG9zdCBlbGVtZW50IHdhcyBOT1QgY3JlYXRlZCB3aXRoIFNTUlxuICAgICAgICAvLyBsZXQncyBwaWNrIG91dCB0aGUgaW5uZXIgY29udGVudCBmb3Igc2xvdCBwcm9qZWN0aW9uXG4gICAgICAgIC8vIGNyZWF0ZSBhIG5vZGUgdG8gcmVwcmVzZW50IHdoZXJlIHRoZSBvcmlnaW5hbFxuICAgICAgICAvLyBjb250ZW50IHdhcyBmaXJzdCBwbGFjZWQsIHdoaWNoIGlzIHVzZWZ1bCBsYXRlciBvblxuICAgICAgICAvLyBET00gV1JJVEUhIVxuICAgICAgICBlbG1bJ3Mtc2MnXSA9IHNjb3BlSWQ7XG4gICAgICAgIGVsbS5jbGFzc0xpc3QuYWRkKHNjb3BlSWQgKyAnLWgnKTtcbiAgICAgICAgaWYgKEJVSUxELnNjb3BlZCAmJiBmbGFncyAmIDIgLyogc2NvcGVkQ3NzRW5jYXBzdWxhdGlvbiAqLykge1xuICAgICAgICAgICAgZWxtLmNsYXNzTGlzdC5hZGQoc2NvcGVJZCArICctcycpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVuZEF0dGFjaFN0eWxlcygpO1xufTtcbmNvbnN0IGdldFNjb3BlSWQgPSAoY21wLCBtb2RlKSA9PiAnc2MtJyArIChCVUlMRC5tb2RlICYmIG1vZGUgJiYgY21wLiRmbGFncyQgJiAzMiAvKiBoYXNNb2RlICovID8gY21wLiR0YWdOYW1lJCArICctJyArIG1vZGUgOiBjbXAuJHRhZ05hbWUkKTtcbmNvbnN0IGNvbnZlcnRTY29wZWRUb1NoYWRvdyA9IChjc3MpID0+IGNzcy5yZXBsYWNlKC9cXC9cXCohQChbXlxcL10rKVxcKlxcL1teXFx7XStcXHsvZywgJyQxeycpO1xuLy8gUHJpdmF0ZVxuY29uc3QgY29tcHV0ZU1vZGUgPSAoZWxtKSA9PiBtb2RlUmVzb2x1dGlvbkNoYWluLm1hcCgoaCkgPT4gaChlbG0pKS5maW5kKChtKSA9PiAhIW0pO1xuLy8gUHVibGljXG5jb25zdCBzZXRNb2RlID0gKGhhbmRsZXIpID0+IG1vZGVSZXNvbHV0aW9uQ2hhaW4ucHVzaChoYW5kbGVyKTtcbmNvbnN0IGdldE1vZGUgPSAocmVmKSA9PiBnZXRIb3N0UmVmKHJlZikuJG1vZGVOYW1lJDtcbi8qKlxuICogRGVmYXVsdCBzdHlsZSBtb2RlIGlkXG4gKi9cbi8qKlxuICogUmV1c2FibGUgZW1wdHkgb2JqL2FycmF5XG4gKiBEb24ndCBhZGQgdmFsdWVzIHRvIHRoZXNlISFcbiAqL1xuY29uc3QgRU1QVFlfT0JKID0ge307XG4vKipcbiAqIE5hbWVzcGFjZXNcbiAqL1xuY29uc3QgU1ZHX05TID0gJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJztcbmNvbnN0IEhUTUxfTlMgPSAnaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCc7XG5jb25zdCBpc0RlZiA9ICh2KSA9PiB2ICE9IG51bGw7XG5jb25zdCBpc0NvbXBsZXhUeXBlID0gKG8pID0+IHtcbiAgICAvLyBodHRwczovL2pzcGVyZi5jb20vdHlwZW9mLWZuLW9iamVjdC81XG4gICAgbyA9IHR5cGVvZiBvO1xuICAgIHJldHVybiBvID09PSAnb2JqZWN0JyB8fCBvID09PSAnZnVuY3Rpb24nO1xufTtcbi8qKlxuICogUHJvZHVjdGlvbiBoKCkgZnVuY3Rpb24gYmFzZWQgb24gUHJlYWN0IGJ5XG4gKiBKYXNvbiBNaWxsZXIgKEBkZXZlbG9waXQpXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9kZXZlbG9waXQvcHJlYWN0L2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqXG4gKiBNb2RpZmllZCBmb3IgU3RlbmNpbCdzIGNvbXBpbGVyIGFuZCB2ZG9tXG4gKi9cbi8vIGNvbnN0IHN0YWNrOiBhbnlbXSA9IFtdO1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGgobm9kZU5hbWU6IHN0cmluZyB8IGQuRnVuY3Rpb25hbENvbXBvbmVudCwgdm5vZGVEYXRhOiBkLlByb3BzVHlwZSwgY2hpbGQ/OiBkLkNoaWxkVHlwZSk6IGQuVk5vZGU7XG4vLyBleHBvcnQgZnVuY3Rpb24gaChub2RlTmFtZTogc3RyaW5nIHwgZC5GdW5jdGlvbmFsQ29tcG9uZW50LCB2bm9kZURhdGE6IGQuUHJvcHNUeXBlLCAuLi5jaGlsZHJlbjogZC5DaGlsZFR5cGVbXSk6IGQuVk5vZGU7XG5jb25zdCBoID0gKG5vZGVOYW1lLCB2bm9kZURhdGEsIC4uLmNoaWxkcmVuKSA9PiB7XG4gICAgbGV0IGNoaWxkID0gbnVsbDtcbiAgICBsZXQga2V5ID0gbnVsbDtcbiAgICBsZXQgc2xvdE5hbWUgPSBudWxsO1xuICAgIGxldCBzaW1wbGUgPSBmYWxzZTtcbiAgICBsZXQgbGFzdFNpbXBsZSA9IGZhbHNlO1xuICAgIGNvbnN0IHZOb2RlQ2hpbGRyZW4gPSBbXTtcbiAgICBjb25zdCB3YWxrID0gKGMpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjaGlsZCA9IGNbaV07XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICB3YWxrKGNoaWxkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNoaWxkICE9IG51bGwgJiYgdHlwZW9mIGNoaWxkICE9PSAnYm9vbGVhbicpIHtcbiAgICAgICAgICAgICAgICBpZiAoKHNpbXBsZSA9IHR5cGVvZiBub2RlTmFtZSAhPT0gJ2Z1bmN0aW9uJyAmJiAhaXNDb21wbGV4VHlwZShjaGlsZCkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkID0gU3RyaW5nKGNoaWxkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoQlVJTEQuaXNEZXYgJiYgdHlwZW9mIG5vZGVOYW1lICE9PSAnZnVuY3Rpb24nICYmIGNoaWxkLiRmbGFncyQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlRGV2RXJyb3IoYHZOb2RlIHBhc3NlZCBhcyBjaGlsZHJlbiBoYXMgdW5leHBlY3RlZCB0eXBlLlxuTWFrZSBzdXJlIGl0J3MgdXNpbmcgdGhlIGNvcnJlY3QgaCgpIGZ1bmN0aW9uLlxuRW1wdHkgb2JqZWN0cyBjYW4gYWxzbyBiZSB0aGUgY2F1c2UsIGxvb2sgZm9yIEpTWCBjb21tZW50cyB0aGF0IGJlY2FtZSBvYmplY3RzLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2ltcGxlICYmIGxhc3RTaW1wbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlIHByZXZpb3VzIGNoaWxkIHdhcyBzaW1wbGUgKHN0cmluZyksIHdlIG1lcmdlIGJvdGhcbiAgICAgICAgICAgICAgICAgICAgdk5vZGVDaGlsZHJlblt2Tm9kZUNoaWxkcmVuLmxlbmd0aCAtIDFdLiR0ZXh0JCArPSBjaGlsZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEFwcGVuZCBhIG5ldyB2Tm9kZSwgaWYgaXQncyB0ZXh0LCB3ZSBjcmVhdGUgYSB0ZXh0IHZOb2RlXG4gICAgICAgICAgICAgICAgICAgIHZOb2RlQ2hpbGRyZW4ucHVzaChzaW1wbGUgPyBuZXdWTm9kZShudWxsLCBjaGlsZCkgOiBjaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxhc3RTaW1wbGUgPSBzaW1wbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHdhbGsoY2hpbGRyZW4pO1xuICAgIGlmICh2bm9kZURhdGEpIHtcbiAgICAgICAgaWYgKEJVSUxELmlzRGV2ICYmIG5vZGVOYW1lID09PSAnaW5wdXQnKSB7XG4gICAgICAgICAgICB2YWxpZGF0ZUlucHV0UHJvcGVydGllcyh2bm9kZURhdGEpO1xuICAgICAgICB9XG4gICAgICAgIC8vIG5vcm1hbGl6ZSBjbGFzcyAvIGNsYXNzbmFtZSBhdHRyaWJ1dGVzXG4gICAgICAgIGlmIChCVUlMRC52ZG9tS2V5ICYmIHZub2RlRGF0YS5rZXkpIHtcbiAgICAgICAgICAgIGtleSA9IHZub2RlRGF0YS5rZXk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uICYmIHZub2RlRGF0YS5uYW1lKSB7XG4gICAgICAgICAgICBzbG90TmFtZSA9IHZub2RlRGF0YS5uYW1lO1xuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC52ZG9tQ2xhc3MpIHtcbiAgICAgICAgICAgIGNvbnN0IGNsYXNzRGF0YSA9IHZub2RlRGF0YS5jbGFzc05hbWUgfHwgdm5vZGVEYXRhLmNsYXNzO1xuICAgICAgICAgICAgaWYgKGNsYXNzRGF0YSkge1xuICAgICAgICAgICAgICAgIHZub2RlRGF0YS5jbGFzcyA9XG4gICAgICAgICAgICAgICAgICAgIHR5cGVvZiBjbGFzc0RhdGEgIT09ICdvYmplY3QnXG4gICAgICAgICAgICAgICAgICAgICAgICA/IGNsYXNzRGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBPYmplY3Qua2V5cyhjbGFzc0RhdGEpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcigoaykgPT4gY2xhc3NEYXRhW2tdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKCcgJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKEJVSUxELmlzRGV2ICYmIHZOb2RlQ2hpbGRyZW4uc29tZShpc0hvc3QpKSB7XG4gICAgICAgIGNvbnNvbGVEZXZFcnJvcihgVGhlIDxIb3N0PiBtdXN0IGJlIHRoZSBzaW5nbGUgcm9vdCBjb21wb25lbnQuIE1ha2Ugc3VyZTpcbi0gWW91IGFyZSBOT1QgdXNpbmcgaG9zdERhdGEoKSBhbmQgPEhvc3Q+IGluIHRoZSBzYW1lIGNvbXBvbmVudC5cbi0gPEhvc3Q+IGlzIHVzZWQgb25jZSwgYW5kIGl0J3MgdGhlIHNpbmdsZSByb290IGNvbXBvbmVudCBvZiB0aGUgcmVuZGVyKCkgZnVuY3Rpb24uYCk7XG4gICAgfVxuICAgIGlmIChCVUlMRC52ZG9tRnVuY3Rpb25hbCAmJiB0eXBlb2Ygbm9kZU5hbWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gbm9kZU5hbWUgaXMgYSBmdW5jdGlvbmFsIGNvbXBvbmVudFxuICAgICAgICByZXR1cm4gbm9kZU5hbWUodm5vZGVEYXRhID09PSBudWxsID8ge30gOiB2bm9kZURhdGEsIHZOb2RlQ2hpbGRyZW4sIHZkb21GblV0aWxzKTtcbiAgICB9XG4gICAgY29uc3Qgdm5vZGUgPSBuZXdWTm9kZShub2RlTmFtZSwgbnVsbCk7XG4gICAgdm5vZGUuJGF0dHJzJCA9IHZub2RlRGF0YTtcbiAgICBpZiAodk5vZGVDaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZub2RlLiRjaGlsZHJlbiQgPSB2Tm9kZUNoaWxkcmVuO1xuICAgIH1cbiAgICBpZiAoQlVJTEQudmRvbUtleSkge1xuICAgICAgICB2bm9kZS4ka2V5JCA9IGtleTtcbiAgICB9XG4gICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uKSB7XG4gICAgICAgIHZub2RlLiRuYW1lJCA9IHNsb3ROYW1lO1xuICAgIH1cbiAgICByZXR1cm4gdm5vZGU7XG59O1xuY29uc3QgbmV3Vk5vZGUgPSAodGFnLCB0ZXh0KSA9PiB7XG4gICAgY29uc3Qgdm5vZGUgPSB7XG4gICAgICAgICRmbGFncyQ6IDAsXG4gICAgICAgICR0YWckOiB0YWcsXG4gICAgICAgICR0ZXh0JDogdGV4dCxcbiAgICAgICAgJGVsbSQ6IG51bGwsXG4gICAgICAgICRjaGlsZHJlbiQ6IG51bGwsXG4gICAgfTtcbiAgICBpZiAoQlVJTEQudmRvbUF0dHJpYnV0ZSkge1xuICAgICAgICB2bm9kZS4kYXR0cnMkID0gbnVsbDtcbiAgICB9XG4gICAgaWYgKEJVSUxELnZkb21LZXkpIHtcbiAgICAgICAgdm5vZGUuJGtleSQgPSBudWxsO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24pIHtcbiAgICAgICAgdm5vZGUuJG5hbWUkID0gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHZub2RlO1xufTtcbmNvbnN0IEhvc3QgPSB7fTtcbmNvbnN0IGlzSG9zdCA9IChub2RlKSA9PiBub2RlICYmIG5vZGUuJHRhZyQgPT09IEhvc3Q7XG5jb25zdCB2ZG9tRm5VdGlscyA9IHtcbiAgICBmb3JFYWNoOiAoY2hpbGRyZW4sIGNiKSA9PiBjaGlsZHJlbi5tYXAoY29udmVydFRvUHVibGljKS5mb3JFYWNoKGNiKSxcbiAgICBtYXA6IChjaGlsZHJlbiwgY2IpID0+IGNoaWxkcmVuLm1hcChjb252ZXJ0VG9QdWJsaWMpLm1hcChjYikubWFwKGNvbnZlcnRUb1ByaXZhdGUpLFxufTtcbmNvbnN0IGNvbnZlcnRUb1B1YmxpYyA9IChub2RlKSA9PiAoe1xuICAgIHZhdHRyczogbm9kZS4kYXR0cnMkLFxuICAgIHZjaGlsZHJlbjogbm9kZS4kY2hpbGRyZW4kLFxuICAgIHZrZXk6IG5vZGUuJGtleSQsXG4gICAgdm5hbWU6IG5vZGUuJG5hbWUkLFxuICAgIHZ0YWc6IG5vZGUuJHRhZyQsXG4gICAgdnRleHQ6IG5vZGUuJHRleHQkLFxufSk7XG5jb25zdCBjb252ZXJ0VG9Qcml2YXRlID0gKG5vZGUpID0+IHtcbiAgICBpZiAodHlwZW9mIG5vZGUudnRhZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBjb25zdCB2bm9kZURhdGEgPSBPYmplY3QuYXNzaWduKHt9LCBub2RlLnZhdHRycyk7XG4gICAgICAgIGlmIChub2RlLnZrZXkpIHtcbiAgICAgICAgICAgIHZub2RlRGF0YS5rZXkgPSBub2RlLnZrZXk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vZGUudm5hbWUpIHtcbiAgICAgICAgICAgIHZub2RlRGF0YS5uYW1lID0gbm9kZS52bmFtZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaChub2RlLnZ0YWcsIHZub2RlRGF0YSwgLi4uKG5vZGUudmNoaWxkcmVuIHx8IFtdKSk7XG4gICAgfVxuICAgIGNvbnN0IHZub2RlID0gbmV3Vk5vZGUobm9kZS52dGFnLCBub2RlLnZ0ZXh0KTtcbiAgICB2bm9kZS4kYXR0cnMkID0gbm9kZS52YXR0cnM7XG4gICAgdm5vZGUuJGNoaWxkcmVuJCA9IG5vZGUudmNoaWxkcmVuO1xuICAgIHZub2RlLiRrZXkkID0gbm9kZS52a2V5O1xuICAgIHZub2RlLiRuYW1lJCA9IG5vZGUudm5hbWU7XG4gICAgcmV0dXJuIHZub2RlO1xufTtcbi8qKlxuICogVmFsaWRhdGVzIHRoZSBvcmRlcmluZyBvZiBhdHRyaWJ1dGVzIG9uIGFuIGlucHV0IGVsZW1lbnRcbiAqIEBwYXJhbSBpbnB1dEVsbSB0aGUgZWxlbWVudCB0byB2YWxpZGF0ZVxuICovXG5jb25zdCB2YWxpZGF0ZUlucHV0UHJvcGVydGllcyA9IChpbnB1dEVsbSkgPT4ge1xuICAgIGNvbnN0IHByb3BzID0gT2JqZWN0LmtleXMoaW5wdXRFbG0pO1xuICAgIGNvbnN0IHZhbHVlID0gcHJvcHMuaW5kZXhPZigndmFsdWUnKTtcbiAgICBpZiAodmFsdWUgPT09IC0xKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgdHlwZUluZGV4ID0gcHJvcHMuaW5kZXhPZigndHlwZScpO1xuICAgIGNvbnN0IG1pbkluZGV4ID0gcHJvcHMuaW5kZXhPZignbWluJyk7XG4gICAgY29uc3QgbWF4SW5kZXggPSBwcm9wcy5pbmRleE9mKCdtYXgnKTtcbiAgICBjb25zdCBzdGVwSW5kZXggPSBwcm9wcy5pbmRleE9mKCdzdGVwJyk7XG4gICAgaWYgKHZhbHVlIDwgdHlwZUluZGV4IHx8IHZhbHVlIDwgbWluSW5kZXggfHwgdmFsdWUgPCBtYXhJbmRleCB8fCB2YWx1ZSA8IHN0ZXBJbmRleCkge1xuICAgICAgICBjb25zb2xlRGV2V2FybihgVGhlIFwidmFsdWVcIiBwcm9wIG9mIDxpbnB1dD4gc2hvdWxkIGJlIHNldCBhZnRlciBcIm1pblwiLCBcIm1heFwiLCBcInR5cGVcIiBhbmQgXCJzdGVwXCJgKTtcbiAgICB9XG59O1xuLyoqXG4gKiBQcm9kdWN0aW9uIHNldEFjY2Vzc29yKCkgZnVuY3Rpb24gYmFzZWQgb24gUHJlYWN0IGJ5XG4gKiBKYXNvbiBNaWxsZXIgKEBkZXZlbG9waXQpXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9kZXZlbG9waXQvcHJlYWN0L2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqXG4gKiBNb2RpZmllZCBmb3IgU3RlbmNpbCdzIGNvbXBpbGVyIGFuZCB2ZG9tXG4gKi9cbmNvbnN0IHNldEFjY2Vzc29yID0gKGVsbSwgbWVtYmVyTmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlLCBpc1N2ZywgZmxhZ3MpID0+IHtcbiAgICBpZiAob2xkVmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgIGxldCBpc1Byb3AgPSBpc01lbWJlckluRWxlbWVudChlbG0sIG1lbWJlck5hbWUpO1xuICAgICAgICBsZXQgbG4gPSBtZW1iZXJOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChCVUlMRC52ZG9tQ2xhc3MgJiYgbWVtYmVyTmFtZSA9PT0gJ2NsYXNzJykge1xuICAgICAgICAgICAgY29uc3QgY2xhc3NMaXN0ID0gZWxtLmNsYXNzTGlzdDtcbiAgICAgICAgICAgIGNvbnN0IG9sZENsYXNzZXMgPSBwYXJzZUNsYXNzTGlzdChvbGRWYWx1ZSk7XG4gICAgICAgICAgICBjb25zdCBuZXdDbGFzc2VzID0gcGFyc2VDbGFzc0xpc3QobmV3VmFsdWUpO1xuICAgICAgICAgICAgY2xhc3NMaXN0LnJlbW92ZSguLi5vbGRDbGFzc2VzLmZpbHRlcigoYykgPT4gYyAmJiAhbmV3Q2xhc3Nlcy5pbmNsdWRlcyhjKSkpO1xuICAgICAgICAgICAgY2xhc3NMaXN0LmFkZCguLi5uZXdDbGFzc2VzLmZpbHRlcigoYykgPT4gYyAmJiAhb2xkQ2xhc3Nlcy5pbmNsdWRlcyhjKSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEJVSUxELnZkb21TdHlsZSAmJiBtZW1iZXJOYW1lID09PSAnc3R5bGUnKSB7XG4gICAgICAgICAgICAvLyB1cGRhdGUgc3R5bGUgYXR0cmlidXRlLCBjc3MgcHJvcGVydGllcyBhbmQgdmFsdWVzXG4gICAgICAgICAgICBpZiAoQlVJTEQudXBkYXRhYmxlKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBwcm9wIGluIG9sZFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbmV3VmFsdWUgfHwgbmV3VmFsdWVbcHJvcF0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFCVUlMRC5oeWRyYXRlU2VydmVyU2lkZSAmJiBwcm9wLmluY2x1ZGVzKCctJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbG0uc3R5bGUucmVtb3ZlUHJvcGVydHkocHJvcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbG0uc3R5bGVbcHJvcF0gPSAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3QgcHJvcCBpbiBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGlmICghb2xkVmFsdWUgfHwgbmV3VmFsdWVbcHJvcF0gIT09IG9sZFZhbHVlW3Byb3BdKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUgJiYgcHJvcC5pbmNsdWRlcygnLScpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbG0uc3R5bGUuc2V0UHJvcGVydHkocHJvcCwgbmV3VmFsdWVbcHJvcF0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxtLnN0eWxlW3Byb3BdID0gbmV3VmFsdWVbcHJvcF07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQlVJTEQudmRvbUtleSAmJiBtZW1iZXJOYW1lID09PSAna2V5JylcbiAgICAgICAgICAgIDtcbiAgICAgICAgZWxzZSBpZiAoQlVJTEQudmRvbVJlZiAmJiBtZW1iZXJOYW1lID09PSAncmVmJykge1xuICAgICAgICAgICAgLy8gbWluaWZpZXIgd2lsbCBjbGVhbiB0aGlzIHVwXG4gICAgICAgICAgICBpZiAobmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICBuZXdWYWx1ZShlbG0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEJVSUxELnZkb21MaXN0ZW5lciAmJlxuICAgICAgICAgICAgKEJVSUxELmxhenlMb2FkID8gIWlzUHJvcCA6ICFlbG0uX19sb29rdXBTZXR0ZXJfXyhtZW1iZXJOYW1lKSkgJiZcbiAgICAgICAgICAgIG1lbWJlck5hbWVbMF0gPT09ICdvJyAmJlxuICAgICAgICAgICAgbWVtYmVyTmFtZVsxXSA9PT0gJ24nKSB7XG4gICAgICAgICAgICAvLyBFdmVudCBIYW5kbGVyc1xuICAgICAgICAgICAgLy8gc28gaWYgdGhlIG1lbWJlciBuYW1lIHN0YXJ0cyB3aXRoIFwib25cIiBhbmQgdGhlIDNyZCBjaGFyYWN0ZXJzIGlzXG4gICAgICAgICAgICAvLyBhIGNhcGl0YWwgbGV0dGVyLCBhbmQgaXQncyBub3QgYWxyZWFkeSBhIG1lbWJlciBvbiB0aGUgZWxlbWVudCxcbiAgICAgICAgICAgIC8vIHRoZW4gd2UncmUgYXNzdW1pbmcgaXQncyBhbiBldmVudCBsaXN0ZW5lclxuICAgICAgICAgICAgaWYgKG1lbWJlck5hbWVbMl0gPT09ICctJykge1xuICAgICAgICAgICAgICAgIC8vIG9uLSBwcmVmaXhlZCBldmVudHNcbiAgICAgICAgICAgICAgICAvLyBhbGxvd3MgdG8gYmUgZXhwbGljaXQgYWJvdXQgdGhlIGRvbSBldmVudCB0byBsaXN0ZW4gd2l0aG91dCBhbnkgbWFnaWNcbiAgICAgICAgICAgICAgICAvLyB1bmRlciB0aGUgaG9vZDpcbiAgICAgICAgICAgICAgICAvLyA8bXktY21wIG9uLWNsaWNrPiAvLyBsaXN0ZW5zIGZvciBcImNsaWNrXCJcbiAgICAgICAgICAgICAgICAvLyA8bXktY21wIG9uLUNsaWNrPiAvLyBsaXN0ZW5zIGZvciBcIkNsaWNrXCJcbiAgICAgICAgICAgICAgICAvLyA8bXktY21wIG9uLWlvbkNoYW5nZT4gLy8gbGlzdGVucyBmb3IgXCJpb25DaGFuZ2VcIlxuICAgICAgICAgICAgICAgIC8vIDxteS1jbXAgb24tRVZFTlRTPiAvLyBsaXN0ZW5zIGZvciBcIkVWRU5UU1wiXG4gICAgICAgICAgICAgICAgbWVtYmVyTmFtZSA9IG1lbWJlck5hbWUuc2xpY2UoMyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpc01lbWJlckluRWxlbWVudCh3aW4sIGxuKSkge1xuICAgICAgICAgICAgICAgIC8vIHN0YW5kYXJkIGV2ZW50XG4gICAgICAgICAgICAgICAgLy8gdGhlIEpTWCBhdHRyaWJ1dGUgY291bGQgaGF2ZSBiZWVuIFwib25Nb3VzZU92ZXJcIiBhbmQgdGhlXG4gICAgICAgICAgICAgICAgLy8gbWVtYmVyIG5hbWUgXCJvbm1vdXNlb3ZlclwiIGlzIG9uIHRoZSB3aW5kb3cncyBwcm90b3R5cGVcbiAgICAgICAgICAgICAgICAvLyBzbyBsZXQncyBhZGQgdGhlIGxpc3RlbmVyIFwibW91c2VvdmVyXCIsIHdoaWNoIGlzIGFsbCBsb3dlcmNhc2VkXG4gICAgICAgICAgICAgICAgbWVtYmVyTmFtZSA9IGxuLnNsaWNlKDIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gY3VzdG9tIGV2ZW50XG4gICAgICAgICAgICAgICAgLy8gdGhlIEpTWCBhdHRyaWJ1dGUgY291bGQgaGF2ZSBiZWVuIFwib25NeUN1c3RvbUV2ZW50XCJcbiAgICAgICAgICAgICAgICAvLyBzbyBsZXQncyB0cmltIG9mZiB0aGUgXCJvblwiIHByZWZpeCBhbmQgbG93ZXJjYXNlIHRoZSBmaXJzdCBjaGFyYWN0ZXJcbiAgICAgICAgICAgICAgICAvLyBhbmQgYWRkIHRoZSBsaXN0ZW5lciBcIm15Q3VzdG9tRXZlbnRcIlxuICAgICAgICAgICAgICAgIC8vIGV4Y2VwdCBmb3IgdGhlIGZpcnN0IGNoYXJhY3Rlciwgd2Uga2VlcCB0aGUgZXZlbnQgbmFtZSBjYXNlXG4gICAgICAgICAgICAgICAgbWVtYmVyTmFtZSA9IGxuWzJdICsgbWVtYmVyTmFtZS5zbGljZSgzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvbGRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHBsdC5yZWwoZWxtLCBtZW1iZXJOYW1lLCBvbGRWYWx1ZSwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcGx0LmFlbChlbG0sIG1lbWJlck5hbWUsIG5ld1ZhbHVlLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQlVJTEQudmRvbVByb3BPckF0dHIpIHtcbiAgICAgICAgICAgIC8vIFNldCBwcm9wZXJ0eSBpZiBpdCBleGlzdHMgYW5kIGl0J3Mgbm90IGEgU1ZHXG4gICAgICAgICAgICBjb25zdCBpc0NvbXBsZXggPSBpc0NvbXBsZXhUeXBlKG5ld1ZhbHVlKTtcbiAgICAgICAgICAgIGlmICgoaXNQcm9wIHx8IChpc0NvbXBsZXggJiYgbmV3VmFsdWUgIT09IG51bGwpKSAmJiAhaXNTdmcpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWVsbS50YWdOYW1lLmluY2x1ZGVzKCctJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG4gPSBuZXdWYWx1ZSA9PSBudWxsID8gJycgOiBuZXdWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdvcmthcm91bmQgZm9yIFNhZmFyaSwgbW92aW5nIHRoZSA8aW5wdXQ+IGNhcmV0IHdoZW4gcmUtYXNzaWduaW5nIHRoZSBzYW1lIHZhbHVlZFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lbWJlck5hbWUgPT09ICdsaXN0Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzUHJvcCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAob2xkVmFsdWUgPT0gbnVsbCB8fCBlbG1bbWVtYmVyTmFtZV0gIT0gbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsbVttZW1iZXJOYW1lXSA9IG47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbG1bbWVtYmVyTmFtZV0gPSBuZXdWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIE5lZWQgdG8gbWFudWFsbHkgdXBkYXRlIGF0dHJpYnV0ZSBpZjpcbiAgICAgICAgICAgICAqIC0gbWVtYmVyTmFtZSBpcyBub3QgYW4gYXR0cmlidXRlXG4gICAgICAgICAgICAgKiAtIGlmIHdlIGFyZSByZW5kZXJpbmcgdGhlIGhvc3QgZWxlbWVudCBpbiBvcmRlciB0byByZWZsZWN0IGF0dHJpYnV0ZVxuICAgICAgICAgICAgICogLSBpZiBpdCdzIGEgU1ZHLCBzaW5jZSBwcm9wZXJ0aWVzIG1pZ2h0IG5vdCB3b3JrIGluIDxzdmc+XG4gICAgICAgICAgICAgKiAtIGlmIHRoZSBuZXdWYWx1ZSBpcyBudWxsL3VuZGVmaW5lZCBvciAnZmFsc2UnLlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBsZXQgeGxpbmsgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChCVUlMRC52ZG9tWGxpbmspIHtcbiAgICAgICAgICAgICAgICBpZiAobG4gIT09IChsbiA9IGxuLnJlcGxhY2UoL154bGlua1xcOj8vLCAnJykpKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lbWJlck5hbWUgPSBsbjtcbiAgICAgICAgICAgICAgICAgICAgeGxpbmsgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChuZXdWYWx1ZSA9PSBudWxsIHx8IG5ld1ZhbHVlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGlmIChuZXdWYWx1ZSAhPT0gZmFsc2UgfHwgZWxtLmdldEF0dHJpYnV0ZShtZW1iZXJOYW1lKSA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKEJVSUxELnZkb21YbGluayAmJiB4bGluaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxtLnJlbW92ZUF0dHJpYnV0ZU5TKFhMSU5LX05TLCBtZW1iZXJOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsbS5yZW1vdmVBdHRyaWJ1dGUobWVtYmVyTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICgoIWlzUHJvcCB8fCBmbGFncyAmIDQgLyogaXNIb3N0ICovIHx8IGlzU3ZnKSAmJiAhaXNDb21wbGV4KSB7XG4gICAgICAgICAgICAgICAgbmV3VmFsdWUgPSBuZXdWYWx1ZSA9PT0gdHJ1ZSA/ICcnIDogbmV3VmFsdWU7XG4gICAgICAgICAgICAgICAgaWYgKEJVSUxELnZkb21YbGluayAmJiB4bGluaykge1xuICAgICAgICAgICAgICAgICAgICBlbG0uc2V0QXR0cmlidXRlTlMoWExJTktfTlMsIG1lbWJlck5hbWUsIG5ld1ZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGVsbS5zZXRBdHRyaWJ1dGUobWVtYmVyTmFtZSwgbmV3VmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn07XG5jb25zdCBwYXJzZUNsYXNzTGlzdFJlZ2V4ID0gL1xccy87XG5jb25zdCBwYXJzZUNsYXNzTGlzdCA9ICh2YWx1ZSkgPT4gKCF2YWx1ZSA/IFtdIDogdmFsdWUuc3BsaXQocGFyc2VDbGFzc0xpc3RSZWdleCkpO1xuY29uc3QgdXBkYXRlRWxlbWVudCA9IChvbGRWbm9kZSwgbmV3Vm5vZGUsIGlzU3ZnTW9kZSwgbWVtYmVyTmFtZSkgPT4ge1xuICAgIC8vIGlmIHRoZSBlbGVtZW50IHBhc3NlZCBpbiBpcyBhIHNoYWRvdyByb290LCB3aGljaCBpcyBhIGRvY3VtZW50IGZyYWdtZW50XG4gICAgLy8gdGhlbiB3ZSB3YW50IHRvIGJlIGFkZGluZyBhdHRycy9wcm9wcyB0byB0aGUgc2hhZG93IHJvb3QncyBcImhvc3RcIiBlbGVtZW50XG4gICAgLy8gaWYgaXQncyBub3QgYSBzaGFkb3cgcm9vdCwgdGhlbiB3ZSBhZGQgYXR0cnMvcHJvcHMgdG8gdGhlIHNhbWUgZWxlbWVudFxuICAgIGNvbnN0IGVsbSA9IG5ld1Zub2RlLiRlbG0kLm5vZGVUeXBlID09PSAxMSAvKiBEb2N1bWVudEZyYWdtZW50ICovICYmIG5ld1Zub2RlLiRlbG0kLmhvc3RcbiAgICAgICAgPyBuZXdWbm9kZS4kZWxtJC5ob3N0XG4gICAgICAgIDogbmV3Vm5vZGUuJGVsbSQ7XG4gICAgY29uc3Qgb2xkVm5vZGVBdHRycyA9IChvbGRWbm9kZSAmJiBvbGRWbm9kZS4kYXR0cnMkKSB8fCBFTVBUWV9PQko7XG4gICAgY29uc3QgbmV3Vm5vZGVBdHRycyA9IG5ld1Zub2RlLiRhdHRycyQgfHwgRU1QVFlfT0JKO1xuICAgIGlmIChCVUlMRC51cGRhdGFibGUpIHtcbiAgICAgICAgLy8gcmVtb3ZlIGF0dHJpYnV0ZXMgbm8gbG9uZ2VyIHByZXNlbnQgb24gdGhlIHZub2RlIGJ5IHNldHRpbmcgdGhlbSB0byB1bmRlZmluZWRcbiAgICAgICAgZm9yIChtZW1iZXJOYW1lIGluIG9sZFZub2RlQXR0cnMpIHtcbiAgICAgICAgICAgIGlmICghKG1lbWJlck5hbWUgaW4gbmV3Vm5vZGVBdHRycykpIHtcbiAgICAgICAgICAgICAgICBzZXRBY2Nlc3NvcihlbG0sIG1lbWJlck5hbWUsIG9sZFZub2RlQXR0cnNbbWVtYmVyTmFtZV0sIHVuZGVmaW5lZCwgaXNTdmdNb2RlLCBuZXdWbm9kZS4kZmxhZ3MkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBhZGQgbmV3ICYgdXBkYXRlIGNoYW5nZWQgYXR0cmlidXRlc1xuICAgIGZvciAobWVtYmVyTmFtZSBpbiBuZXdWbm9kZUF0dHJzKSB7XG4gICAgICAgIHNldEFjY2Vzc29yKGVsbSwgbWVtYmVyTmFtZSwgb2xkVm5vZGVBdHRyc1ttZW1iZXJOYW1lXSwgbmV3Vm5vZGVBdHRyc1ttZW1iZXJOYW1lXSwgaXNTdmdNb2RlLCBuZXdWbm9kZS4kZmxhZ3MkKTtcbiAgICB9XG59O1xuY29uc3QgY3JlYXRlRWxtID0gKG9sZFBhcmVudFZOb2RlLCBuZXdQYXJlbnRWTm9kZSwgY2hpbGRJbmRleCwgcGFyZW50RWxtKSA9PiB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBwcmVmZXItY29uc3RcbiAgICBjb25zdCBuZXdWTm9kZSA9IG5ld1BhcmVudFZOb2RlLiRjaGlsZHJlbiRbY2hpbGRJbmRleF07XG4gICAgbGV0IGkgPSAwO1xuICAgIGxldCBlbG07XG4gICAgbGV0IGNoaWxkTm9kZTtcbiAgICBsZXQgb2xkVk5vZGU7XG4gICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uICYmICF1c2VOYXRpdmVTaGFkb3dEb20pIHtcbiAgICAgICAgLy8gcmVtZW1iZXIgZm9yIGxhdGVyIHdlIG5lZWQgdG8gY2hlY2sgdG8gcmVsb2NhdGUgbm9kZXNcbiAgICAgICAgY2hlY2tTbG90UmVsb2NhdGUgPSB0cnVlO1xuICAgICAgICBpZiAobmV3Vk5vZGUuJHRhZyQgPT09ICdzbG90Jykge1xuICAgICAgICAgICAgaWYgKHNjb3BlSWQpIHtcbiAgICAgICAgICAgICAgICAvLyBzY29wZWQgY3NzIG5lZWRzIHRvIGFkZCBpdHMgc2NvcGVkIGlkIHRvIHRoZSBwYXJlbnQgZWxlbWVudFxuICAgICAgICAgICAgICAgIHBhcmVudEVsbS5jbGFzc0xpc3QuYWRkKHNjb3BlSWQgKyAnLXMnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5ld1ZOb2RlLiRmbGFncyQgfD0gbmV3Vk5vZGUuJGNoaWxkcmVuJFxuICAgICAgICAgICAgICAgID8gLy8gc2xvdCBlbGVtZW50IGhhcyBmYWxsYmFjayBjb250ZW50XG4gICAgICAgICAgICAgICAgICAgIDIgLyogaXNTbG90RmFsbGJhY2sgKi9cbiAgICAgICAgICAgICAgICA6IC8vIHNsb3QgZWxlbWVudCBkb2VzIG5vdCBoYXZlIGZhbGxiYWNrIGNvbnRlbnRcbiAgICAgICAgICAgICAgICAgICAgMSAvKiBpc1Nsb3RSZWZlcmVuY2UgKi87XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKEJVSUxELmlzRGV2ICYmIG5ld1ZOb2RlLiRlbG0kKSB7XG4gICAgICAgIGNvbnNvbGVEZXZFcnJvcihgVGhlIEpTWCAke25ld1ZOb2RlLiR0ZXh0JCAhPT0gbnVsbCA/IGBcIiR7bmV3Vk5vZGUuJHRleHQkfVwiIHRleHRgIDogYFwiJHtuZXdWTm9kZS4kdGFnJH1cIiBlbGVtZW50YH0gbm9kZSBzaG91bGQgbm90IGJlIHNoYXJlZCB3aXRoaW4gdGhlIHNhbWUgcmVuZGVyZXIuIFRoZSByZW5kZXJlciBjYWNoZXMgZWxlbWVudCBsb29rdXBzIGluIG9yZGVyIHRvIGltcHJvdmUgcGVyZm9ybWFuY2UuIEhvd2V2ZXIsIGEgc2lkZSBlZmZlY3QgZnJvbSB0aGlzIGlzIHRoYXQgdGhlIGV4YWN0IHNhbWUgSlNYIG5vZGUgc2hvdWxkIG5vdCBiZSByZXVzZWQuIEZvciBtb3JlIGluZm9ybWF0aW9uIHBsZWFzZSBzZWUgaHR0cHM6Ly9zdGVuY2lsanMuY29tL2RvY3MvdGVtcGxhdGluZy1qc3gjYXZvaWQtc2hhcmVkLWpzeC1ub2Rlc2ApO1xuICAgIH1cbiAgICBpZiAoQlVJTEQudmRvbVRleHQgJiYgbmV3Vk5vZGUuJHRleHQkICE9PSBudWxsKSB7XG4gICAgICAgIC8vIGNyZWF0ZSB0ZXh0IG5vZGVcbiAgICAgICAgZWxtID0gbmV3Vk5vZGUuJGVsbSQgPSBkb2MuY3JlYXRlVGV4dE5vZGUobmV3Vk5vZGUuJHRleHQkKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24gJiYgbmV3Vk5vZGUuJGZsYWdzJCAmIDEgLyogaXNTbG90UmVmZXJlbmNlICovKSB7XG4gICAgICAgIC8vIGNyZWF0ZSBhIHNsb3QgcmVmZXJlbmNlIG5vZGVcbiAgICAgICAgZWxtID0gbmV3Vk5vZGUuJGVsbSQgPVxuICAgICAgICAgICAgQlVJTEQuaXNEZWJ1ZyB8fCBCVUlMRC5oeWRyYXRlU2VydmVyU2lkZSA/IHNsb3RSZWZlcmVuY2VEZWJ1Z05vZGUobmV3Vk5vZGUpIDogZG9jLmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChCVUlMRC5zdmcgJiYgIWlzU3ZnTW9kZSkge1xuICAgICAgICAgICAgaXNTdmdNb2RlID0gbmV3Vk5vZGUuJHRhZyQgPT09ICdzdmcnO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNyZWF0ZSBlbGVtZW50XG4gICAgICAgIGVsbSA9IG5ld1ZOb2RlLiRlbG0kID0gKEJVSUxELnN2Z1xuICAgICAgICAgICAgPyBkb2MuY3JlYXRlRWxlbWVudE5TKGlzU3ZnTW9kZSA/IFNWR19OUyA6IEhUTUxfTlMsIEJVSUxELnNsb3RSZWxvY2F0aW9uICYmIG5ld1ZOb2RlLiRmbGFncyQgJiAyIC8qIGlzU2xvdEZhbGxiYWNrICovXG4gICAgICAgICAgICAgICAgPyAnc2xvdC1mYidcbiAgICAgICAgICAgICAgICA6IG5ld1ZOb2RlLiR0YWckKVxuICAgICAgICAgICAgOiBkb2MuY3JlYXRlRWxlbWVudChCVUlMRC5zbG90UmVsb2NhdGlvbiAmJiBuZXdWTm9kZS4kZmxhZ3MkICYgMiAvKiBpc1Nsb3RGYWxsYmFjayAqL1xuICAgICAgICAgICAgICAgID8gJ3Nsb3QtZmInXG4gICAgICAgICAgICAgICAgOiBuZXdWTm9kZS4kdGFnJCkpO1xuICAgICAgICBpZiAoQlVJTEQuc3ZnICYmIGlzU3ZnTW9kZSAmJiBuZXdWTm9kZS4kdGFnJCA9PT0gJ2ZvcmVpZ25PYmplY3QnKSB7XG4gICAgICAgICAgICBpc1N2Z01vZGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBhZGQgY3NzIGNsYXNzZXMsIGF0dHJzLCBwcm9wcywgbGlzdGVuZXJzLCBldGMuXG4gICAgICAgIGlmIChCVUlMRC52ZG9tQXR0cmlidXRlKSB7XG4gICAgICAgICAgICB1cGRhdGVFbGVtZW50KG51bGwsIG5ld1ZOb2RlLCBpc1N2Z01vZGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoQlVJTEQuc2hhZG93RG9tIHx8IEJVSUxELnNjb3BlZCkgJiYgaXNEZWYoc2NvcGVJZCkgJiYgZWxtWydzLXNpJ10gIT09IHNjb3BlSWQpIHtcbiAgICAgICAgICAgIC8vIGlmIHRoZXJlIGlzIGEgc2NvcGVJZCBhbmQgdGhpcyBpcyB0aGUgaW5pdGlhbCByZW5kZXJcbiAgICAgICAgICAgIC8vIHRoZW4gbGV0J3MgYWRkIHRoZSBzY29wZUlkIGFzIGEgY3NzIGNsYXNzXG4gICAgICAgICAgICBlbG0uY2xhc3NMaXN0LmFkZCgoZWxtWydzLXNpJ10gPSBzY29wZUlkKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5ld1ZOb2RlLiRjaGlsZHJlbiQpIHtcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBuZXdWTm9kZS4kY2hpbGRyZW4kLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgLy8gY3JlYXRlIHRoZSBub2RlXG4gICAgICAgICAgICAgICAgY2hpbGROb2RlID0gY3JlYXRlRWxtKG9sZFBhcmVudFZOb2RlLCBuZXdWTm9kZSwgaSwgZWxtKTtcbiAgICAgICAgICAgICAgICAvLyByZXR1cm4gbm9kZSBjb3VsZCBoYXZlIGJlZW4gbnVsbFxuICAgICAgICAgICAgICAgIGlmIChjaGlsZE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gYXBwZW5kIG91ciBuZXcgbm9kZVxuICAgICAgICAgICAgICAgICAgICBlbG0uYXBwZW5kQ2hpbGQoY2hpbGROb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELnN2Zykge1xuICAgICAgICAgICAgaWYgKG5ld1ZOb2RlLiR0YWckID09PSAnc3ZnJykge1xuICAgICAgICAgICAgICAgIC8vIE9ubHkgcmVzZXQgdGhlIFNWRyBjb250ZXh0IHdoZW4gd2UncmUgZXhpdGluZyA8c3ZnPiBlbGVtZW50XG4gICAgICAgICAgICAgICAgaXNTdmdNb2RlID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChlbG0udGFnTmFtZSA9PT0gJ2ZvcmVpZ25PYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgLy8gUmVlbnRlciBTVkcgY29udGV4dCB3aGVuIHdlJ3JlIGV4aXRpbmcgPGZvcmVpZ25PYmplY3Q+IGVsZW1lbnRcbiAgICAgICAgICAgICAgICBpc1N2Z01vZGUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChCVUlMRC5zbG90UmVsb2NhdGlvbikge1xuICAgICAgICBlbG1bJ3MtaG4nXSA9IGhvc3RUYWdOYW1lO1xuICAgICAgICBpZiAobmV3Vk5vZGUuJGZsYWdzJCAmICgyIC8qIGlzU2xvdEZhbGxiYWNrICovIHwgMSAvKiBpc1Nsb3RSZWZlcmVuY2UgKi8pKSB7XG4gICAgICAgICAgICAvLyByZW1lbWJlciB0aGUgY29udGVudCByZWZlcmVuY2UgY29tbWVudFxuICAgICAgICAgICAgZWxtWydzLXNyJ10gPSB0cnVlO1xuICAgICAgICAgICAgLy8gcmVtZW1iZXIgdGhlIGNvbnRlbnQgcmVmZXJlbmNlIGNvbW1lbnRcbiAgICAgICAgICAgIGVsbVsncy1jciddID0gY29udGVudFJlZjtcbiAgICAgICAgICAgIC8vIHJlbWVtYmVyIHRoZSBzbG90IG5hbWUsIG9yIGVtcHR5IHN0cmluZyBmb3IgZGVmYXVsdCBzbG90XG4gICAgICAgICAgICBlbG1bJ3Mtc24nXSA9IG5ld1ZOb2RlLiRuYW1lJCB8fCAnJztcbiAgICAgICAgICAgIC8vIGNoZWNrIGlmIHdlJ3ZlIGdvdCBhbiBvbGQgdm5vZGUgZm9yIHRoaXMgc2xvdFxuICAgICAgICAgICAgb2xkVk5vZGUgPSBvbGRQYXJlbnRWTm9kZSAmJiBvbGRQYXJlbnRWTm9kZS4kY2hpbGRyZW4kICYmIG9sZFBhcmVudFZOb2RlLiRjaGlsZHJlbiRbY2hpbGRJbmRleF07XG4gICAgICAgICAgICBpZiAob2xkVk5vZGUgJiYgb2xkVk5vZGUuJHRhZyQgPT09IG5ld1ZOb2RlLiR0YWckICYmIG9sZFBhcmVudFZOb2RlLiRlbG0kKSB7XG4gICAgICAgICAgICAgICAgLy8gd2UndmUgZ290IGFuIG9sZCBzbG90IHZub2RlIGFuZCB0aGUgd3JhcHBlciBpcyBiZWluZyByZXBsYWNlZFxuICAgICAgICAgICAgICAgIC8vIHNvIGxldCdzIG1vdmUgdGhlIG9sZCBzbG90IGNvbnRlbnQgYmFjayB0byBpdCdzIG9yaWdpbmFsIGxvY2F0aW9uXG4gICAgICAgICAgICAgICAgcHV0QmFja0luT3JpZ2luYWxMb2NhdGlvbihvbGRQYXJlbnRWTm9kZS4kZWxtJCwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBlbG07XG59O1xuY29uc3QgcHV0QmFja0luT3JpZ2luYWxMb2NhdGlvbiA9IChwYXJlbnRFbG0sIHJlY3Vyc2l2ZSkgPT4ge1xuICAgIHBsdC4kZmxhZ3MkIHw9IDEgLyogaXNUbXBEaXNjb25uZWN0ZWQgKi87XG4gICAgY29uc3Qgb2xkU2xvdENoaWxkTm9kZXMgPSBwYXJlbnRFbG0uY2hpbGROb2RlcztcbiAgICBmb3IgKGxldCBpID0gb2xkU2xvdENoaWxkTm9kZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgY29uc3QgY2hpbGROb2RlID0gb2xkU2xvdENoaWxkTm9kZXNbaV07XG4gICAgICAgIGlmIChjaGlsZE5vZGVbJ3MtaG4nXSAhPT0gaG9zdFRhZ05hbWUgJiYgY2hpbGROb2RlWydzLW9sJ10pIHtcbiAgICAgICAgICAgIC8vIC8vIHRoaXMgY2hpbGQgbm9kZSBpbiB0aGUgb2xkIGVsZW1lbnQgaXMgZnJvbSBhbm90aGVyIGNvbXBvbmVudFxuICAgICAgICAgICAgLy8gLy8gcmVtb3ZlIHRoaXMgbm9kZSBmcm9tIHRoZSBvbGQgc2xvdCdzIHBhcmVudFxuICAgICAgICAgICAgLy8gY2hpbGROb2RlLnJlbW92ZSgpO1xuICAgICAgICAgICAgLy8gYW5kIHJlbG9jYXRlIGl0IGJhY2sgdG8gaXQncyBvcmlnaW5hbCBsb2NhdGlvblxuICAgICAgICAgICAgcGFyZW50UmVmZXJlbmNlTm9kZShjaGlsZE5vZGUpLmluc2VydEJlZm9yZShjaGlsZE5vZGUsIHJlZmVyZW5jZU5vZGUoY2hpbGROb2RlKSk7XG4gICAgICAgICAgICAvLyByZW1vdmUgdGhlIG9sZCBvcmlnaW5hbCBsb2NhdGlvbiBjb21tZW50IGVudGlyZWx5XG4gICAgICAgICAgICAvLyBsYXRlciBvbiB0aGUgcGF0Y2ggZnVuY3Rpb24gd2lsbCBrbm93IHdoYXQgdG8gZG9cbiAgICAgICAgICAgIC8vIGFuZCBtb3ZlIHRoaXMgdG8gdGhlIGNvcnJlY3Qgc3BvdCBpbiBuZWVkIGJlXG4gICAgICAgICAgICBjaGlsZE5vZGVbJ3Mtb2wnXS5yZW1vdmUoKTtcbiAgICAgICAgICAgIGNoaWxkTm9kZVsncy1vbCddID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgY2hlY2tTbG90UmVsb2NhdGUgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZWN1cnNpdmUpIHtcbiAgICAgICAgICAgIHB1dEJhY2tJbk9yaWdpbmFsTG9jYXRpb24oY2hpbGROb2RlLCByZWN1cnNpdmUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHBsdC4kZmxhZ3MkICY9IH4xIC8qIGlzVG1wRGlzY29ubmVjdGVkICovO1xufTtcbmNvbnN0IGFkZFZub2RlcyA9IChwYXJlbnRFbG0sIGJlZm9yZSwgcGFyZW50Vk5vZGUsIHZub2Rlcywgc3RhcnRJZHgsIGVuZElkeCkgPT4ge1xuICAgIGxldCBjb250YWluZXJFbG0gPSAoKEJVSUxELnNsb3RSZWxvY2F0aW9uICYmIHBhcmVudEVsbVsncy1jciddICYmIHBhcmVudEVsbVsncy1jciddLnBhcmVudE5vZGUpIHx8IHBhcmVudEVsbSk7XG4gICAgbGV0IGNoaWxkTm9kZTtcbiAgICBpZiAoQlVJTEQuc2hhZG93RG9tICYmIGNvbnRhaW5lckVsbS5zaGFkb3dSb290ICYmIGNvbnRhaW5lckVsbS50YWdOYW1lID09PSBob3N0VGFnTmFtZSkge1xuICAgICAgICBjb250YWluZXJFbG0gPSBjb250YWluZXJFbG0uc2hhZG93Um9vdDtcbiAgICB9XG4gICAgZm9yICg7IHN0YXJ0SWR4IDw9IGVuZElkeDsgKytzdGFydElkeCkge1xuICAgICAgICBpZiAodm5vZGVzW3N0YXJ0SWR4XSkge1xuICAgICAgICAgICAgY2hpbGROb2RlID0gY3JlYXRlRWxtKG51bGwsIHBhcmVudFZOb2RlLCBzdGFydElkeCwgcGFyZW50RWxtKTtcbiAgICAgICAgICAgIGlmIChjaGlsZE5vZGUpIHtcbiAgICAgICAgICAgICAgICB2bm9kZXNbc3RhcnRJZHhdLiRlbG0kID0gY2hpbGROb2RlO1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lckVsbS5pbnNlcnRCZWZvcmUoY2hpbGROb2RlLCBCVUlMRC5zbG90UmVsb2NhdGlvbiA/IHJlZmVyZW5jZU5vZGUoYmVmb3JlKSA6IGJlZm9yZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuY29uc3QgcmVtb3ZlVm5vZGVzID0gKHZub2Rlcywgc3RhcnRJZHgsIGVuZElkeCwgdm5vZGUsIGVsbSkgPT4ge1xuICAgIGZvciAoOyBzdGFydElkeCA8PSBlbmRJZHg7ICsrc3RhcnRJZHgpIHtcbiAgICAgICAgaWYgKCh2bm9kZSA9IHZub2Rlc1tzdGFydElkeF0pKSB7XG4gICAgICAgICAgICBlbG0gPSB2bm9kZS4kZWxtJDtcbiAgICAgICAgICAgIGNhbGxOb2RlUmVmcyh2bm9kZSk7XG4gICAgICAgICAgICBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24pIHtcbiAgICAgICAgICAgICAgICAvLyB3ZSdyZSByZW1vdmluZyB0aGlzIGVsZW1lbnRcbiAgICAgICAgICAgICAgICAvLyBzbyBpdCdzIHBvc3NpYmxlIHdlIG5lZWQgdG8gc2hvdyBzbG90IGZhbGxiYWNrIGNvbnRlbnQgbm93XG4gICAgICAgICAgICAgICAgY2hlY2tTbG90RmFsbGJhY2tWaXNpYmlsaXR5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBpZiAoZWxtWydzLW9sJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gcmVtb3ZlIHRoZSBvcmlnaW5hbCBsb2NhdGlvbiBjb21tZW50XG4gICAgICAgICAgICAgICAgICAgIGVsbVsncy1vbCddLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaXQncyBwb3NzaWJsZSB0aGF0IGNoaWxkIG5vZGVzIG9mIHRoZSBub2RlXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoYXQncyBiZWluZyByZW1vdmVkIGFyZSBzbG90IG5vZGVzXG4gICAgICAgICAgICAgICAgICAgIHB1dEJhY2tJbk9yaWdpbmFsTG9jYXRpb24oZWxtLCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyByZW1vdmUgdGhlIHZub2RlJ3MgZWxlbWVudCBmcm9tIHRoZSBkb21cbiAgICAgICAgICAgIGVsbS5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5jb25zdCB1cGRhdGVDaGlsZHJlbiA9IChwYXJlbnRFbG0sIG9sZENoLCBuZXdWTm9kZSwgbmV3Q2gpID0+IHtcbiAgICBsZXQgb2xkU3RhcnRJZHggPSAwO1xuICAgIGxldCBuZXdTdGFydElkeCA9IDA7XG4gICAgbGV0IGlkeEluT2xkID0gMDtcbiAgICBsZXQgaSA9IDA7XG4gICAgbGV0IG9sZEVuZElkeCA9IG9sZENoLmxlbmd0aCAtIDE7XG4gICAgbGV0IG9sZFN0YXJ0Vm5vZGUgPSBvbGRDaFswXTtcbiAgICBsZXQgb2xkRW5kVm5vZGUgPSBvbGRDaFtvbGRFbmRJZHhdO1xuICAgIGxldCBuZXdFbmRJZHggPSBuZXdDaC5sZW5ndGggLSAxO1xuICAgIGxldCBuZXdTdGFydFZub2RlID0gbmV3Q2hbMF07XG4gICAgbGV0IG5ld0VuZFZub2RlID0gbmV3Q2hbbmV3RW5kSWR4XTtcbiAgICBsZXQgbm9kZTtcbiAgICBsZXQgZWxtVG9Nb3ZlO1xuICAgIHdoaWxlIChvbGRTdGFydElkeCA8PSBvbGRFbmRJZHggJiYgbmV3U3RhcnRJZHggPD0gbmV3RW5kSWR4KSB7XG4gICAgICAgIGlmIChvbGRTdGFydFZub2RlID09IG51bGwpIHtcbiAgICAgICAgICAgIC8vIFZub2RlIG1pZ2h0IGhhdmUgYmVlbiBtb3ZlZCBsZWZ0XG4gICAgICAgICAgICBvbGRTdGFydFZub2RlID0gb2xkQ2hbKytvbGRTdGFydElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAob2xkRW5kVm5vZGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgb2xkRW5kVm5vZGUgPSBvbGRDaFstLW9sZEVuZElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobmV3U3RhcnRWbm9kZSA9PSBudWxsKSB7XG4gICAgICAgICAgICBuZXdTdGFydFZub2RlID0gbmV3Q2hbKytuZXdTdGFydElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobmV3RW5kVm5vZGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgbmV3RW5kVm5vZGUgPSBuZXdDaFstLW5ld0VuZElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNTYW1lVm5vZGUob2xkU3RhcnRWbm9kZSwgbmV3U3RhcnRWbm9kZSkpIHtcbiAgICAgICAgICAgIHBhdGNoKG9sZFN0YXJ0Vm5vZGUsIG5ld1N0YXJ0Vm5vZGUpO1xuICAgICAgICAgICAgb2xkU3RhcnRWbm9kZSA9IG9sZENoWysrb2xkU3RhcnRJZHhdO1xuICAgICAgICAgICAgbmV3U3RhcnRWbm9kZSA9IG5ld0NoWysrbmV3U3RhcnRJZHhdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzU2FtZVZub2RlKG9sZEVuZFZub2RlLCBuZXdFbmRWbm9kZSkpIHtcbiAgICAgICAgICAgIHBhdGNoKG9sZEVuZFZub2RlLCBuZXdFbmRWbm9kZSk7XG4gICAgICAgICAgICBvbGRFbmRWbm9kZSA9IG9sZENoWy0tb2xkRW5kSWR4XTtcbiAgICAgICAgICAgIG5ld0VuZFZub2RlID0gbmV3Q2hbLS1uZXdFbmRJZHhdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzU2FtZVZub2RlKG9sZFN0YXJ0Vm5vZGUsIG5ld0VuZFZub2RlKSkge1xuICAgICAgICAgICAgLy8gVm5vZGUgbW92ZWQgcmlnaHRcbiAgICAgICAgICAgIGlmIChCVUlMRC5zbG90UmVsb2NhdGlvbiAmJiAob2xkU3RhcnRWbm9kZS4kdGFnJCA9PT0gJ3Nsb3QnIHx8IG5ld0VuZFZub2RlLiR0YWckID09PSAnc2xvdCcpKSB7XG4gICAgICAgICAgICAgICAgcHV0QmFja0luT3JpZ2luYWxMb2NhdGlvbihvbGRTdGFydFZub2RlLiRlbG0kLnBhcmVudE5vZGUsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhdGNoKG9sZFN0YXJ0Vm5vZGUsIG5ld0VuZFZub2RlKTtcbiAgICAgICAgICAgIHBhcmVudEVsbS5pbnNlcnRCZWZvcmUob2xkU3RhcnRWbm9kZS4kZWxtJCwgb2xkRW5kVm5vZGUuJGVsbSQubmV4dFNpYmxpbmcpO1xuICAgICAgICAgICAgb2xkU3RhcnRWbm9kZSA9IG9sZENoWysrb2xkU3RhcnRJZHhdO1xuICAgICAgICAgICAgbmV3RW5kVm5vZGUgPSBuZXdDaFstLW5ld0VuZElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNTYW1lVm5vZGUob2xkRW5kVm5vZGUsIG5ld1N0YXJ0Vm5vZGUpKSB7XG4gICAgICAgICAgICAvLyBWbm9kZSBtb3ZlZCBsZWZ0XG4gICAgICAgICAgICBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24gJiYgKG9sZFN0YXJ0Vm5vZGUuJHRhZyQgPT09ICdzbG90JyB8fCBuZXdFbmRWbm9kZS4kdGFnJCA9PT0gJ3Nsb3QnKSkge1xuICAgICAgICAgICAgICAgIHB1dEJhY2tJbk9yaWdpbmFsTG9jYXRpb24ob2xkRW5kVm5vZGUuJGVsbSQucGFyZW50Tm9kZSwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGF0Y2gob2xkRW5kVm5vZGUsIG5ld1N0YXJ0Vm5vZGUpO1xuICAgICAgICAgICAgcGFyZW50RWxtLmluc2VydEJlZm9yZShvbGRFbmRWbm9kZS4kZWxtJCwgb2xkU3RhcnRWbm9kZS4kZWxtJCk7XG4gICAgICAgICAgICBvbGRFbmRWbm9kZSA9IG9sZENoWy0tb2xkRW5kSWR4XTtcbiAgICAgICAgICAgIG5ld1N0YXJ0Vm5vZGUgPSBuZXdDaFsrK25ld1N0YXJ0SWR4XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIGNyZWF0ZUtleVRvT2xkSWR4XG4gICAgICAgICAgICBpZHhJbk9sZCA9IC0xO1xuICAgICAgICAgICAgaWYgKEJVSUxELnZkb21LZXkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGkgPSBvbGRTdGFydElkeDsgaSA8PSBvbGRFbmRJZHg7ICsraSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAob2xkQ2hbaV0gJiYgb2xkQ2hbaV0uJGtleSQgIT09IG51bGwgJiYgb2xkQ2hbaV0uJGtleSQgPT09IG5ld1N0YXJ0Vm5vZGUuJGtleSQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkeEluT2xkID0gaTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELnZkb21LZXkgJiYgaWR4SW5PbGQgPj0gMCkge1xuICAgICAgICAgICAgICAgIGVsbVRvTW92ZSA9IG9sZENoW2lkeEluT2xkXTtcbiAgICAgICAgICAgICAgICBpZiAoZWxtVG9Nb3ZlLiR0YWckICE9PSBuZXdTdGFydFZub2RlLiR0YWckKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSBjcmVhdGVFbG0ob2xkQ2ggJiYgb2xkQ2hbbmV3U3RhcnRJZHhdLCBuZXdWTm9kZSwgaWR4SW5PbGQsIHBhcmVudEVsbSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBwYXRjaChlbG1Ub01vdmUsIG5ld1N0YXJ0Vm5vZGUpO1xuICAgICAgICAgICAgICAgICAgICBvbGRDaFtpZHhJbk9sZF0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSBlbG1Ub01vdmUuJGVsbSQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5ld1N0YXJ0Vm5vZGUgPSBuZXdDaFsrK25ld1N0YXJ0SWR4XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIG5ldyBlbGVtZW50XG4gICAgICAgICAgICAgICAgbm9kZSA9IGNyZWF0ZUVsbShvbGRDaCAmJiBvbGRDaFtuZXdTdGFydElkeF0sIG5ld1ZOb2RlLCBuZXdTdGFydElkeCwgcGFyZW50RWxtKTtcbiAgICAgICAgICAgICAgICBuZXdTdGFydFZub2RlID0gbmV3Q2hbKytuZXdTdGFydElkeF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zbG90UmVsb2NhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnRSZWZlcmVuY2VOb2RlKG9sZFN0YXJ0Vm5vZGUuJGVsbSQpLmluc2VydEJlZm9yZShub2RlLCByZWZlcmVuY2VOb2RlKG9sZFN0YXJ0Vm5vZGUuJGVsbSQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG9sZFN0YXJ0Vm5vZGUuJGVsbSQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm9kZSwgb2xkU3RhcnRWbm9kZS4kZWxtJCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChvbGRTdGFydElkeCA+IG9sZEVuZElkeCkge1xuICAgICAgICBhZGRWbm9kZXMocGFyZW50RWxtLCBuZXdDaFtuZXdFbmRJZHggKyAxXSA9PSBudWxsID8gbnVsbCA6IG5ld0NoW25ld0VuZElkeCArIDFdLiRlbG0kLCBuZXdWTm9kZSwgbmV3Q2gsIG5ld1N0YXJ0SWR4LCBuZXdFbmRJZHgpO1xuICAgIH1cbiAgICBlbHNlIGlmIChCVUlMRC51cGRhdGFibGUgJiYgbmV3U3RhcnRJZHggPiBuZXdFbmRJZHgpIHtcbiAgICAgICAgcmVtb3ZlVm5vZGVzKG9sZENoLCBvbGRTdGFydElkeCwgb2xkRW5kSWR4KTtcbiAgICB9XG59O1xuY29uc3QgaXNTYW1lVm5vZGUgPSAodm5vZGUxLCB2bm9kZTIpID0+IHtcbiAgICAvLyBjb21wYXJlIGlmIHR3byB2bm9kZSB0byBzZWUgaWYgdGhleSdyZSBcInRlY2huaWNhbGx5XCIgdGhlIHNhbWVcbiAgICAvLyBuZWVkIHRvIGhhdmUgdGhlIHNhbWUgZWxlbWVudCB0YWcsIGFuZCBzYW1lIGtleSB0byBiZSB0aGUgc2FtZVxuICAgIGlmICh2bm9kZTEuJHRhZyQgPT09IHZub2RlMi4kdGFnJCkge1xuICAgICAgICBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24gJiYgdm5vZGUxLiR0YWckID09PSAnc2xvdCcpIHtcbiAgICAgICAgICAgIHJldHVybiB2bm9kZTEuJG5hbWUkID09PSB2bm9kZTIuJG5hbWUkO1xuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC52ZG9tS2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gdm5vZGUxLiRrZXkkID09PSB2bm9kZTIuJGtleSQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG5jb25zdCByZWZlcmVuY2VOb2RlID0gKG5vZGUpID0+IHtcbiAgICAvLyB0aGlzIG5vZGUgd2FzIHJlbG9jYXRlZCB0byBhIG5ldyBsb2NhdGlvbiBpbiB0aGUgZG9tXG4gICAgLy8gYmVjYXVzZSBvZiBzb21lIG90aGVyIGNvbXBvbmVudCdzIHNsb3RcbiAgICAvLyBidXQgd2Ugc3RpbGwgaGF2ZSBhbiBodG1sIGNvbW1lbnQgaW4gcGxhY2Ugb2Ygd2hlcmVcbiAgICAvLyBpdCdzIG9yaWdpbmFsIGxvY2F0aW9uIHdhcyBhY2NvcmRpbmcgdG8gaXQncyBvcmlnaW5hbCB2ZG9tXG4gICAgcmV0dXJuIChub2RlICYmIG5vZGVbJ3Mtb2wnXSkgfHwgbm9kZTtcbn07XG5jb25zdCBwYXJlbnRSZWZlcmVuY2VOb2RlID0gKG5vZGUpID0+IChub2RlWydzLW9sJ10gPyBub2RlWydzLW9sJ10gOiBub2RlKS5wYXJlbnROb2RlO1xuY29uc3QgcGF0Y2ggPSAob2xkVk5vZGUsIG5ld1ZOb2RlKSA9PiB7XG4gICAgY29uc3QgZWxtID0gKG5ld1ZOb2RlLiRlbG0kID0gb2xkVk5vZGUuJGVsbSQpO1xuICAgIGNvbnN0IG9sZENoaWxkcmVuID0gb2xkVk5vZGUuJGNoaWxkcmVuJDtcbiAgICBjb25zdCBuZXdDaGlsZHJlbiA9IG5ld1ZOb2RlLiRjaGlsZHJlbiQ7XG4gICAgY29uc3QgdGFnID0gbmV3Vk5vZGUuJHRhZyQ7XG4gICAgY29uc3QgdGV4dCA9IG5ld1ZOb2RlLiR0ZXh0JDtcbiAgICBsZXQgZGVmYXVsdEhvbGRlcjtcbiAgICBpZiAoIUJVSUxELnZkb21UZXh0IHx8IHRleHQgPT09IG51bGwpIHtcbiAgICAgICAgaWYgKEJVSUxELnN2Zykge1xuICAgICAgICAgICAgLy8gdGVzdCBpZiB3ZSdyZSByZW5kZXJpbmcgYW4gc3ZnIGVsZW1lbnQsIG9yIHN0aWxsIHJlbmRlcmluZyBub2RlcyBpbnNpZGUgb2Ygb25lXG4gICAgICAgICAgICAvLyBvbmx5IGFkZCB0aGlzIHRvIHRoZSB3aGVuIHRoZSBjb21waWxlciBzZWVzIHdlJ3JlIHVzaW5nIGFuIHN2ZyBzb21ld2hlcmVcbiAgICAgICAgICAgIGlzU3ZnTW9kZSA9IHRhZyA9PT0gJ3N2ZycgPyB0cnVlIDogdGFnID09PSAnZm9yZWlnbk9iamVjdCcgPyBmYWxzZSA6IGlzU3ZnTW9kZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBlbGVtZW50IG5vZGVcbiAgICAgICAgaWYgKEJVSUxELnZkb21BdHRyaWJ1dGUgfHwgQlVJTEQucmVmbGVjdCkge1xuICAgICAgICAgICAgaWYgKEJVSUxELnNsb3QgJiYgdGFnID09PSAnc2xvdCcpXG4gICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gZWl0aGVyIHRoaXMgaXMgdGhlIGZpcnN0IHJlbmRlciBvZiBhbiBlbGVtZW50IE9SIGl0J3MgYW4gdXBkYXRlXG4gICAgICAgICAgICAgICAgLy8gQU5EIHdlIGFscmVhZHkga25vdyBpdCdzIHBvc3NpYmxlIGl0IGNvdWxkIGhhdmUgY2hhbmdlZFxuICAgICAgICAgICAgICAgIC8vIHRoaXMgdXBkYXRlcyB0aGUgZWxlbWVudCdzIGNzcyBjbGFzc2VzLCBhdHRycywgcHJvcHMsIGxpc3RlbmVycywgZXRjLlxuICAgICAgICAgICAgICAgIHVwZGF0ZUVsZW1lbnQob2xkVk5vZGUsIG5ld1ZOb2RlLCBpc1N2Z01vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC51cGRhdGFibGUgJiYgb2xkQ2hpbGRyZW4gIT09IG51bGwgJiYgbmV3Q2hpbGRyZW4gIT09IG51bGwpIHtcbiAgICAgICAgICAgIC8vIGxvb2tzIGxpa2UgdGhlcmUncyBjaGlsZCB2bm9kZXMgZm9yIGJvdGggdGhlIG9sZCBhbmQgbmV3IHZub2Rlc1xuICAgICAgICAgICAgdXBkYXRlQ2hpbGRyZW4oZWxtLCBvbGRDaGlsZHJlbiwgbmV3Vk5vZGUsIG5ld0NoaWxkcmVuKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChuZXdDaGlsZHJlbiAhPT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gbm8gb2xkIGNoaWxkIHZub2RlcywgYnV0IHRoZXJlIGFyZSBuZXcgY2hpbGQgdm5vZGVzIHRvIGFkZFxuICAgICAgICAgICAgaWYgKEJVSUxELnVwZGF0YWJsZSAmJiBCVUlMRC52ZG9tVGV4dCAmJiBvbGRWTm9kZS4kdGV4dCQgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAvLyB0aGUgb2xkIHZub2RlIHdhcyB0ZXh0LCBzbyBiZSBzdXJlIHRvIGNsZWFyIGl0IG91dFxuICAgICAgICAgICAgICAgIGVsbS50ZXh0Q29udGVudCA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gYWRkIHRoZSBuZXcgdm5vZGUgY2hpbGRyZW5cbiAgICAgICAgICAgIGFkZFZub2RlcyhlbG0sIG51bGwsIG5ld1ZOb2RlLCBuZXdDaGlsZHJlbiwgMCwgbmV3Q2hpbGRyZW4ubGVuZ3RoIC0gMSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQlVJTEQudXBkYXRhYmxlICYmIG9sZENoaWxkcmVuICE9PSBudWxsKSB7XG4gICAgICAgICAgICAvLyBubyBuZXcgY2hpbGQgdm5vZGVzLCBidXQgdGhlcmUgYXJlIG9sZCBjaGlsZCB2bm9kZXMgdG8gcmVtb3ZlXG4gICAgICAgICAgICByZW1vdmVWbm9kZXMob2xkQ2hpbGRyZW4sIDAsIG9sZENoaWxkcmVuLmxlbmd0aCAtIDEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC5zdmcgJiYgaXNTdmdNb2RlICYmIHRhZyA9PT0gJ3N2ZycpIHtcbiAgICAgICAgICAgIGlzU3ZnTW9kZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKEJVSUxELnZkb21UZXh0ICYmIEJVSUxELnNsb3RSZWxvY2F0aW9uICYmIChkZWZhdWx0SG9sZGVyID0gZWxtWydzLWNyJ10pKSB7XG4gICAgICAgIC8vIHRoaXMgZWxlbWVudCBoYXMgc2xvdHRlZCBjb250ZW50XG4gICAgICAgIGRlZmF1bHRIb2xkZXIucGFyZW50Tm9kZS50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKEJVSUxELnZkb21UZXh0ICYmIG9sZFZOb2RlLiR0ZXh0JCAhPT0gdGV4dCkge1xuICAgICAgICAvLyB1cGRhdGUgdGhlIHRleHQgY29udGVudCBmb3IgdGhlIHRleHQgb25seSB2bm9kZVxuICAgICAgICAvLyBhbmQgYWxzbyBvbmx5IGlmIHRoZSB0ZXh0IGlzIGRpZmZlcmVudCB0aGFuIGJlZm9yZVxuICAgICAgICBlbG0uZGF0YSA9IHRleHQ7XG4gICAgfVxufTtcbmNvbnN0IHVwZGF0ZUZhbGxiYWNrU2xvdFZpc2liaWxpdHkgPSAoZWxtKSA9PiB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBwcmVmZXItY29uc3RcbiAgICBjb25zdCBjaGlsZE5vZGVzID0gZWxtLmNoaWxkTm9kZXM7XG4gICAgbGV0IGNoaWxkTm9kZTtcbiAgICBsZXQgaTtcbiAgICBsZXQgaWxlbjtcbiAgICBsZXQgajtcbiAgICBsZXQgc2xvdE5hbWVBdHRyO1xuICAgIGxldCBub2RlVHlwZTtcbiAgICBmb3IgKGkgPSAwLCBpbGVuID0gY2hpbGROb2Rlcy5sZW5ndGg7IGkgPCBpbGVuOyBpKyspIHtcbiAgICAgICAgY2hpbGROb2RlID0gY2hpbGROb2Rlc1tpXTtcbiAgICAgICAgaWYgKGNoaWxkTm9kZS5ub2RlVHlwZSA9PT0gMSAvKiBFbGVtZW50Tm9kZSAqLykge1xuICAgICAgICAgICAgaWYgKGNoaWxkTm9kZVsncy1zciddKSB7XG4gICAgICAgICAgICAgICAgLy8gdGhpcyBpcyBhIHNsb3QgZmFsbGJhY2sgbm9kZVxuICAgICAgICAgICAgICAgIC8vIGdldCB0aGUgc2xvdCBuYW1lIGZvciB0aGlzIHNsb3QgcmVmZXJlbmNlIG5vZGVcbiAgICAgICAgICAgICAgICBzbG90TmFtZUF0dHIgPSBjaGlsZE5vZGVbJ3Mtc24nXTtcbiAgICAgICAgICAgICAgICAvLyBieSBkZWZhdWx0IGFsd2F5cyBzaG93IGEgZmFsbGJhY2sgc2xvdCBub2RlXG4gICAgICAgICAgICAgICAgLy8gdGhlbiBoaWRlIGl0IGlmIHRoZXJlIGFyZSBvdGhlciBzbG90cyBpbiB0aGUgbGlnaHQgZG9tXG4gICAgICAgICAgICAgICAgY2hpbGROb2RlLmhpZGRlbiA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBpbGVuOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZVR5cGUgPSBjaGlsZE5vZGVzW2pdLm5vZGVUeXBlO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGROb2Rlc1tqXVsncy1obiddICE9PSBjaGlsZE5vZGVbJ3MtaG4nXSB8fCBzbG90TmFtZUF0dHIgIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIHNpYmxpbmcgbm9kZSBpcyBmcm9tIGEgZGlmZmVyZW50IGNvbXBvbmVudCBPUiBpcyBhIG5hbWVkIGZhbGxiYWNrIHNsb3Qgbm9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGVUeXBlID09PSAxIC8qIEVsZW1lbnROb2RlICovICYmIHNsb3ROYW1lQXR0ciA9PT0gY2hpbGROb2Rlc1tqXS5nZXRBdHRyaWJ1dGUoJ3Nsb3QnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkTm9kZS5oaWRkZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBpcyBhIGRlZmF1bHQgZmFsbGJhY2sgc2xvdCBub2RlXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBhbnkgZWxlbWVudCBvciB0ZXh0IG5vZGUgKHdpdGggY29udGVudClcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNob3VsZCBoaWRlIHRoZSBkZWZhdWx0IGZhbGxiYWNrIHNsb3Qgbm9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGVUeXBlID09PSAxIC8qIEVsZW1lbnROb2RlICovIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKG5vZGVUeXBlID09PSAzIC8qIFRleHROb2RlICovICYmIGNoaWxkTm9kZXNbal0udGV4dENvbnRlbnQudHJpbSgpICE9PSAnJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZE5vZGUuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGtlZXAgZHJpbGxpbmcgZG93blxuICAgICAgICAgICAgdXBkYXRlRmFsbGJhY2tTbG90VmlzaWJpbGl0eShjaGlsZE5vZGUpO1xuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IHJlbG9jYXRlTm9kZXMgPSBbXTtcbmNvbnN0IHJlbG9jYXRlU2xvdENvbnRlbnQgPSAoZWxtKSA9PiB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBwcmVmZXItY29uc3RcbiAgICBsZXQgY2hpbGROb2RlO1xuICAgIGxldCBub2RlO1xuICAgIGxldCBob3N0Q29udGVudE5vZGVzO1xuICAgIGxldCBzbG90TmFtZUF0dHI7XG4gICAgbGV0IHJlbG9jYXRlTm9kZURhdGE7XG4gICAgbGV0IGo7XG4gICAgbGV0IGkgPSAwO1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSBlbG0uY2hpbGROb2RlcztcbiAgICBjb25zdCBpbGVuID0gY2hpbGROb2Rlcy5sZW5ndGg7XG4gICAgZm9yICg7IGkgPCBpbGVuOyBpKyspIHtcbiAgICAgICAgY2hpbGROb2RlID0gY2hpbGROb2Rlc1tpXTtcbiAgICAgICAgaWYgKGNoaWxkTm9kZVsncy1zciddICYmIChub2RlID0gY2hpbGROb2RlWydzLWNyJ10pICYmIG5vZGUucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgLy8gZmlyc3QgZ290IHRoZSBjb250ZW50IHJlZmVyZW5jZSBjb21tZW50IG5vZGVcbiAgICAgICAgICAgIC8vIHRoZW4gd2UgZ290IGl0J3MgcGFyZW50LCB3aGljaCBpcyB3aGVyZSBhbGwgdGhlIGhvc3QgY29udGVudCBpcyBpbiBub3dcbiAgICAgICAgICAgIGhvc3RDb250ZW50Tm9kZXMgPSBub2RlLnBhcmVudE5vZGUuY2hpbGROb2RlcztcbiAgICAgICAgICAgIHNsb3ROYW1lQXR0ciA9IGNoaWxkTm9kZVsncy1zbiddO1xuICAgICAgICAgICAgZm9yIChqID0gaG9zdENvbnRlbnROb2Rlcy5sZW5ndGggLSAxOyBqID49IDA7IGotLSkge1xuICAgICAgICAgICAgICAgIG5vZGUgPSBob3N0Q29udGVudE5vZGVzW2pdO1xuICAgICAgICAgICAgICAgIGlmICghbm9kZVsncy1jbiddICYmICFub2RlWydzLW5yJ10gJiYgbm9kZVsncy1obiddICE9PSBjaGlsZE5vZGVbJ3MtaG4nXSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBsZXQncyBkbyBzb21lIHJlbG9jYXRpbmcgdG8gaXRzIG5ldyBob21lXG4gICAgICAgICAgICAgICAgICAgIC8vIGJ1dCBuZXZlciByZWxvY2F0ZSBhIGNvbnRlbnQgcmVmZXJlbmNlIG5vZGVcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhhdCBpcyBzdXBwb3NlIHRvIGFsd2F5cyByZXByZXNlbnQgdGhlIG9yaWdpbmFsIGNvbnRlbnQgbG9jYXRpb25cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTm9kZUxvY2F0ZWRJblNsb3Qobm9kZSwgc2xvdE5hbWVBdHRyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaXQncyBwb3NzaWJsZSB3ZSd2ZSBhbHJlYWR5IGRlY2lkZWQgdG8gcmVsb2NhdGUgdGhpcyBub2RlXG4gICAgICAgICAgICAgICAgICAgICAgICByZWxvY2F0ZU5vZGVEYXRhID0gcmVsb2NhdGVOb2Rlcy5maW5kKChyKSA9PiByLiRub2RlVG9SZWxvY2F0ZSQgPT09IG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gbWFkZSBzb21lIGNoYW5nZXMgdG8gc2xvdHNcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldCdzIG1ha2Ugc3VyZSB3ZSBhbHNvIGRvdWJsZSBjaGVja1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZmFsbGJhY2tzIGFyZSBjb3JyZWN0bHkgaGlkZGVuIG9yIHNob3duXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVja1Nsb3RGYWxsYmFja1Zpc2liaWxpdHkgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVsncy1zbiddID0gbm9kZVsncy1zbiddIHx8IHNsb3ROYW1lQXR0cjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZWxvY2F0ZU5vZGVEYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcHJldmlvdXNseSB3ZSBuZXZlciBmb3VuZCBhIHNsb3QgaG9tZSBmb3IgdGhpcyBub2RlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gYnV0IHR1cm5zIG91dCB3ZSBkaWQsIHNvIGxldCdzIHJlbWVtYmVyIGl0IG5vd1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbG9jYXRlTm9kZURhdGEuJHNsb3RSZWZOb2RlJCA9IGNoaWxkTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFkZCB0byBvdXIgbGlzdCBvZiBub2RlcyB0byByZWxvY2F0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbG9jYXRlTm9kZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzbG90UmVmTm9kZSQ6IGNoaWxkTm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5vZGVUb1JlbG9jYXRlJDogbm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlWydzLXNyJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxvY2F0ZU5vZGVzLm1hcCgocmVsb2NhdGVOb2RlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc05vZGVMb2NhdGVkSW5TbG90KHJlbG9jYXRlTm9kZS4kbm9kZVRvUmVsb2NhdGUkLCBub2RlWydzLXNuJ10pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxvY2F0ZU5vZGVEYXRhID0gcmVsb2NhdGVOb2Rlcy5maW5kKChyKSA9PiByLiRub2RlVG9SZWxvY2F0ZSQgPT09IG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlbG9jYXRlTm9kZURhdGEgJiYgIXJlbG9jYXRlTm9kZS4kc2xvdFJlZk5vZGUkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsb2NhdGVOb2RlLiRzbG90UmVmTm9kZSQgPSByZWxvY2F0ZU5vZGVEYXRhLiRzbG90UmVmTm9kZSQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghcmVsb2NhdGVOb2Rlcy5zb21lKChyKSA9PiByLiRub2RlVG9SZWxvY2F0ZSQgPT09IG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBzbyBmYXIgdGhpcyBlbGVtZW50IGRvZXMgbm90IGhhdmUgYSBzbG90IGhvbWUsIG5vdCBzZXR0aW5nIHNsb3RSZWZOb2RlIG9uIHB1cnBvc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHdlIG5ldmVyIGZpbmQgYSBob21lIGZvciB0aGlzIGVsZW1lbnQgdGhlbiB3ZSdsbCBuZWVkIHRvIGhpZGUgaXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbG9jYXRlTm9kZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5vZGVUb1JlbG9jYXRlJDogbm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChjaGlsZE5vZGUubm9kZVR5cGUgPT09IDEgLyogRWxlbWVudE5vZGUgKi8pIHtcbiAgICAgICAgICAgIHJlbG9jYXRlU2xvdENvbnRlbnQoY2hpbGROb2RlKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5jb25zdCBpc05vZGVMb2NhdGVkSW5TbG90ID0gKG5vZGVUb1JlbG9jYXRlLCBzbG90TmFtZUF0dHIpID0+IHtcbiAgICBpZiAobm9kZVRvUmVsb2NhdGUubm9kZVR5cGUgPT09IDEgLyogRWxlbWVudE5vZGUgKi8pIHtcbiAgICAgICAgaWYgKG5vZGVUb1JlbG9jYXRlLmdldEF0dHJpYnV0ZSgnc2xvdCcpID09PSBudWxsICYmIHNsb3ROYW1lQXR0ciA9PT0gJycpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChub2RlVG9SZWxvY2F0ZS5nZXRBdHRyaWJ1dGUoJ3Nsb3QnKSA9PT0gc2xvdE5hbWVBdHRyKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChub2RlVG9SZWxvY2F0ZVsncy1zbiddID09PSBzbG90TmFtZUF0dHIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBzbG90TmFtZUF0dHIgPT09ICcnO1xufTtcbmNvbnN0IGNhbGxOb2RlUmVmcyA9ICh2Tm9kZSkgPT4ge1xuICAgIGlmIChCVUlMRC52ZG9tUmVmKSB7XG4gICAgICAgIHZOb2RlLiRhdHRycyQgJiYgdk5vZGUuJGF0dHJzJC5yZWYgJiYgdk5vZGUuJGF0dHJzJC5yZWYobnVsbCk7XG4gICAgICAgIHZOb2RlLiRjaGlsZHJlbiQgJiYgdk5vZGUuJGNoaWxkcmVuJC5tYXAoY2FsbE5vZGVSZWZzKTtcbiAgICB9XG59O1xuY29uc3QgcmVuZGVyVmRvbSA9IChob3N0UmVmLCByZW5kZXJGblJlc3VsdHMpID0+IHtcbiAgICBjb25zdCBob3N0RWxtID0gaG9zdFJlZi4kaG9zdEVsZW1lbnQkO1xuICAgIGNvbnN0IGNtcE1ldGEgPSBob3N0UmVmLiRjbXBNZXRhJDtcbiAgICBjb25zdCBvbGRWTm9kZSA9IGhvc3RSZWYuJHZub2RlJCB8fCBuZXdWTm9kZShudWxsLCBudWxsKTtcbiAgICBjb25zdCByb290Vm5vZGUgPSBpc0hvc3QocmVuZGVyRm5SZXN1bHRzKSA/IHJlbmRlckZuUmVzdWx0cyA6IGgobnVsbCwgbnVsbCwgcmVuZGVyRm5SZXN1bHRzKTtcbiAgICBob3N0VGFnTmFtZSA9IGhvc3RFbG0udGFnTmFtZTtcbiAgICAvLyA8SG9zdD4gcnVudGltZSBjaGVja1xuICAgIGlmIChCVUlMRC5pc0RldiAmJiBBcnJheS5pc0FycmF5KHJlbmRlckZuUmVzdWx0cykgJiYgcmVuZGVyRm5SZXN1bHRzLnNvbWUoaXNIb3N0KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSA8SG9zdD4gbXVzdCBiZSB0aGUgc2luZ2xlIHJvb3QgY29tcG9uZW50LlxuTG9va3MgbGlrZSB0aGUgcmVuZGVyKCkgZnVuY3Rpb24gb2YgXCIke2hvc3RUYWdOYW1lLnRvTG93ZXJDYXNlKCl9XCIgaXMgcmV0dXJuaW5nIGFuIGFycmF5IHRoYXQgY29udGFpbnMgdGhlIDxIb3N0Pi5cblxuVGhlIHJlbmRlcigpIGZ1bmN0aW9uIHNob3VsZCBsb29rIGxpa2UgdGhpcyBpbnN0ZWFkOlxuXG5yZW5kZXIoKSB7XG4gIC8vIERvIG5vdCByZXR1cm4gYW4gYXJyYXlcbiAgcmV0dXJuIChcbiAgICA8SG9zdD57Y29udGVudH08L0hvc3Q+XG4gICk7XG59XG4gIGApO1xuICAgIH1cbiAgICBpZiAoQlVJTEQucmVmbGVjdCAmJiBjbXBNZXRhLiRhdHRyc1RvUmVmbGVjdCQpIHtcbiAgICAgICAgcm9vdFZub2RlLiRhdHRycyQgPSByb290Vm5vZGUuJGF0dHJzJCB8fCB7fTtcbiAgICAgICAgY21wTWV0YS4kYXR0cnNUb1JlZmxlY3QkLm1hcCgoW3Byb3BOYW1lLCBhdHRyaWJ1dGVdKSA9PiAocm9vdFZub2RlLiRhdHRycyRbYXR0cmlidXRlXSA9IGhvc3RFbG1bcHJvcE5hbWVdKSk7XG4gICAgfVxuICAgIHJvb3RWbm9kZS4kdGFnJCA9IG51bGw7XG4gICAgcm9vdFZub2RlLiRmbGFncyQgfD0gNCAvKiBpc0hvc3QgKi87XG4gICAgaG9zdFJlZi4kdm5vZGUkID0gcm9vdFZub2RlO1xuICAgIHJvb3RWbm9kZS4kZWxtJCA9IG9sZFZOb2RlLiRlbG0kID0gKEJVSUxELnNoYWRvd0RvbSA/IGhvc3RFbG0uc2hhZG93Um9vdCB8fCBob3N0RWxtIDogaG9zdEVsbSk7XG4gICAgaWYgKEJVSUxELnNjb3BlZCB8fCBCVUlMRC5zaGFkb3dEb20pIHtcbiAgICAgICAgc2NvcGVJZCA9IGhvc3RFbG1bJ3Mtc2MnXTtcbiAgICB9XG4gICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uKSB7XG4gICAgICAgIGNvbnRlbnRSZWYgPSBob3N0RWxtWydzLWNyJ107XG4gICAgICAgIHVzZU5hdGl2ZVNoYWRvd0RvbSA9IHN1cHBvcnRzU2hhZG93ICYmIChjbXBNZXRhLiRmbGFncyQgJiAxIC8qIHNoYWRvd0RvbUVuY2Fwc3VsYXRpb24gKi8pICE9PSAwO1xuICAgICAgICAvLyBhbHdheXMgcmVzZXRcbiAgICAgICAgY2hlY2tTbG90RmFsbGJhY2tWaXNpYmlsaXR5ID0gZmFsc2U7XG4gICAgfVxuICAgIC8vIHN5bmNocm9ub3VzIHBhdGNoXG4gICAgcGF0Y2gob2xkVk5vZGUsIHJvb3RWbm9kZSk7XG4gICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uKSB7XG4gICAgICAgIC8vIHdoaWxlIHdlJ3JlIG1vdmluZyBub2RlcyBhcm91bmQgZXhpc3Rpbmcgbm9kZXMsIHRlbXBvcmFyaWx5IGRpc2FibGVcbiAgICAgICAgLy8gdGhlIGRpc2Nvbm5lY3RDYWxsYmFjayBmcm9tIHdvcmtpbmdcbiAgICAgICAgcGx0LiRmbGFncyQgfD0gMSAvKiBpc1RtcERpc2Nvbm5lY3RlZCAqLztcbiAgICAgICAgaWYgKGNoZWNrU2xvdFJlbG9jYXRlKSB7XG4gICAgICAgICAgICByZWxvY2F0ZVNsb3RDb250ZW50KHJvb3RWbm9kZS4kZWxtJCk7XG4gICAgICAgICAgICBsZXQgcmVsb2NhdGVEYXRhO1xuICAgICAgICAgICAgbGV0IG5vZGVUb1JlbG9jYXRlO1xuICAgICAgICAgICAgbGV0IG9yZ0xvY2F0aW9uTm9kZTtcbiAgICAgICAgICAgIGxldCBwYXJlbnROb2RlUmVmO1xuICAgICAgICAgICAgbGV0IGluc2VydEJlZm9yZU5vZGU7XG4gICAgICAgICAgICBsZXQgcmVmTm9kZTtcbiAgICAgICAgICAgIGxldCBpID0gMDtcbiAgICAgICAgICAgIGZvciAoOyBpIDwgcmVsb2NhdGVOb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHJlbG9jYXRlRGF0YSA9IHJlbG9jYXRlTm9kZXNbaV07XG4gICAgICAgICAgICAgICAgbm9kZVRvUmVsb2NhdGUgPSByZWxvY2F0ZURhdGEuJG5vZGVUb1JlbG9jYXRlJDtcbiAgICAgICAgICAgICAgICBpZiAoIW5vZGVUb1JlbG9jYXRlWydzLW9sJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gYWRkIGEgcmVmZXJlbmNlIG5vZGUgbWFya2luZyB0aGlzIG5vZGUncyBvcmlnaW5hbCBsb2NhdGlvblxuICAgICAgICAgICAgICAgICAgICAvLyBrZWVwIGEgcmVmZXJlbmNlIHRvIHRoaXMgbm9kZSBmb3IgbGF0ZXIgbG9va3Vwc1xuICAgICAgICAgICAgICAgICAgICBvcmdMb2NhdGlvbk5vZGUgPVxuICAgICAgICAgICAgICAgICAgICAgICAgQlVJTEQuaXNEZWJ1ZyB8fCBCVUlMRC5oeWRyYXRlU2VydmVyU2lkZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gb3JpZ2luYWxMb2NhdGlvbkRlYnVnTm9kZShub2RlVG9SZWxvY2F0ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGRvYy5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgICAgICAgICAgICAgICAgIG9yZ0xvY2F0aW9uTm9kZVsncy1uciddID0gbm9kZVRvUmVsb2NhdGU7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVUb1JlbG9jYXRlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKChub2RlVG9SZWxvY2F0ZVsncy1vbCddID0gb3JnTG9jYXRpb25Ob2RlKSwgbm9kZVRvUmVsb2NhdGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCByZWxvY2F0ZU5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcmVsb2NhdGVEYXRhID0gcmVsb2NhdGVOb2Rlc1tpXTtcbiAgICAgICAgICAgICAgICBub2RlVG9SZWxvY2F0ZSA9IHJlbG9jYXRlRGF0YS4kbm9kZVRvUmVsb2NhdGUkO1xuICAgICAgICAgICAgICAgIGlmIChyZWxvY2F0ZURhdGEuJHNsb3RSZWZOb2RlJCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBieSBkZWZhdWx0IHdlJ3JlIGp1c3QgZ29pbmcgdG8gaW5zZXJ0IGl0IGRpcmVjdGx5XG4gICAgICAgICAgICAgICAgICAgIC8vIGFmdGVyIHRoZSBzbG90IHJlZmVyZW5jZSBub2RlXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGVSZWYgPSByZWxvY2F0ZURhdGEuJHNsb3RSZWZOb2RlJC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICBpbnNlcnRCZWZvcmVOb2RlID0gcmVsb2NhdGVEYXRhLiRzbG90UmVmTm9kZSQubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgIG9yZ0xvY2F0aW9uTm9kZSA9IG5vZGVUb1JlbG9jYXRlWydzLW9sJ107XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICgob3JnTG9jYXRpb25Ob2RlID0gb3JnTG9jYXRpb25Ob2RlLnByZXZpb3VzU2libGluZykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZk5vZGUgPSBvcmdMb2NhdGlvbk5vZGVbJ3MtbnInXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZWZOb2RlICYmIHJlZk5vZGVbJ3Mtc24nXSA9PT0gbm9kZVRvUmVsb2NhdGVbJ3Mtc24nXSAmJiBwYXJlbnROb2RlUmVmID09PSByZWZOb2RlLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZOb2RlID0gcmVmTm9kZS5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJlZk5vZGUgfHwgIXJlZk5vZGVbJ3MtbnInXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnNlcnRCZWZvcmVOb2RlID0gcmVmTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICgoIWluc2VydEJlZm9yZU5vZGUgJiYgcGFyZW50Tm9kZVJlZiAhPT0gbm9kZVRvUmVsb2NhdGUucGFyZW50Tm9kZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVUb1JlbG9jYXRlLm5leHRTaWJsaW5nICE9PSBpbnNlcnRCZWZvcmVOb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSd2ZSBjaGVja2VkIHRoYXQgaXQncyB3b3J0aCB3aGlsZSB0byByZWxvY2F0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2luY2UgdGhhdCB0aGUgbm9kZSB0byByZWxvY2F0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaGFzIGEgZGlmZmVyZW50IG5leHQgc2libGluZyBvciBwYXJlbnQgcmVsb2NhdGVkXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZVRvUmVsb2NhdGUgIT09IGluc2VydEJlZm9yZU5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW5vZGVUb1JlbG9jYXRlWydzLWhuJ10gJiYgbm9kZVRvUmVsb2NhdGVbJ3Mtb2wnXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBwcm9iYWJseSBhIGNvbXBvbmVudCBpbiB0aGUgaW5kZXguaHRtbCB0aGF0IGRvZXNuJ3QgaGF2ZSBpdCdzIGhvc3RuYW1lIHNldFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlVG9SZWxvY2F0ZVsncy1obiddID0gbm9kZVRvUmVsb2NhdGVbJ3Mtb2wnXS5wYXJlbnROb2RlLm5vZGVOYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBhZGQgaXQgYmFjayB0byB0aGUgZG9tIGJ1dCBpbiBpdHMgbmV3IGhvbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnROb2RlUmVmLmluc2VydEJlZm9yZShub2RlVG9SZWxvY2F0ZSwgaW5zZXJ0QmVmb3JlTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgbm9kZSBkb2Vzbid0IGhhdmUgYSBzbG90IGhvbWUgdG8gZ28gdG8sIHNvIGxldCdzIGhpZGUgaXRcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGVUb1JlbG9jYXRlLm5vZGVUeXBlID09PSAxIC8qIEVsZW1lbnROb2RlICovKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlVG9SZWxvY2F0ZS5oaWRkZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChjaGVja1Nsb3RGYWxsYmFja1Zpc2liaWxpdHkpIHtcbiAgICAgICAgICAgIHVwZGF0ZUZhbGxiYWNrU2xvdFZpc2liaWxpdHkocm9vdFZub2RlLiRlbG0kKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBkb25lIG1vdmluZyBub2RlcyBhcm91bmRcbiAgICAgICAgLy8gYWxsb3cgdGhlIGRpc2Nvbm5lY3QgY2FsbGJhY2sgdG8gd29yayBhZ2FpblxuICAgICAgICBwbHQuJGZsYWdzJCAmPSB+MSAvKiBpc1RtcERpc2Nvbm5lY3RlZCAqLztcbiAgICAgICAgLy8gYWx3YXlzIHJlc2V0XG4gICAgICAgIHJlbG9jYXRlTm9kZXMubGVuZ3RoID0gMDtcbiAgICB9XG59O1xuLy8gc2xvdCBjb21tZW50IGRlYnVnIG5vZGVzIG9ubHkgY3JlYXRlZCB3aXRoIHRoZSBgLS1kZWJ1Z2AgZmxhZ1xuLy8gb3RoZXJ3aXNlIHRoZXNlIG5vZGVzIGFyZSB0ZXh0IG5vZGVzIHcvb3V0IGNvbnRlbnRcbmNvbnN0IHNsb3RSZWZlcmVuY2VEZWJ1Z05vZGUgPSAoc2xvdFZOb2RlKSA9PiBkb2MuY3JlYXRlQ29tbWVudChgPHNsb3Qke3Nsb3RWTm9kZS4kbmFtZSQgPyAnIG5hbWU9XCInICsgc2xvdFZOb2RlLiRuYW1lJCArICdcIicgOiAnJ30+IChob3N0PSR7aG9zdFRhZ05hbWUudG9Mb3dlckNhc2UoKX0pYCk7XG5jb25zdCBvcmlnaW5hbExvY2F0aW9uRGVidWdOb2RlID0gKG5vZGVUb1JlbG9jYXRlKSA9PiBkb2MuY3JlYXRlQ29tbWVudChgb3JnLWxvY2F0aW9uIGZvciBgICtcbiAgICAobm9kZVRvUmVsb2NhdGUubG9jYWxOYW1lXG4gICAgICAgID8gYDwke25vZGVUb1JlbG9jYXRlLmxvY2FsTmFtZX0+IChob3N0PSR7bm9kZVRvUmVsb2NhdGVbJ3MtaG4nXX0pYFxuICAgICAgICA6IGBbJHtub2RlVG9SZWxvY2F0ZS50ZXh0Q29udGVudH1dYCkpO1xuY29uc3QgZ2V0RWxlbWVudCA9IChyZWYpID0+IChCVUlMRC5sYXp5TG9hZCA/IGdldEhvc3RSZWYocmVmKS4kaG9zdEVsZW1lbnQkIDogcmVmKTtcbmNvbnN0IGNyZWF0ZUV2ZW50ID0gKHJlZiwgbmFtZSwgZmxhZ3MpID0+IHtcbiAgICBjb25zdCBlbG0gPSBnZXRFbGVtZW50KHJlZik7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZW1pdDogKGRldGFpbCkgPT4ge1xuICAgICAgICAgICAgaWYgKEJVSUxELmlzRGV2ICYmICFlbG0uaXNDb25uZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlRGV2V2FybihgVGhlIFwiJHtuYW1lfVwiIGV2ZW50IHdhcyBlbWl0dGVkLCBidXQgdGhlIGRpc3BhdGNoZXIgbm9kZSBpcyBubyBsb25nZXIgY29ubmVjdGVkIHRvIHRoZSBkb20uYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZW1pdEV2ZW50KGVsbSwgbmFtZSwge1xuICAgICAgICAgICAgICAgIGJ1YmJsZXM6ICEhKGZsYWdzICYgNCAvKiBCdWJibGVzICovKSxcbiAgICAgICAgICAgICAgICBjb21wb3NlZDogISEoZmxhZ3MgJiAyIC8qIENvbXBvc2VkICovKSxcbiAgICAgICAgICAgICAgICBjYW5jZWxhYmxlOiAhIShmbGFncyAmIDEgLyogQ2FuY2VsbGFibGUgKi8pLFxuICAgICAgICAgICAgICAgIGRldGFpbCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgIH07XG59O1xuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gY3JlYXRlICYgZGlzcGF0Y2ggYSBjdXN0b20gRXZlbnQgb24gYSBwcm92aWRlZCB0YXJnZXRcbiAqIEBwYXJhbSBlbG0gdGhlIHRhcmdldCBvZiB0aGUgRXZlbnRcbiAqIEBwYXJhbSBuYW1lIHRoZSBuYW1lIHRvIGdpdmUgdGhlIGN1c3RvbSBFdmVudFxuICogQHBhcmFtIG9wdHMgb3B0aW9ucyBmb3IgY29uZmlndXJpbmcgYSBjdXN0b20gRXZlbnRcbiAqIEByZXR1cm5zIHRoZSBjdXN0b20gRXZlbnRcbiAqL1xuY29uc3QgZW1pdEV2ZW50ID0gKGVsbSwgbmFtZSwgb3B0cykgPT4ge1xuICAgIGNvbnN0IGV2ID0gcGx0LmNlKG5hbWUsIG9wdHMpO1xuICAgIGVsbS5kaXNwYXRjaEV2ZW50KGV2KTtcbiAgICByZXR1cm4gZXY7XG59O1xuY29uc3QgYXR0YWNoVG9BbmNlc3RvciA9IChob3N0UmVmLCBhbmNlc3RvckNvbXBvbmVudCkgPT4ge1xuICAgIGlmIChCVUlMRC5hc3luY0xvYWRpbmcgJiYgYW5jZXN0b3JDb21wb25lbnQgJiYgIWhvc3RSZWYuJG9uUmVuZGVyUmVzb2x2ZSQgJiYgYW5jZXN0b3JDb21wb25lbnRbJ3MtcCddKSB7XG4gICAgICAgIGFuY2VzdG9yQ29tcG9uZW50WydzLXAnXS5wdXNoKG5ldyBQcm9taXNlKChyKSA9PiAoaG9zdFJlZi4kb25SZW5kZXJSZXNvbHZlJCA9IHIpKSk7XG4gICAgfVxufTtcbmNvbnN0IHNjaGVkdWxlVXBkYXRlID0gKGhvc3RSZWYsIGlzSW5pdGlhbExvYWQpID0+IHtcbiAgICBpZiAoQlVJTEQudGFza1F1ZXVlICYmIEJVSUxELnVwZGF0YWJsZSkge1xuICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMTYgLyogaXNRdWV1ZWRGb3JVcGRhdGUgKi87XG4gICAgfVxuICAgIGlmIChCVUlMRC5hc3luY0xvYWRpbmcgJiYgaG9zdFJlZi4kZmxhZ3MkICYgNCAvKiBpc1dhaXRpbmdGb3JDaGlsZHJlbiAqLykge1xuICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gNTEyIC8qIG5lZWRzUmVyZW5kZXIgKi87XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgYXR0YWNoVG9BbmNlc3Rvcihob3N0UmVmLCBob3N0UmVmLiRhbmNlc3RvckNvbXBvbmVudCQpO1xuICAgIC8vIHRoZXJlIGlzIG5vIGFuY2VzdG9yIGNvbXBvbmVudCBvciB0aGUgYW5jZXN0b3IgY29tcG9uZW50XG4gICAgLy8gaGFzIGFscmVhZHkgZmlyZWQgb2ZmIGl0cyBsaWZlY3ljbGUgdXBkYXRlIHRoZW5cbiAgICAvLyBmaXJlIG9mZiB0aGUgaW5pdGlhbCB1cGRhdGVcbiAgICBjb25zdCBkaXNwYXRjaCA9ICgpID0+IGRpc3BhdGNoSG9va3MoaG9zdFJlZiwgaXNJbml0aWFsTG9hZCk7XG4gICAgcmV0dXJuIEJVSUxELnRhc2tRdWV1ZSA/IHdyaXRlVGFzayhkaXNwYXRjaCkgOiBkaXNwYXRjaCgpO1xufTtcbmNvbnN0IGRpc3BhdGNoSG9va3MgPSAoaG9zdFJlZiwgaXNJbml0aWFsTG9hZCkgPT4ge1xuICAgIGNvbnN0IGVsbSA9IGhvc3RSZWYuJGhvc3RFbGVtZW50JDtcbiAgICBjb25zdCBlbmRTY2hlZHVsZSA9IGNyZWF0ZVRpbWUoJ3NjaGVkdWxlVXBkYXRlJywgaG9zdFJlZi4kY21wTWV0YSQuJHRhZ05hbWUkKTtcbiAgICBjb25zdCBpbnN0YW5jZSA9IEJVSUxELmxhenlMb2FkID8gaG9zdFJlZi4kbGF6eUluc3RhbmNlJCA6IGVsbTtcbiAgICBsZXQgcHJvbWlzZTtcbiAgICBpZiAoaXNJbml0aWFsTG9hZCkge1xuICAgICAgICBpZiAoQlVJTEQubGF6eUxvYWQgJiYgQlVJTEQuaG9zdExpc3RlbmVyKSB7XG4gICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMjU2IC8qIGlzTGlzdGVuUmVhZHkgKi87XG4gICAgICAgICAgICBpZiAoaG9zdFJlZi4kcXVldWVkTGlzdGVuZXJzJCkge1xuICAgICAgICAgICAgICAgIGhvc3RSZWYuJHF1ZXVlZExpc3RlbmVycyQubWFwKChbbWV0aG9kTmFtZSwgZXZlbnRdKSA9PiBzYWZlQ2FsbChpbnN0YW5jZSwgbWV0aG9kTmFtZSwgZXZlbnQpKTtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRxdWV1ZWRMaXN0ZW5lcnMkID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbWl0TGlmZWN5Y2xlRXZlbnQoZWxtLCAnY29tcG9uZW50V2lsbExvYWQnKTtcbiAgICAgICAgaWYgKEJVSUxELmNtcFdpbGxMb2FkKSB7XG4gICAgICAgICAgICBwcm9taXNlID0gc2FmZUNhbGwoaW5zdGFuY2UsICdjb21wb25lbnRXaWxsTG9hZCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBlbWl0TGlmZWN5Y2xlRXZlbnQoZWxtLCAnY29tcG9uZW50V2lsbFVwZGF0ZScpO1xuICAgICAgICBpZiAoQlVJTEQuY21wV2lsbFVwZGF0ZSkge1xuICAgICAgICAgICAgcHJvbWlzZSA9IHNhZmVDYWxsKGluc3RhbmNlLCAnY29tcG9uZW50V2lsbFVwZGF0ZScpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVtaXRMaWZlY3ljbGVFdmVudChlbG0sICdjb21wb25lbnRXaWxsUmVuZGVyJyk7XG4gICAgaWYgKEJVSUxELmNtcFdpbGxSZW5kZXIpIHtcbiAgICAgICAgcHJvbWlzZSA9IHRoZW4ocHJvbWlzZSwgKCkgPT4gc2FmZUNhbGwoaW5zdGFuY2UsICdjb21wb25lbnRXaWxsUmVuZGVyJykpO1xuICAgIH1cbiAgICBlbmRTY2hlZHVsZSgpO1xuICAgIHJldHVybiB0aGVuKHByb21pc2UsICgpID0+IHVwZGF0ZUNvbXBvbmVudChob3N0UmVmLCBpbnN0YW5jZSwgaXNJbml0aWFsTG9hZCkpO1xufTtcbmNvbnN0IHVwZGF0ZUNvbXBvbmVudCA9IGFzeW5jIChob3N0UmVmLCBpbnN0YW5jZSwgaXNJbml0aWFsTG9hZCkgPT4ge1xuICAgIC8vIHVwZGF0ZUNvbXBvbmVudFxuICAgIGNvbnN0IGVsbSA9IGhvc3RSZWYuJGhvc3RFbGVtZW50JDtcbiAgICBjb25zdCBlbmRVcGRhdGUgPSBjcmVhdGVUaW1lKCd1cGRhdGUnLCBob3N0UmVmLiRjbXBNZXRhJC4kdGFnTmFtZSQpO1xuICAgIGNvbnN0IHJjID0gZWxtWydzLXJjJ107XG4gICAgaWYgKEJVSUxELnN0eWxlICYmIGlzSW5pdGlhbExvYWQpIHtcbiAgICAgICAgLy8gRE9NIFdSSVRFIVxuICAgICAgICBhdHRhY2hTdHlsZXMoaG9zdFJlZik7XG4gICAgfVxuICAgIGNvbnN0IGVuZFJlbmRlciA9IGNyZWF0ZVRpbWUoJ3JlbmRlcicsIGhvc3RSZWYuJGNtcE1ldGEkLiR0YWdOYW1lJCk7XG4gICAgaWYgKEJVSUxELmlzRGV2KSB7XG4gICAgICAgIGhvc3RSZWYuJGZsYWdzJCB8PSAxMDI0IC8qIGRldk9uUmVuZGVyICovO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUpIHtcbiAgICAgICAgYXdhaXQgY2FsbFJlbmRlcihob3N0UmVmLCBpbnN0YW5jZSwgZWxtKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNhbGxSZW5kZXIoaG9zdFJlZiwgaW5zdGFuY2UsIGVsbSk7XG4gICAgfVxuICAgIGlmIChCVUlMRC5jc3NWYXJTaGltICYmIHBsdC4kY3NzU2hpbSQpIHtcbiAgICAgICAgcGx0LiRjc3NTaGltJC51cGRhdGVIb3N0KGVsbSk7XG4gICAgfVxuICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICBob3N0UmVmLiRyZW5kZXJDb3VudCQrKztcbiAgICAgICAgaG9zdFJlZi4kZmxhZ3MkICY9IH4xMDI0IC8qIGRldk9uUmVuZGVyICovO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIG1hbnVhbGx5IGNvbm5lY3RlZCBjaGlsZCBjb21wb25lbnRzIGR1cmluZyBzZXJ2ZXItc2lkZSBoeWRyYXRlXG4gICAgICAgICAgICBzZXJ2ZXJTaWRlQ29ubmVjdGVkKGVsbSk7XG4gICAgICAgICAgICBpZiAoaXNJbml0aWFsTG9hZCkge1xuICAgICAgICAgICAgICAgIC8vIHVzaW5nIG9ubHkgZHVyaW5nIHNlcnZlci1zaWRlIGh5ZHJhdGVcbiAgICAgICAgICAgICAgICBpZiAoaG9zdFJlZi4kY21wTWV0YSQuJGZsYWdzJCAmIDEgLyogc2hhZG93RG9tRW5jYXBzdWxhdGlvbiAqLykge1xuICAgICAgICAgICAgICAgICAgICBlbG1bJ3MtZW4nXSA9ICcnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChob3N0UmVmLiRjbXBNZXRhJC4kZmxhZ3MkICYgMiAvKiBzY29wZWRDc3NFbmNhcHN1bGF0aW9uICovKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsbVsncy1lbiddID0gJ2MnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZUVycm9yKGUsIGVsbSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKEJVSUxELmFzeW5jTG9hZGluZyAmJiByYykge1xuICAgICAgICAvLyBvaywgc28gdHVybnMgb3V0IHRoZXJlIGFyZSBzb21lIGNoaWxkIGhvc3QgZWxlbWVudHNcbiAgICAgICAgLy8gd2FpdGluZyBvbiB0aGlzIHBhcmVudCBlbGVtZW50IHRvIGxvYWRcbiAgICAgICAgLy8gbGV0J3MgZmlyZSBvZmYgYWxsIHVwZGF0ZSBjYWxsYmFja3Mgd2FpdGluZ1xuICAgICAgICByYy5tYXAoKGNiKSA9PiBjYigpKTtcbiAgICAgICAgZWxtWydzLXJjJ10gPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGVuZFJlbmRlcigpO1xuICAgIGVuZFVwZGF0ZSgpO1xuICAgIGlmIChCVUlMRC5hc3luY0xvYWRpbmcpIHtcbiAgICAgICAgY29uc3QgY2hpbGRyZW5Qcm9taXNlcyA9IGVsbVsncy1wJ107XG4gICAgICAgIGNvbnN0IHBvc3RVcGRhdGUgPSAoKSA9PiBwb3N0VXBkYXRlQ29tcG9uZW50KGhvc3RSZWYpO1xuICAgICAgICBpZiAoY2hpbGRyZW5Qcm9taXNlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHBvc3RVcGRhdGUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIFByb21pc2UuYWxsKGNoaWxkcmVuUHJvbWlzZXMpLnRoZW4ocG9zdFVwZGF0ZSk7XG4gICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gNCAvKiBpc1dhaXRpbmdGb3JDaGlsZHJlbiAqLztcbiAgICAgICAgICAgIGNoaWxkcmVuUHJvbWlzZXMubGVuZ3RoID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcG9zdFVwZGF0ZUNvbXBvbmVudChob3N0UmVmKTtcbiAgICB9XG59O1xuY29uc3QgY2FsbFJlbmRlciA9IChob3N0UmVmLCBpbnN0YW5jZSwgZWxtKSA9PiB7XG4gICAgLy8gaW4gb3JkZXIgZm9yIGJ1bmRsZXJzIHRvIGNvcnJlY3RseSB0cmVlc2hha2UgdGhlIEJVSUxEIG9iamVjdFxuICAgIC8vIHdlIG5lZWQgdG8gZW5zdXJlIEJVSUxEIGlzIG5vdCBkZW9wdGltaXplZCB3aXRoaW4gYSB0cnkvY2F0Y2hcbiAgICAvLyBodHRwczovL3JvbGx1cGpzLm9yZy9ndWlkZS9lbi8jdHJlZXNoYWtlIHRyeUNhdGNoRGVvcHRpbWl6YXRpb25cbiAgICBjb25zdCBhbGxSZW5kZXJGbiA9IEJVSUxELmFsbFJlbmRlckZuID8gdHJ1ZSA6IGZhbHNlO1xuICAgIGNvbnN0IGxhenlMb2FkID0gQlVJTEQubGF6eUxvYWQgPyB0cnVlIDogZmFsc2U7XG4gICAgY29uc3QgdGFza1F1ZXVlID0gQlVJTEQudGFza1F1ZXVlID8gdHJ1ZSA6IGZhbHNlO1xuICAgIGNvbnN0IHVwZGF0YWJsZSA9IEJVSUxELnVwZGF0YWJsZSA/IHRydWUgOiBmYWxzZTtcbiAgICB0cnkge1xuICAgICAgICByZW5kZXJpbmdSZWYgPSBpbnN0YW5jZTtcbiAgICAgICAgaW5zdGFuY2UgPSBhbGxSZW5kZXJGbiA/IGluc3RhbmNlLnJlbmRlcigpIDogaW5zdGFuY2UucmVuZGVyICYmIGluc3RhbmNlLnJlbmRlcigpO1xuICAgICAgICBpZiAodXBkYXRhYmxlICYmIHRhc2tRdWV1ZSkge1xuICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkICY9IH4xNiAvKiBpc1F1ZXVlZEZvclVwZGF0ZSAqLztcbiAgICAgICAgfVxuICAgICAgICBpZiAodXBkYXRhYmxlIHx8IGxhenlMb2FkKSB7XG4gICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMiAvKiBoYXNSZW5kZXJlZCAqLztcbiAgICAgICAgfVxuICAgICAgICBpZiAoQlVJTEQuaGFzUmVuZGVyRm4gfHwgQlVJTEQucmVmbGVjdCkge1xuICAgICAgICAgICAgaWYgKEJVSUxELnZkb21SZW5kZXIgfHwgQlVJTEQucmVmbGVjdCkge1xuICAgICAgICAgICAgICAgIC8vIGxvb2tzIGxpa2Ugd2UndmUgZ290IGNoaWxkIG5vZGVzIHRvIHJlbmRlciBpbnRvIHRoaXMgaG9zdCBlbGVtZW50XG4gICAgICAgICAgICAgICAgLy8gb3Igd2UgbmVlZCB0byB1cGRhdGUgdGhlIGNzcyBjbGFzcy9hdHRycyBvbiB0aGUgaG9zdCBlbGVtZW50XG4gICAgICAgICAgICAgICAgLy8gRE9NIFdSSVRFIVxuICAgICAgICAgICAgICAgIGlmIChCVUlMRC5oeWRyYXRlU2VydmVyU2lkZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGluc3RhbmNlKS50aGVuKCh2YWx1ZSkgPT4gcmVuZGVyVmRvbShob3N0UmVmLCB2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyVmRvbShob3N0UmVmLCBpbnN0YW5jZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZWxtLnRleHRDb250ZW50ID0gaW5zdGFuY2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZUVycm9yKGUsIGhvc3RSZWYuJGhvc3RFbGVtZW50JCk7XG4gICAgfVxuICAgIHJlbmRlcmluZ1JlZiA9IG51bGw7XG4gICAgcmV0dXJuIG51bGw7XG59O1xuY29uc3QgZ2V0UmVuZGVyaW5nUmVmID0gKCkgPT4gcmVuZGVyaW5nUmVmO1xuY29uc3QgcG9zdFVwZGF0ZUNvbXBvbmVudCA9IChob3N0UmVmKSA9PiB7XG4gICAgY29uc3QgdGFnTmFtZSA9IGhvc3RSZWYuJGNtcE1ldGEkLiR0YWdOYW1lJDtcbiAgICBjb25zdCBlbG0gPSBob3N0UmVmLiRob3N0RWxlbWVudCQ7XG4gICAgY29uc3QgZW5kUG9zdFVwZGF0ZSA9IGNyZWF0ZVRpbWUoJ3Bvc3RVcGRhdGUnLCB0YWdOYW1lKTtcbiAgICBjb25zdCBpbnN0YW5jZSA9IEJVSUxELmxhenlMb2FkID8gaG9zdFJlZi4kbGF6eUluc3RhbmNlJCA6IGVsbTtcbiAgICBjb25zdCBhbmNlc3RvckNvbXBvbmVudCA9IGhvc3RSZWYuJGFuY2VzdG9yQ29tcG9uZW50JDtcbiAgICBpZiAoQlVJTEQuY21wRGlkUmVuZGVyKSB7XG4gICAgICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDEwMjQgLyogZGV2T25SZW5kZXIgKi87XG4gICAgICAgIH1cbiAgICAgICAgc2FmZUNhbGwoaW5zdGFuY2UsICdjb21wb25lbnREaWRSZW5kZXInKTtcbiAgICAgICAgaWYgKEJVSUxELmlzRGV2KSB7XG4gICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgJj0gfjEwMjQgLyogZGV2T25SZW5kZXIgKi87XG4gICAgICAgIH1cbiAgICB9XG4gICAgZW1pdExpZmVjeWNsZUV2ZW50KGVsbSwgJ2NvbXBvbmVudERpZFJlbmRlcicpO1xuICAgIGlmICghKGhvc3RSZWYuJGZsYWdzJCAmIDY0IC8qIGhhc0xvYWRlZENvbXBvbmVudCAqLykpIHtcbiAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDY0IC8qIGhhc0xvYWRlZENvbXBvbmVudCAqLztcbiAgICAgICAgaWYgKEJVSUxELmFzeW5jTG9hZGluZyAmJiBCVUlMRC5jc3NBbm5vdGF0aW9ucykge1xuICAgICAgICAgICAgLy8gRE9NIFdSSVRFIVxuICAgICAgICAgICAgYWRkSHlkcmF0ZWRGbGFnKGVsbSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELmNtcERpZExvYWQpIHtcbiAgICAgICAgICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICAgICAgICAgIGhvc3RSZWYuJGZsYWdzJCB8PSAyMDQ4IC8qIGRldk9uRGlkTG9hZCAqLztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNhZmVDYWxsKGluc3RhbmNlLCAnY29tcG9uZW50RGlkTG9hZCcpO1xuICAgICAgICAgICAgaWYgKEJVSUxELmlzRGV2KSB7XG4gICAgICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkICY9IH4yMDQ4IC8qIGRldk9uRGlkTG9hZCAqLztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbWl0TGlmZWN5Y2xlRXZlbnQoZWxtLCAnY29tcG9uZW50RGlkTG9hZCcpO1xuICAgICAgICBlbmRQb3N0VXBkYXRlKCk7XG4gICAgICAgIGlmIChCVUlMRC5hc3luY0xvYWRpbmcpIHtcbiAgICAgICAgICAgIGhvc3RSZWYuJG9uUmVhZHlSZXNvbHZlJChlbG0pO1xuICAgICAgICAgICAgaWYgKCFhbmNlc3RvckNvbXBvbmVudCkge1xuICAgICAgICAgICAgICAgIGFwcERpZExvYWQodGFnTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChCVUlMRC5jbXBEaWRVcGRhdGUpIHtcbiAgICAgICAgICAgIC8vIHdlJ3ZlIGFscmVhZHkgbG9hZGVkIHRoaXMgY29tcG9uZW50XG4gICAgICAgICAgICAvLyBmaXJlIG9mZiB0aGUgdXNlcidzIGNvbXBvbmVudERpZFVwZGF0ZSBtZXRob2QgKGlmIG9uZSB3YXMgcHJvdmlkZWQpXG4gICAgICAgICAgICAvLyBjb21wb25lbnREaWRVcGRhdGUgcnVucyBBRlRFUiByZW5kZXIoKSBoYXMgYmVlbiBjYWxsZWRcbiAgICAgICAgICAgIC8vIGFuZCBhbGwgY2hpbGQgY29tcG9uZW50cyBoYXZlIGZpbmlzaGVkIHVwZGF0aW5nXG4gICAgICAgICAgICBpZiAoQlVJTEQuaXNEZXYpIHtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMTAyNCAvKiBkZXZPblJlbmRlciAqLztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNhZmVDYWxsKGluc3RhbmNlLCAnY29tcG9uZW50RGlkVXBkYXRlJyk7XG4gICAgICAgICAgICBpZiAoQlVJTEQuaXNEZXYpIHtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgJj0gfjEwMjQgLyogZGV2T25SZW5kZXIgKi87XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZW1pdExpZmVjeWNsZUV2ZW50KGVsbSwgJ2NvbXBvbmVudERpZFVwZGF0ZScpO1xuICAgICAgICBlbmRQb3N0VXBkYXRlKCk7XG4gICAgfVxuICAgIGlmIChCVUlMRC5ob3RNb2R1bGVSZXBsYWNlbWVudCkge1xuICAgICAgICBlbG1bJ3MtaG1yLWxvYWQnXSAmJiBlbG1bJ3MtaG1yLWxvYWQnXSgpO1xuICAgIH1cbiAgICBpZiAoQlVJTEQubWV0aG9kICYmIEJVSUxELmxhenlMb2FkKSB7XG4gICAgICAgIGhvc3RSZWYuJG9uSW5zdGFuY2VSZXNvbHZlJChlbG0pO1xuICAgIH1cbiAgICAvLyBsb2FkIGV2ZW50cyBmaXJlIGZyb20gYm90dG9tIHRvIHRvcFxuICAgIC8vIHRoZSBkZWVwZXN0IGVsZW1lbnRzIGxvYWQgZmlyc3QgdGhlbiBidWJibGVzIHVwXG4gICAgaWYgKEJVSUxELmFzeW5jTG9hZGluZykge1xuICAgICAgICBpZiAoaG9zdFJlZi4kb25SZW5kZXJSZXNvbHZlJCkge1xuICAgICAgICAgICAgaG9zdFJlZi4kb25SZW5kZXJSZXNvbHZlJCgpO1xuICAgICAgICAgICAgaG9zdFJlZi4kb25SZW5kZXJSZXNvbHZlJCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaG9zdFJlZi4kZmxhZ3MkICYgNTEyIC8qIG5lZWRzUmVyZW5kZXIgKi8pIHtcbiAgICAgICAgICAgIG5leHRUaWNrKCgpID0+IHNjaGVkdWxlVXBkYXRlKGhvc3RSZWYsIGZhbHNlKSk7XG4gICAgICAgIH1cbiAgICAgICAgaG9zdFJlZi4kZmxhZ3MkICY9IH4oNCAvKiBpc1dhaXRpbmdGb3JDaGlsZHJlbiAqLyB8IDUxMiAvKiBuZWVkc1JlcmVuZGVyICovKTtcbiAgICB9XG4gICAgLy8gKCDigKJf4oCiKVxuICAgIC8vICgg4oCiX+KAoik+4oyQ4pagLeKWoFxuICAgIC8vICjijJDilqBf4pagKVxufTtcbmNvbnN0IGZvcmNlVXBkYXRlID0gKHJlZikgPT4ge1xuICAgIGlmIChCVUlMRC51cGRhdGFibGUpIHtcbiAgICAgICAgY29uc3QgaG9zdFJlZiA9IGdldEhvc3RSZWYocmVmKTtcbiAgICAgICAgY29uc3QgaXNDb25uZWN0ZWQgPSBob3N0UmVmLiRob3N0RWxlbWVudCQuaXNDb25uZWN0ZWQ7XG4gICAgICAgIGlmIChpc0Nvbm5lY3RlZCAmJlxuICAgICAgICAgICAgKGhvc3RSZWYuJGZsYWdzJCAmICgyIC8qIGhhc1JlbmRlcmVkICovIHwgMTYgLyogaXNRdWV1ZWRGb3JVcGRhdGUgKi8pKSA9PT0gMiAvKiBoYXNSZW5kZXJlZCAqLykge1xuICAgICAgICAgICAgc2NoZWR1bGVVcGRhdGUoaG9zdFJlZiwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFJldHVybnMgXCJ0cnVlXCIgd2hlbiB0aGUgZm9yY2VkIHVwZGF0ZSB3YXMgc3VjY2Vzc2Z1bGx5IHNjaGVkdWxlZFxuICAgICAgICByZXR1cm4gaXNDb25uZWN0ZWQ7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG5jb25zdCBhcHBEaWRMb2FkID0gKHdobykgPT4ge1xuICAgIC8vIG9uIGFwcGxvYWRcbiAgICAvLyB3ZSBoYXZlIGZpbmlzaCB0aGUgZmlyc3QgYmlnIGluaXRpYWwgcmVuZGVyXG4gICAgaWYgKEJVSUxELmNzc0Fubm90YXRpb25zKSB7XG4gICAgICAgIGFkZEh5ZHJhdGVkRmxhZyhkb2MuZG9jdW1lbnRFbGVtZW50KTtcbiAgICB9XG4gICAgaWYgKEJVSUxELmFzeW5jUXVldWUpIHtcbiAgICAgICAgcGx0LiRmbGFncyQgfD0gMiAvKiBhcHBMb2FkZWQgKi87XG4gICAgfVxuICAgIG5leHRUaWNrKCgpID0+IGVtaXRFdmVudCh3aW4sICdhcHBsb2FkJywgeyBkZXRhaWw6IHsgbmFtZXNwYWNlOiBOQU1FU1BBQ0UgfSB9KSk7XG4gICAgaWYgKEJVSUxELnByb2ZpbGUgJiYgcGVyZm9ybWFuY2UubWVhc3VyZSkge1xuICAgICAgICBwZXJmb3JtYW5jZS5tZWFzdXJlKGBbU3RlbmNpbF0gJHtOQU1FU1BBQ0V9IGluaXRpYWwgbG9hZCAoYnkgJHt3aG99KWAsICdzdDphcHA6c3RhcnQnKTtcbiAgICB9XG59O1xuY29uc3Qgc2FmZUNhbGwgPSAoaW5zdGFuY2UsIG1ldGhvZCwgYXJnKSA9PiB7XG4gICAgaWYgKGluc3RhbmNlICYmIGluc3RhbmNlW21ldGhvZF0pIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBpbnN0YW5jZVttZXRob2RdKGFyZyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGVFcnJvcihlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbmNvbnN0IHRoZW4gPSAocHJvbWlzZSwgdGhlbkZuKSA9PiB7XG4gICAgcmV0dXJuIHByb21pc2UgJiYgcHJvbWlzZS50aGVuID8gcHJvbWlzZS50aGVuKHRoZW5GbikgOiB0aGVuRm4oKTtcbn07XG5jb25zdCBlbWl0TGlmZWN5Y2xlRXZlbnQgPSAoZWxtLCBsaWZlY3ljbGVOYW1lKSA9PiB7XG4gICAgaWYgKEJVSUxELmxpZmVjeWNsZURPTUV2ZW50cykge1xuICAgICAgICBlbWl0RXZlbnQoZWxtLCAnc3RlbmNpbF8nICsgbGlmZWN5Y2xlTmFtZSwge1xuICAgICAgICAgICAgYnViYmxlczogdHJ1ZSxcbiAgICAgICAgICAgIGNvbXBvc2VkOiB0cnVlLFxuICAgICAgICAgICAgZGV0YWlsOiB7XG4gICAgICAgICAgICAgICAgbmFtZXNwYWNlOiBOQU1FU1BBQ0UsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG59O1xuY29uc3QgYWRkSHlkcmF0ZWRGbGFnID0gKGVsbSkgPT4gQlVJTEQuaHlkcmF0ZWRDbGFzc1xuICAgID8gZWxtLmNsYXNzTGlzdC5hZGQoJ2h5ZHJhdGVkJylcbiAgICA6IEJVSUxELmh5ZHJhdGVkQXR0cmlidXRlXG4gICAgICAgID8gZWxtLnNldEF0dHJpYnV0ZSgnaHlkcmF0ZWQnLCAnJylcbiAgICAgICAgOiB1bmRlZmluZWQ7XG5jb25zdCBzZXJ2ZXJTaWRlQ29ubmVjdGVkID0gKGVsbSkgPT4ge1xuICAgIGNvbnN0IGNoaWxkcmVuID0gZWxtLmNoaWxkcmVuO1xuICAgIGlmIChjaGlsZHJlbiAhPSBudWxsKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBpaSA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IGlpOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkRWxtID0gY2hpbGRyZW5baV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNoaWxkRWxtLmNvbm5lY3RlZENhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgY2hpbGRFbG0uY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlcnZlclNpZGVDb25uZWN0ZWQoY2hpbGRFbG0pO1xuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IGluaXRpYWxpemVDbGllbnRIeWRyYXRlID0gKGhvc3RFbG0sIHRhZ05hbWUsIGhvc3RJZCwgaG9zdFJlZikgPT4ge1xuICAgIGNvbnN0IGVuZEh5ZHJhdGUgPSBjcmVhdGVUaW1lKCdoeWRyYXRlQ2xpZW50JywgdGFnTmFtZSk7XG4gICAgY29uc3Qgc2hhZG93Um9vdCA9IGhvc3RFbG0uc2hhZG93Um9vdDtcbiAgICBjb25zdCBjaGlsZFJlbmRlck5vZGVzID0gW107XG4gICAgY29uc3Qgc2xvdE5vZGVzID0gW107XG4gICAgY29uc3Qgc2hhZG93Um9vdE5vZGVzID0gQlVJTEQuc2hhZG93RG9tICYmIHNoYWRvd1Jvb3QgPyBbXSA6IG51bGw7XG4gICAgY29uc3Qgdm5vZGUgPSAoaG9zdFJlZi4kdm5vZGUkID0gbmV3Vk5vZGUodGFnTmFtZSwgbnVsbCkpO1xuICAgIGlmICghcGx0LiRvcmdMb2NOb2RlcyQpIHtcbiAgICAgICAgaW5pdGlhbGl6ZURvY3VtZW50SHlkcmF0ZShkb2MuYm9keSwgKHBsdC4kb3JnTG9jTm9kZXMkID0gbmV3IE1hcCgpKSk7XG4gICAgfVxuICAgIGhvc3RFbG1bSFlEUkFURV9JRF0gPSBob3N0SWQ7XG4gICAgaG9zdEVsbS5yZW1vdmVBdHRyaWJ1dGUoSFlEUkFURV9JRCk7XG4gICAgY2xpZW50SHlkcmF0ZSh2bm9kZSwgY2hpbGRSZW5kZXJOb2Rlcywgc2xvdE5vZGVzLCBzaGFkb3dSb290Tm9kZXMsIGhvc3RFbG0sIGhvc3RFbG0sIGhvc3RJZCk7XG4gICAgY2hpbGRSZW5kZXJOb2Rlcy5tYXAoKGMpID0+IHtcbiAgICAgICAgY29uc3Qgb3JnTG9jYXRpb25JZCA9IGMuJGhvc3RJZCQgKyAnLicgKyBjLiRub2RlSWQkO1xuICAgICAgICBjb25zdCBvcmdMb2NhdGlvbk5vZGUgPSBwbHQuJG9yZ0xvY05vZGVzJC5nZXQob3JnTG9jYXRpb25JZCk7XG4gICAgICAgIGNvbnN0IG5vZGUgPSBjLiRlbG0kO1xuICAgICAgICBpZiAob3JnTG9jYXRpb25Ob2RlICYmIHN1cHBvcnRzU2hhZG93ICYmIG9yZ0xvY2F0aW9uTm9kZVsncy1lbiddID09PSAnJykge1xuICAgICAgICAgICAgb3JnTG9jYXRpb25Ob2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5vZGUsIG9yZ0xvY2F0aW9uTm9kZS5uZXh0U2libGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzaGFkb3dSb290KSB7XG4gICAgICAgICAgICBub2RlWydzLWhuJ10gPSB0YWdOYW1lO1xuICAgICAgICAgICAgaWYgKG9yZ0xvY2F0aW9uTm9kZSkge1xuICAgICAgICAgICAgICAgIG5vZGVbJ3Mtb2wnXSA9IG9yZ0xvY2F0aW9uTm9kZTtcbiAgICAgICAgICAgICAgICBub2RlWydzLW9sJ11bJ3MtbnInXSA9IG5vZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcGx0LiRvcmdMb2NOb2RlcyQuZGVsZXRlKG9yZ0xvY2F0aW9uSWQpO1xuICAgIH0pO1xuICAgIGlmIChCVUlMRC5zaGFkb3dEb20gJiYgc2hhZG93Um9vdCkge1xuICAgICAgICBzaGFkb3dSb290Tm9kZXMubWFwKChzaGFkb3dSb290Tm9kZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHNoYWRvd1Jvb3ROb2RlKSB7XG4gICAgICAgICAgICAgICAgc2hhZG93Um9vdC5hcHBlbmRDaGlsZChzaGFkb3dSb290Tm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbmRIeWRyYXRlKCk7XG59O1xuY29uc3QgY2xpZW50SHlkcmF0ZSA9IChwYXJlbnRWTm9kZSwgY2hpbGRSZW5kZXJOb2Rlcywgc2xvdE5vZGVzLCBzaGFkb3dSb290Tm9kZXMsIGhvc3RFbG0sIG5vZGUsIGhvc3RJZCkgPT4ge1xuICAgIGxldCBjaGlsZE5vZGVUeXBlO1xuICAgIGxldCBjaGlsZElkU3BsdDtcbiAgICBsZXQgY2hpbGRWTm9kZTtcbiAgICBsZXQgaTtcbiAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gMSAvKiBFbGVtZW50Tm9kZSAqLykge1xuICAgICAgICBjaGlsZE5vZGVUeXBlID0gbm9kZS5nZXRBdHRyaWJ1dGUoSFlEUkFURV9DSElMRF9JRCk7XG4gICAgICAgIGlmIChjaGlsZE5vZGVUeXBlKSB7XG4gICAgICAgICAgICAvLyBnb3QgdGhlIG5vZGUgZGF0YSBmcm9tIHRoZSBlbGVtZW50J3MgYXR0cmlidXRlXG4gICAgICAgICAgICAvLyBgJHtob3N0SWR9LiR7bm9kZUlkfS4ke2RlcHRofS4ke2luZGV4fWBcbiAgICAgICAgICAgIGNoaWxkSWRTcGx0ID0gY2hpbGROb2RlVHlwZS5zcGxpdCgnLicpO1xuICAgICAgICAgICAgaWYgKGNoaWxkSWRTcGx0WzBdID09PSBob3N0SWQgfHwgY2hpbGRJZFNwbHRbMF0gPT09ICcwJykge1xuICAgICAgICAgICAgICAgIGNoaWxkVk5vZGUgPSB7XG4gICAgICAgICAgICAgICAgICAgICRmbGFncyQ6IDAsXG4gICAgICAgICAgICAgICAgICAgICRob3N0SWQkOiBjaGlsZElkU3BsdFswXSxcbiAgICAgICAgICAgICAgICAgICAgJG5vZGVJZCQ6IGNoaWxkSWRTcGx0WzFdLFxuICAgICAgICAgICAgICAgICAgICAkZGVwdGgkOiBjaGlsZElkU3BsdFsyXSxcbiAgICAgICAgICAgICAgICAgICAgJGluZGV4JDogY2hpbGRJZFNwbHRbM10sXG4gICAgICAgICAgICAgICAgICAgICR0YWckOiBub2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICAgICAgICAgICAgJGVsbSQ6IG5vZGUsXG4gICAgICAgICAgICAgICAgICAgICRhdHRycyQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICRjaGlsZHJlbiQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICRrZXkkOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAkbmFtZSQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICR0ZXh0JDogbnVsbCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGNoaWxkUmVuZGVyTm9kZXMucHVzaChjaGlsZFZOb2RlKTtcbiAgICAgICAgICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZShIWURSQVRFX0NISUxEX0lEKTtcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGlzIGEgbmV3IGNoaWxkIHZub2RlXG4gICAgICAgICAgICAgICAgLy8gc28gZW5zdXJlIGl0cyBwYXJlbnQgdm5vZGUgaGFzIHRoZSB2Y2hpbGRyZW4gYXJyYXlcbiAgICAgICAgICAgICAgICBpZiAoIXBhcmVudFZOb2RlLiRjaGlsZHJlbiQpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Vk5vZGUuJGNoaWxkcmVuJCA9IFtdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBhZGQgb3VyIGNoaWxkIHZub2RlIHRvIGEgc3BlY2lmaWMgaW5kZXggb2YgdGhlIHZub2RlJ3MgY2hpbGRyZW5cbiAgICAgICAgICAgICAgICBwYXJlbnRWTm9kZS4kY2hpbGRyZW4kW2NoaWxkVk5vZGUuJGluZGV4JF0gPSBjaGlsZFZOb2RlO1xuICAgICAgICAgICAgICAgIC8vIHRoaXMgaXMgbm93IHRoZSBuZXcgcGFyZW50IHZub2RlIGZvciBhbGwgdGhlIG5leHQgY2hpbGQgY2hlY2tzXG4gICAgICAgICAgICAgICAgcGFyZW50Vk5vZGUgPSBjaGlsZFZOb2RlO1xuICAgICAgICAgICAgICAgIGlmIChzaGFkb3dSb290Tm9kZXMgJiYgY2hpbGRWTm9kZS4kZGVwdGgkID09PSAnMCcpIHtcbiAgICAgICAgICAgICAgICAgICAgc2hhZG93Um9vdE5vZGVzW2NoaWxkVk5vZGUuJGluZGV4JF0gPSBjaGlsZFZOb2RlLiRlbG0kO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyByZWN1cnNpdmVseSBkcmlsbCBkb3duLCBlbmQgdG8gc3RhcnQgc28gd2UgY2FuIHJlbW92ZSBub2Rlc1xuICAgICAgICBmb3IgKGkgPSBub2RlLmNoaWxkTm9kZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICAgIGNsaWVudEh5ZHJhdGUocGFyZW50Vk5vZGUsIGNoaWxkUmVuZGVyTm9kZXMsIHNsb3ROb2Rlcywgc2hhZG93Um9vdE5vZGVzLCBob3N0RWxtLCBub2RlLmNoaWxkTm9kZXNbaV0sIGhvc3RJZCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vZGUuc2hhZG93Um9vdCkge1xuICAgICAgICAgICAgLy8ga2VlcCBkcmlsbGluZyBkb3duIHRocm91Z2ggdGhlIHNoYWRvdyByb290IG5vZGVzXG4gICAgICAgICAgICBmb3IgKGkgPSBub2RlLnNoYWRvd1Jvb3QuY2hpbGROb2Rlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgICAgIGNsaWVudEh5ZHJhdGUocGFyZW50Vk5vZGUsIGNoaWxkUmVuZGVyTm9kZXMsIHNsb3ROb2Rlcywgc2hhZG93Um9vdE5vZGVzLCBob3N0RWxtLCBub2RlLnNoYWRvd1Jvb3QuY2hpbGROb2Rlc1tpXSwgaG9zdElkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChub2RlLm5vZGVUeXBlID09PSA4IC8qIENvbW1lbnROb2RlICovKSB7XG4gICAgICAgIC8vIGAke0NPTU1FTlRfVFlQRX0uJHtob3N0SWR9LiR7bm9kZUlkfS4ke2RlcHRofS4ke2luZGV4fWBcbiAgICAgICAgY2hpbGRJZFNwbHQgPSBub2RlLm5vZGVWYWx1ZS5zcGxpdCgnLicpO1xuICAgICAgICBpZiAoY2hpbGRJZFNwbHRbMV0gPT09IGhvc3RJZCB8fCBjaGlsZElkU3BsdFsxXSA9PT0gJzAnKSB7XG4gICAgICAgICAgICAvLyBjb21tZW50IG5vZGUgZm9yIGVpdGhlciB0aGUgaG9zdCBpZCBvciBhIDAgaG9zdCBpZFxuICAgICAgICAgICAgY2hpbGROb2RlVHlwZSA9IGNoaWxkSWRTcGx0WzBdO1xuICAgICAgICAgICAgY2hpbGRWTm9kZSA9IHtcbiAgICAgICAgICAgICAgICAkZmxhZ3MkOiAwLFxuICAgICAgICAgICAgICAgICRob3N0SWQkOiBjaGlsZElkU3BsdFsxXSxcbiAgICAgICAgICAgICAgICAkbm9kZUlkJDogY2hpbGRJZFNwbHRbMl0sXG4gICAgICAgICAgICAgICAgJGRlcHRoJDogY2hpbGRJZFNwbHRbM10sXG4gICAgICAgICAgICAgICAgJGluZGV4JDogY2hpbGRJZFNwbHRbNF0sXG4gICAgICAgICAgICAgICAgJGVsbSQ6IG5vZGUsXG4gICAgICAgICAgICAgICAgJGF0dHJzJDogbnVsbCxcbiAgICAgICAgICAgICAgICAkY2hpbGRyZW4kOiBudWxsLFxuICAgICAgICAgICAgICAgICRrZXkkOiBudWxsLFxuICAgICAgICAgICAgICAgICRuYW1lJDogbnVsbCxcbiAgICAgICAgICAgICAgICAkdGFnJDogbnVsbCxcbiAgICAgICAgICAgICAgICAkdGV4dCQ6IG51bGwsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGNoaWxkTm9kZVR5cGUgPT09IFRFWFRfTk9ERV9JRCkge1xuICAgICAgICAgICAgICAgIGNoaWxkVk5vZGUuJGVsbSQgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZFZOb2RlLiRlbG0kICYmIGNoaWxkVk5vZGUuJGVsbSQubm9kZVR5cGUgPT09IDMgLyogVGV4dE5vZGUgKi8pIHtcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRWTm9kZS4kdGV4dCQgPSBjaGlsZFZOb2RlLiRlbG0kLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgICAgICBjaGlsZFJlbmRlck5vZGVzLnB1c2goY2hpbGRWTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIHJlbW92ZSB0aGUgdGV4dCBjb21tZW50IHNpbmNlIGl0J3Mgbm8gbG9uZ2VyIG5lZWRlZFxuICAgICAgICAgICAgICAgICAgICBub2RlLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXBhcmVudFZOb2RlLiRjaGlsZHJlbiQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudFZOb2RlLiRjaGlsZHJlbiQgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBwYXJlbnRWTm9kZS4kY2hpbGRyZW4kW2NoaWxkVk5vZGUuJGluZGV4JF0gPSBjaGlsZFZOb2RlO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2hhZG93Um9vdE5vZGVzICYmIGNoaWxkVk5vZGUuJGRlcHRoJCA9PT0gJzAnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzaGFkb3dSb290Tm9kZXNbY2hpbGRWTm9kZS4kaW5kZXgkXSA9IGNoaWxkVk5vZGUuJGVsbSQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjaGlsZFZOb2RlLiRob3N0SWQkID09PSBob3N0SWQpIHtcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGNvbW1lbnQgbm9kZSBpcyBzcGVjaWZjYWxseSBmb3IgdGhpcyBob3N0IGlkXG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkTm9kZVR5cGUgPT09IFNMT1RfTk9ERV9JRCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBgJHtTTE9UX05PREVfSUR9LiR7aG9zdElkfS4ke25vZGVJZH0uJHtkZXB0aH0uJHtpbmRleH0uJHtzbG90TmFtZX1gO1xuICAgICAgICAgICAgICAgICAgICBjaGlsZFZOb2RlLiR0YWckID0gJ3Nsb3QnO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGRJZFNwbHRbNV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVbJ3Mtc24nXSA9IGNoaWxkVk5vZGUuJG5hbWUkID0gY2hpbGRJZFNwbHRbNV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlWydzLXNuJ10gPSAnJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBub2RlWydzLXNyJ10gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBpZiAoQlVJTEQuc2hhZG93RG9tICYmIHNoYWRvd1Jvb3ROb2Rlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYnJvd3NlciBzdXBwb3J0IHNoYWRvd1Jvb3QgYW5kIHRoaXMgaXMgYSBzaGFkb3cgZG9tIGNvbXBvbmVudFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY3JlYXRlIGFuIGFjdHVhbCBzbG90IGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkVk5vZGUuJGVsbSQgPSBkb2MuY3JlYXRlRWxlbWVudChjaGlsZFZOb2RlLiR0YWckKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZFZOb2RlLiRuYW1lJCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFkZCB0aGUgc2xvdCBuYW1lIGF0dHJpYnV0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkVk5vZGUuJGVsbSQuc2V0QXR0cmlidXRlKCduYW1lJywgY2hpbGRWTm9kZS4kbmFtZSQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaW5zZXJ0IHRoZSBuZXcgc2xvdCBlbGVtZW50IGJlZm9yZSB0aGUgc2xvdCBjb21tZW50XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGNoaWxkVk5vZGUuJGVsbSQsIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmVtb3ZlIHRoZSBzbG90IGNvbW1lbnQgc2luY2UgaXQncyBub3QgbmVlZGVkIGZvciBzaGFkb3dcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGRWTm9kZS4kZGVwdGgkID09PSAnMCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGFkb3dSb290Tm9kZXNbY2hpbGRWTm9kZS4kaW5kZXgkXSA9IGNoaWxkVk5vZGUuJGVsbSQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2xvdE5vZGVzLnB1c2goY2hpbGRWTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghcGFyZW50Vk5vZGUuJGNoaWxkcmVuJCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50Vk5vZGUuJGNoaWxkcmVuJCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHBhcmVudFZOb2RlLiRjaGlsZHJlbiRbY2hpbGRWTm9kZS4kaW5kZXgkXSA9IGNoaWxkVk5vZGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNoaWxkTm9kZVR5cGUgPT09IENPTlRFTlRfUkVGX0lEKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGAke0NPTlRFTlRfUkVGX0lEfS4ke2hvc3RJZH1gO1xuICAgICAgICAgICAgICAgICAgICBpZiAoQlVJTEQuc2hhZG93RG9tICYmIHNoYWRvd1Jvb3ROb2Rlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmVtb3ZlIHRoZSBjb250ZW50IHJlZiBjb21tZW50IHNpbmNlIGl0J3Mgbm90IG5lZWRlZCBmb3Igc2hhZG93XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBob3N0RWxtWydzLWNyJ10gPSBub2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVsncy1jbiddID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChwYXJlbnRWTm9kZSAmJiBwYXJlbnRWTm9kZS4kdGFnJCA9PT0gJ3N0eWxlJykge1xuICAgICAgICBjb25zdCB2bm9kZSA9IG5ld1ZOb2RlKG51bGwsIG5vZGUudGV4dENvbnRlbnQpO1xuICAgICAgICB2bm9kZS4kZWxtJCA9IG5vZGU7XG4gICAgICAgIHZub2RlLiRpbmRleCQgPSAnMCc7XG4gICAgICAgIHBhcmVudFZOb2RlLiRjaGlsZHJlbiQgPSBbdm5vZGVdO1xuICAgIH1cbn07XG5jb25zdCBpbml0aWFsaXplRG9jdW1lbnRIeWRyYXRlID0gKG5vZGUsIG9yZ0xvY05vZGVzKSA9PiB7XG4gICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IDEgLyogRWxlbWVudE5vZGUgKi8pIHtcbiAgICAgICAgbGV0IGkgPSAwO1xuICAgICAgICBmb3IgKDsgaSA8IG5vZGUuY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaW5pdGlhbGl6ZURvY3VtZW50SHlkcmF0ZShub2RlLmNoaWxkTm9kZXNbaV0sIG9yZ0xvY05vZGVzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZS5zaGFkb3dSb290KSB7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbm9kZS5zaGFkb3dSb290LmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpbml0aWFsaXplRG9jdW1lbnRIeWRyYXRlKG5vZGUuc2hhZG93Um9vdC5jaGlsZE5vZGVzW2ldLCBvcmdMb2NOb2Rlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAobm9kZS5ub2RlVHlwZSA9PT0gOCAvKiBDb21tZW50Tm9kZSAqLykge1xuICAgICAgICBjb25zdCBjaGlsZElkU3BsdCA9IG5vZGUubm9kZVZhbHVlLnNwbGl0KCcuJyk7XG4gICAgICAgIGlmIChjaGlsZElkU3BsdFswXSA9PT0gT1JHX0xPQ0FUSU9OX0lEKSB7XG4gICAgICAgICAgICBvcmdMb2NOb2Rlcy5zZXQoY2hpbGRJZFNwbHRbMV0gKyAnLicgKyBjaGlsZElkU3BsdFsyXSwgbm9kZSk7XG4gICAgICAgICAgICBub2RlLm5vZGVWYWx1ZSA9ICcnO1xuICAgICAgICAgICAgLy8gdXNlZnVsIHRvIGtub3cgaWYgdGhlIG9yaWdpbmFsIGxvY2F0aW9uIGlzXG4gICAgICAgICAgICAvLyB0aGUgcm9vdCBsaWdodC1kb20gb2YgYSBzaGFkb3cgZG9tIGNvbXBvbmVudFxuICAgICAgICAgICAgbm9kZVsncy1lbiddID0gY2hpbGRJZFNwbHRbM107XG4gICAgICAgIH1cbiAgICB9XG59O1xuLyoqXG4gKiBQYXJzZSBhIG5ldyBwcm9wZXJ0eSB2YWx1ZSBmb3IgYSBnaXZlbiBwcm9wZXJ0eSB0eXBlLlxuICpcbiAqIFdoaWxlIHRoZSBwcm9wIHZhbHVlIGNhbiByZWFzb25hYmx5IGJlIGV4cGVjdGVkIHRvIGJlIG9mIGBhbnlgIHR5cGUgYXMgZmFyIGFzIFR5cGVTY3JpcHQncyB0eXBlIGNoZWNrZXIgaXMgY29uY2VybmVkLFxuICogaXQgaXMgbm90IHNhZmUgdG8gYXNzdW1lIHRoYXQgdGhlIHN0cmluZyByZXR1cm5lZCBieSBldmFsdWF0aW5nIGB0eXBlb2YgcHJvcFZhbHVlYCBtYXRjaGVzOlxuICogICAxLiBgYW55YCwgdGhlIHR5cGUgZ2l2ZW4gdG8gYHByb3BWYWx1ZWAgaW4gdGhlIGZ1bmN0aW9uIHNpZ25hdHVyZVxuICogICAyLiB0aGUgdHlwZSBzdG9yZWQgZnJvbSBgcHJvcFR5cGVgLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gcHJvdmlkZXMgdGhlIGNhcGFiaWxpdHkgdG8gcGFyc2UvY29lcmNlIGEgcHJvcGVydHkncyB2YWx1ZSB0byBwb3RlbnRpYWxseSBhbnkgb3RoZXIgSmF2YVNjcmlwdCB0eXBlLlxuICpcbiAqIFByb3BlcnR5IHZhbHVlcyByZXByZXNlbnRlZCBpbiBUU1ggcHJlc2VydmUgdGhlaXIgdHlwZSBpbmZvcm1hdGlvbi4gSW4gdGhlIGV4YW1wbGUgYmVsb3csIHRoZSBudW1iZXIgMCBpcyBwYXNzZWQgdG9cbiAqIGEgY29tcG9uZW50LiBUaGlzIGBwcm9wVmFsdWVgIHdpbGwgcHJlc2VydmUgaXRzIHR5cGUgaW5mb3JtYXRpb24gKGB0eXBlb2YgcHJvcFZhbHVlID09PSAnbnVtYmVyJ2ApLiBOb3RlIHRoYXQgaXNcbiAqIGJhc2VkIG9uIHRoZSB0eXBlIG9mIHRoZSB2YWx1ZSBiZWluZyBwYXNzZWQgaW4sIG5vdCB0aGUgdHlwZSBkZWNsYXJlZCBvZiB0aGUgY2xhc3MgbWVtYmVyIGRlY29yYXRlZCB3aXRoIGBAUHJvcGAuXG4gKiBgYGB0c3hcbiAqIDxteS1jbXAgcHJvcC12YWw9ezB9PjwvbXktY21wPlxuICogYGBgXG4gKlxuICogSFRNTCBwcm9wIHZhbHVlcyBvbiB0aGUgb3RoZXIgaGFuZCwgd2lsbCBhbHdheXMgYSBzdHJpbmdcbiAqXG4gKiBAcGFyYW0gcHJvcFZhbHVlIHRoZSBuZXcgdmFsdWUgdG8gY29lcmNlIHRvIHNvbWUgdHlwZVxuICogQHBhcmFtIHByb3BUeXBlIHRoZSB0eXBlIG9mIHRoZSBwcm9wLCBleHByZXNzZWQgYXMgYSBiaW5hcnkgbnVtYmVyXG4gKiBAcmV0dXJucyB0aGUgcGFyc2VkL2NvZXJjZWQgdmFsdWVcbiAqL1xuY29uc3QgcGFyc2VQcm9wZXJ0eVZhbHVlID0gKHByb3BWYWx1ZSwgcHJvcFR5cGUpID0+IHtcbiAgICAvLyBlbnN1cmUgdGhpcyB2YWx1ZSBpcyBvZiB0aGUgY29ycmVjdCBwcm9wIHR5cGVcbiAgICBpZiAocHJvcFZhbHVlICE9IG51bGwgJiYgIWlzQ29tcGxleFR5cGUocHJvcFZhbHVlKSkge1xuICAgICAgICBpZiAoQlVJTEQucHJvcEJvb2xlYW4gJiYgcHJvcFR5cGUgJiA0IC8qIEJvb2xlYW4gKi8pIHtcbiAgICAgICAgICAgIC8vIHBlciB0aGUgSFRNTCBzcGVjLCBhbnkgc3RyaW5nIHZhbHVlIG1lYW5zIGl0IGlzIGEgYm9vbGVhbiB0cnVlIHZhbHVlXG4gICAgICAgICAgICAvLyBidXQgd2UnbGwgY2hlYXQgaGVyZSBhbmQgc2F5IHRoYXQgdGhlIHN0cmluZyBcImZhbHNlXCIgaXMgdGhlIGJvb2xlYW4gZmFsc2VcbiAgICAgICAgICAgIHJldHVybiBwcm9wVmFsdWUgPT09ICdmYWxzZScgPyBmYWxzZSA6IHByb3BWYWx1ZSA9PT0gJycgfHwgISFwcm9wVmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELnByb3BOdW1iZXIgJiYgcHJvcFR5cGUgJiAyIC8qIE51bWJlciAqLykge1xuICAgICAgICAgICAgLy8gZm9yY2UgaXQgdG8gYmUgYSBudW1iZXJcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHByb3BWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELnByb3BTdHJpbmcgJiYgcHJvcFR5cGUgJiAxIC8qIFN0cmluZyAqLykge1xuICAgICAgICAgICAgLy8gY291bGQgaGF2ZSBiZWVuIHBhc3NlZCBhcyBhIG51bWJlciBvciBib29sZWFuXG4gICAgICAgICAgICAvLyBidXQgd2Ugc3RpbGwgd2FudCBpdCBhcyBhIHN0cmluZ1xuICAgICAgICAgICAgcmV0dXJuIFN0cmluZyhwcm9wVmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHJlZHVuZGFudCByZXR1cm4gaGVyZSBmb3IgYmV0dGVyIG1pbmlmaWNhdGlvblxuICAgICAgICByZXR1cm4gcHJvcFZhbHVlO1xuICAgIH1cbiAgICAvLyBub3Qgc3VyZSBleGFjdGx5IHdoYXQgdHlwZSB3ZSB3YW50XG4gICAgLy8gc28gbm8gbmVlZCB0byBjaGFuZ2UgdG8gYSBkaWZmZXJlbnQgdHlwZVxuICAgIHJldHVybiBwcm9wVmFsdWU7XG59O1xuY29uc3QgZ2V0VmFsdWUgPSAocmVmLCBwcm9wTmFtZSkgPT4gZ2V0SG9zdFJlZihyZWYpLiRpbnN0YW5jZVZhbHVlcyQuZ2V0KHByb3BOYW1lKTtcbmNvbnN0IHNldFZhbHVlID0gKHJlZiwgcHJvcE5hbWUsIG5ld1ZhbCwgY21wTWV0YSkgPT4ge1xuICAgIC8vIGNoZWNrIG91ciBuZXcgcHJvcGVydHkgdmFsdWUgYWdhaW5zdCBvdXIgaW50ZXJuYWwgdmFsdWVcbiAgICBjb25zdCBob3N0UmVmID0gZ2V0SG9zdFJlZihyZWYpO1xuICAgIGNvbnN0IGVsbSA9IEJVSUxELmxhenlMb2FkID8gaG9zdFJlZi4kaG9zdEVsZW1lbnQkIDogcmVmO1xuICAgIGNvbnN0IG9sZFZhbCA9IGhvc3RSZWYuJGluc3RhbmNlVmFsdWVzJC5nZXQocHJvcE5hbWUpO1xuICAgIGNvbnN0IGZsYWdzID0gaG9zdFJlZi4kZmxhZ3MkO1xuICAgIGNvbnN0IGluc3RhbmNlID0gQlVJTEQubGF6eUxvYWQgPyBob3N0UmVmLiRsYXp5SW5zdGFuY2UkIDogZWxtO1xuICAgIG5ld1ZhbCA9IHBhcnNlUHJvcGVydHlWYWx1ZShuZXdWYWwsIGNtcE1ldGEuJG1lbWJlcnMkW3Byb3BOYW1lXVswXSk7XG4gICAgLy8gZXhwbGljaXRseSBjaGVjayBmb3IgTmFOIG9uIGJvdGggc2lkZXMsIGFzIGBOYU4gPT09IE5hTmAgaXMgYWx3YXlzIGZhbHNlXG4gICAgY29uc3QgYXJlQm90aE5hTiA9IE51bWJlci5pc05hTihvbGRWYWwpICYmIE51bWJlci5pc05hTihuZXdWYWwpO1xuICAgIGNvbnN0IGRpZFZhbHVlQ2hhbmdlID0gbmV3VmFsICE9PSBvbGRWYWwgJiYgIWFyZUJvdGhOYU47XG4gICAgaWYgKCghQlVJTEQubGF6eUxvYWQgfHwgIShmbGFncyAmIDggLyogaXNDb25zdHJ1Y3RpbmdJbnN0YW5jZSAqLykgfHwgb2xkVmFsID09PSB1bmRlZmluZWQpICYmIGRpZFZhbHVlQ2hhbmdlKSB7XG4gICAgICAgIC8vIGdhZHpvb2tzISB0aGUgcHJvcGVydHkncyB2YWx1ZSBoYXMgY2hhbmdlZCEhXG4gICAgICAgIC8vIHNldCBvdXIgbmV3IHZhbHVlIVxuICAgICAgICBob3N0UmVmLiRpbnN0YW5jZVZhbHVlcyQuc2V0KHByb3BOYW1lLCBuZXdWYWwpO1xuICAgICAgICBpZiAoQlVJTEQuaXNEZXYpIHtcbiAgICAgICAgICAgIGlmIChob3N0UmVmLiRmbGFncyQgJiAxMDI0IC8qIGRldk9uUmVuZGVyICovKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZURldldhcm4oYFRoZSBzdGF0ZS9wcm9wIFwiJHtwcm9wTmFtZX1cIiBjaGFuZ2VkIGR1cmluZyByZW5kZXJpbmcuIFRoaXMgY2FuIHBvdGVudGlhbGx5IGxlYWQgdG8gaW5maW5pdGUtbG9vcHMgYW5kIG90aGVyIGJ1Z3MuYCwgJ1xcbkVsZW1lbnQnLCBlbG0sICdcXG5OZXcgdmFsdWUnLCBuZXdWYWwsICdcXG5PbGQgdmFsdWUnLCBvbGRWYWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaG9zdFJlZi4kZmxhZ3MkICYgMjA0OCAvKiBkZXZPbkRpZExvYWQgKi8pIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlRGV2V2FybihgVGhlIHN0YXRlL3Byb3AgXCIke3Byb3BOYW1lfVwiIGNoYW5nZWQgZHVyaW5nIFwiY29tcG9uZW50RGlkTG9hZCgpXCIsIHRoaXMgdHJpZ2dlcnMgZXh0cmEgcmUtcmVuZGVycywgdHJ5IHRvIHNldHVwIG9uIFwiY29tcG9uZW50V2lsbExvYWQoKVwiYCwgJ1xcbkVsZW1lbnQnLCBlbG0sICdcXG5OZXcgdmFsdWUnLCBuZXdWYWwsICdcXG5PbGQgdmFsdWUnLCBvbGRWYWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghQlVJTEQubGF6eUxvYWQgfHwgaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIC8vIGdldCBhbiBhcnJheSBvZiBtZXRob2QgbmFtZXMgb2Ygd2F0Y2ggZnVuY3Rpb25zIHRvIGNhbGxcbiAgICAgICAgICAgIGlmIChCVUlMRC53YXRjaENhbGxiYWNrICYmIGNtcE1ldGEuJHdhdGNoZXJzJCAmJiBmbGFncyAmIDEyOCAvKiBpc1dhdGNoUmVhZHkgKi8pIHtcbiAgICAgICAgICAgICAgICBjb25zdCB3YXRjaE1ldGhvZHMgPSBjbXBNZXRhLiR3YXRjaGVycyRbcHJvcE5hbWVdO1xuICAgICAgICAgICAgICAgIGlmICh3YXRjaE1ldGhvZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBpbnN0YW5jZSBpcyB3YXRjaGluZyBmb3Igd2hlbiB0aGlzIHByb3BlcnR5IGNoYW5nZWRcbiAgICAgICAgICAgICAgICAgICAgd2F0Y2hNZXRob2RzLm1hcCgod2F0Y2hNZXRob2ROYW1lKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGZpcmUgb2ZmIGVhY2ggb2YgdGhlIHdhdGNoIG1ldGhvZHMgdGhhdCBhcmUgd2F0Y2hpbmcgdGhpcyBwcm9wZXJ0eVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlW3dhdGNoTWV0aG9kTmFtZV0obmV3VmFsLCBvbGRWYWwsIHByb3BOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZUVycm9yKGUsIGVsbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC51cGRhdGFibGUgJiZcbiAgICAgICAgICAgICAgICAoZmxhZ3MgJiAoMiAvKiBoYXNSZW5kZXJlZCAqLyB8IDE2IC8qIGlzUXVldWVkRm9yVXBkYXRlICovKSkgPT09IDIgLyogaGFzUmVuZGVyZWQgKi8pIHtcbiAgICAgICAgICAgICAgICBpZiAoQlVJTEQuY21wU2hvdWxkVXBkYXRlICYmIGluc3RhbmNlLmNvbXBvbmVudFNob3VsZFVwZGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5zdGFuY2UuY29tcG9uZW50U2hvdWxkVXBkYXRlKG5ld1ZhbCwgb2xkVmFsLCBwcm9wTmFtZSkgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gbG9va3MgbGlrZSB0aGlzIHZhbHVlIGFjdHVhbGx5IGNoYW5nZWQsIHNvIHdlJ3ZlIGdvdCB3b3JrIHRvIGRvIVxuICAgICAgICAgICAgICAgIC8vIGJ1dCBvbmx5IGlmIHdlJ3ZlIGFscmVhZHkgcmVuZGVyZWQsIG90aGVyd2lzZSBqdXN0IGNoaWxsIG91dFxuICAgICAgICAgICAgICAgIC8vIHF1ZXVlIHRoYXQgd2UgbmVlZCB0byBkbyBhbiB1cGRhdGUsIGJ1dCBkb24ndCB3b3JyeSBhYm91dCBxdWV1aW5nXG4gICAgICAgICAgICAgICAgLy8gdXAgbWlsbGlvbnMgY3V6IHRoaXMgZnVuY3Rpb24gZW5zdXJlcyBpdCBvbmx5IHJ1bnMgb25jZVxuICAgICAgICAgICAgICAgIHNjaGVkdWxlVXBkYXRlKGhvc3RSZWYsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn07XG5jb25zdCBwcm94eUNvbXBvbmVudCA9IChDc3RyLCBjbXBNZXRhLCBmbGFncykgPT4ge1xuICAgIGlmIChCVUlMRC5tZW1iZXIgJiYgY21wTWV0YS4kbWVtYmVycyQpIHtcbiAgICAgICAgaWYgKEJVSUxELndhdGNoQ2FsbGJhY2sgJiYgQ3N0ci53YXRjaGVycykge1xuICAgICAgICAgICAgY21wTWV0YS4kd2F0Y2hlcnMkID0gQ3N0ci53YXRjaGVycztcbiAgICAgICAgfVxuICAgICAgICAvLyBJdCdzIGJldHRlciB0byBoYXZlIGEgY29uc3QgdGhhbiB0d28gT2JqZWN0LmVudHJpZXMoKVxuICAgICAgICBjb25zdCBtZW1iZXJzID0gT2JqZWN0LmVudHJpZXMoY21wTWV0YS4kbWVtYmVycyQpO1xuICAgICAgICBjb25zdCBwcm90b3R5cGUgPSBDc3RyLnByb3RvdHlwZTtcbiAgICAgICAgbWVtYmVycy5tYXAoKFttZW1iZXJOYW1lLCBbbWVtYmVyRmxhZ3NdXSkgPT4ge1xuICAgICAgICAgICAgaWYgKChCVUlMRC5wcm9wIHx8IEJVSUxELnN0YXRlKSAmJlxuICAgICAgICAgICAgICAgIChtZW1iZXJGbGFncyAmIDMxIC8qIFByb3AgKi8gfHxcbiAgICAgICAgICAgICAgICAgICAgKCghQlVJTEQubGF6eUxvYWQgfHwgZmxhZ3MgJiAyIC8qIHByb3h5U3RhdGUgKi8pICYmIG1lbWJlckZsYWdzICYgMzIgLyogU3RhdGUgKi8pKSkge1xuICAgICAgICAgICAgICAgIC8vIHByb3h5Q29tcG9uZW50IC0gcHJvcFxuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90b3R5cGUsIG1lbWJlck5hbWUsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcHJveHlDb21wb25lbnQsIGdldCB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdldFZhbHVlKHRoaXMsIG1lbWJlck5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzZXQobmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9ubHkgZHVyaW5nIGRldiB0aW1lXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoQlVJTEQuaXNEZXYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWYgPSBnZXRIb3N0UmVmKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSBhcmUgcHJveHlpbmcgdGhlIGluc3RhbmNlIChub3QgZWxlbWVudClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZmxhZ3MgJiAxIC8qIGlzRWxlbWVudENvbnN0cnVjdG9yICovKSA9PT0gMCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGUgZWxlbWVudCBpcyBub3QgY29uc3RydWN0aW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChyZWYuJGZsYWdzJCAmIDggLyogaXNDb25zdHJ1Y3RpbmdJbnN0YW5jZSAqLykgPT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhlIG1lbWJlciBpcyBhIHByb3BcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG1lbWJlckZsYWdzICYgMzEgLyogUHJvcCAqLykgIT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhlIG1lbWJlciBpcyBub3QgbXV0YWJsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAobWVtYmVyRmxhZ3MgJiAxMDI0IC8qIE11dGFibGUgKi8pID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGVEZXZXYXJuKGBAUHJvcCgpIFwiJHttZW1iZXJOYW1lfVwiIG9uIDwke2NtcE1ldGEuJHRhZ05hbWUkfT4gaXMgaW1tdXRhYmxlIGJ1dCB3YXMgbW9kaWZpZWQgZnJvbSB3aXRoaW4gdGhlIGNvbXBvbmVudC5cXG5Nb3JlIGluZm9ybWF0aW9uOiBodHRwczovL3N0ZW5jaWxqcy5jb20vZG9jcy9wcm9wZXJ0aWVzI3Byb3AtbXV0YWJpbGl0eWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHByb3h5Q29tcG9uZW50LCBzZXQgdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFZhbHVlKHRoaXMsIG1lbWJlck5hbWUsIG5ld1ZhbHVlLCBjbXBNZXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoQlVJTEQubGF6eUxvYWQgJiZcbiAgICAgICAgICAgICAgICBCVUlMRC5tZXRob2QgJiZcbiAgICAgICAgICAgICAgICBmbGFncyAmIDEgLyogaXNFbGVtZW50Q29uc3RydWN0b3IgKi8gJiZcbiAgICAgICAgICAgICAgICBtZW1iZXJGbGFncyAmIDY0IC8qIE1ldGhvZCAqLykge1xuICAgICAgICAgICAgICAgIC8vIHByb3h5Q29tcG9uZW50IC0gbWV0aG9kXG4gICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvdHlwZSwgbWVtYmVyTmFtZSwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSguLi5hcmdzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWYgPSBnZXRIb3N0UmVmKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZi4kb25JbnN0YW5jZVByb21pc2UkLnRoZW4oKCkgPT4gcmVmLiRsYXp5SW5zdGFuY2UkW21lbWJlck5hbWVdKC4uLmFyZ3MpKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChCVUlMRC5vYnNlcnZlQXR0cmlidXRlICYmICghQlVJTEQubGF6eUxvYWQgfHwgZmxhZ3MgJiAxIC8qIGlzRWxlbWVudENvbnN0cnVjdG9yICovKSkge1xuICAgICAgICAgICAgY29uc3QgYXR0ck5hbWVUb1Byb3BOYW1lID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgcHJvdG90eXBlLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayA9IGZ1bmN0aW9uIChhdHRyTmFtZSwgX29sZFZhbHVlLCBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHBsdC5qbXAoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9wTmFtZSA9IGF0dHJOYW1lVG9Qcm9wTmFtZS5nZXQoYXR0ck5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAvLyAgSW4gYSB3ZWIgY29tcG9uZW50IGxpZmVjeWNsZSB0aGUgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrIHJ1bnMgcHJpb3IgdG8gY29ubmVjdGVkQ2FsbGJhY2tcbiAgICAgICAgICAgICAgICAgICAgLy8gIGluIHRoZSBjYXNlIHdoZXJlIGFuIGF0dHJpYnV0ZSB3YXMgc2V0IGlubGluZS5cbiAgICAgICAgICAgICAgICAgICAgLy8gIGBgYGh0bWxcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgPG15LWNvbXBvbmVudCBzb21lLWF0dHJpYnV0ZT1cInNvbWUtdmFsdWVcIj48L215LWNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgLy8gIGBgYFxuICAgICAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgICAgICAvLyAgVGhlcmUgaXMgYW4gZWRnZSBjYXNlIHdoZXJlIGEgZGV2ZWxvcGVyIHNldHMgdGhlIGF0dHJpYnV0ZSBpbmxpbmUgb24gYSBjdXN0b20gZWxlbWVudCBhbmQgdGhlblxuICAgICAgICAgICAgICAgICAgICAvLyAgcHJvZ3JhbW1hdGljYWxseSBjaGFuZ2VzIGl0IGJlZm9yZSBpdCBoYXMgYmVlbiB1cGdyYWRlZCBhcyBzaG93biBiZWxvdzpcbiAgICAgICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAgICAgLy8gIGBgYGh0bWxcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgPCEtLSB0aGlzIGNvbXBvbmVudCBoYXMgX25vdF8gYmVlbiB1cGdyYWRlZCB5ZXQgLS0+XG4gICAgICAgICAgICAgICAgICAgIC8vICAgIDxteS1jb21wb25lbnQgaWQ9XCJ0ZXN0XCIgc29tZS1hdHRyaWJ1dGU9XCJzb21lLXZhbHVlXCI+PC9teS1jb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgICAgIC8vICAgIDxzY3JpcHQ+XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgLy8gZ3JhYiBub24tdXBncmFkZWQgY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rlc3RcIik7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgZWwuc29tZUF0dHJpYnV0ZSA9IFwiYW5vdGhlci12YWx1ZVwiO1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgIC8vIHVwZ3JhZGUgY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdteS1jb21wb25lbnQnLCBNeUNvbXBvbmVudCk7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgIDwvc2NyaXB0PlxuICAgICAgICAgICAgICAgICAgICAvLyAgYGBgXG4gICAgICAgICAgICAgICAgICAgIC8vICBJbiB0aGlzIGNhc2UgaWYgd2UgZG8gbm90IHVuc2hhZG93IGhlcmUgYW5kIHVzZSB0aGUgdmFsdWUgb2YgdGhlIHNoYWRvd2luZyBwcm9wZXJ0eSwgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrXG4gICAgICAgICAgICAgICAgICAgIC8vICB3aWxsIGJlIGNhbGxlZCB3aXRoIGBuZXdWYWx1ZSA9IFwic29tZS12YWx1ZVwiYCBhbmQgd2lsbCBzZXQgdGhlIHNoYWRvd2VkIHByb3BlcnR5ICh0aGlzLnNvbWVBdHRyaWJ1dGUgPSBcImFub3RoZXItdmFsdWVcIilcbiAgICAgICAgICAgICAgICAgICAgLy8gIHRvIHRoZSB2YWx1ZSB0aGF0IHdhcyBzZXQgaW5saW5lIGkuZS4gXCJzb21lLXZhbHVlXCIgZnJvbSBhYm92ZSBleGFtcGxlLiBXaGVuXG4gICAgICAgICAgICAgICAgICAgIC8vICB0aGUgY29ubmVjdGVkQ2FsbGJhY2sgYXR0ZW1wdHMgdG8gdW5zaGFkb3cgaXQgd2lsbCB1c2UgXCJzb21lLXZhbHVlXCIgYXMgdGhlIGluaXRpYWwgdmFsdWUgcmF0aGVyIHRoYW4gXCJhbm90aGVyLXZhbHVlXCJcbiAgICAgICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAgICAgLy8gIFRoZSBjYXNlIHdoZXJlIHRoZSBhdHRyaWJ1dGUgd2FzIE5PVCBzZXQgaW5saW5lIGJ1dCB3YXMgbm90IHNldCBwcm9ncmFtbWF0aWNhbGx5IHNoYWxsIGJlIGhhbmRsZWQvdW5zaGFkb3dlZFxuICAgICAgICAgICAgICAgICAgICAvLyAgYnkgY29ubmVjdGVkQ2FsbGJhY2sgYXMgdGhpcyBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sgd2lsbCBub3QgZmlyZS5cbiAgICAgICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAgICAgLy8gIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi9mdW5kYW1lbnRhbHMvd2ViLWNvbXBvbmVudHMvYmVzdC1wcmFjdGljZXMjbGF6eS1wcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vICBUT0RPKFNURU5DSUwtMTYpIHdlIHNob3VsZCB0aGluayBhYm91dCB3aGV0aGVyIG9yIG5vdCB3ZSBhY3R1YWxseSB3YW50IHRvIGJlIHJlZmxlY3RpbmcgdGhlIGF0dHJpYnV0ZXMgdG9cbiAgICAgICAgICAgICAgICAgICAgLy8gIHByb3BlcnRpZXMgaGVyZSBnaXZlbiB0aGF0IHRoaXMgZ29lcyBhZ2FpbnN0IGJlc3QgcHJhY3RpY2VzIG91dGxpbmVkIGhlcmVcbiAgICAgICAgICAgICAgICAgICAgLy8gIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi9mdW5kYW1lbnRhbHMvd2ViLWNvbXBvbmVudHMvYmVzdC1wcmFjdGljZXMjYXZvaWQtcmVlbnRyYW5jeVxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eShwcm9wTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlID0gdGhpc1twcm9wTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgdGhpc1twcm9wTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAocHJvdG90eXBlLmhhc093blByb3BlcnR5KHByb3BOYW1lKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHRoaXNbcHJvcE5hbWVdID09PSAnbnVtYmVyJyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1twcm9wTmFtZV0gPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBwcm9wTmFtZSBleGlzdHMgb24gdGhlIHByb3RvdHlwZSBvZiBgQ3N0cmAsIHRoaXMgdXBkYXRlIG1heSBiZSBhIHJlc3VsdCBvZiBTdGVuY2lsIHVzaW5nIG5hdGl2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQVBJcyB0byByZWZsZWN0IHByb3BzIGFzIGF0dHJpYnV0ZXMuIENhbGxzIHRvIGBzZXRBdHRyaWJ1dGUoc29tZUVsZW1lbnQsIHByb3BOYW1lKWAgd2lsbCByZXN1bHQgaW5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGBwcm9wTmFtZWAgdG8gYmUgY29udmVydGVkIHRvIGEgYERPTVN0cmluZ2AsIHdoaWNoIG1heSBub3QgYmUgd2hhdCB3ZSB3YW50IGZvciBvdGhlciBwcmltaXRpdmUgcHJvcHMuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpc1twcm9wTmFtZV0gPSBuZXdWYWx1ZSA9PT0gbnVsbCAmJiB0eXBlb2YgdGhpc1twcm9wTmFtZV0gPT09ICdib29sZWFuJyA/IGZhbHNlIDogbmV3VmFsdWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgLy8gY3JlYXRlIGFuIGFycmF5IG9mIGF0dHJpYnV0ZXMgdG8gb2JzZXJ2ZVxuICAgICAgICAgICAgLy8gYW5kIGFsc28gY3JlYXRlIGEgbWFwIG9mIGh0bWwgYXR0cmlidXRlIG5hbWUgdG8ganMgcHJvcGVydHkgbmFtZVxuICAgICAgICAgICAgQ3N0ci5vYnNlcnZlZEF0dHJpYnV0ZXMgPSBtZW1iZXJzXG4gICAgICAgICAgICAgICAgLmZpbHRlcigoW18sIG1dKSA9PiBtWzBdICYgMTUgLyogSGFzQXR0cmlidXRlICovKSAvLyBmaWx0ZXIgdG8gb25seSBrZWVwIHByb3BzIHRoYXQgc2hvdWxkIG1hdGNoIGF0dHJpYnV0ZXNcbiAgICAgICAgICAgICAgICAubWFwKChbcHJvcE5hbWUsIG1dKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgYXR0ck5hbWUgPSBtWzFdIHx8IHByb3BOYW1lO1xuICAgICAgICAgICAgICAgIGF0dHJOYW1lVG9Qcm9wTmFtZS5zZXQoYXR0ck5hbWUsIHByb3BOYW1lKTtcbiAgICAgICAgICAgICAgICBpZiAoQlVJTEQucmVmbGVjdCAmJiBtWzBdICYgNTEyIC8qIFJlZmxlY3RBdHRyICovKSB7XG4gICAgICAgICAgICAgICAgICAgIGNtcE1ldGEuJGF0dHJzVG9SZWZsZWN0JC5wdXNoKFtwcm9wTmFtZSwgYXR0ck5hbWVdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF0dHJOYW1lO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIENzdHI7XG59O1xuY29uc3QgaW5pdGlhbGl6ZUNvbXBvbmVudCA9IGFzeW5jIChlbG0sIGhvc3RSZWYsIGNtcE1ldGEsIGhtclZlcnNpb25JZCwgQ3N0cikgPT4ge1xuICAgIC8vIGluaXRpYWxpemVDb21wb25lbnRcbiAgICBpZiAoKEJVSUxELmxhenlMb2FkIHx8IEJVSUxELmh5ZHJhdGVTZXJ2ZXJTaWRlIHx8IEJVSUxELnN0eWxlKSAmJlxuICAgICAgICAoaG9zdFJlZi4kZmxhZ3MkICYgMzIgLyogaGFzSW5pdGlhbGl6ZWRDb21wb25lbnQgKi8pID09PSAwKSB7XG4gICAgICAgIGlmIChCVUlMRC5sYXp5TG9hZCB8fCBCVUlMRC5oeWRyYXRlQ2xpZW50U2lkZSkge1xuICAgICAgICAgICAgLy8gd2UgaGF2ZW4ndCBpbml0aWFsaXplZCB0aGlzIGVsZW1lbnQgeWV0XG4gICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMzIgLyogaGFzSW5pdGlhbGl6ZWRDb21wb25lbnQgKi87XG4gICAgICAgICAgICAvLyBsYXp5IGxvYWRlZCBjb21wb25lbnRzXG4gICAgICAgICAgICAvLyByZXF1ZXN0IHRoZSBjb21wb25lbnQncyBpbXBsZW1lbnRhdGlvbiB0byBiZVxuICAgICAgICAgICAgLy8gd2lyZWQgdXAgd2l0aCB0aGUgaG9zdCBlbGVtZW50XG4gICAgICAgICAgICBDc3RyID0gbG9hZE1vZHVsZShjbXBNZXRhLCBob3N0UmVmLCBobXJWZXJzaW9uSWQpO1xuICAgICAgICAgICAgaWYgKENzdHIudGhlbikge1xuICAgICAgICAgICAgICAgIC8vIEF3YWl0IGNyZWF0ZXMgYSBtaWNyby10YXNrIGF2b2lkIGlmIHBvc3NpYmxlXG4gICAgICAgICAgICAgICAgY29uc3QgZW5kTG9hZCA9IHVuaXF1ZVRpbWUoYHN0OmxvYWQ6JHtjbXBNZXRhLiR0YWdOYW1lJH06JHtob3N0UmVmLiRtb2RlTmFtZSR9YCwgYFtTdGVuY2lsXSBMb2FkIG1vZHVsZSBmb3IgPCR7Y21wTWV0YS4kdGFnTmFtZSR9PmApO1xuICAgICAgICAgICAgICAgIENzdHIgPSBhd2FpdCBDc3RyO1xuICAgICAgICAgICAgICAgIGVuZExvYWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoQlVJTEQuaXNEZXYgfHwgQlVJTEQuaXNEZWJ1ZykgJiYgIUNzdHIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENvbnN0cnVjdG9yIGZvciBcIiR7Y21wTWV0YS4kdGFnTmFtZSR9IyR7aG9zdFJlZi4kbW9kZU5hbWUkfVwiIHdhcyBub3QgZm91bmRgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC5tZW1iZXIgJiYgIUNzdHIuaXNQcm94aWVkKSB7XG4gICAgICAgICAgICAgICAgLy8gd2UndmUgbmV2ZXIgcHJveGllZCB0aGlzIENvbnN0cnVjdG9yIGJlZm9yZVxuICAgICAgICAgICAgICAgIC8vIGxldCdzIGFkZCB0aGUgZ2V0dGVycy9zZXR0ZXJzIHRvIGl0cyBwcm90b3R5cGUgYmVmb3JlXG4gICAgICAgICAgICAgICAgLy8gdGhlIGZpcnN0IHRpbWUgd2UgY3JlYXRlIGFuIGluc3RhbmNlIG9mIHRoZSBpbXBsZW1lbnRhdGlvblxuICAgICAgICAgICAgICAgIGlmIChCVUlMRC53YXRjaENhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNtcE1ldGEuJHdhdGNoZXJzJCA9IENzdHIud2F0Y2hlcnM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHByb3h5Q29tcG9uZW50KENzdHIsIGNtcE1ldGEsIDIgLyogcHJveHlTdGF0ZSAqLyk7XG4gICAgICAgICAgICAgICAgQ3N0ci5pc1Byb3hpZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZW5kTmV3SW5zdGFuY2UgPSBjcmVhdGVUaW1lKCdjcmVhdGVJbnN0YW5jZScsIGNtcE1ldGEuJHRhZ05hbWUkKTtcbiAgICAgICAgICAgIC8vIG9rLCB0aW1lIHRvIGNvbnN0cnVjdCB0aGUgaW5zdGFuY2VcbiAgICAgICAgICAgIC8vIGJ1dCBsZXQncyBrZWVwIHRyYWNrIG9mIHdoZW4gd2Ugc3RhcnQgYW5kIHN0b3BcbiAgICAgICAgICAgIC8vIHNvIHRoYXQgdGhlIGdldHRlcnMvc2V0dGVycyBkb24ndCBpbmNvcnJlY3RseSBzdGVwIG9uIGRhdGFcbiAgICAgICAgICAgIGlmIChCVUlMRC5tZW1iZXIpIHtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gOCAvKiBpc0NvbnN0cnVjdGluZ0luc3RhbmNlICovO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gY29uc3RydWN0IHRoZSBsYXp5LWxvYWRlZCBjb21wb25lbnQgaW1wbGVtZW50YXRpb25cbiAgICAgICAgICAgIC8vIHBhc3NpbmcgdGhlIGhvc3RSZWYgaXMgdmVyeSBpbXBvcnRhbnQgZHVyaW5nXG4gICAgICAgICAgICAvLyBjb25zdHJ1Y3Rpb24gaW4gb3JkZXIgdG8gZGlyZWN0bHkgd2lyZSB0b2dldGhlciB0aGVcbiAgICAgICAgICAgIC8vIGhvc3QgZWxlbWVudCBhbmQgdGhlIGxhenktbG9hZGVkIGluc3RhbmNlXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIG5ldyBDc3RyKGhvc3RSZWYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlRXJyb3IoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQlVJTEQubWVtYmVyKSB7XG4gICAgICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkICY9IH44IC8qIGlzQ29uc3RydWN0aW5nSW5zdGFuY2UgKi87XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQlVJTEQud2F0Y2hDYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIGhvc3RSZWYuJGZsYWdzJCB8PSAxMjggLyogaXNXYXRjaFJlYWR5ICovO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZW5kTmV3SW5zdGFuY2UoKTtcbiAgICAgICAgICAgIGZpcmVDb25uZWN0ZWRDYWxsYmFjayhob3N0UmVmLiRsYXp5SW5zdGFuY2UkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIHN5bmMgY29uc3RydWN0b3IgY29tcG9uZW50XG4gICAgICAgICAgICBDc3RyID0gZWxtLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDMyIC8qIGhhc0luaXRpYWxpemVkQ29tcG9uZW50ICovO1xuICAgICAgICAgICAgLy8gd2FpdCBmb3IgdGhlIEN1c3RvbUVsZW1lbnRSZWdpc3RyeSB0byBtYXJrIHRoZSBjb21wb25lbnQgYXMgcmVhZHkgYmVmb3JlIHNldHRpbmcgYGlzV2F0Y2hSZWFkeWAuIE90aGVyd2lzZSxcbiAgICAgICAgICAgIC8vIHdhdGNoZXJzIG1heSBmaXJlIHByZW1hdHVyZWx5IGlmIGBjdXN0b21FbGVtZW50cy5nZXQoKWAvYGN1c3RvbUVsZW1lbnRzLndoZW5EZWZpbmVkKClgIHJlc29sdmVzIF9iZWZvcmVfXG4gICAgICAgICAgICAvLyBTdGVuY2lsIGhhcyBjb21wbGV0ZWQgaW5zdGFudGlhdGluZyB0aGUgY29tcG9uZW50LlxuICAgICAgICAgICAgY3VzdG9tRWxlbWVudHMud2hlbkRlZmluZWQoY21wTWV0YS4kdGFnTmFtZSQpLnRoZW4oKCkgPT4gKGhvc3RSZWYuJGZsYWdzJCB8PSAxMjggLyogaXNXYXRjaFJlYWR5ICovKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELnN0eWxlICYmIENzdHIuc3R5bGUpIHtcbiAgICAgICAgICAgIC8vIHRoaXMgY29tcG9uZW50IGhhcyBzdHlsZXMgYnV0IHdlIGhhdmVuJ3QgcmVnaXN0ZXJlZCB0aGVtIHlldFxuICAgICAgICAgICAgbGV0IHN0eWxlID0gQ3N0ci5zdHlsZTtcbiAgICAgICAgICAgIGlmIChCVUlMRC5tb2RlICYmIHR5cGVvZiBzdHlsZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBzdHlsZSA9IHN0eWxlWyhob3N0UmVmLiRtb2RlTmFtZSQgPSBjb21wdXRlTW9kZShlbG0pKV07XG4gICAgICAgICAgICAgICAgaWYgKEJVSUxELmh5ZHJhdGVTZXJ2ZXJTaWRlICYmIGhvc3RSZWYuJG1vZGVOYW1lJCkge1xuICAgICAgICAgICAgICAgICAgICBlbG0uc2V0QXR0cmlidXRlKCdzLW1vZGUnLCBob3N0UmVmLiRtb2RlTmFtZSQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHNjb3BlSWQgPSBnZXRTY29wZUlkKGNtcE1ldGEsIGhvc3RSZWYuJG1vZGVOYW1lJCk7XG4gICAgICAgICAgICBpZiAoIXN0eWxlcy5oYXMoc2NvcGVJZCkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlbmRSZWdpc3RlclN0eWxlcyA9IGNyZWF0ZVRpbWUoJ3JlZ2lzdGVyU3R5bGVzJywgY21wTWV0YS4kdGFnTmFtZSQpO1xuICAgICAgICAgICAgICAgIGlmICghQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUgJiZcbiAgICAgICAgICAgICAgICAgICAgQlVJTEQuc2hhZG93RG9tICYmXG4gICAgICAgICAgICAgICAgICAgIEJVSUxELnNoYWRvd0RvbVNoaW0gJiZcbiAgICAgICAgICAgICAgICAgICAgY21wTWV0YS4kZmxhZ3MkICYgOCAvKiBuZWVkc1NoYWRvd0RvbVNoaW0gKi8pIHtcbiAgICAgICAgICAgICAgICAgICAgc3R5bGUgPSBhd2FpdCBpbXBvcnQoJy4vc2hhZG93LWNzcy5qcycpLnRoZW4oKG0pID0+IG0uc2NvcGVDc3Moc3R5bGUsIHNjb3BlSWQsIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlZ2lzdGVyU3R5bGUoc2NvcGVJZCwgc3R5bGUsICEhKGNtcE1ldGEuJGZsYWdzJCAmIDEgLyogc2hhZG93RG9tRW5jYXBzdWxhdGlvbiAqLykpO1xuICAgICAgICAgICAgICAgIGVuZFJlZ2lzdGVyU3R5bGVzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gd2UndmUgc3VjY2Vzc2Z1bGx5IGNyZWF0ZWQgYSBsYXp5IGluc3RhbmNlXG4gICAgY29uc3QgYW5jZXN0b3JDb21wb25lbnQgPSBob3N0UmVmLiRhbmNlc3RvckNvbXBvbmVudCQ7XG4gICAgY29uc3Qgc2NoZWR1bGUgPSAoKSA9PiBzY2hlZHVsZVVwZGF0ZShob3N0UmVmLCB0cnVlKTtcbiAgICBpZiAoQlVJTEQuYXN5bmNMb2FkaW5nICYmIGFuY2VzdG9yQ29tcG9uZW50ICYmIGFuY2VzdG9yQ29tcG9uZW50WydzLXJjJ10pIHtcbiAgICAgICAgLy8gdGhpcyBpcyB0aGUgaW5pdGlhbCBsb2FkIGFuZCB0aGlzIGNvbXBvbmVudCBpdCBoYXMgYW4gYW5jZXN0b3IgY29tcG9uZW50XG4gICAgICAgIC8vIGJ1dCB0aGUgYW5jZXN0b3IgY29tcG9uZW50IGhhcyBOT1QgZmlyZWQgaXRzIHdpbGwgdXBkYXRlIGxpZmVjeWNsZSB5ZXRcbiAgICAgICAgLy8gc28gbGV0J3MganVzdCBjb29sIG91ciBqZXRzIGFuZCB3YWl0IGZvciB0aGUgYW5jZXN0b3IgdG8gY29udGludWUgZmlyc3RcbiAgICAgICAgLy8gdGhpcyB3aWxsIGdldCBmaXJlZCBvZmYgd2hlbiB0aGUgYW5jZXN0b3IgY29tcG9uZW50XG4gICAgICAgIC8vIGZpbmFsbHkgZ2V0cyBhcm91bmQgdG8gcmVuZGVyaW5nIGl0cyBsYXp5IHNlbGZcbiAgICAgICAgLy8gZmlyZSBvZmYgdGhlIGluaXRpYWwgdXBkYXRlXG4gICAgICAgIGFuY2VzdG9yQ29tcG9uZW50WydzLXJjJ10ucHVzaChzY2hlZHVsZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzY2hlZHVsZSgpO1xuICAgIH1cbn07XG5jb25zdCBmaXJlQ29ubmVjdGVkQ2FsbGJhY2sgPSAoaW5zdGFuY2UpID0+IHtcbiAgICBpZiAoQlVJTEQubGF6eUxvYWQgJiYgQlVJTEQuY29ubmVjdGVkQ2FsbGJhY2spIHtcbiAgICAgICAgc2FmZUNhbGwoaW5zdGFuY2UsICdjb25uZWN0ZWRDYWxsYmFjaycpO1xuICAgIH1cbn07XG5jb25zdCBjb25uZWN0ZWRDYWxsYmFjayA9IChlbG0pID0+IHtcbiAgICBpZiAoKHBsdC4kZmxhZ3MkICYgMSAvKiBpc1RtcERpc2Nvbm5lY3RlZCAqLykgPT09IDApIHtcbiAgICAgICAgY29uc3QgaG9zdFJlZiA9IGdldEhvc3RSZWYoZWxtKTtcbiAgICAgICAgY29uc3QgY21wTWV0YSA9IGhvc3RSZWYuJGNtcE1ldGEkO1xuICAgICAgICBjb25zdCBlbmRDb25uZWN0ZWQgPSBjcmVhdGVUaW1lKCdjb25uZWN0ZWRDYWxsYmFjaycsIGNtcE1ldGEuJHRhZ05hbWUkKTtcbiAgICAgICAgaWYgKEJVSUxELmhvc3RMaXN0ZW5lclRhcmdldFBhcmVudCkge1xuICAgICAgICAgICAgLy8gb25seSBydW4gaWYgd2UgaGF2ZSBsaXN0ZW5lcnMgYmVpbmcgYXR0YWNoZWQgdG8gYSBwYXJlbnRcbiAgICAgICAgICAgIGFkZEhvc3RFdmVudExpc3RlbmVycyhlbG0sIGhvc3RSZWYsIGNtcE1ldGEuJGxpc3RlbmVycyQsIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghKGhvc3RSZWYuJGZsYWdzJCAmIDEgLyogaGFzQ29ubmVjdGVkICovKSkge1xuICAgICAgICAgICAgLy8gZmlyc3QgdGltZSB0aGlzIGNvbXBvbmVudCBoYXMgY29ubmVjdGVkXG4gICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMSAvKiBoYXNDb25uZWN0ZWQgKi87XG4gICAgICAgICAgICBsZXQgaG9zdElkO1xuICAgICAgICAgICAgaWYgKEJVSUxELmh5ZHJhdGVDbGllbnRTaWRlKSB7XG4gICAgICAgICAgICAgICAgaG9zdElkID0gZWxtLmdldEF0dHJpYnV0ZShIWURSQVRFX0lEKTtcbiAgICAgICAgICAgICAgICBpZiAoaG9zdElkKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zaGFkb3dEb20gJiYgc3VwcG9ydHNTaGFkb3cgJiYgY21wTWV0YS4kZmxhZ3MkICYgMSAvKiBzaGFkb3dEb21FbmNhcHN1bGF0aW9uICovKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzY29wZUlkID0gQlVJTEQubW9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gYWRkU3R5bGUoZWxtLnNoYWRvd1Jvb3QsIGNtcE1ldGEsIGVsbS5nZXRBdHRyaWJ1dGUoJ3MtbW9kZScpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogYWRkU3R5bGUoZWxtLnNoYWRvd1Jvb3QsIGNtcE1ldGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxtLmNsYXNzTGlzdC5yZW1vdmUoc2NvcGVJZCArICctaCcsIHNjb3BlSWQgKyAnLXMnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpbml0aWFsaXplQ2xpZW50SHlkcmF0ZShlbG0sIGNtcE1ldGEuJHRhZ05hbWUkLCBob3N0SWQsIGhvc3RSZWYpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC5zbG90UmVsb2NhdGlvbiAmJiAhaG9zdElkKSB7XG4gICAgICAgICAgICAgICAgLy8gaW5pdFVwZGF0ZVxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBzbG90IHBvbHlmaWxsIGlzIHJlcXVpcmVkIHdlJ2xsIG5lZWQgdG8gcHV0IHNvbWUgbm9kZXNcbiAgICAgICAgICAgICAgICAvLyBpbiBoZXJlIHRvIGFjdCBhcyBvcmlnaW5hbCBjb250ZW50IGFuY2hvcnMgYXMgd2UgbW92ZSBub2RlcyBhcm91bmRcbiAgICAgICAgICAgICAgICAvLyBob3N0IGVsZW1lbnQgaGFzIGJlZW4gY29ubmVjdGVkIHRvIHRoZSBET01cbiAgICAgICAgICAgICAgICBpZiAoQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUgfHxcbiAgICAgICAgICAgICAgICAgICAgKChCVUlMRC5zbG90IHx8IEJVSUxELnNoYWRvd0RvbSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNtcE1ldGEuJGZsYWdzJCAmICg0IC8qIGhhc1Nsb3RSZWxvY2F0aW9uICovIHwgOCAvKiBuZWVkc1NoYWRvd0RvbVNoaW0gKi8pKSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRDb250ZW50UmVmZXJlbmNlKGVsbSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELmFzeW5jTG9hZGluZykge1xuICAgICAgICAgICAgICAgIC8vIGZpbmQgdGhlIGZpcnN0IGFuY2VzdG9yIGNvbXBvbmVudCAoaWYgdGhlcmUgaXMgb25lKSBhbmQgcmVnaXN0ZXJcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGNvbXBvbmVudCBhcyBvbmUgb2YgdGhlIGFjdGl2ZWx5IGxvYWRpbmcgY2hpbGQgY29tcG9uZW50cyBmb3IgaXRzIGFuY2VzdG9yXG4gICAgICAgICAgICAgICAgbGV0IGFuY2VzdG9yQ29tcG9uZW50ID0gZWxtO1xuICAgICAgICAgICAgICAgIHdoaWxlICgoYW5jZXN0b3JDb21wb25lbnQgPSBhbmNlc3RvckNvbXBvbmVudC5wYXJlbnROb2RlIHx8IGFuY2VzdG9yQ29tcG9uZW50Lmhvc3QpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGNsaW1iIHVwIHRoZSBhbmNlc3RvcnMgbG9va2luZyBmb3IgdGhlIGZpcnN0XG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbXBvbmVudCB0aGF0IGhhc24ndCBmaW5pc2hlZCBpdHMgbGlmZWN5Y2xlIHVwZGF0ZSB5ZXRcbiAgICAgICAgICAgICAgICAgICAgaWYgKChCVUlMRC5oeWRyYXRlQ2xpZW50U2lkZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgYW5jZXN0b3JDb21wb25lbnQubm9kZVR5cGUgPT09IDEgLyogRWxlbWVudE5vZGUgKi8gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGFuY2VzdG9yQ29tcG9uZW50Lmhhc0F0dHJpYnV0ZSgncy1pZCcpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBhbmNlc3RvckNvbXBvbmVudFsncy1wJ10pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBhbmNlc3RvckNvbXBvbmVudFsncy1wJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdlIGZvdW5kIHRoaXMgY29tcG9uZW50cyBmaXJzdCBhbmNlc3RvciBjb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGtlZXAgYSByZWZlcmVuY2UgdG8gdGhpcyBjb21wb25lbnQncyBhbmNlc3RvciBjb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dGFjaFRvQW5jZXN0b3IoaG9zdFJlZiwgKGhvc3RSZWYuJGFuY2VzdG9yQ29tcG9uZW50JCA9IGFuY2VzdG9yQ29tcG9uZW50KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIExhenkgcHJvcGVydGllc1xuICAgICAgICAgICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vd2ViL2Z1bmRhbWVudGFscy93ZWItY29tcG9uZW50cy9iZXN0LXByYWN0aWNlcyNsYXp5LXByb3BlcnRpZXNcbiAgICAgICAgICAgIGlmIChCVUlMRC5wcm9wICYmICFCVUlMRC5oeWRyYXRlU2VydmVyU2lkZSAmJiBjbXBNZXRhLiRtZW1iZXJzJCkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKGNtcE1ldGEuJG1lbWJlcnMkKS5tYXAoKFttZW1iZXJOYW1lLCBbbWVtYmVyRmxhZ3NdXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAobWVtYmVyRmxhZ3MgJiAzMSAvKiBQcm9wICovICYmIGVsbS5oYXNPd25Qcm9wZXJ0eShtZW1iZXJOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBlbG1bbWVtYmVyTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgZWxtW21lbWJlck5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxtW21lbWJlck5hbWVdID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC5pbml0aWFsaXplTmV4dFRpY2spIHtcbiAgICAgICAgICAgICAgICAvLyBjb25uZWN0ZWRDYWxsYmFjaywgdGFza1F1ZXVlLCBpbml0aWFsTG9hZFxuICAgICAgICAgICAgICAgIC8vIGFuZ3VsYXIgc2V0cyBhdHRyaWJ1dGUgQUZURVIgY29ubmVjdENhbGxiYWNrXG4gICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci9pc3N1ZXMvMTg5MDlcbiAgICAgICAgICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8xOTk0MFxuICAgICAgICAgICAgICAgIG5leHRUaWNrKCgpID0+IGluaXRpYWxpemVDb21wb25lbnQoZWxtLCBob3N0UmVmLCBjbXBNZXRhKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbml0aWFsaXplQ29tcG9uZW50KGVsbSwgaG9zdFJlZiwgY21wTWV0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBub3QgdGhlIGZpcnN0IHRpbWUgdGhpcyBoYXMgY29ubmVjdGVkXG4gICAgICAgICAgICAvLyByZWF0dGFjaCBhbnkgZXZlbnQgbGlzdGVuZXJzIHRvIHRoZSBob3N0XG4gICAgICAgICAgICAvLyBzaW5jZSB0aGV5IHdvdWxkIGhhdmUgYmVlbiByZW1vdmVkIHdoZW4gZGlzY29ubmVjdGVkXG4gICAgICAgICAgICBhZGRIb3N0RXZlbnRMaXN0ZW5lcnMoZWxtLCBob3N0UmVmLCBjbXBNZXRhLiRsaXN0ZW5lcnMkLCBmYWxzZSk7XG4gICAgICAgICAgICAvLyBmaXJlIG9mZiBjb25uZWN0ZWRDYWxsYmFjaygpIG9uIGNvbXBvbmVudCBpbnN0YW5jZVxuICAgICAgICAgICAgZmlyZUNvbm5lY3RlZENhbGxiYWNrKGhvc3RSZWYuJGxhenlJbnN0YW5jZSQpO1xuICAgICAgICB9XG4gICAgICAgIGVuZENvbm5lY3RlZCgpO1xuICAgIH1cbn07XG5jb25zdCBzZXRDb250ZW50UmVmZXJlbmNlID0gKGVsbSkgPT4ge1xuICAgIC8vIG9ubHkgcmVxdWlyZWQgd2hlbiB3ZSdyZSBOT1QgdXNpbmcgbmF0aXZlIHNoYWRvdyBkb20gKHNsb3QpXG4gICAgLy8gb3IgdGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBuYXRpdmUgc2hhZG93IGRvbVxuICAgIC8vIGFuZCB0aGlzIGhvc3QgZWxlbWVudCB3YXMgTk9UIGNyZWF0ZWQgd2l0aCBTU1JcbiAgICAvLyBsZXQncyBwaWNrIG91dCB0aGUgaW5uZXIgY29udGVudCBmb3Igc2xvdCBwcm9qZWN0aW9uXG4gICAgLy8gY3JlYXRlIGEgbm9kZSB0byByZXByZXNlbnQgd2hlcmUgdGhlIG9yaWdpbmFsXG4gICAgLy8gY29udGVudCB3YXMgZmlyc3QgcGxhY2VkLCB3aGljaCBpcyB1c2VmdWwgbGF0ZXIgb25cbiAgICBjb25zdCBjb250ZW50UmVmRWxtID0gKGVsbVsncy1jciddID0gZG9jLmNyZWF0ZUNvbW1lbnQoQlVJTEQuaXNEZWJ1ZyA/IGBjb250ZW50LXJlZiAoaG9zdD0ke2VsbS5sb2NhbE5hbWV9KWAgOiAnJykpO1xuICAgIGNvbnRlbnRSZWZFbG1bJ3MtY24nXSA9IHRydWU7XG4gICAgZWxtLmluc2VydEJlZm9yZShjb250ZW50UmVmRWxtLCBlbG0uZmlyc3RDaGlsZCk7XG59O1xuY29uc3QgZGlzY29ubmVjdGVkQ2FsbGJhY2sgPSAoZWxtKSA9PiB7XG4gICAgaWYgKChwbHQuJGZsYWdzJCAmIDEgLyogaXNUbXBEaXNjb25uZWN0ZWQgKi8pID09PSAwKSB7XG4gICAgICAgIGNvbnN0IGhvc3RSZWYgPSBnZXRIb3N0UmVmKGVsbSk7XG4gICAgICAgIGNvbnN0IGluc3RhbmNlID0gQlVJTEQubGF6eUxvYWQgPyBob3N0UmVmLiRsYXp5SW5zdGFuY2UkIDogZWxtO1xuICAgICAgICBpZiAoQlVJTEQuaG9zdExpc3RlbmVyKSB7XG4gICAgICAgICAgICBpZiAoaG9zdFJlZi4kcm1MaXN0ZW5lcnMkKSB7XG4gICAgICAgICAgICAgICAgaG9zdFJlZi4kcm1MaXN0ZW5lcnMkLm1hcCgocm1MaXN0ZW5lcikgPT4gcm1MaXN0ZW5lcigpKTtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRybUxpc3RlbmVycyQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gY2xlYXIgQ1NTIHZhci1zaGltIHRyYWNraW5nXG4gICAgICAgIGlmIChCVUlMRC5jc3NWYXJTaGltICYmIHBsdC4kY3NzU2hpbSQpIHtcbiAgICAgICAgICAgIHBsdC4kY3NzU2hpbSQucmVtb3ZlSG9zdChlbG0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC5sYXp5TG9hZCAmJiBCVUlMRC5kaXNjb25uZWN0ZWRDYWxsYmFjaykge1xuICAgICAgICAgICAgc2FmZUNhbGwoaW5zdGFuY2UsICdkaXNjb25uZWN0ZWRDYWxsYmFjaycpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC5jbXBEaWRVbmxvYWQpIHtcbiAgICAgICAgICAgIHNhZmVDYWxsKGluc3RhbmNlLCAnY29tcG9uZW50RGlkVW5sb2FkJyk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuY29uc3QgZGVmaW5lQ3VzdG9tRWxlbWVudCA9IChDc3RyLCBjb21wYWN0TWV0YSkgPT4ge1xuICAgIGN1c3RvbUVsZW1lbnRzLmRlZmluZShjb21wYWN0TWV0YVsxXSwgcHJveHlDdXN0b21FbGVtZW50KENzdHIsIGNvbXBhY3RNZXRhKSk7XG59O1xuY29uc3QgcHJveHlDdXN0b21FbGVtZW50ID0gKENzdHIsIGNvbXBhY3RNZXRhKSA9PiB7XG4gICAgY29uc3QgY21wTWV0YSA9IHtcbiAgICAgICAgJGZsYWdzJDogY29tcGFjdE1ldGFbMF0sXG4gICAgICAgICR0YWdOYW1lJDogY29tcGFjdE1ldGFbMV0sXG4gICAgfTtcbiAgICBpZiAoQlVJTEQubWVtYmVyKSB7XG4gICAgICAgIGNtcE1ldGEuJG1lbWJlcnMkID0gY29tcGFjdE1ldGFbMl07XG4gICAgfVxuICAgIGlmIChCVUlMRC5ob3N0TGlzdGVuZXIpIHtcbiAgICAgICAgY21wTWV0YS4kbGlzdGVuZXJzJCA9IGNvbXBhY3RNZXRhWzNdO1xuICAgIH1cbiAgICBpZiAoQlVJTEQud2F0Y2hDYWxsYmFjaykge1xuICAgICAgICBjbXBNZXRhLiR3YXRjaGVycyQgPSBDc3RyLiR3YXRjaGVycyQ7XG4gICAgfVxuICAgIGlmIChCVUlMRC5yZWZsZWN0KSB7XG4gICAgICAgIGNtcE1ldGEuJGF0dHJzVG9SZWZsZWN0JCA9IFtdO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuc2hhZG93RG9tICYmICFzdXBwb3J0c1NoYWRvdyAmJiBjbXBNZXRhLiRmbGFncyQgJiAxIC8qIHNoYWRvd0RvbUVuY2Fwc3VsYXRpb24gKi8pIHtcbiAgICAgICAgY21wTWV0YS4kZmxhZ3MkIHw9IDggLyogbmVlZHNTaGFkb3dEb21TaGltICovO1xuICAgIH1cbiAgICBjb25zdCBvcmlnaW5hbENvbm5lY3RlZENhbGxiYWNrID0gQ3N0ci5wcm90b3R5cGUuY29ubmVjdGVkQ2FsbGJhY2s7XG4gICAgY29uc3Qgb3JpZ2luYWxEaXNjb25uZWN0ZWRDYWxsYmFjayA9IENzdHIucHJvdG90eXBlLmRpc2Nvbm5lY3RlZENhbGxiYWNrO1xuICAgIE9iamVjdC5hc3NpZ24oQ3N0ci5wcm90b3R5cGUsIHtcbiAgICAgICAgX19yZWdpc3Rlckhvc3QoKSB7XG4gICAgICAgICAgICByZWdpc3Rlckhvc3QodGhpcywgY21wTWV0YSk7XG4gICAgICAgIH0sXG4gICAgICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICAgICAgY29ubmVjdGVkQ2FsbGJhY2sodGhpcyk7XG4gICAgICAgICAgICBpZiAoQlVJTEQuY29ubmVjdGVkQ2FsbGJhY2sgJiYgb3JpZ2luYWxDb25uZWN0ZWRDYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIG9yaWdpbmFsQ29ubmVjdGVkQ2FsbGJhY2suY2FsbCh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICAgICAgICBkaXNjb25uZWN0ZWRDYWxsYmFjayh0aGlzKTtcbiAgICAgICAgICAgIGlmIChCVUlMRC5kaXNjb25uZWN0ZWRDYWxsYmFjayAmJiBvcmlnaW5hbERpc2Nvbm5lY3RlZENhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgb3JpZ2luYWxEaXNjb25uZWN0ZWRDYWxsYmFjay5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBfX2F0dGFjaFNoYWRvdygpIHtcbiAgICAgICAgICAgIGlmIChzdXBwb3J0c1NoYWRvdykge1xuICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zaGFkb3dEZWxlZ2F0ZXNGb2N1cykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmF0dGFjaFNoYWRvdyh7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlOiAnb3BlbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxlZ2F0ZXNGb2N1czogISEoY21wTWV0YS4kZmxhZ3MkICYgMTYgLyogc2hhZG93RGVsZWdhdGVzRm9jdXMgKi8pLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXR0YWNoU2hhZG93KHsgbW9kZTogJ29wZW4nIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc2hhZG93Um9vdCA9IHRoaXM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgQ3N0ci5pcyA9IGNtcE1ldGEuJHRhZ05hbWUkO1xuICAgIHJldHVybiBwcm94eUNvbXBvbmVudChDc3RyLCBjbXBNZXRhLCAxIC8qIGlzRWxlbWVudENvbnN0cnVjdG9yICovIHwgMiAvKiBwcm94eVN0YXRlICovKTtcbn07XG5jb25zdCBmb3JjZU1vZGVVcGRhdGUgPSAoZWxtKSA9PiB7XG4gICAgaWYgKEJVSUxELnN0eWxlICYmIEJVSUxELm1vZGUgJiYgIUJVSUxELmxhenlMb2FkKSB7XG4gICAgICAgIGNvbnN0IG1vZGUgPSBjb21wdXRlTW9kZShlbG0pO1xuICAgICAgICBjb25zdCBob3N0UmVmID0gZ2V0SG9zdFJlZihlbG0pO1xuICAgICAgICBpZiAoaG9zdFJlZi4kbW9kZU5hbWUkICE9PSBtb2RlKSB7XG4gICAgICAgICAgICBjb25zdCBjbXBNZXRhID0gaG9zdFJlZi4kY21wTWV0YSQ7XG4gICAgICAgICAgICBjb25zdCBvbGRTY29wZUlkID0gZWxtWydzLXNjJ107XG4gICAgICAgICAgICBjb25zdCBzY29wZUlkID0gZ2V0U2NvcGVJZChjbXBNZXRhLCBtb2RlKTtcbiAgICAgICAgICAgIGNvbnN0IHN0eWxlID0gZWxtLmNvbnN0cnVjdG9yLnN0eWxlW21vZGVdO1xuICAgICAgICAgICAgY29uc3QgZmxhZ3MgPSBjbXBNZXRhLiRmbGFncyQ7XG4gICAgICAgICAgICBpZiAoc3R5bGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXN0eWxlcy5oYXMoc2NvcGVJZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVnaXN0ZXJTdHlsZShzY29wZUlkLCBzdHlsZSwgISEoZmxhZ3MgJiAxIC8qIHNoYWRvd0RvbUVuY2Fwc3VsYXRpb24gKi8pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaG9zdFJlZi4kbW9kZU5hbWUkID0gbW9kZTtcbiAgICAgICAgICAgICAgICBlbG0uY2xhc3NMaXN0LnJlbW92ZShvbGRTY29wZUlkICsgJy1oJywgb2xkU2NvcGVJZCArICctcycpO1xuICAgICAgICAgICAgICAgIGF0dGFjaFN0eWxlcyhob3N0UmVmKTtcbiAgICAgICAgICAgICAgICBmb3JjZVVwZGF0ZShlbG0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IGhtclN0YXJ0ID0gKGVsbSwgY21wTWV0YSwgaG1yVmVyc2lvbklkKSA9PiB7XG4gICAgLy8gwq9cXF8o44OEKV8vwq9cbiAgICBjb25zdCBob3N0UmVmID0gZ2V0SG9zdFJlZihlbG0pO1xuICAgIC8vIHJlc2V0IHN0YXRlIGZsYWdzIHRvIG9ubHkgaGF2ZSBiZWVuIGNvbm5lY3RlZFxuICAgIGhvc3RSZWYuJGZsYWdzJCA9IDEgLyogaGFzQ29ubmVjdGVkICovO1xuICAgIC8vIFRPRE9cbiAgICAvLyBkZXRhdGNoIGFueSBldmVudCBsaXN0ZW5lcnMgdGhhdCBtYXkgaGF2ZSBiZWVuIGFkZGVkXG4gICAgLy8gYmVjYXVzZSB3ZSdyZSBub3QgcGFzc2luZyBhbiBleGFjdCBldmVudCBuYW1lIGl0J2xsXG4gICAgLy8gcmVtb3ZlIGFsbCBvZiB0aGlzIGVsZW1lbnQncyBldmVudCwgd2hpY2ggaXMgZ29vZFxuICAgIC8vIGNyZWF0ZSBhIGNhbGxiYWNrIGZvciB3aGVuIHRoaXMgY29tcG9uZW50IGZpbmlzaGVzIGhtclxuICAgIGVsbVsncy1obXItbG9hZCddID0gKCkgPT4ge1xuICAgICAgICAvLyBmaW5pc2hlZCBobXIgZm9yIHRoaXMgZWxlbWVudFxuICAgICAgICBkZWxldGUgZWxtWydzLWhtci1sb2FkJ107XG4gICAgfTtcbiAgICAvLyByZS1pbml0aWFsaXplIHRoZSBjb21wb25lbnRcbiAgICBpbml0aWFsaXplQ29tcG9uZW50KGVsbSwgaG9zdFJlZiwgY21wTWV0YSwgaG1yVmVyc2lvbklkKTtcbn07XG5jb25zdCBwYXRjaENsb25lTm9kZSA9IChIb3N0RWxlbWVudFByb3RvdHlwZSkgPT4ge1xuICAgIGNvbnN0IG9yZ0Nsb25lTm9kZSA9IEhvc3RFbGVtZW50UHJvdG90eXBlLmNsb25lTm9kZTtcbiAgICBIb3N0RWxlbWVudFByb3RvdHlwZS5jbG9uZU5vZGUgPSBmdW5jdGlvbiAoZGVlcCkge1xuICAgICAgICBjb25zdCBzcmNOb2RlID0gdGhpcztcbiAgICAgICAgY29uc3QgaXNTaGFkb3dEb20gPSBCVUlMRC5zaGFkb3dEb20gPyBzcmNOb2RlLnNoYWRvd1Jvb3QgJiYgc3VwcG9ydHNTaGFkb3cgOiBmYWxzZTtcbiAgICAgICAgY29uc3QgY2xvbmVkTm9kZSA9IG9yZ0Nsb25lTm9kZS5jYWxsKHNyY05vZGUsIGlzU2hhZG93RG9tID8gZGVlcCA6IGZhbHNlKTtcbiAgICAgICAgaWYgKEJVSUxELnNsb3QgJiYgIWlzU2hhZG93RG9tICYmIGRlZXApIHtcbiAgICAgICAgICAgIGxldCBpID0gMDtcbiAgICAgICAgICAgIGxldCBzbG90dGVkLCBub25TdGVuY2lsTm9kZTtcbiAgICAgICAgICAgIGNvbnN0IHN0ZW5jaWxQcml2YXRlcyA9IFtcbiAgICAgICAgICAgICAgICAncy1pZCcsXG4gICAgICAgICAgICAgICAgJ3MtY3InLFxuICAgICAgICAgICAgICAgICdzLWxyJyxcbiAgICAgICAgICAgICAgICAncy1yYycsXG4gICAgICAgICAgICAgICAgJ3Mtc2MnLFxuICAgICAgICAgICAgICAgICdzLXAnLFxuICAgICAgICAgICAgICAgICdzLWNuJyxcbiAgICAgICAgICAgICAgICAncy1zcicsXG4gICAgICAgICAgICAgICAgJ3Mtc24nLFxuICAgICAgICAgICAgICAgICdzLWhuJyxcbiAgICAgICAgICAgICAgICAncy1vbCcsXG4gICAgICAgICAgICAgICAgJ3MtbnInLFxuICAgICAgICAgICAgICAgICdzLXNpJyxcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICBmb3IgKDsgaSA8IHNyY05vZGUuY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHNsb3R0ZWQgPSBzcmNOb2RlLmNoaWxkTm9kZXNbaV1bJ3MtbnInXTtcbiAgICAgICAgICAgICAgICBub25TdGVuY2lsTm9kZSA9IHN0ZW5jaWxQcml2YXRlcy5ldmVyeSgocHJpdmF0ZUZpZWxkKSA9PiAhc3JjTm9kZS5jaGlsZE5vZGVzW2ldW3ByaXZhdGVGaWVsZF0pO1xuICAgICAgICAgICAgICAgIGlmIChzbG90dGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC5hcHBlbmRDaGlsZFNsb3RGaXggJiYgY2xvbmVkTm9kZS5fX2FwcGVuZENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9uZWROb2RlLl9fYXBwZW5kQ2hpbGQoc2xvdHRlZC5jbG9uZU5vZGUodHJ1ZSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xvbmVkTm9kZS5hcHBlbmRDaGlsZChzbG90dGVkLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG5vblN0ZW5jaWxOb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsb25lZE5vZGUuYXBwZW5kQ2hpbGQoc3JjTm9kZS5jaGlsZE5vZGVzW2ldLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjbG9uZWROb2RlO1xuICAgIH07XG59O1xuY29uc3QgcGF0Y2hTbG90QXBwZW5kQ2hpbGQgPSAoSG9zdEVsZW1lbnRQcm90b3R5cGUpID0+IHtcbiAgICBIb3N0RWxlbWVudFByb3RvdHlwZS5fX2FwcGVuZENoaWxkID0gSG9zdEVsZW1lbnRQcm90b3R5cGUuYXBwZW5kQ2hpbGQ7XG4gICAgSG9zdEVsZW1lbnRQcm90b3R5cGUuYXBwZW5kQ2hpbGQgPSBmdW5jdGlvbiAobmV3Q2hpbGQpIHtcbiAgICAgICAgY29uc3Qgc2xvdE5hbWUgPSAobmV3Q2hpbGRbJ3Mtc24nXSA9IGdldFNsb3ROYW1lKG5ld0NoaWxkKSk7XG4gICAgICAgIGNvbnN0IHNsb3ROb2RlID0gZ2V0SG9zdFNsb3ROb2RlKHRoaXMuY2hpbGROb2Rlcywgc2xvdE5hbWUpO1xuICAgICAgICBpZiAoc2xvdE5vZGUpIHtcbiAgICAgICAgICAgIGNvbnN0IHNsb3RDaGlsZE5vZGVzID0gZ2V0SG9zdFNsb3RDaGlsZE5vZGVzKHNsb3ROb2RlLCBzbG90TmFtZSk7XG4gICAgICAgICAgICBjb25zdCBhcHBlbmRBZnRlciA9IHNsb3RDaGlsZE5vZGVzW3Nsb3RDaGlsZE5vZGVzLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgcmV0dXJuIGFwcGVuZEFmdGVyLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5ld0NoaWxkLCBhcHBlbmRBZnRlci5uZXh0U2libGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX19hcHBlbmRDaGlsZChuZXdDaGlsZCk7XG4gICAgfTtcbn07XG4vKipcbiAqIFBhdGNoZXMgdGhlIHRleHQgY29udGVudCBvZiBhbiB1bm5hbWVkIHNsb3R0ZWQgbm9kZSBpbnNpZGUgYSBzY29wZWQgY29tcG9uZW50XG4gKiBAcGFyYW0gaG9zdEVsZW1lbnRQcm90b3R5cGUgdGhlIGBFbGVtZW50YCB0byBiZSBwYXRjaGVkXG4gKiBAcGFyYW0gY21wTWV0YSBjb21wb25lbnQgcnVudGltZSBtZXRhZGF0YSB1c2VkIHRvIGRldGVybWluZSBpZiB0aGUgY29tcG9uZW50IHNob3VsZCBiZSBwYXRjaGVkIG9yIG5vdFxuICovXG5jb25zdCBwYXRjaFRleHRDb250ZW50ID0gKGhvc3RFbGVtZW50UHJvdG90eXBlLCBjbXBNZXRhKSA9PiB7XG4gICAgaWYgKEJVSUxELnNjb3BlZCAmJiBjbXBNZXRhLiRmbGFncyQgJiAyIC8qIHNjb3BlZENzc0VuY2Fwc3VsYXRpb24gKi8pIHtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTm9kZS5wcm90b3R5cGUsICd0ZXh0Q29udGVudCcpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaG9zdEVsZW1lbnRQcm90b3R5cGUsICdfX3RleHRDb250ZW50JywgZGVzY3JpcHRvcik7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShob3N0RWxlbWVudFByb3RvdHlwZSwgJ3RleHRDb250ZW50Jywge1xuICAgICAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICAvLyBnZXQgdGhlICdkZWZhdWx0IHNsb3QnLCB3aGljaCB3b3VsZCBiZSB0aGUgZmlyc3Qgc2xvdCBpbiBhIHNoYWRvdyB0cmVlIChpZiB3ZSB3ZXJlIHVzaW5nIG9uZSksIHdob3NlIG5hbWUgaXNcbiAgICAgICAgICAgICAgICAvLyB0aGUgZW1wdHkgc3RyaW5nXG4gICAgICAgICAgICAgICAgY29uc3Qgc2xvdE5vZGUgPSBnZXRIb3N0U2xvdE5vZGUodGhpcy5jaGlsZE5vZGVzLCAnJyk7XG4gICAgICAgICAgICAgICAgLy8gd2hlbiBhIHNsb3Qgbm9kZSBpcyBmb3VuZCwgdGhlIHRleHRDb250ZW50IF9tYXlfIGJlIGZvdW5kIGluIHRoZSBuZXh0IHNpYmxpbmcgKHRleHQpIG5vZGUsIGRlcGVuZGluZyBvbiBob3dcbiAgICAgICAgICAgICAgICAvLyBub2RlcyB3ZXJlIHJlb3JkZXJlZCBkdXJpbmcgdGhlIHZkb20gcmVuZGVyLiBmaXJzdCB0cnkgdG8gZ2V0IHRoZSB0ZXh0IGNvbnRlbnQgZnJvbSB0aGUgc2libGluZy5cbiAgICAgICAgICAgICAgICBpZiAoKChfYSA9IHNsb3ROb2RlID09PSBudWxsIHx8IHNsb3ROb2RlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzbG90Tm9kZS5uZXh0U2libGluZykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5vZGVUeXBlKSA9PT0gMyAvKiBURVhUX05PREUgKi8pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNsb3ROb2RlLm5leHRTaWJsaW5nLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzbG90Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2xvdE5vZGUudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBmYWxsYmFjayB0byB0aGUgb3JpZ2luYWwgaW1wbGVtZW50YXRpb25cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX190ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0KHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIC8vIGdldCB0aGUgJ2RlZmF1bHQgc2xvdCcsIHdoaWNoIHdvdWxkIGJlIHRoZSBmaXJzdCBzbG90IGluIGEgc2hhZG93IHRyZWUgKGlmIHdlIHdlcmUgdXNpbmcgb25lKSwgd2hvc2UgbmFtZSBpc1xuICAgICAgICAgICAgICAgIC8vIHRoZSBlbXB0eSBzdHJpbmdcbiAgICAgICAgICAgICAgICBjb25zdCBzbG90Tm9kZSA9IGdldEhvc3RTbG90Tm9kZSh0aGlzLmNoaWxkTm9kZXMsICcnKTtcbiAgICAgICAgICAgICAgICAvLyB3aGVuIGEgc2xvdCBub2RlIGlzIGZvdW5kLCB0aGUgdGV4dENvbnRlbnQgX21heV8gbmVlZCB0byBiZSBwbGFjZWQgaW4gdGhlIG5leHQgc2libGluZyAodGV4dCkgbm9kZSxcbiAgICAgICAgICAgICAgICAvLyBkZXBlbmRpbmcgb24gaG93IG5vZGVzIHdlcmUgcmVvcmRlcmVkIGR1cmluZyB0aGUgdmRvbSByZW5kZXIuIGZpcnN0IHRyeSB0byBzZXQgdGhlIHRleHQgY29udGVudCBvbiB0aGVcbiAgICAgICAgICAgICAgICAvLyBzaWJsaW5nLlxuICAgICAgICAgICAgICAgIGlmICgoKF9hID0gc2xvdE5vZGUgPT09IG51bGwgfHwgc2xvdE5vZGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNsb3ROb2RlLm5leHRTaWJsaW5nKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eubm9kZVR5cGUpID09PSAzIC8qIFRFWFRfTk9ERSAqLykge1xuICAgICAgICAgICAgICAgICAgICBzbG90Tm9kZS5uZXh0U2libGluZy50ZXh0Q29udGVudCA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzbG90Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBzbG90Tm9kZS50ZXh0Q29udGVudCA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gd2UgY291bGRuJ3QgZmluZCBhIHNsb3QsIGJ1dCB0aGF0IGRvZXNuJ3QgbWVhbiB0aGF0IHRoZXJlIGlzbid0IG9uZS4gaWYgdGhpcyBjaGVjayByYW4gYmVmb3JlIHRoZSBET01cbiAgICAgICAgICAgICAgICAgICAgLy8gbG9hZGVkLCB3ZSBjb3VsZCBoYXZlIG1pc3NlZCBpdC4gY2hlY2sgZm9yIGEgY29udGVudCByZWZlcmVuY2UgZWxlbWVudCBvbiB0aGUgc2NvcGVkIGNvbXBvbmVudCBhbmQgaW5zZXJ0XG4gICAgICAgICAgICAgICAgICAgIC8vIGl0IHRoZXJlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX190ZXh0Q29udGVudCA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50UmVmRWxtID0gdGhpc1sncy1jciddO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY29udGVudFJlZkVsbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnNlcnRCZWZvcmUoY29udGVudFJlZkVsbSwgdGhpcy5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5jb25zdCBwYXRjaENoaWxkU2xvdE5vZGVzID0gKGVsbSwgY21wTWV0YSkgPT4ge1xuICAgIGNsYXNzIEZha2VOb2RlTGlzdCBleHRlbmRzIEFycmF5IHtcbiAgICAgICAgaXRlbShuKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpc1tuXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoY21wTWV0YS4kZmxhZ3MkICYgOCAvKiBuZWVkc1NoYWRvd0RvbVNoaW0gKi8pIHtcbiAgICAgICAgY29uc3QgY2hpbGROb2Rlc0ZuID0gZWxtLl9fbG9va3VwR2V0dGVyX18oJ2NoaWxkTm9kZXMnKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVsbSwgJ2NoaWxkcmVuJywge1xuICAgICAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNoaWxkTm9kZXMubWFwKChuKSA9PiBuLm5vZGVUeXBlID09PSAxKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZWxtLCAnY2hpbGRFbGVtZW50Q291bnQnLCB7XG4gICAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsbS5jaGlsZHJlbi5sZW5ndGg7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVsbSwgJ2NoaWxkTm9kZXMnLCB7XG4gICAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGROb2RlcyA9IGNoaWxkTm9kZXNGbi5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICgocGx0LiRmbGFncyQgJiAxIC8qIGlzVG1wRGlzY29ubmVjdGVkICovKSA9PT0gMCAmJlxuICAgICAgICAgICAgICAgICAgICBnZXRIb3N0UmVmKHRoaXMpLiRmbGFncyQgJiAyIC8qIGhhc1JlbmRlcmVkICovKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBGYWtlTm9kZUxpc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzbG90ID0gY2hpbGROb2Rlc1tpXVsncy1uciddO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNsb3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChzbG90KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gRmFrZU5vZGVMaXN0LmZyb20oY2hpbGROb2Rlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG59O1xuY29uc3QgZ2V0U2xvdE5hbWUgPSAobm9kZSkgPT4gbm9kZVsncy1zbiddIHx8IChub2RlLm5vZGVUeXBlID09PSAxICYmIG5vZGUuZ2V0QXR0cmlidXRlKCdzbG90JykpIHx8ICcnO1xuLyoqXG4gKiBSZWN1cnNpdmVseSBzZWFyY2hlcyBhIHNlcmllcyBvZiBjaGlsZCBub2RlcyBmb3IgYSBzbG90IHdpdGggdGhlIHByb3ZpZGVkIG5hbWUuXG4gKiBAcGFyYW0gY2hpbGROb2RlcyB0aGUgbm9kZXMgdG8gc2VhcmNoIGZvciBhIHNsb3Qgd2l0aCBhIHNwZWNpZmljIG5hbWUuXG4gKiBAcGFyYW0gc2xvdE5hbWUgdGhlIG5hbWUgb2YgdGhlIHNsb3QgdG8gbWF0Y2ggb24uXG4gKiBAcmV0dXJucyBhIHJlZmVyZW5jZSB0byB0aGUgc2xvdCBub2RlIHRoYXQgbWF0Y2hlcyB0aGUgcHJvdmlkZWQgbmFtZSwgYG51bGxgIG90aGVyd2lzZVxuICovXG5jb25zdCBnZXRIb3N0U2xvdE5vZGUgPSAoY2hpbGROb2Rlcywgc2xvdE5hbWUpID0+IHtcbiAgICBsZXQgaSA9IDA7XG4gICAgbGV0IGNoaWxkTm9kZTtcbiAgICBmb3IgKDsgaSA8IGNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY2hpbGROb2RlID0gY2hpbGROb2Rlc1tpXTtcbiAgICAgICAgaWYgKGNoaWxkTm9kZVsncy1zciddICYmIGNoaWxkTm9kZVsncy1zbiddID09PSBzbG90TmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIGNoaWxkTm9kZTtcbiAgICAgICAgfVxuICAgICAgICBjaGlsZE5vZGUgPSBnZXRIb3N0U2xvdE5vZGUoY2hpbGROb2RlLmNoaWxkTm9kZXMsIHNsb3ROYW1lKTtcbiAgICAgICAgaWYgKGNoaWxkTm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIGNoaWxkTm9kZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn07XG5jb25zdCBnZXRIb3N0U2xvdENoaWxkTm9kZXMgPSAobiwgc2xvdE5hbWUpID0+IHtcbiAgICBjb25zdCBjaGlsZE5vZGVzID0gW25dO1xuICAgIHdoaWxlICgobiA9IG4ubmV4dFNpYmxpbmcpICYmIG5bJ3Mtc24nXSA9PT0gc2xvdE5hbWUpIHtcbiAgICAgICAgY2hpbGROb2Rlcy5wdXNoKG4pO1xuICAgIH1cbiAgICByZXR1cm4gY2hpbGROb2Rlcztcbn07XG5jb25zdCBib290c3RyYXBMYXp5ID0gKGxhenlCdW5kbGVzLCBvcHRpb25zID0ge30pID0+IHtcbiAgICBpZiAoQlVJTEQucHJvZmlsZSAmJiBwZXJmb3JtYW5jZS5tYXJrKSB7XG4gICAgICAgIHBlcmZvcm1hbmNlLm1hcmsoJ3N0OmFwcDpzdGFydCcpO1xuICAgIH1cbiAgICBpbnN0YWxsRGV2VG9vbHMoKTtcbiAgICBjb25zdCBlbmRCb290c3RyYXAgPSBjcmVhdGVUaW1lKCdib290c3RyYXBMYXp5Jyk7XG4gICAgY29uc3QgY21wVGFncyA9IFtdO1xuICAgIGNvbnN0IGV4Y2x1ZGUgPSBvcHRpb25zLmV4Y2x1ZGUgfHwgW107XG4gICAgY29uc3QgY3VzdG9tRWxlbWVudHMgPSB3aW4uY3VzdG9tRWxlbWVudHM7XG4gICAgY29uc3QgaGVhZCA9IGRvYy5oZWFkO1xuICAgIGNvbnN0IG1ldGFDaGFyc2V0ID0gLypAX19QVVJFX18qLyBoZWFkLnF1ZXJ5U2VsZWN0b3IoJ21ldGFbY2hhcnNldF0nKTtcbiAgICBjb25zdCB2aXNpYmlsaXR5U3R5bGUgPSAvKkBfX1BVUkVfXyovIGRvYy5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgIGNvbnN0IGRlZmVycmVkQ29ubmVjdGVkQ2FsbGJhY2tzID0gW107XG4gICAgY29uc3Qgc3R5bGVzID0gLypAX19QVVJFX18qLyBkb2MucXVlcnlTZWxlY3RvckFsbChgWyR7SFlEUkFURURfU1RZTEVfSUR9XWApO1xuICAgIGxldCBhcHBMb2FkRmFsbGJhY2s7XG4gICAgbGV0IGlzQm9vdHN0cmFwcGluZyA9IHRydWU7XG4gICAgbGV0IGkgPSAwO1xuICAgIE9iamVjdC5hc3NpZ24ocGx0LCBvcHRpb25zKTtcbiAgICBwbHQuJHJlc291cmNlc1VybCQgPSBuZXcgVVJMKG9wdGlvbnMucmVzb3VyY2VzVXJsIHx8ICcuLycsIGRvYy5iYXNlVVJJKS5ocmVmO1xuICAgIGlmIChCVUlMRC5hc3luY1F1ZXVlKSB7XG4gICAgICAgIGlmIChvcHRpb25zLnN5bmNRdWV1ZSkge1xuICAgICAgICAgICAgcGx0LiRmbGFncyQgfD0gNCAvKiBxdWV1ZVN5bmMgKi87XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKEJVSUxELmh5ZHJhdGVDbGllbnRTaWRlKSB7XG4gICAgICAgIC8vIElmIHRoZSBhcHAgaXMgYWxyZWFkeSBoeWRyYXRlZCB0aGVyZSBpcyBub3QgcG9pbnQgdG8gZGlzYWJsZSB0aGVcbiAgICAgICAgLy8gYXN5bmMgcXVldWUuIFRoaXMgd2lsbCBpbXByb3ZlIHRoZSBmaXJzdCBpbnB1dCBkZWxheVxuICAgICAgICBwbHQuJGZsYWdzJCB8PSAyIC8qIGFwcExvYWRlZCAqLztcbiAgICB9XG4gICAgaWYgKEJVSUxELmh5ZHJhdGVDbGllbnRTaWRlICYmIEJVSUxELnNoYWRvd0RvbSkge1xuICAgICAgICBmb3IgKDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgcmVnaXN0ZXJTdHlsZShzdHlsZXNbaV0uZ2V0QXR0cmlidXRlKEhZRFJBVEVEX1NUWUxFX0lEKSwgY29udmVydFNjb3BlZFRvU2hhZG93KHN0eWxlc1tpXS5pbm5lckhUTUwpLCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsYXp5QnVuZGxlcy5tYXAoKGxhenlCdW5kbGUpID0+IHtcbiAgICAgICAgbGF6eUJ1bmRsZVsxXS5tYXAoKGNvbXBhY3RNZXRhKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjbXBNZXRhID0ge1xuICAgICAgICAgICAgICAgICRmbGFncyQ6IGNvbXBhY3RNZXRhWzBdLFxuICAgICAgICAgICAgICAgICR0YWdOYW1lJDogY29tcGFjdE1ldGFbMV0sXG4gICAgICAgICAgICAgICAgJG1lbWJlcnMkOiBjb21wYWN0TWV0YVsyXSxcbiAgICAgICAgICAgICAgICAkbGlzdGVuZXJzJDogY29tcGFjdE1ldGFbM10sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKEJVSUxELm1lbWJlcikge1xuICAgICAgICAgICAgICAgIGNtcE1ldGEuJG1lbWJlcnMkID0gY29tcGFjdE1ldGFbMl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQlVJTEQuaG9zdExpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgY21wTWV0YS4kbGlzdGVuZXJzJCA9IGNvbXBhY3RNZXRhWzNdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELnJlZmxlY3QpIHtcbiAgICAgICAgICAgICAgICBjbXBNZXRhLiRhdHRyc1RvUmVmbGVjdCQgPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC53YXRjaENhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgY21wTWV0YS4kd2F0Y2hlcnMkID0ge307XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQlVJTEQuc2hhZG93RG9tICYmICFzdXBwb3J0c1NoYWRvdyAmJiBjbXBNZXRhLiRmbGFncyQgJiAxIC8qIHNoYWRvd0RvbUVuY2Fwc3VsYXRpb24gKi8pIHtcbiAgICAgICAgICAgICAgICBjbXBNZXRhLiRmbGFncyQgfD0gOCAvKiBuZWVkc1NoYWRvd0RvbVNoaW0gKi87XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0YWdOYW1lID0gQlVJTEQudHJhbnNmb3JtVGFnTmFtZSAmJiBvcHRpb25zLnRyYW5zZm9ybVRhZ05hbWVcbiAgICAgICAgICAgICAgICA/IG9wdGlvbnMudHJhbnNmb3JtVGFnTmFtZShjbXBNZXRhLiR0YWdOYW1lJClcbiAgICAgICAgICAgICAgICA6IGNtcE1ldGEuJHRhZ05hbWUkO1xuICAgICAgICAgICAgY29uc3QgSG9zdEVsZW1lbnQgPSBjbGFzcyBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgICAgICAgICAgICAgICAvLyBTdGVuY2lsTGF6eUhvc3RcbiAgICAgICAgICAgICAgICBjb25zdHJ1Y3RvcihzZWxmKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgICAgICAgICAgc3VwZXIoc2VsZik7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICByZWdpc3Rlckhvc3Qoc2VsZiwgY21wTWV0YSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zaGFkb3dEb20gJiYgY21wTWV0YS4kZmxhZ3MkICYgMSAvKiBzaGFkb3dEb21FbmNhcHN1bGF0aW9uICovKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvbXBvbmVudCBpcyB1c2luZyBzaGFkb3cgZG9tXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBhbmQgdGhpcyBicm93c2VyIHN1cHBvcnRzIHNoYWRvdyBkb21cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFkZCB0aGUgcmVhZC1vbmx5IHByb3BlcnR5IFwic2hhZG93Um9vdFwiIHRvIHRoZSBob3N0IGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFkZGluZyB0aGUgc2hhZG93IHJvb3QgYnVpbGQgY29uZGl0aW9uYWxzIHRvIG1pbmltaXplIHJ1bnRpbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdXBwb3J0c1NoYWRvdykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zaGFkb3dEZWxlZ2F0ZXNGb2N1cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmF0dGFjaFNoYWRvdyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlOiAnb3BlbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxlZ2F0ZXNGb2N1czogISEoY21wTWV0YS4kZmxhZ3MkICYgMTYgLyogc2hhZG93RGVsZWdhdGVzRm9jdXMgKi8pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuYXR0YWNoU2hhZG93KHsgbW9kZTogJ29wZW4nIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFCVUlMRC5oeWRyYXRlU2VydmVyU2lkZSAmJiAhKCdzaGFkb3dSb290JyBpbiBzZWxmKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2hhZG93Um9vdCA9IHNlbGY7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKEJVSUxELnNsb3RDaGlsZE5vZGVzRml4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRjaENoaWxkU2xvdE5vZGVzKHNlbGYsIGNtcE1ldGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYXBwTG9hZEZhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoYXBwTG9hZEZhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcExvYWRGYWxsYmFjayA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzQm9vdHN0cmFwcGluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29ubmVjdGVkQ2FsbGJhY2sgd2lsbCBiZSBwcm9jZXNzZWQgb25jZSBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gcmVnaXN0ZXJlZFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVmZXJyZWRDb25uZWN0ZWRDYWxsYmFja3MucHVzaCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsdC5qbXAoKCkgPT4gY29ubmVjdGVkQ2FsbGJhY2sodGhpcykpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICAgICAgICAgICAgICBwbHQuam1wKCgpID0+IGRpc2Nvbm5lY3RlZENhbGxiYWNrKHRoaXMpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29tcG9uZW50T25SZWFkeSgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdldEhvc3RSZWYodGhpcykuJG9uUmVhZHlQcm9taXNlJDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKEJVSUxELmNsb25lTm9kZUZpeCkge1xuICAgICAgICAgICAgICAgIHBhdGNoQ2xvbmVOb2RlKEhvc3RFbGVtZW50LnByb3RvdHlwZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQlVJTEQuYXBwZW5kQ2hpbGRTbG90Rml4KSB7XG4gICAgICAgICAgICAgICAgcGF0Y2hTbG90QXBwZW5kQ2hpbGQoSG9zdEVsZW1lbnQucHJvdG90eXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC5ob3RNb2R1bGVSZXBsYWNlbWVudCkge1xuICAgICAgICAgICAgICAgIEhvc3RFbGVtZW50LnByb3RvdHlwZVsncy1obXInXSA9IGZ1bmN0aW9uIChobXJWZXJzaW9uSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaG1yU3RhcnQodGhpcywgY21wTWV0YSwgaG1yVmVyc2lvbklkKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELnNjb3BlZFNsb3RUZXh0Q29udGVudEZpeCkge1xuICAgICAgICAgICAgICAgIHBhdGNoVGV4dENvbnRlbnQoSG9zdEVsZW1lbnQucHJvdG90eXBlLCBjbXBNZXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNtcE1ldGEuJGxhenlCdW5kbGVJZCQgPSBsYXp5QnVuZGxlWzBdO1xuICAgICAgICAgICAgaWYgKCFleGNsdWRlLmluY2x1ZGVzKHRhZ05hbWUpICYmICFjdXN0b21FbGVtZW50cy5nZXQodGFnTmFtZSkpIHtcbiAgICAgICAgICAgICAgICBjbXBUYWdzLnB1c2godGFnTmFtZSk7XG4gICAgICAgICAgICAgICAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKHRhZ05hbWUsIHByb3h5Q29tcG9uZW50KEhvc3RFbGVtZW50LCBjbXBNZXRhLCAxIC8qIGlzRWxlbWVudENvbnN0cnVjdG9yICovKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIGlmIChCVUlMRC5pbnZpc2libGVQcmVoeWRyYXRpb24gJiYgKEJVSUxELmh5ZHJhdGVkQ2xhc3MgfHwgQlVJTEQuaHlkcmF0ZWRBdHRyaWJ1dGUpKSB7XG4gICAgICAgIHZpc2liaWxpdHlTdHlsZS5pbm5lckhUTUwgPSBjbXBUYWdzICsgSFlEUkFURURfQ1NTO1xuICAgICAgICB2aXNpYmlsaXR5U3R5bGUuc2V0QXR0cmlidXRlKCdkYXRhLXN0eWxlcycsICcnKTtcbiAgICAgICAgaGVhZC5pbnNlcnRCZWZvcmUodmlzaWJpbGl0eVN0eWxlLCBtZXRhQ2hhcnNldCA/IG1ldGFDaGFyc2V0Lm5leHRTaWJsaW5nIDogaGVhZC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgLy8gUHJvY2VzcyBkZWZlcnJlZCBjb25uZWN0ZWRDYWxsYmFja3Mgbm93IGFsbCBjb21wb25lbnRzIGhhdmUgYmVlbiByZWdpc3RlcmVkXG4gICAgaXNCb290c3RyYXBwaW5nID0gZmFsc2U7XG4gICAgaWYgKGRlZmVycmVkQ29ubmVjdGVkQ2FsbGJhY2tzLmxlbmd0aCkge1xuICAgICAgICBkZWZlcnJlZENvbm5lY3RlZENhbGxiYWNrcy5tYXAoKGhvc3QpID0+IGhvc3QuY29ubmVjdGVkQ2FsbGJhY2soKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoQlVJTEQucHJvZmlsZSkge1xuICAgICAgICAgICAgcGx0LmptcCgoKSA9PiAoYXBwTG9hZEZhbGxiYWNrID0gc2V0VGltZW91dChhcHBEaWRMb2FkLCAzMCwgJ3RpbWVvdXQnKSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcGx0LmptcCgoKSA9PiAoYXBwTG9hZEZhbGxiYWNrID0gc2V0VGltZW91dChhcHBEaWRMb2FkLCAzMCkpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBGYWxsYmFjayBhcHBMb2FkIGV2ZW50XG4gICAgZW5kQm9vdHN0cmFwKCk7XG59O1xuY29uc3QgZ2V0QXNzZXRQYXRoID0gKHBhdGgpID0+IHtcbiAgICBjb25zdCBhc3NldFVybCA9IG5ldyBVUkwocGF0aCwgcGx0LiRyZXNvdXJjZXNVcmwkKTtcbiAgICByZXR1cm4gYXNzZXRVcmwub3JpZ2luICE9PSB3aW4ubG9jYXRpb24ub3JpZ2luID8gYXNzZXRVcmwuaHJlZiA6IGFzc2V0VXJsLnBhdGhuYW1lO1xufTtcbmNvbnN0IHNldEFzc2V0UGF0aCA9IChwYXRoKSA9PiAocGx0LiRyZXNvdXJjZXNVcmwkID0gcGF0aCk7XG5jb25zdCBnZXRDb25uZWN0ID0gKF9yZWYsIHRhZ05hbWUpID0+IHtcbiAgICBjb25zdCBjb21wb25lbnRPblJlYWR5ID0gKCkgPT4ge1xuICAgICAgICBsZXQgZWxtID0gZG9jLnF1ZXJ5U2VsZWN0b3IodGFnTmFtZSk7XG4gICAgICAgIGlmICghZWxtKSB7XG4gICAgICAgICAgICBlbG0gPSBkb2MuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcbiAgICAgICAgICAgIGRvYy5ib2R5LmFwcGVuZENoaWxkKGVsbSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHR5cGVvZiBlbG0uY29tcG9uZW50T25SZWFkeSA9PT0gJ2Z1bmN0aW9uJyA/IGVsbS5jb21wb25lbnRPblJlYWR5KCkgOiBQcm9taXNlLnJlc29sdmUoZWxtKTtcbiAgICB9O1xuICAgIGNvbnN0IGNyZWF0ZSA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRPblJlYWR5KCkudGhlbigoZWwpID0+IGVsLmNyZWF0ZSguLi5hcmdzKSk7XG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBjcmVhdGUsXG4gICAgICAgIGNvbXBvbmVudE9uUmVhZHksXG4gICAgfTtcbn07XG5jb25zdCBnZXRDb250ZXh0ID0gKF9lbG0sIGNvbnRleHQpID0+IHtcbiAgICBpZiAoY29udGV4dCBpbiBDb250ZXh0KSB7XG4gICAgICAgIHJldHVybiBDb250ZXh0W2NvbnRleHRdO1xuICAgIH1cbiAgICBlbHNlIGlmIChjb250ZXh0ID09PSAnd2luZG93Jykge1xuICAgICAgICByZXR1cm4gd2luO1xuICAgIH1cbiAgICBlbHNlIGlmIChjb250ZXh0ID09PSAnZG9jdW1lbnQnKSB7XG4gICAgICAgIHJldHVybiBkb2M7XG4gICAgfVxuICAgIGVsc2UgaWYgKGNvbnRleHQgPT09ICdpc1NlcnZlcicgfHwgY29udGV4dCA9PT0gJ2lzUHJlcmVuZGVyJykge1xuICAgICAgICByZXR1cm4gQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUgPyB0cnVlIDogZmFsc2U7XG4gICAgfVxuICAgIGVsc2UgaWYgKGNvbnRleHQgPT09ICdpc0NsaWVudCcpIHtcbiAgICAgICAgcmV0dXJuIEJVSUxELmh5ZHJhdGVTZXJ2ZXJTaWRlID8gZmFsc2UgOiB0cnVlO1xuICAgIH1cbiAgICBlbHNlIGlmIChjb250ZXh0ID09PSAncmVzb3VyY2VzVXJsJyB8fCBjb250ZXh0ID09PSAncHVibGljUGF0aCcpIHtcbiAgICAgICAgcmV0dXJuIGdldEFzc2V0UGF0aCgnLicpO1xuICAgIH1cbiAgICBlbHNlIGlmIChjb250ZXh0ID09PSAncXVldWUnKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB3cml0ZTogd3JpdGVUYXNrLFxuICAgICAgICAgICAgcmVhZDogcmVhZFRhc2ssXG4gICAgICAgICAgICB0aWNrOiB7XG4gICAgICAgICAgICAgICAgdGhlbihjYikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV4dFRpY2soY2IpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbmNvbnN0IGluc2VydFZkb21Bbm5vdGF0aW9ucyA9IChkb2MsIHN0YXRpY0NvbXBvbmVudHMpID0+IHtcbiAgICBpZiAoZG9jICE9IG51bGwpIHtcbiAgICAgICAgY29uc3QgZG9jRGF0YSA9IHtcbiAgICAgICAgICAgIGhvc3RJZHM6IDAsXG4gICAgICAgICAgICByb290TGV2ZWxJZHM6IDAsXG4gICAgICAgICAgICBzdGF0aWNDb21wb25lbnRzOiBuZXcgU2V0KHN0YXRpY0NvbXBvbmVudHMpLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBvcmdMb2NhdGlvbk5vZGVzID0gW107XG4gICAgICAgIHBhcnNlVk5vZGVBbm5vdGF0aW9ucyhkb2MsIGRvYy5ib2R5LCBkb2NEYXRhLCBvcmdMb2NhdGlvbk5vZGVzKTtcbiAgICAgICAgb3JnTG9jYXRpb25Ob2Rlcy5mb3JFYWNoKChvcmdMb2NhdGlvbk5vZGUpID0+IHtcbiAgICAgICAgICAgIGlmIChvcmdMb2NhdGlvbk5vZGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5vZGVSZWYgPSBvcmdMb2NhdGlvbk5vZGVbJ3MtbnInXTtcbiAgICAgICAgICAgICAgICBsZXQgaG9zdElkID0gbm9kZVJlZlsncy1ob3N0LWlkJ107XG4gICAgICAgICAgICAgICAgbGV0IG5vZGVJZCA9IG5vZGVSZWZbJ3Mtbm9kZS1pZCddO1xuICAgICAgICAgICAgICAgIGxldCBjaGlsZElkID0gYCR7aG9zdElkfS4ke25vZGVJZH1gO1xuICAgICAgICAgICAgICAgIGlmIChob3N0SWQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBob3N0SWQgPSAwO1xuICAgICAgICAgICAgICAgICAgICBkb2NEYXRhLnJvb3RMZXZlbElkcysrO1xuICAgICAgICAgICAgICAgICAgICBub2RlSWQgPSBkb2NEYXRhLnJvb3RMZXZlbElkcztcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRJZCA9IGAke2hvc3RJZH0uJHtub2RlSWR9YDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGVSZWYubm9kZVR5cGUgPT09IDEgLyogRWxlbWVudE5vZGUgKi8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVSZWYuc2V0QXR0cmlidXRlKEhZRFJBVEVfQ0hJTERfSUQsIGNoaWxkSWQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG5vZGVSZWYubm9kZVR5cGUgPT09IDMgLyogVGV4dE5vZGUgKi8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChob3N0SWQgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZXh0Q29udGVudCA9IG5vZGVSZWYubm9kZVZhbHVlLnRyaW0oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGV4dENvbnRlbnQgPT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHVzZWxlc3Mgd2hpdGVzcGFjZSBub2RlIGF0IHRoZSBkb2N1bWVudCByb290XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yZ0xvY2F0aW9uTm9kZS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbW1lbnRCZWZvcmVUZXh0Tm9kZSA9IGRvYy5jcmVhdGVDb21tZW50KGNoaWxkSWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudEJlZm9yZVRleHROb2RlLm5vZGVWYWx1ZSA9IGAke1RFWFRfTk9ERV9JRH0uJHtjaGlsZElkfWA7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlUmVmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGNvbW1lbnRCZWZvcmVUZXh0Tm9kZSwgbm9kZVJlZik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IG9yZ0xvY2F0aW9uTm9kZUlkID0gYCR7T1JHX0xPQ0FUSU9OX0lEfS4ke2NoaWxkSWR9YDtcbiAgICAgICAgICAgICAgICBjb25zdCBvcmdMb2NhdGlvblBhcmVudE5vZGUgPSBvcmdMb2NhdGlvbk5vZGUucGFyZW50RWxlbWVudDtcbiAgICAgICAgICAgICAgICBpZiAob3JnTG9jYXRpb25QYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcmdMb2NhdGlvblBhcmVudE5vZGVbJ3MtZW4nXSA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVuZGluZyB3aXRoIGEgXCIuXCIgbWVhbnMgdGhhdCB0aGUgcGFyZW50IGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9mIHRoaXMgbm9kZSdzIG9yaWdpbmFsIGxvY2F0aW9uIGlzIGEgU0hBRE9XIGRvbSBlbGVtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBhbmQgdGhpcyBub2RlIGlzIGFwYXJ0IG9mIHRoZSByb290IGxldmVsIGxpZ2h0IGRvbVxuICAgICAgICAgICAgICAgICAgICAgICAgb3JnTG9jYXRpb25Ob2RlSWQgKz0gYC5gO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG9yZ0xvY2F0aW9uUGFyZW50Tm9kZVsncy1lbiddID09PSAnYycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVuZGluZyB3aXRoIGEgXCIuY1wiIG1lYW5zIHRoYXQgdGhlIHBhcmVudCBlbGVtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBvZiB0aGlzIG5vZGUncyBvcmlnaW5hbCBsb2NhdGlvbiBpcyBhIFNDT1BFRCBlbGVtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBhbmQgdGhpcyBub2RlIGlzIGFwYXJ0IG9mIHRoZSByb290IGxldmVsIGxpZ2h0IGRvbVxuICAgICAgICAgICAgICAgICAgICAgICAgb3JnTG9jYXRpb25Ob2RlSWQgKz0gYC5jYDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBvcmdMb2NhdGlvbk5vZGUubm9kZVZhbHVlID0gb3JnTG9jYXRpb25Ob2RlSWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5jb25zdCBwYXJzZVZOb2RlQW5ub3RhdGlvbnMgPSAoZG9jLCBub2RlLCBkb2NEYXRhLCBvcmdMb2NhdGlvbk5vZGVzKSA9PiB7XG4gICAgaWYgKG5vZGUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChub2RlWydzLW5yJ10gIT0gbnVsbCkge1xuICAgICAgICBvcmdMb2NhdGlvbk5vZGVzLnB1c2gobm9kZSk7XG4gICAgfVxuICAgIGlmIChub2RlLm5vZGVUeXBlID09PSAxIC8qIEVsZW1lbnROb2RlICovKSB7XG4gICAgICAgIG5vZGUuY2hpbGROb2Rlcy5mb3JFYWNoKChjaGlsZE5vZGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGhvc3RSZWYgPSBnZXRIb3N0UmVmKGNoaWxkTm9kZSk7XG4gICAgICAgICAgICBpZiAoaG9zdFJlZiAhPSBudWxsICYmICFkb2NEYXRhLnN0YXRpY0NvbXBvbmVudHMuaGFzKGNoaWxkTm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNtcERhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVJZHM6IDAsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpbnNlcnRWTm9kZUFubm90YXRpb25zKGRvYywgY2hpbGROb2RlLCBob3N0UmVmLiR2bm9kZSQsIGRvY0RhdGEsIGNtcERhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyc2VWTm9kZUFubm90YXRpb25zKGRvYywgY2hpbGROb2RlLCBkb2NEYXRhLCBvcmdMb2NhdGlvbk5vZGVzKTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcbmNvbnN0IGluc2VydFZOb2RlQW5ub3RhdGlvbnMgPSAoZG9jLCBob3N0RWxtLCB2bm9kZSwgZG9jRGF0YSwgY21wRGF0YSkgPT4ge1xuICAgIGlmICh2bm9kZSAhPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IGhvc3RJZCA9ICsrZG9jRGF0YS5ob3N0SWRzO1xuICAgICAgICBob3N0RWxtLnNldEF0dHJpYnV0ZShIWURSQVRFX0lELCBob3N0SWQpO1xuICAgICAgICBpZiAoaG9zdEVsbVsncy1jciddICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhvc3RFbG1bJ3MtY3InXS5ub2RlVmFsdWUgPSBgJHtDT05URU5UX1JFRl9JRH0uJHtob3N0SWR9YDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodm5vZGUuJGNoaWxkcmVuJCAhPSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBkZXB0aCA9IDA7XG4gICAgICAgICAgICB2bm9kZS4kY2hpbGRyZW4kLmZvckVhY2goKHZub2RlQ2hpbGQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgaW5zZXJ0Q2hpbGRWTm9kZUFubm90YXRpb25zKGRvYywgdm5vZGVDaGlsZCwgY21wRGF0YSwgaG9zdElkLCBkZXB0aCwgaW5kZXgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhvc3RFbG0gJiYgdm5vZGUgJiYgdm5vZGUuJGVsbSQgJiYgIWhvc3RFbG0uaGFzQXR0cmlidXRlKCdjLWlkJykpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcmVudCA9IGhvc3RFbG0ucGFyZW50RWxlbWVudDtcbiAgICAgICAgICAgIGlmIChwYXJlbnQgJiYgcGFyZW50LmNoaWxkTm9kZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJlbnRDaGlsZE5vZGVzID0gQXJyYXkuZnJvbShwYXJlbnQuY2hpbGROb2Rlcyk7XG4gICAgICAgICAgICAgICAgY29uc3QgY29tbWVudCA9IHBhcmVudENoaWxkTm9kZXMuZmluZCgobm9kZSkgPT4gbm9kZS5ub2RlVHlwZSA9PT0gOCAvKiBDb21tZW50Tm9kZSAqLyAmJiBub2RlWydzLXNyJ10pO1xuICAgICAgICAgICAgICAgIGlmIChjb21tZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gcGFyZW50Q2hpbGROb2Rlcy5pbmRleE9mKGhvc3RFbG0pIC0gMTtcbiAgICAgICAgICAgICAgICAgICAgdm5vZGUuJGVsbSQuc2V0QXR0cmlidXRlKEhZRFJBVEVfQ0hJTERfSUQsIGAke2NvbW1lbnRbJ3MtaG9zdC1pZCddfS4ke2NvbW1lbnRbJ3Mtbm9kZS1pZCddfS4wLiR7aW5kZXh9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IGluc2VydENoaWxkVk5vZGVBbm5vdGF0aW9ucyA9IChkb2MsIHZub2RlQ2hpbGQsIGNtcERhdGEsIGhvc3RJZCwgZGVwdGgsIGluZGV4KSA9PiB7XG4gICAgY29uc3QgY2hpbGRFbG0gPSB2bm9kZUNoaWxkLiRlbG0kO1xuICAgIGlmIChjaGlsZEVsbSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgbm9kZUlkID0gY21wRGF0YS5ub2RlSWRzKys7XG4gICAgY29uc3QgY2hpbGRJZCA9IGAke2hvc3RJZH0uJHtub2RlSWR9LiR7ZGVwdGh9LiR7aW5kZXh9YDtcbiAgICBjaGlsZEVsbVsncy1ob3N0LWlkJ10gPSBob3N0SWQ7XG4gICAgY2hpbGRFbG1bJ3Mtbm9kZS1pZCddID0gbm9kZUlkO1xuICAgIGlmIChjaGlsZEVsbS5ub2RlVHlwZSA9PT0gMSAvKiBFbGVtZW50Tm9kZSAqLykge1xuICAgICAgICBjaGlsZEVsbS5zZXRBdHRyaWJ1dGUoSFlEUkFURV9DSElMRF9JRCwgY2hpbGRJZCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGNoaWxkRWxtLm5vZGVUeXBlID09PSAzIC8qIFRleHROb2RlICovKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudE5vZGUgPSBjaGlsZEVsbS5wYXJlbnROb2RlO1xuICAgICAgICBjb25zdCBub2RlTmFtZSA9IHBhcmVudE5vZGUubm9kZU5hbWU7XG4gICAgICAgIGlmIChub2RlTmFtZSAhPT0gJ1NUWUxFJyAmJiBub2RlTmFtZSAhPT0gJ1NDUklQVCcpIHtcbiAgICAgICAgICAgIGNvbnN0IHRleHROb2RlSWQgPSBgJHtURVhUX05PREVfSUR9LiR7Y2hpbGRJZH1gO1xuICAgICAgICAgICAgY29uc3QgY29tbWVudEJlZm9yZVRleHROb2RlID0gZG9jLmNyZWF0ZUNvbW1lbnQodGV4dE5vZGVJZCk7XG4gICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShjb21tZW50QmVmb3JlVGV4dE5vZGUsIGNoaWxkRWxtKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChjaGlsZEVsbS5ub2RlVHlwZSA9PT0gOCAvKiBDb21tZW50Tm9kZSAqLykge1xuICAgICAgICBpZiAoY2hpbGRFbG1bJ3Mtc3InXSkge1xuICAgICAgICAgICAgY29uc3Qgc2xvdE5hbWUgPSBjaGlsZEVsbVsncy1zbiddIHx8ICcnO1xuICAgICAgICAgICAgY29uc3Qgc2xvdE5vZGVJZCA9IGAke1NMT1RfTk9ERV9JRH0uJHtjaGlsZElkfS4ke3Nsb3ROYW1lfWA7XG4gICAgICAgICAgICBjaGlsZEVsbS5ub2RlVmFsdWUgPSBzbG90Tm9kZUlkO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmICh2bm9kZUNoaWxkLiRjaGlsZHJlbiQgIT0gbnVsbCkge1xuICAgICAgICBjb25zdCBjaGlsZERlcHRoID0gZGVwdGggKyAxO1xuICAgICAgICB2bm9kZUNoaWxkLiRjaGlsZHJlbiQuZm9yRWFjaCgodm5vZGUsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBpbnNlcnRDaGlsZFZOb2RlQW5ub3RhdGlvbnMoZG9jLCB2bm9kZSwgY21wRGF0YSwgaG9zdElkLCBjaGlsZERlcHRoLCBpbmRleCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5jb25zdCBzZXRQbGF0Zm9ybU9wdGlvbnMgPSAob3B0cykgPT4gT2JqZWN0LmFzc2lnbihwbHQsIG9wdHMpO1xuY29uc3QgRnJhZ21lbnQgPSAoXywgY2hpbGRyZW4pID0+IGNoaWxkcmVuO1xuY29uc3QgaG9zdFJlZnMgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgZ2V0SG9zdFJlZiA9IChyZWYpID0+IGhvc3RSZWZzLmdldChyZWYpO1xuY29uc3QgcmVnaXN0ZXJJbnN0YW5jZSA9IChsYXp5SW5zdGFuY2UsIGhvc3RSZWYpID0+IGhvc3RSZWZzLnNldCgoaG9zdFJlZi4kbGF6eUluc3RhbmNlJCA9IGxhenlJbnN0YW5jZSksIGhvc3RSZWYpO1xuY29uc3QgcmVnaXN0ZXJIb3N0ID0gKGVsbSwgY21wTWV0YSkgPT4ge1xuICAgIGNvbnN0IGhvc3RSZWYgPSB7XG4gICAgICAgICRmbGFncyQ6IDAsXG4gICAgICAgICRob3N0RWxlbWVudCQ6IGVsbSxcbiAgICAgICAgJGNtcE1ldGEkOiBjbXBNZXRhLFxuICAgICAgICAkaW5zdGFuY2VWYWx1ZXMkOiBuZXcgTWFwKCksXG4gICAgfTtcbiAgICBpZiAoQlVJTEQuaXNEZXYpIHtcbiAgICAgICAgaG9zdFJlZi4kcmVuZGVyQ291bnQkID0gMDtcbiAgICB9XG4gICAgaWYgKEJVSUxELm1ldGhvZCAmJiBCVUlMRC5sYXp5TG9hZCkge1xuICAgICAgICBob3N0UmVmLiRvbkluc3RhbmNlUHJvbWlzZSQgPSBuZXcgUHJvbWlzZSgocikgPT4gKGhvc3RSZWYuJG9uSW5zdGFuY2VSZXNvbHZlJCA9IHIpKTtcbiAgICB9XG4gICAgaWYgKEJVSUxELmFzeW5jTG9hZGluZykge1xuICAgICAgICBob3N0UmVmLiRvblJlYWR5UHJvbWlzZSQgPSBuZXcgUHJvbWlzZSgocikgPT4gKGhvc3RSZWYuJG9uUmVhZHlSZXNvbHZlJCA9IHIpKTtcbiAgICAgICAgZWxtWydzLXAnXSA9IFtdO1xuICAgICAgICBlbG1bJ3MtcmMnXSA9IFtdO1xuICAgIH1cbiAgICBhZGRIb3N0RXZlbnRMaXN0ZW5lcnMoZWxtLCBob3N0UmVmLCBjbXBNZXRhLiRsaXN0ZW5lcnMkLCBmYWxzZSk7XG4gICAgcmV0dXJuIGhvc3RSZWZzLnNldChlbG0sIGhvc3RSZWYpO1xufTtcbmNvbnN0IGlzTWVtYmVySW5FbGVtZW50ID0gKGVsbSwgbWVtYmVyTmFtZSkgPT4gbWVtYmVyTmFtZSBpbiBlbG07XG5jb25zdCBjb25zb2xlRXJyb3IgPSAoZSwgZWwpID0+IChjdXN0b21FcnJvciB8fCBjb25zb2xlLmVycm9yKShlLCBlbCk7XG5jb25zdCBTVEVOQ0lMX0RFVl9NT0RFID0gQlVJTEQuaXNUZXN0aW5nXG4gICAgPyBbJ1NURU5DSUw6J10gLy8gRTJFIHRlc3RpbmdcbiAgICA6IFtcbiAgICAgICAgJyVjc3RlbmNpbCcsXG4gICAgICAgICdjb2xvcjogd2hpdGU7YmFja2dyb3VuZDojNGM0N2ZmO2ZvbnQtd2VpZ2h0OiBib2xkOyBmb250LXNpemU6MTBweDsgcGFkZGluZzoycHggNnB4OyBib3JkZXItcmFkaXVzOiA1cHgnLFxuICAgIF07XG5jb25zdCBjb25zb2xlRGV2RXJyb3IgPSAoLi4ubSkgPT4gY29uc29sZS5lcnJvciguLi5TVEVOQ0lMX0RFVl9NT0RFLCAuLi5tKTtcbmNvbnN0IGNvbnNvbGVEZXZXYXJuID0gKC4uLm0pID0+IGNvbnNvbGUud2FybiguLi5TVEVOQ0lMX0RFVl9NT0RFLCAuLi5tKTtcbmNvbnN0IGNvbnNvbGVEZXZJbmZvID0gKC4uLm0pID0+IGNvbnNvbGUuaW5mbyguLi5TVEVOQ0lMX0RFVl9NT0RFLCAuLi5tKTtcbmNvbnN0IHNldEVycm9ySGFuZGxlciA9IChoYW5kbGVyKSA9PiAoY3VzdG9tRXJyb3IgPSBoYW5kbGVyKTtcbmNvbnN0IGNtcE1vZHVsZXMgPSAvKkBfX1BVUkVfXyovIG5ldyBNYXAoKTtcbmNvbnN0IGxvYWRNb2R1bGUgPSAoY21wTWV0YSwgaG9zdFJlZiwgaG1yVmVyc2lvbklkKSA9PiB7XG4gICAgLy8gbG9hZE1vZHVsZUltcG9ydFxuICAgIGNvbnN0IGV4cG9ydE5hbWUgPSBjbXBNZXRhLiR0YWdOYW1lJC5yZXBsYWNlKC8tL2csICdfJyk7XG4gICAgY29uc3QgYnVuZGxlSWQgPSBjbXBNZXRhLiRsYXp5QnVuZGxlSWQkO1xuICAgIGlmIChCVUlMRC5pc0RldiAmJiB0eXBlb2YgYnVuZGxlSWQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnNvbGVEZXZFcnJvcihgVHJ5aW5nIHRvIGxhemlseSBsb2FkIGNvbXBvbmVudCA8JHtjbXBNZXRhLiR0YWdOYW1lJH0+IHdpdGggc3R5bGUgbW9kZSBcIiR7aG9zdFJlZi4kbW9kZU5hbWUkfVwiLCBidXQgaXQgZG9lcyBub3QgZXhpc3QuYCk7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IG1vZHVsZSA9ICFCVUlMRC5ob3RNb2R1bGVSZXBsYWNlbWVudCA/IGNtcE1vZHVsZXMuZ2V0KGJ1bmRsZUlkKSA6IGZhbHNlO1xuICAgIGlmIChtb2R1bGUpIHtcbiAgICAgICAgcmV0dXJuIG1vZHVsZVtleHBvcnROYW1lXTtcbiAgICB9XG4gICAgLyohX19TVEVOQ0lMX1NUQVRJQ19JTVBPUlRfU1dJVENIX18qL1xuICAgIHJldHVybiBpbXBvcnQoXG4gICAgLyogQHZpdGUtaWdub3JlICovXG4gICAgLyogd2VicGFja0luY2x1ZGU6IC9cXC5lbnRyeVxcLmpzJC8gKi9cbiAgICAvKiB3ZWJwYWNrRXhjbHVkZTogL1xcLnN5c3RlbVxcLmVudHJ5XFwuanMkLyAqL1xuICAgIC8qIHdlYnBhY2tNb2RlOiBcImxhenlcIiAqL1xuICAgIGAuLyR7YnVuZGxlSWR9LmVudHJ5LmpzJHtCVUlMRC5ob3RNb2R1bGVSZXBsYWNlbWVudCAmJiBobXJWZXJzaW9uSWQgPyAnP3MtaG1yPScgKyBobXJWZXJzaW9uSWQgOiAnJ31gKS50aGVuKChpbXBvcnRlZE1vZHVsZSkgPT4ge1xuICAgICAgICBpZiAoIUJVSUxELmhvdE1vZHVsZVJlcGxhY2VtZW50KSB7XG4gICAgICAgICAgICBjbXBNb2R1bGVzLnNldChidW5kbGVJZCwgaW1wb3J0ZWRNb2R1bGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbXBvcnRlZE1vZHVsZVtleHBvcnROYW1lXTtcbiAgICB9LCBjb25zb2xlRXJyb3IpO1xufTtcbmNvbnN0IHN0eWxlcyA9IG5ldyBNYXAoKTtcbmNvbnN0IG1vZGVSZXNvbHV0aW9uQ2hhaW4gPSBbXTtcbmNvbnN0IHF1ZXVlRG9tUmVhZHMgPSBbXTtcbmNvbnN0IHF1ZXVlRG9tV3JpdGVzID0gW107XG5jb25zdCBxdWV1ZURvbVdyaXRlc0xvdyA9IFtdO1xuY29uc3QgcXVldWVUYXNrID0gKHF1ZXVlLCB3cml0ZSkgPT4gKGNiKSA9PiB7XG4gICAgcXVldWUucHVzaChjYik7XG4gICAgaWYgKCFxdWV1ZVBlbmRpbmcpIHtcbiAgICAgICAgcXVldWVQZW5kaW5nID0gdHJ1ZTtcbiAgICAgICAgaWYgKHdyaXRlICYmIHBsdC4kZmxhZ3MkICYgNCAvKiBxdWV1ZVN5bmMgKi8pIHtcbiAgICAgICAgICAgIG5leHRUaWNrKGZsdXNoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHBsdC5yYWYoZmx1c2gpO1xuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IGNvbnN1bWUgPSAocXVldWUpID0+IHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHF1ZXVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBxdWV1ZVtpXShwZXJmb3JtYW5jZS5ub3coKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGVFcnJvcihlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5sZW5ndGggPSAwO1xufTtcbmNvbnN0IGNvbnN1bWVUaW1lb3V0ID0gKHF1ZXVlLCB0aW1lb3V0KSA9PiB7XG4gICAgbGV0IGkgPSAwO1xuICAgIGxldCB0cyA9IDA7XG4gICAgd2hpbGUgKGkgPCBxdWV1ZS5sZW5ndGggJiYgKHRzID0gcGVyZm9ybWFuY2Uubm93KCkpIDwgdGltZW91dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcXVldWVbaSsrXSh0cyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGVFcnJvcihlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoaSA9PT0gcXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgfVxuICAgIGVsc2UgaWYgKGkgIT09IDApIHtcbiAgICAgICAgcXVldWUuc3BsaWNlKDAsIGkpO1xuICAgIH1cbn07XG5jb25zdCBmbHVzaCA9ICgpID0+IHtcbiAgICBpZiAoQlVJTEQuYXN5bmNRdWV1ZSkge1xuICAgICAgICBxdWV1ZUNvbmdlc3Rpb24rKztcbiAgICB9XG4gICAgLy8gYWx3YXlzIGZvcmNlIGEgYnVuY2ggb2YgbWVkaXVtIGNhbGxiYWNrcyB0byBydW4sIGJ1dCBzdGlsbCBoYXZlXG4gICAgLy8gYSB0aHJvdHRsZSBvbiBob3cgbWFueSBjYW4gcnVuIGluIGEgY2VydGFpbiB0aW1lXG4gICAgLy8gRE9NIFJFQURTISEhXG4gICAgY29uc3VtZShxdWV1ZURvbVJlYWRzKTtcbiAgICAvLyBET00gV1JJVEVTISEhXG4gICAgaWYgKEJVSUxELmFzeW5jUXVldWUpIHtcbiAgICAgICAgY29uc3QgdGltZW91dCA9IChwbHQuJGZsYWdzJCAmIDYgLyogcXVldWVNYXNrICovKSA9PT0gMiAvKiBhcHBMb2FkZWQgKi9cbiAgICAgICAgICAgID8gcGVyZm9ybWFuY2Uubm93KCkgKyAxNCAqIE1hdGguY2VpbChxdWV1ZUNvbmdlc3Rpb24gKiAoMS4wIC8gMTAuMCkpXG4gICAgICAgICAgICA6IEluZmluaXR5O1xuICAgICAgICBjb25zdW1lVGltZW91dChxdWV1ZURvbVdyaXRlcywgdGltZW91dCk7XG4gICAgICAgIGNvbnN1bWVUaW1lb3V0KHF1ZXVlRG9tV3JpdGVzTG93LCB0aW1lb3V0KTtcbiAgICAgICAgaWYgKHF1ZXVlRG9tV3JpdGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHF1ZXVlRG9tV3JpdGVzTG93LnB1c2goLi4ucXVldWVEb21Xcml0ZXMpO1xuICAgICAgICAgICAgcXVldWVEb21Xcml0ZXMubGVuZ3RoID0gMDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKHF1ZXVlUGVuZGluZyA9IHF1ZXVlRG9tUmVhZHMubGVuZ3RoICsgcXVldWVEb21Xcml0ZXMubGVuZ3RoICsgcXVldWVEb21Xcml0ZXNMb3cubGVuZ3RoID4gMCkpIHtcbiAgICAgICAgICAgIC8vIHN0aWxsIG1vcmUgdG8gZG8geWV0LCBidXQgd2UndmUgcnVuIG91dCBvZiB0aW1lXG4gICAgICAgICAgICAvLyBsZXQncyBsZXQgdGhpcyB0aGluZyBjb29sIG9mZiBhbmQgdHJ5IGFnYWluIGluIHRoZSBuZXh0IHRpY2tcbiAgICAgICAgICAgIHBsdC5yYWYoZmx1c2gpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcXVldWVDb25nZXN0aW9uID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3VtZShxdWV1ZURvbVdyaXRlcyk7XG4gICAgICAgIGlmICgocXVldWVQZW5kaW5nID0gcXVldWVEb21SZWFkcy5sZW5ndGggPiAwKSkge1xuICAgICAgICAgICAgLy8gc3RpbGwgbW9yZSB0byBkbyB5ZXQsIGJ1dCB3ZSd2ZSBydW4gb3V0IG9mIHRpbWVcbiAgICAgICAgICAgIC8vIGxldCdzIGxldCB0aGlzIHRoaW5nIGNvb2wgb2ZmIGFuZCB0cnkgYWdhaW4gaW4gdGhlIG5leHQgdGlja1xuICAgICAgICAgICAgcGx0LnJhZihmbHVzaCk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuY29uc3QgbmV4dFRpY2sgPSAvKkBfX1BVUkVfXyovIChjYikgPT4gcHJvbWlzZVJlc29sdmUoKS50aGVuKGNiKTtcbmNvbnN0IHJlYWRUYXNrID0gLypAX19QVVJFX18qLyBxdWV1ZVRhc2socXVldWVEb21SZWFkcywgZmFsc2UpO1xuY29uc3Qgd3JpdGVUYXNrID0gLypAX19QVVJFX18qLyBxdWV1ZVRhc2socXVldWVEb21Xcml0ZXMsIHRydWUpO1xuY29uc3QgQnVpbGQgPSB7XG4gICAgaXNEZXY6IEJVSUxELmlzRGV2ID8gdHJ1ZSA6IGZhbHNlLFxuICAgIGlzQnJvd3NlcjogdHJ1ZSxcbiAgICBpc1NlcnZlcjogZmFsc2UsXG4gICAgaXNUZXN0aW5nOiBCVUlMRC5pc1Rlc3RpbmcgPyB0cnVlIDogZmFsc2UsXG59O1xuZXhwb3J0IHsgQlVJTEQsIEVudiwgTkFNRVNQQUNFIH0gZnJvbSAnQHN0ZW5jaWwvY29yZS9pbnRlcm5hbC9hcHAtZGF0YSc7XG5leHBvcnQgeyBCdWlsZCwgQ1NTLCBDb250ZXh0LCBGcmFnbWVudCwgSCwgSCBhcyBIVE1MRWxlbWVudCwgSG9zdCwgU1RFTkNJTF9ERVZfTU9ERSwgYWRkSG9zdEV2ZW50TGlzdGVuZXJzLCBib290c3RyYXBMYXp5LCBjbXBNb2R1bGVzLCBjb25uZWN0ZWRDYWxsYmFjaywgY29uc29sZURldkVycm9yLCBjb25zb2xlRGV2SW5mbywgY29uc29sZURldldhcm4sIGNvbnNvbGVFcnJvciwgY3JlYXRlRXZlbnQsIGRlZmluZUN1c3RvbUVsZW1lbnQsIGRpc2Nvbm5lY3RlZENhbGxiYWNrLCBkb2MsIGZvcmNlTW9kZVVwZGF0ZSwgZm9yY2VVcGRhdGUsIGdldEFzc2V0UGF0aCwgZ2V0Q29ubmVjdCwgZ2V0Q29udGV4dCwgZ2V0RWxlbWVudCwgZ2V0SG9zdFJlZiwgZ2V0TW9kZSwgZ2V0UmVuZGVyaW5nUmVmLCBnZXRWYWx1ZSwgaCwgaW5zZXJ0VmRvbUFubm90YXRpb25zLCBpc01lbWJlckluRWxlbWVudCwgbG9hZE1vZHVsZSwgbW9kZVJlc29sdXRpb25DaGFpbiwgbmV4dFRpY2ssIHBhcnNlUHJvcGVydHlWYWx1ZSwgcGx0LCBwb3N0VXBkYXRlQ29tcG9uZW50LCBwcm9taXNlUmVzb2x2ZSwgcHJveHlDb21wb25lbnQsIHByb3h5Q3VzdG9tRWxlbWVudCwgcmVhZFRhc2ssIHJlZ2lzdGVySG9zdCwgcmVnaXN0ZXJJbnN0YW5jZSwgcmVuZGVyVmRvbSwgc2V0QXNzZXRQYXRoLCBzZXRFcnJvckhhbmRsZXIsIHNldE1vZGUsIHNldFBsYXRmb3JtSGVscGVycywgc2V0UGxhdGZvcm1PcHRpb25zLCBzZXRWYWx1ZSwgc3R5bGVzLCBzdXBwb3J0c0NvbnN0cnVjdGFibGVTdHlsZXNoZWV0cywgc3VwcG9ydHNMaXN0ZW5lck9wdGlvbnMsIHN1cHBvcnRzU2hhZG93LCB3aW4sIHdyaXRlVGFzayB9O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfZnJhbWV3b3JrSW1wb3J0UGF0aCA9IHJlcXVpcmUoXCJAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzXCIpO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBpbXBvcnQvbm8tdW5yZXNvbHZlZCAqL1xuKDAsIF9mcmFtZXdvcmtJbXBvcnRQYXRoLmNvbmZpZ3VyZSkoW3JlcXVpcmUuY29udGV4dCgnLi9zcmMnLCB0cnVlLCAvXlxcLig/Oig/Ol58XFwvfCg/Oig/Oig/ISg/Ol58XFwvKVxcLikuKSo/KVxcLykoPyFcXC4pKD89LilbXi9dKj9cXC5zdG9yaWVzXFwubWR4KSQvKSxyZXF1aXJlLmNvbnRleHQoJy4vc3JjJywgdHJ1ZSwgL15cXC4oPzooPzpefFxcL3woPzooPzooPyEoPzpefFxcLylcXC4pLikqPylcXC8pKD8hXFwuKSg/PS4pW14vXSo/XFwuc3Rvcmllc1xcLihqc3xqc3h8dHN8dHN4KSkkLyldLCBtb2R1bGUsIGZhbHNlKTsiLCJ2YXIgbWFwID0ge1xuXHRcIi4vY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLWJ1dHRvbi1wYW5lbC92ZXJkb2NzLWJ1dHRvbi1wYW5lbC5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1idXR0b24tcGFuZWwvdmVyZG9jcy1idXR0b24tcGFuZWwuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1idXR0b24vdmVyZG9jcy1idXR0b24uc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtYnV0dG9uL3ZlcmRvY3MtYnV0dG9uLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtZHJvcGRvd24vdmVyZG9jcy1kcm9wZG93bi5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1kcm9wZG93bi92ZXJkb2NzLWRyb3Bkb3duLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtaGVscC1pY29uL3ZlcmRvY3MtaGVscC1pY29uLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLWhlbHAtaWNvbi92ZXJkb2NzLWhlbHAtaWNvbi5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLWxvYWRlci92ZXJkb2NzLWxvYWRlci5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1sb2FkZXIvdmVyZG9jcy1sb2FkZXIuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1vcmdhbml6YXRpb24tY2FyZC92ZXJkb2NzLW9yZ2FuaXphdGlvbi1jYXJkLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLW9yZ2FuaXphdGlvbi1jYXJkL3ZlcmRvY3Mtb3JnYW5pemF0aW9uLWNhcmQuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy1yYWRpby1idXR0b24vdmVyZG9jcy1yYWRpby1idXR0b24uc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtcmFkaW8tYnV0dG9uL3ZlcmRvY3MtcmFkaW8tYnV0dG9uLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3Mtc2VsZWN0LWlucHV0L3ZlcmRvY3Mtc2VsZWN0LWlucHV0LnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLXNlbGVjdC1pbnB1dC92ZXJkb2NzLXNlbGVjdC1pbnB1dC5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLXN0YXR1cy1pbmRpY2F0b3IvdmVyZG9jcy1zdGF0dXMtaW5kaWNhdG9yLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLXN0YXR1cy1pbmRpY2F0b3IvdmVyZG9jcy1zdGF0dXMtaW5kaWNhdG9yLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdGVtcGxhdGUtY2FyZC92ZXJkb2NzLXRlbXBsYXRlLWNhcmQuc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdGVtcGxhdGUtY2FyZC92ZXJkb2NzLXRlbXBsYXRlLWNhcmQuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy10ZW1wbGF0ZS10YWdzL3ZlcmRvY3MtdGVtcGxhdGUtdGFncy5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy10ZW1wbGF0ZS10YWdzL3ZlcmRvY3MtdGVtcGxhdGUtdGFncy5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLXRleHQtaW5wdXQvdmVyZG9jcy10ZXh0LWlucHV0LnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLXRleHQtaW5wdXQvdmVyZG9jcy10ZXh0LWlucHV0LnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdG9nZ2xlLWJ1dHRvbi92ZXJkb2NzLXRvZ2dsZS1idXR0b24uc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdG9nZ2xlLWJ1dHRvbi92ZXJkb2NzLXRvZ2dsZS1idXR0b24uc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy10b2dnbGUvdmVyZG9jcy10b2dnbGUuc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdG9nZ2xlL3ZlcmRvY3MtdG9nZ2xlLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2NvbnRyb2xzL3ZlcmRvY3MtdG9vbGJhci1pY29uL3ZlcmRvY3MtdG9vbGJhci1pY29uLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLXRvb2xiYXItaWNvbi92ZXJkb2NzLXRvb2xiYXItaWNvbi5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9kaWFsb2dzL3ZlcmRvY3MtaW5pdGlhbC1kaWFsb2cvdmVyZG9jcy1pbml0aWFsLWRpYWxvZy5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZGlhbG9ncy92ZXJkb2NzLWluaXRpYWwtZGlhbG9nL3ZlcmRvY3MtaW5pdGlhbC1kaWFsb2cuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvZGlhbG9ncy92ZXJkb2NzLWtiYS1kaWFsb2cvdmVyZG9jcy1rYmEtZGlhbG9nLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9kaWFsb2dzL3ZlcmRvY3Mta2JhLWRpYWxvZy92ZXJkb2NzLWtiYS1kaWFsb2cuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvZGlhbG9ncy92ZXJkb2NzLW9rLWRpYWxvZy92ZXJkb2NzLW9rLWRpYWxvZy5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZGlhbG9ncy92ZXJkb2NzLW9rLWRpYWxvZy92ZXJkb2NzLW9rLWRpYWxvZy5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9kaWFsb2dzL3ZlcmRvY3Mtc2lnbmF0dXJlLWRpYWxvZy92ZXJkb2NzLXNpZ25hdHVyZS1kaWFsb2cuc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2RpYWxvZ3MvdmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nL3ZlcmRvY3Mtc2lnbmF0dXJlLWRpYWxvZy5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9kaWFsb2dzL3ZlcmRvY3MtdGVtcGxhdGUtc2VuZGVyLWRpYWxvZy92ZXJkb2NzLXRlbXBsYXRlLXNlbmRlci1kaWFsb2cuc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2RpYWxvZ3MvdmVyZG9jcy10ZW1wbGF0ZS1zZW5kZXItZGlhbG9nL3ZlcmRvY3MtdGVtcGxhdGUtc2VuZGVyLWRpYWxvZy5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9kaWFsb2dzL3ZlcmRvY3MtdXBsb2FkLWRpYWxvZy92ZXJkb2NzLXVwbG9hZC1kaWFsb2cuc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2RpYWxvZ3MvdmVyZG9jcy11cGxvYWQtZGlhbG9nL3ZlcmRvY3MtdXBsb2FkLWRpYWxvZy5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWNvbnRhY3QtcGlja2VyL3ZlcmRvY3MtY29udGFjdC1waWNrZXIuc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtY29udGFjdC1waWNrZXIvdmVyZG9jcy1jb250YWN0LXBpY2tlci5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLWF0dGFjaG1lbnQvdmVyZG9jcy1maWVsZC1hdHRhY2htZW50LnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLWF0dGFjaG1lbnQvdmVyZG9jcy1maWVsZC1hdHRhY2htZW50LnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtY2hlY2tib3gtZ3JvdXAvdmVyZG9jcy1maWVsZC1jaGVja2JveC5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC1jaGVja2JveC1ncm91cC92ZXJkb2NzLWZpZWxkLWNoZWNrYm94LnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtZGF0ZS92ZXJkb2NzLWZpZWxkLWRhdGUuc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtZGF0ZS92ZXJkb2NzLWZpZWxkLWRhdGUuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC1kcm9wZG93bi92ZXJkb2NzLWZpZWxkLWRyb3Bkb3duLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLWRyb3Bkb3duL3ZlcmRvY3MtZmllbGQtZHJvcGRvd24uc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC1pbml0aWFsL3ZlcmRvY3MtZmllbGQtaW5pdGlhbC5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC1pbml0aWFsL3ZlcmRvY3MtZmllbGQtaW5pdGlhbC5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLXBheW1lbnQvdmVyZG9jcy1maWVsZC1wYXltZW50LnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLXBheW1lbnQvdmVyZG9jcy1maWVsZC1wYXltZW50LnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtZmllbGQtcmFkaW8tYnV0dG9uLWdyb3VwL3ZlcmRvY3MtZmllbGQtcmFkaW8tYnV0dG9uLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLXJhZGlvLWJ1dHRvbi1ncm91cC92ZXJkb2NzLWZpZWxkLXJhZGlvLWJ1dHRvbi5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLXNpZ25hdHVyZS92ZXJkb2NzLWZpZWxkLXNpZ25hdHVyZS5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC1zaWduYXR1cmUvdmVyZG9jcy1maWVsZC1zaWduYXR1cmUuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC10ZXh0YXJlYS92ZXJkb2NzLWZpZWxkLXRleHRhcmVhLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLXRleHRhcmVhL3ZlcmRvY3MtZmllbGQtdGV4dGFyZWEuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC10ZXh0Ym94L3ZlcmRvY3MtZmllbGQtdGV4dGJveC5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC10ZXh0Ym94L3ZlcmRvY3MtZmllbGQtdGV4dGJveC5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLWZpZWxkLXRpbWVzdGFtcC92ZXJkb2NzLWZpZWxkLXRpbWVzdGFtcC5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1maWVsZC10aW1lc3RhbXAvdmVyZG9jcy1maWVsZC10aW1lc3RhbXAuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1xdWljay1mdW5jdGlvbnMvdmVyZG9jcy1xdWljay1mdW5jdGlvbnMuc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtcXVpY2stZnVuY3Rpb25zL3ZlcmRvY3MtcXVpY2stZnVuY3Rpb25zLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3Mtc2VhcmNoLWFjdGl2aXR5L3ZlcmRvY3Mtc2VhcmNoLWFjdGl2aXR5LnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXNlYXJjaC1hY3Rpdml0eS92ZXJkb2NzLXNlYXJjaC1hY3Rpdml0eS5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXNlYXJjaC1ib3gvdmVyZG9jcy1zZWFyY2gtYm94LnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXNlYXJjaC1ib3gvdmVyZG9jcy1zZWFyY2gtYm94LnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3Mtc2VhcmNoLXRhYnMvdmVyZG9jcy1zZWFyY2gtdGFicy5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy1zZWFyY2gtdGFicy92ZXJkb2NzLXNlYXJjaC10YWJzLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtdGVtcGxhdGUtY3JlYXRlL3ZlcmRvY3MtdGVtcGxhdGUtY3JlYXRlLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXRlbXBsYXRlLWNyZWF0ZS92ZXJkb2NzLXRlbXBsYXRlLWNyZWF0ZS5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXRlbXBsYXRlLWZpZWxkcy92ZXJkb2NzLXRlbXBsYXRlLWZpZWxkcy5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1maWVsZHMvdmVyZG9jcy10ZW1wbGF0ZS1maWVsZHMuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1wcm9wZXJ0aWVzL3ZlcmRvY3MtdGVtcGxhdGUtcHJvcGVydGllcy5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1wcm9wZXJ0aWVzL3ZlcmRvY3MtdGVtcGxhdGUtcHJvcGVydGllcy5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXRlbXBsYXRlLXJlY2lwaWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1yZWNpcGllbnRzLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXRlbXBsYXRlLXJlY2lwaWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1yZWNpcGllbnRzLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLWF1dGgvdmVyZG9jcy1hdXRoLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbWJlZHMvdmVyZG9jcy1hdXRoL3ZlcmRvY3MtYXV0aC5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbWJlZHMvdmVyZG9jcy1idWlsZC92ZXJkb2NzLWJ1aWxkLnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbWJlZHMvdmVyZG9jcy1idWlsZC92ZXJkb2NzLWJ1aWxkLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLXByZXZpZXcvdmVyZG9jcy1wcmV2aWV3LnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbWJlZHMvdmVyZG9jcy1wcmV2aWV3L3ZlcmRvY3MtcHJldmlldy5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbWJlZHMvdmVyZG9jcy1zZWFyY2gvdmVyZG9jcy1zZWFyY2guc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLXNlYXJjaC92ZXJkb2NzLXNlYXJjaC5zdG9yaWVzLnRzeFwiLFxuXHRcIi4vY29tcG9uZW50cy9lbWJlZHMvdmVyZG9jcy1zZW5kL3ZlcmRvY3Mtc2VuZC5zdG9yaWVzLnRzeFwiOiBcIi4vc3JjL2NvbXBvbmVudHMvZW1iZWRzL3ZlcmRvY3Mtc2VuZC92ZXJkb2NzLXNlbmQuc3Rvcmllcy50c3hcIixcblx0XCIuL2NvbXBvbmVudHMvZW1iZWRzL3ZlcmRvY3Mtc2lnbi92ZXJkb2NzLXNpZ24uc3Rvcmllcy50c3hcIjogXCIuL3NyYy9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLXNpZ24vdmVyZG9jcy1zaWduLnN0b3JpZXMudHN4XCIsXG5cdFwiLi9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLXZpZXcvdmVyZG9jcy12aWV3LnN0b3JpZXMudHN4XCI6IFwiLi9zcmMvY29tcG9uZW50cy9lbWJlZHMvdmVyZG9jcy12aWV3L3ZlcmRvY3Mtdmlldy5zdG9yaWVzLnRzeFwiXG59O1xuXG5cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHR2YXIgaWQgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKTtcblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oaWQpO1xufVxuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1hcCwgcmVxKSkge1xuXHRcdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fVxuXHRyZXR1cm4gbWFwW3JlcV07XG59XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gXCIuL3NyYyBzeW5jIHJlY3Vyc2l2ZSBeXFxcXC4oPzooPzpefFxcXFwvfCg/Oig/Oig/ISg/Ol58XFxcXC8pXFxcXC4pLikqPylcXFxcLykoPyFcXFxcLikoPz0uKVteL10qP1xcXFwuc3Rvcmllc1xcXFwuKGpzfGpzeHx0c3x0c3gpKSRcIjsiLCJmdW5jdGlvbiB3ZWJwYWNrRW1wdHlDb250ZXh0KHJlcSkge1xuXHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0dGhyb3cgZTtcbn1cbndlYnBhY2tFbXB0eUNvbnRleHQua2V5cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gW107IH07XG53ZWJwYWNrRW1wdHlDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xud2VicGFja0VtcHR5Q29udGV4dC5pZCA9IFwiLi9zcmMgc3luYyByZWN1cnNpdmUgXlxcXFwuKD86KD86XnxcXFxcL3woPzooPzooPyEoPzpefFxcXFwvKVxcXFwuKS4pKj8pXFxcXC8pKD8hXFxcXC4pKD89LilbXi9dKj9cXFxcLnN0b3JpZXNcXFxcLm1keCkkXCI7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQ29udHJvbHMvQnV0dG9uIFBhbmVsJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtYnV0dG9uLXBhbmVsJyxcXG4gIGFyZ3M6IHtcXG4gICAgaWNvbjogJzxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBoZWlnaHQ9XFxcIjI0XFxcIiB3aWR0aD1cXFwiMjRcXFwiPjxwYXRoIGQ9XFxcIk03LjYgMTMuOTI1cS0uNTUgMC0uOTI1LS4zNzV0LS4zNzUtLjkyNXEwLS41NS4zNzUtLjkzNy4zNzUtLjM4OC45MjUtLjM4OHQuOTI1LjM4OHEuMzc1LjM4Ny4zNzUuOTM3dC0uMzc1LjkyNXEtLjM3NS4zNzUtLjkyNS4zNzVabTQuNCAwcS0uNTUgMC0uOTI1LS4zNzV0LS4zNzUtLjkyNXEwLS41NS4zNzUtLjkzNy4zNzUtLjM4OC45MjUtLjM4OHQuOTI1LjM4OHEuMzc1LjM4Ny4zNzUuOTM3dC0uMzc1LjkyNXEtLjM3NS4zNzUtLjkyNS4zNzVabTQuNCAwcS0uNTUgMC0uOTI1LS4zNzV0LS4zNzUtLjkyNXEwLS41NS4zNzUtLjkzNy4zNzUtLjM4OC45MjUtLjM4OHQuOTI1LjM4OHEuMzc1LjM4Ny4zNzUuOTM3dC0uMzc1LjkyNXEtLjM3NS4zNzUtLjkyNS4zNzVaTTUuMyAyMi44NXEtMS4zMjUgMC0yLjIzOC0uOTEyLS45MTItLjkxMy0uOTEyLTIuMjM4VjYuM3EwLTEuMzI1LjkxMi0yLjIzOC45MTMtLjkxMiAyLjIzOC0uOTEySDZ2LTJoMi41NzV2Mmg2Ljg1di0ySDE4djJoLjdxMS4zMjUgMCAyLjIzOC45MTIuOTEyLjkxMy45MTIgMi4yMzh2MTMuNHEwIDEuMzI1LS45MTIgMi4yMzgtLjkxMy45MTItMi4yMzguOTEyWm0wLTMuMTVoMTMuNFYxMEg1LjN2OS43Wk01LjMgOGgxMy40VjYuM0g1LjNabTAgMFY2LjMgOFpcXFwiLz48L3N2Zz4nLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7fSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXFxuICB9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgQnV0dG9uUGFuZWwgPSAoe2ljb259KSA9PiBodG1sYFxcbiAgPHZlcmRvY3MtYnV0dG9uLXBhbmVsIC5pY29uPSR7aWNvbn0+XFxuICAgIDxoNj5GaWVsZCBTZXR0aW5nczwvaDY+XFxuICAgIDxmb3JtPlxcbiAgICAgIDxsYWJlbD5GaWVsZCAxPC9sYWJlbD5cXG4gICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgcGxhY2Vob2xkZXI9XFxcIkZpZWxkIDEuLi5cXFwiIC8+XFxuICAgICAgPGxhYmVsPkZpZWxkIDI8L2xhYmVsPlxcbiAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiBwbGFjZWhvbGRlcj1cXFwiRmllbGQgMi4uLlxcXCIgLz5cXG4gICAgPC9mb3JtPlxcbiAgPC92ZXJkb2NzLWJ1dHRvbi1wYW5lbD5cXG5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJCdXR0b25QYW5lbFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjcsXCJsaW5lXCI6MTZ9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyNn0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyNyxcImxpbmVcIjoxNn0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyNn19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0NvbnRyb2xzL0J1dHRvbiBQYW5lbCcsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtYnV0dG9uLXBhbmVsJyxcbiAgYXJnczoge1xuICAgIGljb246ICc8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBoZWlnaHQ9XCIyNFwiIHdpZHRoPVwiMjRcIj48cGF0aCBkPVwiTTcuNiAxMy45MjVxLS41NSAwLS45MjUtLjM3NXQtLjM3NS0uOTI1cTAtLjU1LjM3NS0uOTM3LjM3NS0uMzg4LjkyNS0uMzg4dC45MjUuMzg4cS4zNzUuMzg3LjM3NS45Mzd0LS4zNzUuOTI1cS0uMzc1LjM3NS0uOTI1LjM3NVptNC40IDBxLS41NSAwLS45MjUtLjM3NXQtLjM3NS0uOTI1cTAtLjU1LjM3NS0uOTM3LjM3NS0uMzg4LjkyNS0uMzg4dC45MjUuMzg4cS4zNzUuMzg3LjM3NS45Mzd0LS4zNzUuOTI1cS0uMzc1LjM3NS0uOTI1LjM3NVptNC40IDBxLS41NSAwLS45MjUtLjM3NXQtLjM3NS0uOTI1cTAtLjU1LjM3NS0uOTM3LjM3NS0uMzg4LjkyNS0uMzg4dC45MjUuMzg4cS4zNzUuMzg3LjM3NS45Mzd0LS4zNzUuOTI1cS0uMzc1LjM3NS0uOTI1LjM3NVpNNS4zIDIyLjg1cS0xLjMyNSAwLTIuMjM4LS45MTItLjkxMi0uOTEzLS45MTItMi4yMzhWNi4zcTAtMS4zMjUuOTEyLTIuMjM4LjkxMy0uOTEyIDIuMjM4LS45MTJINnYtMmgyLjU3NXYyaDYuODV2LTJIMTh2MmguN3ExLjMyNSAwIDIuMjM4LjkxMi45MTIuOTEzLjkxMiAyLjIzOHYxMy40cTAgMS4zMjUtLjkxMiAyLjIzOC0uOTEzLjkxMi0yLjIzOC45MTJabTAtMy4xNWgxMy40VjEwSDUuM3Y5LjdaTTUuMyA4aDEzLjRWNi4zSDUuM1ptMCAwVjYuMyA4WlwiLz48L3N2Zz4nLFxuICB9LFxuICBhcmdUeXBlczoge30sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBsYXlvdXQ6ICdmdWxsc2NyZWVuJyxcbiAgfSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IEJ1dHRvblBhbmVsID0gKHtpY29ufSkgPT4gaHRtbGBcbiAgPHZlcmRvY3MtYnV0dG9uLXBhbmVsIC5pY29uPSR7aWNvbn0+XG4gICAgPGg2PkZpZWxkIFNldHRpbmdzPC9oNj5cbiAgICA8Zm9ybT5cbiAgICAgIDxsYWJlbD5GaWVsZCAxPC9sYWJlbD5cbiAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiRmllbGQgMS4uLlwiIC8+XG4gICAgICA8bGFiZWw+RmllbGQgMjwvbGFiZWw+XG4gICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkZpZWxkIDIuLi5cIiAvPlxuICAgIDwvZm9ybT5cbiAgPC92ZXJkb2NzLWJ1dHRvbi1wYW5lbD5cbmA7XG5cblxuXG5CdXR0b25QYW5lbC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtpY29ufSkgPT4gaHRtbGBcXG4gIDx2ZXJkb2NzLWJ1dHRvbi1wYW5lbCAuaWNvbj0ke2ljb259PlxcbiAgICA8aDY+RmllbGQgU2V0dGluZ3M8L2g2PlxcbiAgICA8Zm9ybT5cXG4gICAgICA8bGFiZWw+RmllbGQgMTwvbGFiZWw+XFxuICAgICAgPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJGaWVsZCAxLi4uXFxcIiAvPlxcbiAgICAgIDxsYWJlbD5GaWVsZCAyPC9sYWJlbD5cXG4gICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgcGxhY2Vob2xkZXI9XFxcIkZpZWxkIDIuLi5cXFwiIC8+XFxuICAgIDwvZm9ybT5cXG4gIDwvdmVyZG9jcy1idXR0b24tcGFuZWw+XFxuYFwiIH0sIC4uLkJ1dHRvblBhbmVsLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuLy8gQ2lyY2xlIHdpdGggdGhyZWUgZG90cyBpbiBpdFxcbmNvbnN0IENpcmNsZUljb24gPSBgXFxuICA8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZW5hYmxlLWJhY2tncm91bmQ9XFxcIm5ldyAwIDAgMjQgMjRcXFwiIGhlaWdodD1cXFwiMjRweFxcXCIgdmlld0JveD1cXFwiMCAwIDI0IDI0XFxcIiB3aWR0aD1cXFwiMjRweFxcXCIgZmlsbD1cXFwiI2ZmZmZmZlxcXCI+XFxuICAgIDxnPlxcbiAgICAgIDxyZWN0IGZpbGw9XFxcIm5vbmVcXFwiIGhlaWdodD1cXFwiMjRcXFwiIHdpZHRoPVxcXCIyNFxcXCIvPlxcbiAgICA8L2c+XFxuICAgIDxnPlxcbiAgICAgIDxnPlxcbiAgICAgICAgPHBhdGggZD1cXFwiTTEyLDJDNi40OCwyLDIsNi40OCwyLDEyYzAsNS41Miw0LjQ4LDEwLDEwLDEwczEwLTQuNDgsMTAtMTBDMjIsNi40OCwxNy41MiwyLDEyLDJ6IE0xMiwyMGMtNC40MiwwLTgtMy41OC04LTggYzAtNC40MiwzLjU4LTgsOC04czgsMy41OCw4LDhDMjAsMTYuNDIsMTYuNDIsMjAsMTIsMjB6XFxcIi8+XFxuICAgICAgICA8Y2lyY2xlIGN4PVxcXCI3XFxcIiBjeT1cXFwiMTJcXFwiIHI9XFxcIjEuNVxcXCIvPlxcbiAgICAgICAgPGNpcmNsZSBjeD1cXFwiMTJcXFwiIGN5PVxcXCIxMlxcXCIgcj1cXFwiMS41XFxcIi8+XFxuICAgICAgICA8Y2lyY2xlIGN4PVxcXCIxN1xcXCIgY3k9XFxcIjEyXFxcIiByPVxcXCIxLjVcXFwiLz5cXG4gICAgICA8L2c+XFxuICAgIDwvZz5cXG4gIDwvc3ZnPlxcbmA7XFxuXFxuY29uc3QgQXJyb3dJY29uID0gYFxcbjxzdmcgd2lkdGg9XFxcIjEwXFxcIiBoZWlnaHQ9XFxcIjI2XFxcIiB2aWV3Qm94PVxcXCIwIDAgMTAgMjZcXFwiIGZpbGw9XFxcIiNmZmZmZmZcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+XFxuPGcgY2xpcC1wYXRoPVxcXCJ1cmwoI2NsaXAwXzMxNTY4XzM2NDcpXFxcIj5cXG48cGF0aCBkPVxcXCJNOS42NDY4MiAxMy40MzFMMi4xMDY0NSAyMC45NDY2QzEuODY1MDMgMjEuMTg1MyAxLjQ3NDY2IDIxLjE4NTMgMS4yMzMyNCAyMC45NDY2TDAuMjE2MjE4IDE5Ljk0MTFDLTAuMDI1MTk3NiAxOS43MDI1IC0wLjAyNTE5NzYgMTkuMzE2NSAwLjIxNjIxOCAxOS4wNzc4TDYuMzAyOTYgMTIuOTk5M0wwLjIxNjIxOCA2LjkyMDhDLTAuMDI1MTk3NiA2LjY4MjEzIC0wLjAyNTE5NzYgNi4yOTYxOSAwLjIxNjIxOCA2LjA1NzUyTDEuMjMzMjQgNS4wNTIwNUMxLjQ3NDY2IDQuODEzMzggMS44NjUwMyA0LjgxMzM4IDIuMTA2NDUgNS4wNTIwNUw5LjY0NjgyIDEyLjU2NzdDOS44ODgyNCAxMi44MDY0IDkuODg4MjQgMTMuMTkyMyA5LjY0NjgyIDEzLjQzMVpcXFwiLz5cXG48L2c+XFxuPGRlZnM+XFxuPGNsaXBQYXRoIGlkPVxcXCJjbGlwMF8zMTU2OF8zNjQ3XFxcIj5cXG48cmVjdCB3aWR0aD1cXFwiOS44NjIwN1xcXCIgaGVpZ2h0PVxcXCIyNlxcXCIvPlxcbjwvY2xpcFBhdGg+XFxuPC9kZWZzPlxcbjwvc3ZnPlxcbmA7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdDb250cm9scy9CdXR0b24nLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1idXR0b24nLFxcbiAgYXJnczoge1xcbiAgICBsYWJlbDogJ0NsaWNrIE1lJyxcXG4gICAgdHlwZTogJ2J1dHRvbicsXFxuICAgIHNpemU6ICdub3JtYWwnLFxcbiAgICB2YXJpYW50OiAnc3RhbmRhcmQnLFxcbiAgICBkaXNhYmxlZDogZmFsc2UsXFxuICB9LFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgc3RhcnRJY29uOiB7ZGVmYXVsdFZhbHVlOiBmYWxzZSwgY29udHJvbDoge3R5cGU6ICdib29sZWFuJ319LFxcbiAgICBlbmRJY29uOiB7ZGVmYXVsdFZhbHVlOiBmYWxzZSwgY29udHJvbDoge3R5cGU6ICdib29sZWFuJ319LFxcbiAgICBwcmVzczoge1xcbiAgICAgIGFjdGlvbjogJ3ByZXNzJyxcXG4gICAgICB0YWJsZToge1xcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IEJ1dHRvbiA9ICh7bGFiZWwsIHNpemUsIHZhcmlhbnQsIGRpc2FibGVkLCBzdGFydEljb24sIGVuZEljb24sIHByZXNzfSkgPT5cXG4gIGh0bWxgPHZlcmRvY3MtYnV0dG9uXFxuICAgIC5sYWJlbD0ke2xhYmVsfVxcbiAgICAuc3RhcnRJY29uPSR7c3RhcnRJY29uID8gQ2lyY2xlSWNvbiA6IG51bGx9XFxuICAgIC5lbmRJY29uPSR7ZW5kSWNvbiA/IEFycm93SWNvbiA6IG51bGx9XFxuICAgIC5zaXplPSR7c2l6ZX1cXG4gICAgLnZhcmlhbnQ9JHt2YXJpYW50fVxcbiAgICAuZGlzYWJsZWQ9JHtkaXNhYmxlZH1cXG4gICAgQHByZXNzPSR7cHJlc3N9XFxuICAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkJ1dHRvblwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjIsXCJsaW5lXCI6NTZ9LFwiZW5kTG9jXCI6e1wiY29sXCI6NSxcImxpbmVcIjo2NX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyMixcImxpbmVcIjo1Nn0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NSxcImxpbmVcIjo2NX19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuLy8gQ2lyY2xlIHdpdGggdGhyZWUgZG90cyBpbiBpdFxuY29uc3QgQ2lyY2xlSWNvbiA9IGBcbiAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZW5hYmxlLWJhY2tncm91bmQ9XCJuZXcgMCAwIDI0IDI0XCIgaGVpZ2h0PVwiMjRweFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB3aWR0aD1cIjI0cHhcIiBmaWxsPVwiI2ZmZmZmZlwiPlxuICAgIDxnPlxuICAgICAgPHJlY3QgZmlsbD1cIm5vbmVcIiBoZWlnaHQ9XCIyNFwiIHdpZHRoPVwiMjRcIi8+XG4gICAgPC9nPlxuICAgIDxnPlxuICAgICAgPGc+XG4gICAgICAgIDxwYXRoIGQ9XCJNMTIsMkM2LjQ4LDIsMiw2LjQ4LDIsMTJjMCw1LjUyLDQuNDgsMTAsMTAsMTBzMTAtNC40OCwxMC0xMEMyMiw2LjQ4LDE3LjUyLDIsMTIsMnogTTEyLDIwYy00LjQyLDAtOC0zLjU4LTgtOCBjMC00LjQyLDMuNTgtOCw4LThzOCwzLjU4LDgsOEMyMCwxNi40MiwxNi40MiwyMCwxMiwyMHpcIi8+XG4gICAgICAgIDxjaXJjbGUgY3g9XCI3XCIgY3k9XCIxMlwiIHI9XCIxLjVcIi8+XG4gICAgICAgIDxjaXJjbGUgY3g9XCIxMlwiIGN5PVwiMTJcIiByPVwiMS41XCIvPlxuICAgICAgICA8Y2lyY2xlIGN4PVwiMTdcIiBjeT1cIjEyXCIgcj1cIjEuNVwiLz5cbiAgICAgIDwvZz5cbiAgICA8L2c+XG4gIDwvc3ZnPlxuYDtcblxuY29uc3QgQXJyb3dJY29uID0gYFxuPHN2ZyB3aWR0aD1cIjEwXCIgaGVpZ2h0PVwiMjZcIiB2aWV3Qm94PVwiMCAwIDEwIDI2XCIgZmlsbD1cIiNmZmZmZmZcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG48ZyBjbGlwLXBhdGg9XCJ1cmwoI2NsaXAwXzMxNTY4XzM2NDcpXCI+XG48cGF0aCBkPVwiTTkuNjQ2ODIgMTMuNDMxTDIuMTA2NDUgMjAuOTQ2NkMxLjg2NTAzIDIxLjE4NTMgMS40NzQ2NiAyMS4xODUzIDEuMjMzMjQgMjAuOTQ2NkwwLjIxNjIxOCAxOS45NDExQy0wLjAyNTE5NzYgMTkuNzAyNSAtMC4wMjUxOTc2IDE5LjMxNjUgMC4yMTYyMTggMTkuMDc3OEw2LjMwMjk2IDEyLjk5OTNMMC4yMTYyMTggNi45MjA4Qy0wLjAyNTE5NzYgNi42ODIxMyAtMC4wMjUxOTc2IDYuMjk2MTkgMC4yMTYyMTggNi4wNTc1MkwxLjIzMzI0IDUuMDUyMDVDMS40NzQ2NiA0LjgxMzM4IDEuODY1MDMgNC44MTMzOCAyLjEwNjQ1IDUuMDUyMDVMOS42NDY4MiAxMi41Njc3QzkuODg4MjQgMTIuODA2NCA5Ljg4ODI0IDEzLjE5MjMgOS42NDY4MiAxMy40MzFaXCIvPlxuPC9nPlxuPGRlZnM+XG48Y2xpcFBhdGggaWQ9XCJjbGlwMF8zMTU2OF8zNjQ3XCI+XG48cmVjdCB3aWR0aD1cIjkuODYyMDdcIiBoZWlnaHQ9XCIyNlwiLz5cbjwvY2xpcFBhdGg+XG48L2RlZnM+XG48L3N2Zz5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdDb250cm9scy9CdXR0b24nLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWJ1dHRvbicsXG4gIGFyZ3M6IHtcbiAgICBsYWJlbDogJ0NsaWNrIE1lJyxcbiAgICB0eXBlOiAnYnV0dG9uJyxcbiAgICBzaXplOiAnbm9ybWFsJyxcbiAgICB2YXJpYW50OiAnc3RhbmRhcmQnLFxuICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBzdGFydEljb246IHtkZWZhdWx0VmFsdWU6IGZhbHNlLCBjb250cm9sOiB7dHlwZTogJ2Jvb2xlYW4nfX0sXG4gICAgZW5kSWNvbjoge2RlZmF1bHRWYWx1ZTogZmFsc2UsIGNvbnRyb2w6IHt0eXBlOiAnYm9vbGVhbid9fSxcbiAgICBwcmVzczoge1xuICAgICAgYWN0aW9uOiAncHJlc3MnLFxuICAgICAgdGFibGU6IHtcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IEJ1dHRvbiA9ICh7bGFiZWwsIHNpemUsIHZhcmlhbnQsIGRpc2FibGVkLCBzdGFydEljb24sIGVuZEljb24sIHByZXNzfSkgPT5cbiAgaHRtbGA8dmVyZG9jcy1idXR0b25cbiAgICAubGFiZWw9JHtsYWJlbH1cbiAgICAuc3RhcnRJY29uPSR7c3RhcnRJY29uID8gQ2lyY2xlSWNvbiA6IG51bGx9XG4gICAgLmVuZEljb249JHtlbmRJY29uID8gQXJyb3dJY29uIDogbnVsbH1cbiAgICAuc2l6ZT0ke3NpemV9XG4gICAgLnZhcmlhbnQ9JHt2YXJpYW50fVxuICAgIC5kaXNhYmxlZD0ke2Rpc2FibGVkfVxuICAgIEBwcmVzcz0ke3ByZXNzfVxuICAvPmA7XG5cblxuXG5CdXR0b24ucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7bGFiZWwsIHNpemUsIHZhcmlhbnQsIGRpc2FibGVkLCBzdGFydEljb24sIGVuZEljb24sIHByZXNzfSkgPT5cXG4gIGh0bWxgPHZlcmRvY3MtYnV0dG9uXFxuICAgIC5sYWJlbD0ke2xhYmVsfVxcbiAgICAuc3RhcnRJY29uPSR7c3RhcnRJY29uID8gQ2lyY2xlSWNvbiA6IG51bGx9XFxuICAgIC5lbmRJY29uPSR7ZW5kSWNvbiA/IEFycm93SWNvbiA6IG51bGx9XFxuICAgIC5zaXplPSR7c2l6ZX1cXG4gICAgLnZhcmlhbnQ9JHt2YXJpYW50fVxcbiAgICAuZGlzYWJsZWQ9JHtkaXNhYmxlZH1cXG4gICAgQHByZXNzPSR7cHJlc3N9XFxuICAvPmBcIiB9LCAuLi5CdXR0b24ucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG4vLyBUaGlzIGNvbXBvbmVudCBpcyBoZWF2aWx5IGNvbW1lbnRlZCBzbyBpdCBjYW4gYmUgdXNlZCBhcyBhIHJlZmVyZW5jZSBmb3IgZGV2ZWxvcGluZyBvdGhlciBjb21wb25lbnRzLiBQbGVhc2UgdXNlIHRoZSBjb21tZW50cyBoZXJlXFxuLy8gYXMgYSBndWlkZSAvIHJlc291cmNlLCBidXQgZG8gbm90IGNvcHkgdGhlbSB0byBuZXcgY29tcG9uZW50cyAoc28gd2UgZG9uJ3QgY3JlYXRlIGEgbWFpbnRlbmFuY2UgaGFzc2xlKS4gSWYgeW91IGNvcHkgdGhpcyBjb21wb25lbnRcXG4vLyBhcyBhIHRlbXBsYXRlLCBjbGVhbiB1cCBhbGwgdGhlIGNvbW1lbnRzIGluIHRoZSBjb3B5LCBzbyB0aGlzIHJlbWFpbnMgdGhlIFxcXCJtYWluIHJlZmVyZW5jZVxcXCIuXFxuXFxuLy8gV2UgYXJlIHVzaW5nIGEgY3VzdG9tIGRvYyBnZW5lcmF0b3Igc3BlY2lmaWNhbGx5IGZvciBXZWIgQ29tcG9uZW50cy4gV2UgdXNlIFxcXCJpbmxpbmUgZG9jc1xcXCIgdG8gZ2V0IGRvY3VtZW50YXRpb24gb3V0IG9mIGNvZGVcXG4vLyBjb21tZW50cyByYXRoZXIgdGhhbiBoYXZpbmcgdG8gdXNlIHNlcGFyYXRlIFJFQURNRSBmaWxlcy4gU2VlIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BweHRybi9zdG9yeWJvb2stYWRkb24tZG9jcy1zdGVuY2lsXFxuLy8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgLy8gV2hlcmUgaW4gU3Rvcnlib29rIHRoaXMgY29udHJvbCB3aWxsIGJlIGxpc3RlZFxcbiAgdGl0bGU6ICdDb250cm9scy9Ecm9wZG93biBNZW51JyxcXG4gIC8vIEhpbnQgdG8gaGVscCB0aGUgZG9jcyBhZGRvbiBmaW5kIHRoZSBjb21wb25lbnRcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZHJvcGRvd24nLFxcbiAgLy8gV2UgY2FuIGFwcGx5IGRlZmF1bHQgYXJncyBvbmx5IHNob3duIGluIFN0b3J5Ym9vayBhcyBmb2xsb3dzXFxuICBhcmdzOiB7XFxuICAgIG9wdGlvbnM6IFt7bGFiZWw6ICdPcHRpb24gMSd9LCB7bGFiZWw6ICdEaXNhYmxlZCBPcHRpb24nLCBkaXNhYmxlZDogdHJ1ZX0sIHtsYWJlbDogJ09wdGlvbiAyJ31dLFxcbiAgfSxcXG4gIC8vIEhlcmUgd2UgY2FuIGFwcGx5IG92ZXJyaWRlcyB0byBjb21wb25lbnQgcHJvcGVydHkgZG9jdW1lbnRhdGlvbi4gTm90ZSB0aGF0IHdlIGRvbid0IG5lZWQgdG8gKGFuZCBzaG91bGRuJ3QpIHNwZWNpZnkgZXZlcnkgZmllbGRcXG4gIC8vIGhlcmUuIE9ubHkgdGhvc2UgdGhhdCBuZWVkIHNwZWNpYWwgYXR0ZW50aW9uLlxcbiAgYXJnVHlwZXM6IHtcXG4gICAgb3B0aW9uU2VsZWN0ZWQ6IHtcXG4gICAgICBhY3Rpb246ICdvcHRpb25TZWxlY3RlZCcsXFxuICAgICAgLy8gUHJldmVudHMgYSBkdXBsaWNhdGUgZXZlbnQgZW50cnkgZnJvbSBhcHBlYXJpbmcgaW4gdGhlIHByb3BlcnRpZXMgdGFibGVcXG4gICAgICB0YWJsZToge1xcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuLy8gU2VlIGh0dHBzOi8vbGl0LWh0bWwucG9seW1lci1wcm9qZWN0Lm9yZy9ndWlkZS90ZW1wbGF0ZS1yZWZlcmVuY2UgXFxcIkJpbmRpbmcgVHlwZXNcXFwiIGZvciBhbiBleHBsYW5hdGlvbiBvZiAnLicgdnMgJ0AnXFxuZXhwb3J0IGNvbnN0IERyb3Bkb3duTWVudSA9ICh7b3B0aW9ucywgb3B0aW9uU2VsZWN0ZWR9KSA9PiBodG1sYDx2ZXJkb2NzLWRyb3Bkb3duIC5vcHRpb25zPSR7b3B0aW9uc30gQG9wdGlvblNlbGVjdGVkPSR7b3B0aW9uU2VsZWN0ZWR9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRHJvcGRvd25NZW51XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoyOCxcImxpbmVcIjozNX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxMzksXCJsaW5lXCI6MzV9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjgsXCJsaW5lXCI6MzV9LFwiZW5kQm9keVwiOntcImNvbFwiOjEzOSxcImxpbmVcIjozNX19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuLy8gVGhpcyBjb21wb25lbnQgaXMgaGVhdmlseSBjb21tZW50ZWQgc28gaXQgY2FuIGJlIHVzZWQgYXMgYSByZWZlcmVuY2UgZm9yIGRldmVsb3Bpbmcgb3RoZXIgY29tcG9uZW50cy4gUGxlYXNlIHVzZSB0aGUgY29tbWVudHMgaGVyZVxuLy8gYXMgYSBndWlkZSAvIHJlc291cmNlLCBidXQgZG8gbm90IGNvcHkgdGhlbSB0byBuZXcgY29tcG9uZW50cyAoc28gd2UgZG9uJ3QgY3JlYXRlIGEgbWFpbnRlbmFuY2UgaGFzc2xlKS4gSWYgeW91IGNvcHkgdGhpcyBjb21wb25lbnRcbi8vIGFzIGEgdGVtcGxhdGUsIGNsZWFuIHVwIGFsbCB0aGUgY29tbWVudHMgaW4gdGhlIGNvcHksIHNvIHRoaXMgcmVtYWlucyB0aGUgXCJtYWluIHJlZmVyZW5jZVwiLlxuXG4vLyBXZSBhcmUgdXNpbmcgYSBjdXN0b20gZG9jIGdlbmVyYXRvciBzcGVjaWZpY2FsbHkgZm9yIFdlYiBDb21wb25lbnRzLiBXZSB1c2UgXCJpbmxpbmUgZG9jc1wiIHRvIGdldCBkb2N1bWVudGF0aW9uIG91dCBvZiBjb2RlXG4vLyBjb21tZW50cyByYXRoZXIgdGhhbiBoYXZpbmcgdG8gdXNlIHNlcGFyYXRlIFJFQURNRSBmaWxlcy4gU2VlIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BweHRybi9zdG9yeWJvb2stYWRkb24tZG9jcy1zdGVuY2lsXG4vLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cblxuZXhwb3J0IGRlZmF1bHQge1xuICAvLyBXaGVyZSBpbiBTdG9yeWJvb2sgdGhpcyBjb250cm9sIHdpbGwgYmUgbGlzdGVkXG4gIHRpdGxlOiAnQ29udHJvbHMvRHJvcGRvd24gTWVudScsXG4gIC8vIEhpbnQgdG8gaGVscCB0aGUgZG9jcyBhZGRvbiBmaW5kIHRoZSBjb21wb25lbnRcbiAgY29tcG9uZW50OiAndmVyZG9jcy1kcm9wZG93bicsXG4gIC8vIFdlIGNhbiBhcHBseSBkZWZhdWx0IGFyZ3Mgb25seSBzaG93biBpbiBTdG9yeWJvb2sgYXMgZm9sbG93c1xuICBhcmdzOiB7XG4gICAgb3B0aW9uczogW3tsYWJlbDogJ09wdGlvbiAxJ30sIHtsYWJlbDogJ0Rpc2FibGVkIE9wdGlvbicsIGRpc2FibGVkOiB0cnVlfSwge2xhYmVsOiAnT3B0aW9uIDInfV0sXG4gIH0sXG4gIC8vIEhlcmUgd2UgY2FuIGFwcGx5IG92ZXJyaWRlcyB0byBjb21wb25lbnQgcHJvcGVydHkgZG9jdW1lbnRhdGlvbi4gTm90ZSB0aGF0IHdlIGRvbid0IG5lZWQgdG8gKGFuZCBzaG91bGRuJ3QpIHNwZWNpZnkgZXZlcnkgZmllbGRcbiAgLy8gaGVyZS4gT25seSB0aG9zZSB0aGF0IG5lZWQgc3BlY2lhbCBhdHRlbnRpb24uXG4gIGFyZ1R5cGVzOiB7XG4gICAgb3B0aW9uU2VsZWN0ZWQ6IHtcbiAgICAgIGFjdGlvbjogJ29wdGlvblNlbGVjdGVkJyxcbiAgICAgIC8vIFByZXZlbnRzIGEgZHVwbGljYXRlIGV2ZW50IGVudHJ5IGZyb20gYXBwZWFyaW5nIGluIHRoZSBwcm9wZXJ0aWVzIHRhYmxlXG4gICAgICB0YWJsZToge1xuICAgICAgICBkaXNhYmxlOiB0cnVlLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSBhcyBNZXRhO1xuXG4vLyBTZWUgaHR0cHM6Ly9saXQtaHRtbC5wb2x5bWVyLXByb2plY3Qub3JnL2d1aWRlL3RlbXBsYXRlLXJlZmVyZW5jZSBcIkJpbmRpbmcgVHlwZXNcIiBmb3IgYW4gZXhwbGFuYXRpb24gb2YgJy4nIHZzICdAJ1xuZXhwb3J0IGNvbnN0IERyb3Bkb3duTWVudSA9ICh7b3B0aW9ucywgb3B0aW9uU2VsZWN0ZWR9KSA9PiBodG1sYDx2ZXJkb2NzLWRyb3Bkb3duIC5vcHRpb25zPSR7b3B0aW9uc30gQG9wdGlvblNlbGVjdGVkPSR7b3B0aW9uU2VsZWN0ZWR9IC8+YDtcblxuXG5cbkRyb3Bkb3duTWVudS5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtvcHRpb25zLCBvcHRpb25TZWxlY3RlZH0pID0+IGh0bWxgPHZlcmRvY3MtZHJvcGRvd24gLm9wdGlvbnM9JHtvcHRpb25zfSBAb3B0aW9uU2VsZWN0ZWQ9JHtvcHRpb25TZWxlY3RlZH0gLz5gXCIgfSwgLi4uRHJvcGRvd25NZW51LnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdDb250cm9scy9IZWxwIEljb24nLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1oZWxwLWljb24nLFxcbiAgYXJnczoge1xcbiAgICB0ZXh0OiAnU2FtcGxlIGhlbHAgdGV4dCcsXFxuICB9LFxcbiAgYXJnVHlwZXM6IHt9LFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBsYXlvdXQ6ICdmdWxsc2NyZWVuJyxcXG4gIH0sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBIZWxwSWNvbiA9ICh7dGV4dH0pID0+IGh0bWxgPHZlcmRvY3MtaGVscC1pY29uIC50ZXh0PSR7dGV4dH0gLz4gYDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiSGVscEljb25cIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjI0LFwibGluZVwiOjE2fSxcImVuZExvY1wiOntcImNvbFwiOjc4LFwibGluZVwiOjE2fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjI0LFwibGluZVwiOjE2fSxcImVuZEJvZHlcIjp7XCJjb2xcIjo3OCxcImxpbmVcIjoxNn19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0NvbnRyb2xzL0hlbHAgSWNvbicsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtaGVscC1pY29uJyxcbiAgYXJnczoge1xuICAgIHRleHQ6ICdTYW1wbGUgaGVscCB0ZXh0JyxcbiAgfSxcbiAgYXJnVHlwZXM6IHt9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBIZWxwSWNvbiA9ICh7dGV4dH0pID0+IGh0bWxgPHZlcmRvY3MtaGVscC1pY29uIC50ZXh0PSR7dGV4dH0gLz4gYDtcblxuXG5cbkhlbHBJY29uLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe3RleHR9KSA9PiBodG1sYDx2ZXJkb2NzLWhlbHAtaWNvbiAudGV4dD0ke3RleHR9IC8+IGBcIiB9LCAuLi5IZWxwSWNvbi5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQ29udHJvbHMvTG9hZGVyJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtbG9hZGVyJyxcXG4gIGFyZ3M6IHt9LFxcbiAgYXJnVHlwZXM6IHt9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgTG9hZGVyID0gKHt9KSA9PiBodG1sYDx2ZXJkb2NzLWxvYWRlciAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkxvYWRlclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjIsXCJsaW5lXCI6MTF9LFwiZW5kTG9jXCI6e1wiY29sXCI6NTQsXCJsaW5lXCI6MTF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjIsXCJsaW5lXCI6MTF9LFwiZW5kQm9keVwiOntcImNvbFwiOjU0LFwibGluZVwiOjExfX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnQ29udHJvbHMvTG9hZGVyJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1sb2FkZXInLFxuICBhcmdzOiB7fSxcbiAgYXJnVHlwZXM6IHt9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgTG9hZGVyID0gKHt9KSA9PiBodG1sYDx2ZXJkb2NzLWxvYWRlciAvPmA7XG5cblxuXG5Mb2FkZXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7fSkgPT4gaHRtbGA8dmVyZG9jcy1sb2FkZXIgLz5gXCIgfSwgLi4uTG9hZGVyLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtJT3JnYW5pemF0aW9ufSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvT3JnYW5pemF0aW9ucy9UeXBlcyc7XFxuXFxuY29uc3QgTW9ja09yZ2FuaXphdGlvbiA9IHtcXG4gIGlkOiAnMycsXFxuICBuYW1lOiAnQUNNRSBXaWRnZXRzLCBMTEMnLFxcbiAgYWRkcmVzczogbnVsbCxcXG4gIHBob25lOiBudWxsLFxcbiAgYnVzaW5lc3NfbmFtZTogbnVsbCxcXG4gIGlzX2J1c2luZXNzOiB0cnVlLFxcbiAgYWRkcmVzczI6IG51bGwsXFxuICBjb250YWN0X2VtYWlsOiBudWxsLFxcbiAgdGltZXpvbmU6IG51bGwsXFxuICBlbnZlbG9wZV9yZXNwb25zaWJsZTogZmFsc2UsXFxufSBhcyBJT3JnYW5pemF0aW9uO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQ29udHJvbHMvT3JnYW5pemF0aW9uIENhcmQnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1vcmdhbml6YXRpb24tY2FyZCcsXFxuICBhcmdzOiB7XFxuICAgIG9yZ2FuaXphdGlvbjogTW9ja09yZ2FuaXphdGlvbixcXG4gIH0sXFxuICBhcmdUeXBlczoge30sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBPcmdhbml6YXRpb25DYXJkID0gKHtvcmdhbml6YXRpb259KSA9PiBodG1sYDx2ZXJkb2NzLW9yZ2FuaXphdGlvbi1jYXJkIC5vcmdhbml6YXRpb249JHtvcmdhbml6YXRpb259IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT3JnYW5pemF0aW9uQ2FyZFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MzIsXCJsaW5lXCI6Mjd9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTE3LFwibGluZVwiOjI3fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjMyLFwibGluZVwiOjI3fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxMTcsXCJsaW5lXCI6Mjd9fX07XG4gICAgXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge0lPcmdhbml6YXRpb259IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9Pcmdhbml6YXRpb25zL1R5cGVzJztcblxuY29uc3QgTW9ja09yZ2FuaXphdGlvbiA9IHtcbiAgaWQ6ICczJyxcbiAgbmFtZTogJ0FDTUUgV2lkZ2V0cywgTExDJyxcbiAgYWRkcmVzczogbnVsbCxcbiAgcGhvbmU6IG51bGwsXG4gIGJ1c2luZXNzX25hbWU6IG51bGwsXG4gIGlzX2J1c2luZXNzOiB0cnVlLFxuICBhZGRyZXNzMjogbnVsbCxcbiAgY29udGFjdF9lbWFpbDogbnVsbCxcbiAgdGltZXpvbmU6IG51bGwsXG4gIGVudmVsb3BlX3Jlc3BvbnNpYmxlOiBmYWxzZSxcbn0gYXMgSU9yZ2FuaXphdGlvbjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0NvbnRyb2xzL09yZ2FuaXphdGlvbiBDYXJkJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1vcmdhbml6YXRpb24tY2FyZCcsXG4gIGFyZ3M6IHtcbiAgICBvcmdhbml6YXRpb246IE1vY2tPcmdhbml6YXRpb24sXG4gIH0sXG4gIGFyZ1R5cGVzOiB7fSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IE9yZ2FuaXphdGlvbkNhcmQgPSAoe29yZ2FuaXphdGlvbn0pID0+IGh0bWxgPHZlcmRvY3Mtb3JnYW5pemF0aW9uLWNhcmQgLm9yZ2FuaXphdGlvbj0ke29yZ2FuaXphdGlvbn0gLz5gO1xuXG5cblxuT3JnYW5pemF0aW9uQ2FyZC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtvcmdhbml6YXRpb259KSA9PiBodG1sYDx2ZXJkb2NzLW9yZ2FuaXphdGlvbi1jYXJkIC5vcmdhbml6YXRpb249JHtvcmdhbml6YXRpb259IC8+YFwiIH0sIC4uLk9yZ2FuaXphdGlvbkNhcmQucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0NvbnRyb2xzL1JhZGlvIEJ1dHRvbicsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXJhZGlvLWJ1dHRvbicsXFxuICBhcmdzOiB7XFxuICAgIGNoZWNrZWQ6IGZhbHNlLFxcbiAgICBuYW1lOiAndGVzdCcsXFxuICAgIHZhbHVlOiAnMScsXFxuICAgIGRpc2FibGVkOiBmYWxzZSxcXG4gIH0sXFxuICBhcmdUeXBlczoge30sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBSYWRpb0J1dHRvbiA9ICh7Y2hlY2tlZCwgbmFtZSwgdmFsdWUsIGRpc2FibGVkfSkgPT4gaHRtbGAgPHZlcmRvY3MtcmFkaW8tYnV0dG9uIC5jaGVja2VkPSR7Y2hlY2tlZH0gLm5hbWU9JHtuYW1lfSAudmFsdWU9JHt2YWx1ZX0gLmRpc2FibGVkPSR7ZGlzYWJsZWR9IC8+IGA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlJhZGlvQnV0dG9uXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoyNyxcImxpbmVcIjoxNn0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxNjksXCJsaW5lXCI6MTZ9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjcsXCJsaW5lXCI6MTZ9LFwiZW5kQm9keVwiOntcImNvbFwiOjE2OSxcImxpbmVcIjoxNn19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0NvbnRyb2xzL1JhZGlvIEJ1dHRvbicsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtcmFkaW8tYnV0dG9uJyxcbiAgYXJnczoge1xuICAgIGNoZWNrZWQ6IGZhbHNlLFxuICAgIG5hbWU6ICd0ZXN0JyxcbiAgICB2YWx1ZTogJzEnLFxuICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgfSxcbiAgYXJnVHlwZXM6IHt9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgUmFkaW9CdXR0b24gPSAoe2NoZWNrZWQsIG5hbWUsIHZhbHVlLCBkaXNhYmxlZH0pID0+IGh0bWxgIDx2ZXJkb2NzLXJhZGlvLWJ1dHRvbiAuY2hlY2tlZD0ke2NoZWNrZWR9IC5uYW1lPSR7bmFtZX0gLnZhbHVlPSR7dmFsdWV9IC5kaXNhYmxlZD0ke2Rpc2FibGVkfSAvPiBgO1xuXG5cblxuUmFkaW9CdXR0b24ucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7Y2hlY2tlZCwgbmFtZSwgdmFsdWUsIGRpc2FibGVkfSkgPT4gaHRtbGAgPHZlcmRvY3MtcmFkaW8tYnV0dG9uIC5jaGVja2VkPSR7Y2hlY2tlZH0gLm5hbWU9JHtuYW1lfSAudmFsdWU9JHt2YWx1ZX0gLmRpc2FibGVkPSR7ZGlzYWJsZWR9IC8+IGBcIiB9LCAuLi5SYWRpb0J1dHRvbi5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQ29udHJvbHMvU2VsZWN0IElucHV0JyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3Mtc2VsZWN0LWlucHV0JyxcXG4gIGFyZ3M6IHtcXG4gICAgbGFiZWw6ICdOYW1lJyxcXG4gICAgdmFsdWU6ICcnLFxcbiAgICBvcHRpb25zOiBbXFxuICAgICAge2xhYmVsOiAnT3B0aW9uIDEnLCB2YWx1ZTogJzEnfSxcXG4gICAgICB7bGFiZWw6ICdPcHRpb24gMicsIHZhbHVlOiAnMid9LFxcbiAgICAgIHtsYWJlbDogJ09wdGlvbiAzJywgdmFsdWU6ICczJ30sXFxuICAgIF0sXFxuICB9LFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgY2hhbmdlOiB7XFxuICAgICAgYWN0aW9uOiAnY2hhbmdlJyxcXG4gICAgICB0YWJsZToge1xcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFNlbGVjdElucHV0ID0gKHt0eXBlLCBsYWJlbCwgdmFsdWUsIHBsYWNlaG9sZGVyLCBvcHRpb25zLCBkaXNhYmxlZCwgY2hhbmdlfSkgPT5cXG4gIGh0bWxgPHZlcmRvY3Mtc2VsZWN0LWlucHV0IC50eXBlPSR7dHlwZX0gLmxhYmVsPSR7bGFiZWx9IC5wbGFjZWhvbGRlcj0ke3BsYWNlaG9sZGVyfSAudmFsdWU9JHt2YWx1ZX0gLm9wdGlvbnM9JHtvcHRpb25zfSAuZGlzYWJsZWQ9JHtkaXNhYmxlZH0gQGNoYW5nZT0ke2NoYW5nZX0gLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJTZWxlY3RJbnB1dFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjcsXCJsaW5lXCI6MjZ9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTY2LFwibGluZVwiOjI3fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjI3LFwibGluZVwiOjI2fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxNjYsXCJsaW5lXCI6Mjd9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdDb250cm9scy9TZWxlY3QgSW5wdXQnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXNlbGVjdC1pbnB1dCcsXG4gIGFyZ3M6IHtcbiAgICBsYWJlbDogJ05hbWUnLFxuICAgIHZhbHVlOiAnJyxcbiAgICBvcHRpb25zOiBbXG4gICAgICB7bGFiZWw6ICdPcHRpb24gMScsIHZhbHVlOiAnMSd9LFxuICAgICAge2xhYmVsOiAnT3B0aW9uIDInLCB2YWx1ZTogJzInfSxcbiAgICAgIHtsYWJlbDogJ09wdGlvbiAzJywgdmFsdWU6ICczJ30sXG4gICAgXSxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBjaGFuZ2U6IHtcbiAgICAgIGFjdGlvbjogJ2NoYW5nZScsXG4gICAgICB0YWJsZToge1xuICAgICAgICBkaXNhYmxlOiB0cnVlLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0SW5wdXQgPSAoe3R5cGUsIGxhYmVsLCB2YWx1ZSwgcGxhY2Vob2xkZXIsIG9wdGlvbnMsIGRpc2FibGVkLCBjaGFuZ2V9KSA9PlxuICBodG1sYDx2ZXJkb2NzLXNlbGVjdC1pbnB1dCAudHlwZT0ke3R5cGV9IC5sYWJlbD0ke2xhYmVsfSAucGxhY2Vob2xkZXI9JHtwbGFjZWhvbGRlcn0gLnZhbHVlPSR7dmFsdWV9IC5vcHRpb25zPSR7b3B0aW9uc30gLmRpc2FibGVkPSR7ZGlzYWJsZWR9IEBjaGFuZ2U9JHtjaGFuZ2V9IC8+YDtcblxuXG5cblNlbGVjdElucHV0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe3R5cGUsIGxhYmVsLCB2YWx1ZSwgcGxhY2Vob2xkZXIsIG9wdGlvbnMsIGRpc2FibGVkLCBjaGFuZ2V9KSA9PlxcbiAgaHRtbGA8dmVyZG9jcy1zZWxlY3QtaW5wdXQgLnR5cGU9JHt0eXBlfSAubGFiZWw9JHtsYWJlbH0gLnBsYWNlaG9sZGVyPSR7cGxhY2Vob2xkZXJ9IC52YWx1ZT0ke3ZhbHVlfSAub3B0aW9ucz0ke29wdGlvbnN9IC5kaXNhYmxlZD0ke2Rpc2FibGVkfSBAY2hhbmdlPSR7Y2hhbmdlfSAvPmBcIiB9LCAuLi5TZWxlY3RJbnB1dC5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcblxcbmNvbnN0IFNhbXBsZURvY3VtZW50ID0ge1xcbiAgLy8gU2tpcHBpbmcgbm9uLWVzc2VudGlhbCBmaWVsZHMgOXRoYXQgdGhlIHdpZGdldCBkb2Vzbid0IGNhcmUgYWJvdXQpLiBCdXQgdGhpcyBpcyBhbiBJRG9jdW1lbnQuXFxuICBpZDogJzEyMzQnLFxcbiAgc3RhdHVzOiAnY29tcGxldGUnLFxcbiAgcmVjaXBpZW50czogW1xcbiAgICB7cm9sZV9uYW1lOiAnVGF4IFByZXBhcmVyJywgc3RhdHVzOiAnc3VibWl0dGVkJywgZnVsbF9uYW1lOiAnQmlsbCBCb2FyZCcsIHNlcXVlbmNlOiAxLCB0eXBlOiAnc2lnbmVyJ30sXFxuICAgIHtyb2xlX25hbWU6ICdSZWNpcGllbnQgMScsIHN0YXR1czogJ3N1Ym1pdHRlZCcsIGZ1bGxfbmFtZTogJ0FudGUgQmVsbHVtJywgc2VxdWVuY2U6IDIsIHR5cGU6ICdzaWduZXInfSxcXG4gICAge3JvbGVfbmFtZTogJ1JlY2lwaWVudCAyJywgc3RhdHVzOiAnb3BlbmVkJywgZnVsbF9uYW1lOiAnU2FyYWggQmVsbHVtJywgc2VxdWVuY2U6IDIsIHR5cGU6ICdzaWduZXInfSxcXG4gICAge3JvbGVfbmFtZTogJ09mZmljZSBNYW5hZ2VyJywgc3RhdHVzOiAncGVuZGluZycsIGZ1bGxfbmFtZTogJ1BhaWdlIFR1cm5lcicsIHNlcXVlbmNlOiAzLCB0eXBlOiAnYXBwcm92ZXInfSxcXG4gIF0sXFxufTtcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0NvbnRyb2xzL1N0YXR1cyBJbmRpY2F0b3InLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1zdGF0dXMtaW5kaWNhdG9yJyxcXG4gIGFyZ3M6IHtcXG4gICAgZG9jdW1lbnQ6IDAsXFxuICAgIHN0YXR1czogJ2NvbXBsZXRlJyxcXG4gICAgdGhlbWU6ICdsaWdodCcsXFxuICAgIHNpemU6ICdub3JtYWwnLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGRvY3VtZW50OiB7XFxuICAgICAgb3B0aW9uczogWzAsIDFdLFxcbiAgICAgIG1hcHBpbmc6IHswOiBTYW1wbGVEb2N1bWVudCwgMTogbnVsbH0sXFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogJ3NlbGVjdCcsXFxuICAgICAgICBsYWJlbHM6IHtcXG4gICAgICAgICAgMDogJ1NhbXBsZSBEb2N1bWVudCcsXFxuICAgICAgICAgIDE6ICdOb3QgU2V0JyxcXG4gICAgICAgIH0sXFxuICAgICAgfSxcXG4gICAgfSxcXG4gICAgc3RhdHVzOiB7XFxuICAgICAgZGVmYXVsdFZhbHVlOiAnJyxcXG4gICAgICBvcHRpb25zOiBbMCwgJ2NvbXBsZXRlJywgJ3BlbmRpbmcnLCAnaW4gcHJvZ3Jlc3MnLCAnZGVjbGluZWQnLCAnY2FuY2VsZWQnLCAnaW52aXRlZCcsICdvcGVuZWQnLCAnYWNjZXB0ZWQnLCAnc2lnbmVkJywgJ3N1Ym1pdHRlZCddLFxcbiAgICAgIG1hcHBpbmc6IHtcXG4gICAgICAgIDA6IG51bGwsXFxuICAgICAgICAnY29tcGxldGUnOiAnY29tcGxldGUnLFxcbiAgICAgICAgJ3BlbmRpbmcnOiAncGVuZGluZycsXFxuICAgICAgICAnaW4gcHJvZ3Jlc3MnOiAnaW4gcHJvZ3Jlc3MnLFxcbiAgICAgICAgJ2RlY2xpbmVkJzogJ2RlY2xpbmVkJyxcXG4gICAgICAgICdjYW5jZWxlZCc6ICdjYW5jZWxlZCcsXFxuICAgICAgICAnaW52aXRlZCc6ICdpbnZpdGVkJyxcXG4gICAgICAgICdvcGVuZWQnOiAnb3BlbmVkJyxcXG4gICAgICAgICdhY2NlcHRlZCc6ICdhY2NlcHRlZCcsXFxuICAgICAgICAnc2lnbmVkJzogJ3NpZ25lZCcsXFxuICAgICAgICAnc3VibWl0dGVkJzogJ3N1Ym1pdHRlZCcsXFxuICAgICAgfSxcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiAnc2VsZWN0JyxcXG4gICAgICAgIGxhYmVsczoge1xcbiAgICAgICAgICAwOiAnTm90IFNldCcsXFxuICAgICAgICAgICdjb21wbGV0ZSc6ICdDb21wbGV0ZScsXFxuICAgICAgICAgICdwZW5kaW5nJzogJ1BlbmRpbmcnLFxcbiAgICAgICAgICAnaW4gcHJvZ3Jlc3MnOiAnSW4gUHJvZ3Jlc3MnLFxcbiAgICAgICAgICAnZGVjbGluZWQnOiAnRGVjbGluZWQnLFxcbiAgICAgICAgICAnY2FuY2VsZWQnOiAnQ2FuY2VsZWQnLFxcbiAgICAgICAgICAnaW52aXRlZCc6ICdJbnZpdGVkJyxcXG4gICAgICAgICAgJ29wZW5lZCc6ICdPcGVuZWQnLFxcbiAgICAgICAgICAnYWNjZXB0ZWQnOiAnQWNjZXB0ZWQnLFxcbiAgICAgICAgICAnc2lnbmVkJzogJ1NpZ25lZCcsXFxuICAgICAgICAgICdzdWJtaXR0ZWQnOiAnU3VibWl0dGVkJyxcXG4gICAgICAgIH0sXFxuICAgICAgfSxcXG4gICAgfSxcXG4gIH0sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBTdGF0dXNJbmRpY2F0b3IgPSAoe3RoZW1lLCBzaXplLCBzdGF0dXMsIGRvY3VtZW50fSkgPT5cXG4gIGh0bWxgPHZlcmRvY3Mtc3RhdHVzLWluZGljYXRvciAudGhlbWU9XFxcIiR7dGhlbWV9XFxcIiAuc2l6ZT1cXFwiJHtzaXplfVxcXCIgLnN0YXR1cz1cXFwiJHtzdGF0dXN9XFxcIiAuZG9jdW1lbnQ9XFxcIiR7ZG9jdW1lbnR9XFxcIiAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlN0YXR1c0luZGljYXRvclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MzEsXCJsaW5lXCI6NzN9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTE0LFwibGluZVwiOjc0fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjMxLFwibGluZVwiOjczfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxMTQsXCJsaW5lXCI6NzR9fX07XG4gICAgXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5cbmNvbnN0IFNhbXBsZURvY3VtZW50ID0ge1xuICAvLyBTa2lwcGluZyBub24tZXNzZW50aWFsIGZpZWxkcyA5dGhhdCB0aGUgd2lkZ2V0IGRvZXNuJ3QgY2FyZSBhYm91dCkuIEJ1dCB0aGlzIGlzIGFuIElEb2N1bWVudC5cbiAgaWQ6ICcxMjM0JyxcbiAgc3RhdHVzOiAnY29tcGxldGUnLFxuICByZWNpcGllbnRzOiBbXG4gICAge3JvbGVfbmFtZTogJ1RheCBQcmVwYXJlcicsIHN0YXR1czogJ3N1Ym1pdHRlZCcsIGZ1bGxfbmFtZTogJ0JpbGwgQm9hcmQnLCBzZXF1ZW5jZTogMSwgdHlwZTogJ3NpZ25lcid9LFxuICAgIHtyb2xlX25hbWU6ICdSZWNpcGllbnQgMScsIHN0YXR1czogJ3N1Ym1pdHRlZCcsIGZ1bGxfbmFtZTogJ0FudGUgQmVsbHVtJywgc2VxdWVuY2U6IDIsIHR5cGU6ICdzaWduZXInfSxcbiAgICB7cm9sZV9uYW1lOiAnUmVjaXBpZW50IDInLCBzdGF0dXM6ICdvcGVuZWQnLCBmdWxsX25hbWU6ICdTYXJhaCBCZWxsdW0nLCBzZXF1ZW5jZTogMiwgdHlwZTogJ3NpZ25lcid9LFxuICAgIHtyb2xlX25hbWU6ICdPZmZpY2UgTWFuYWdlcicsIHN0YXR1czogJ3BlbmRpbmcnLCBmdWxsX25hbWU6ICdQYWlnZSBUdXJuZXInLCBzZXF1ZW5jZTogMywgdHlwZTogJ2FwcHJvdmVyJ30sXG4gIF0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnQ29udHJvbHMvU3RhdHVzIEluZGljYXRvcicsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3Mtc3RhdHVzLWluZGljYXRvcicsXG4gIGFyZ3M6IHtcbiAgICBkb2N1bWVudDogMCxcbiAgICBzdGF0dXM6ICdjb21wbGV0ZScsXG4gICAgdGhlbWU6ICdsaWdodCcsXG4gICAgc2l6ZTogJ25vcm1hbCcsXG4gIH0sXG4gIGFyZ1R5cGVzOiB7XG4gICAgZG9jdW1lbnQ6IHtcbiAgICAgIG9wdGlvbnM6IFswLCAxXSxcbiAgICAgIG1hcHBpbmc6IHswOiBTYW1wbGVEb2N1bWVudCwgMTogbnVsbH0sXG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6ICdzZWxlY3QnLFxuICAgICAgICBsYWJlbHM6IHtcbiAgICAgICAgICAwOiAnU2FtcGxlIERvY3VtZW50JyxcbiAgICAgICAgICAxOiAnTm90IFNldCcsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAgc3RhdHVzOiB7XG4gICAgICBkZWZhdWx0VmFsdWU6ICcnLFxuICAgICAgb3B0aW9uczogWzAsICdjb21wbGV0ZScsICdwZW5kaW5nJywgJ2luIHByb2dyZXNzJywgJ2RlY2xpbmVkJywgJ2NhbmNlbGVkJywgJ2ludml0ZWQnLCAnb3BlbmVkJywgJ2FjY2VwdGVkJywgJ3NpZ25lZCcsICdzdWJtaXR0ZWQnXSxcbiAgICAgIG1hcHBpbmc6IHtcbiAgICAgICAgMDogbnVsbCxcbiAgICAgICAgJ2NvbXBsZXRlJzogJ2NvbXBsZXRlJyxcbiAgICAgICAgJ3BlbmRpbmcnOiAncGVuZGluZycsXG4gICAgICAgICdpbiBwcm9ncmVzcyc6ICdpbiBwcm9ncmVzcycsXG4gICAgICAgICdkZWNsaW5lZCc6ICdkZWNsaW5lZCcsXG4gICAgICAgICdjYW5jZWxlZCc6ICdjYW5jZWxlZCcsXG4gICAgICAgICdpbnZpdGVkJzogJ2ludml0ZWQnLFxuICAgICAgICAnb3BlbmVkJzogJ29wZW5lZCcsXG4gICAgICAgICdhY2NlcHRlZCc6ICdhY2NlcHRlZCcsXG4gICAgICAgICdzaWduZWQnOiAnc2lnbmVkJyxcbiAgICAgICAgJ3N1Ym1pdHRlZCc6ICdzdWJtaXR0ZWQnLFxuICAgICAgfSxcbiAgICAgIGNvbnRyb2w6IHtcbiAgICAgICAgdHlwZTogJ3NlbGVjdCcsXG4gICAgICAgIGxhYmVsczoge1xuICAgICAgICAgIDA6ICdOb3QgU2V0JyxcbiAgICAgICAgICAnY29tcGxldGUnOiAnQ29tcGxldGUnLFxuICAgICAgICAgICdwZW5kaW5nJzogJ1BlbmRpbmcnLFxuICAgICAgICAgICdpbiBwcm9ncmVzcyc6ICdJbiBQcm9ncmVzcycsXG4gICAgICAgICAgJ2RlY2xpbmVkJzogJ0RlY2xpbmVkJyxcbiAgICAgICAgICAnY2FuY2VsZWQnOiAnQ2FuY2VsZWQnLFxuICAgICAgICAgICdpbnZpdGVkJzogJ0ludml0ZWQnLFxuICAgICAgICAgICdvcGVuZWQnOiAnT3BlbmVkJyxcbiAgICAgICAgICAnYWNjZXB0ZWQnOiAnQWNjZXB0ZWQnLFxuICAgICAgICAgICdzaWduZWQnOiAnU2lnbmVkJyxcbiAgICAgICAgICAnc3VibWl0dGVkJzogJ1N1Ym1pdHRlZCcsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBTdGF0dXNJbmRpY2F0b3IgPSAoe3RoZW1lLCBzaXplLCBzdGF0dXMsIGRvY3VtZW50fSkgPT5cbiAgaHRtbGA8dmVyZG9jcy1zdGF0dXMtaW5kaWNhdG9yIC50aGVtZT1cIiR7dGhlbWV9XCIgLnNpemU9XCIke3NpemV9XCIgLnN0YXR1cz1cIiR7c3RhdHVzfVwiIC5kb2N1bWVudD1cIiR7ZG9jdW1lbnR9XCIgLz5gO1xuXG5cblxuU3RhdHVzSW5kaWNhdG9yLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe3RoZW1lLCBzaXplLCBzdGF0dXMsIGRvY3VtZW50fSkgPT5cXG4gIGh0bWxgPHZlcmRvY3Mtc3RhdHVzLWluZGljYXRvciAudGhlbWU9XFxcIiR7dGhlbWV9XFxcIiAuc2l6ZT1cXFwiJHtzaXplfVxcXCIgLnN0YXR1cz1cXFwiJHtzdGF0dXN9XFxcIiAuZG9jdW1lbnQ9XFxcIiR7ZG9jdW1lbnR9XFxcIiAvPmBcIiB9LCAuLi5TdGF0dXNJbmRpY2F0b3IucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5pbXBvcnQge0lPcmdhbml6YXRpb259IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9Pcmdhbml6YXRpb25zL1R5cGVzJztcXG5pbXBvcnQge0lUZW1wbGF0ZX0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9UeXBlcyc7XFxuXFxuY29uc3QgTW9ja1RlbXBsYXRlID0ge1xcbiAgY291bnRlcjogMixcXG4gIHN0YXJfY291bnRlcjogMTAsXFxuICBuYW1lOiAnSVJTIEZvcm0gSS05JyxcXG4gIGlkOiAnMScsXFxuICBwcm9maWxlX2lkOiAnMicsXFxuICBjcmVhdGVkX2F0OiAnMjAyMS0xMS0xNFQxMzo1NzoyMVonLFxcbiAgdXBkYXRlZF9hdDogJzIwMjEtMTEtMTRUMTM6NTc6MjFaJyxcXG4gIGxhc3RfdXNlZF9hdDogJzIwMjEtMTEtMTRUMTM6NTc6MjFaJyxcXG4gIG9yZ2FuaXphdGlvbl9pZDogJzMnLFxcbiAgaXNfcGVyc29uYWw6IGZhbHNlLFxcbiAgaXNfcHVibGljOiB0cnVlLFxcbiAgc2VuZGVyOiAnY3JlYXRvcicsXFxuICBkZXNjcmlwdGlvbjogJ0lSUyBGb3JtIEktOScsXFxuXFxuICAvLyBUT0RPOiBUaGVzZSBmaWVsZHMgbmVlZCB0byBiZSBhZGRlZCB0byB0aGUgQVBJIHJlc3BvbnNlXFxuICBvcmdhbml6YXRpb246IHtcXG4gICAgaWQ6ICczJyxcXG4gICAgbmFtZTogJ0FDTUUgV2lkZ2V0cywgTExDJyxcXG4gICAgYWRkcmVzczogbnVsbCxcXG4gICAgcGhvbmU6IG51bGwsXFxuICAgIGJ1c2luZXNzX25hbWU6IG51bGwsXFxuICAgIGlzX2J1c2luZXNzOiB0cnVlLFxcbiAgICBhZGRyZXNzMjogbnVsbCxcXG4gICAgY29udGFjdF9lbWFpbDogbnVsbCxcXG4gICAgdGltZXpvbmU6IG51bGwsXFxuICAgIGVudmVsb3BlX3Jlc3BvbnNpYmxlOiBmYWxzZSxcXG4gIH0gYXMgSU9yZ2FuaXphdGlvbixcXG5cXG4gIHRlbXBsYXRlX2RvY3VtZW50OiB7XFxuICAgIHVybDogJ3VybCcsXFxuICAgIG5hbWU6ICdJUlMgRm9ybSBJLTknLFxcbiAgICBwYWdlX251bWJlcnM6IDMsXFxuICAgIGlkOiAnNCcsXFxuICAgIHVwZGF0ZWRfYXQ6ICcyMDIxLTExLTE0VDEzOjU3OjIxWicsXFxuICAgIGNyZWF0ZWRfYXQ6ICcyMDIxLTExLTE0VDEzOjU3OjIxWicsXFxuICAgIHRlbXBsYXRlX2lkOiAnMScsXFxuICAgIG1pbWU6ICdhcHBsaWNhdGlvbi9wZGYnLFxcbiAgICB0aHVtYm5haWxfdXJsOiAnaHR0cHM6Ly92ZXJkb2NzLmNvbS9lbi93cC1jb250ZW50L3VwbG9hZHMvMjAyMS8xMi9TY3JlZW4tU2hvdC0yMDIxLTEyLTMwLWF0LTIuMjYuMDgtUE0tZTE2NDA4OTI1MzY3ODYucG5nJyxcXG4gIH0sXFxufSBhcyBJVGVtcGxhdGU7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdDb250cm9scy9UZW1wbGF0ZSBDYXJkJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtdGVtcGxhdGUtY2FyZCcsXFxuICBhcmdzOiB7XFxuICAgIHRlbXBsYXRlOiBNb2NrVGVtcGxhdGUsXFxuICB9LFxcbiAgYXJnVHlwZXM6IHt9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgVGVtcGxhdGVDYXJkID0gKHt0ZW1wbGF0ZX0pID0+IGh0bWxgPHZlcmRvY3MtdGVtcGxhdGUtY2FyZCAudGVtcGxhdGU9JHt0ZW1wbGF0ZX0gLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJUZW1wbGF0ZUNhcmRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjI4LFwibGluZVwiOjU3fSxcImVuZExvY1wiOntcImNvbFwiOjk3LFwibGluZVwiOjU3fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjI4LFwibGluZVwiOjU3fSxcImVuZEJvZHlcIjp7XCJjb2xcIjo5NyxcImxpbmVcIjo1N319fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcbmltcG9ydCB7SU9yZ2FuaXphdGlvbn0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL09yZ2FuaXphdGlvbnMvVHlwZXMnO1xuaW1wb3J0IHtJVGVtcGxhdGV9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9UZW1wbGF0ZXMvVHlwZXMnO1xuXG5jb25zdCBNb2NrVGVtcGxhdGUgPSB7XG4gIGNvdW50ZXI6IDIsXG4gIHN0YXJfY291bnRlcjogMTAsXG4gIG5hbWU6ICdJUlMgRm9ybSBJLTknLFxuICBpZDogJzEnLFxuICBwcm9maWxlX2lkOiAnMicsXG4gIGNyZWF0ZWRfYXQ6ICcyMDIxLTExLTE0VDEzOjU3OjIxWicsXG4gIHVwZGF0ZWRfYXQ6ICcyMDIxLTExLTE0VDEzOjU3OjIxWicsXG4gIGxhc3RfdXNlZF9hdDogJzIwMjEtMTEtMTRUMTM6NTc6MjFaJyxcbiAgb3JnYW5pemF0aW9uX2lkOiAnMycsXG4gIGlzX3BlcnNvbmFsOiBmYWxzZSxcbiAgaXNfcHVibGljOiB0cnVlLFxuICBzZW5kZXI6ICdjcmVhdG9yJyxcbiAgZGVzY3JpcHRpb246ICdJUlMgRm9ybSBJLTknLFxuXG4gIC8vIFRPRE86IFRoZXNlIGZpZWxkcyBuZWVkIHRvIGJlIGFkZGVkIHRvIHRoZSBBUEkgcmVzcG9uc2VcbiAgb3JnYW5pemF0aW9uOiB7XG4gICAgaWQ6ICczJyxcbiAgICBuYW1lOiAnQUNNRSBXaWRnZXRzLCBMTEMnLFxuICAgIGFkZHJlc3M6IG51bGwsXG4gICAgcGhvbmU6IG51bGwsXG4gICAgYnVzaW5lc3NfbmFtZTogbnVsbCxcbiAgICBpc19idXNpbmVzczogdHJ1ZSxcbiAgICBhZGRyZXNzMjogbnVsbCxcbiAgICBjb250YWN0X2VtYWlsOiBudWxsLFxuICAgIHRpbWV6b25lOiBudWxsLFxuICAgIGVudmVsb3BlX3Jlc3BvbnNpYmxlOiBmYWxzZSxcbiAgfSBhcyBJT3JnYW5pemF0aW9uLFxuXG4gIHRlbXBsYXRlX2RvY3VtZW50OiB7XG4gICAgdXJsOiAndXJsJyxcbiAgICBuYW1lOiAnSVJTIEZvcm0gSS05JyxcbiAgICBwYWdlX251bWJlcnM6IDMsXG4gICAgaWQ6ICc0JyxcbiAgICB1cGRhdGVkX2F0OiAnMjAyMS0xMS0xNFQxMzo1NzoyMVonLFxuICAgIGNyZWF0ZWRfYXQ6ICcyMDIxLTExLTE0VDEzOjU3OjIxWicsXG4gICAgdGVtcGxhdGVfaWQ6ICcxJyxcbiAgICBtaW1lOiAnYXBwbGljYXRpb24vcGRmJyxcbiAgICB0aHVtYm5haWxfdXJsOiAnaHR0cHM6Ly92ZXJkb2NzLmNvbS9lbi93cC1jb250ZW50L3VwbG9hZHMvMjAyMS8xMi9TY3JlZW4tU2hvdC0yMDIxLTEyLTMwLWF0LTIuMjYuMDgtUE0tZTE2NDA4OTI1MzY3ODYucG5nJyxcbiAgfSxcbn0gYXMgSVRlbXBsYXRlO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnQ29udHJvbHMvVGVtcGxhdGUgQ2FyZCcsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtdGVtcGxhdGUtY2FyZCcsXG4gIGFyZ3M6IHtcbiAgICB0ZW1wbGF0ZTogTW9ja1RlbXBsYXRlLFxuICB9LFxuICBhcmdUeXBlczoge30sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBUZW1wbGF0ZUNhcmQgPSAoe3RlbXBsYXRlfSkgPT4gaHRtbGA8dmVyZG9jcy10ZW1wbGF0ZS1jYXJkIC50ZW1wbGF0ZT0ke3RlbXBsYXRlfSAvPmA7XG5cblxuXG5UZW1wbGF0ZUNhcmQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7dGVtcGxhdGV9KSA9PiBodG1sYDx2ZXJkb2NzLXRlbXBsYXRlLWNhcmQgLnRlbXBsYXRlPSR7dGVtcGxhdGV9IC8+YFwiIH0sIC4uLlRlbXBsYXRlQ2FyZC5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQ29udHJvbHMvVGVtcGxhdGUgVGFncycsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXRlbXBsYXRlLXRhZ3MnLFxcbiAgYXJnczoge1xcbiAgICB0YWdzOiBbJ2NvbnRyYWN0b3JzJywgJ3RheGVzJywgJ2lycyddLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7fSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFRlbXBsYXRlVGFncyA9ICh7dGFncywgdGhlbWV9KSA9PiBodG1sYDx2ZXJkb2NzLXRlbXBsYXRlLXRhZ3MgLnRhZ3M9XFxcIiR7dGFnc31cXFwiIC50aGVtZT1cXFwiJHt0aGVtZX1cXFwiIC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiVGVtcGxhdGVUYWdzXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoyOCxcImxpbmVcIjoxM30sXCJlbmRMb2NcIjp7XCJjb2xcIjoxMTIsXCJsaW5lXCI6MTN9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjgsXCJsaW5lXCI6MTN9LFwiZW5kQm9keVwiOntcImNvbFwiOjExMixcImxpbmVcIjoxM319fTtcbiAgICBcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0NvbnRyb2xzL1RlbXBsYXRlIFRhZ3MnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXRlbXBsYXRlLXRhZ3MnLFxuICBhcmdzOiB7XG4gICAgdGFnczogWydjb250cmFjdG9ycycsICd0YXhlcycsICdpcnMnXSxcbiAgfSxcbiAgYXJnVHlwZXM6IHt9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgVGVtcGxhdGVUYWdzID0gKHt0YWdzLCB0aGVtZX0pID0+IGh0bWxgPHZlcmRvY3MtdGVtcGxhdGUtdGFncyAudGFncz1cIiR7dGFnc31cIiAudGhlbWU9XCIke3RoZW1lfVwiIC8+YDtcblxuXG5cblRlbXBsYXRlVGFncy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHt0YWdzLCB0aGVtZX0pID0+IGh0bWxgPHZlcmRvY3MtdGVtcGxhdGUtdGFncyAudGFncz1cXFwiJHt0YWdzfVxcXCIgLnRoZW1lPVxcXCIke3RoZW1lfVxcXCIgLz5gXCIgfSwgLi4uVGVtcGxhdGVUYWdzLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdDb250cm9scy9UZXh0IElucHV0JyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtdGV4dC1pbnB1dCcsXFxuICBhcmdzOiB7XFxuICAgIGxhYmVsOiAnTmFtZScsXFxuICAgIHZhbHVlOiAnJyxcXG4gICAgcGxhY2Vob2xkZXI6ICdFbnRlciB5b3VyIG5hbWUuLi4nLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGlucHV0OiB7XFxuICAgICAgYWN0aW9uOiAnaW5wdXQnLFxcbiAgICAgIHRhYmxlOiB7XFxuICAgICAgICBkaXNhYmxlOiB0cnVlLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICB9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgVGV4dElucHV0ID0gKHt0eXBlLCBsYWJlbCwgdmFsdWUsIHBsYWNlaG9sZGVyLCBkaXNhYmxlZCwgaW5wdXR9KSA9PlxcbiAgaHRtbGA8dmVyZG9jcy10ZXh0LWlucHV0IC50eXBlPSR7dHlwZX0gLmxhYmVsPSR7bGFiZWx9IC5wbGFjZWhvbGRlcj0ke3BsYWNlaG9sZGVyfSAudmFsdWU9JHt2YWx1ZX0gLmRpc2FibGVkPSR7ZGlzYWJsZWR9IEBpbnB1dD0ke2lucHV0fSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlRleHRJbnB1dFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjUsXCJsaW5lXCI6MjJ9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTQyLFwibGluZVwiOjIzfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjI1LFwibGluZVwiOjIyfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxNDIsXCJsaW5lXCI6MjN9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdDb250cm9scy9UZXh0IElucHV0JyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy10ZXh0LWlucHV0JyxcbiAgYXJnczoge1xuICAgIGxhYmVsOiAnTmFtZScsXG4gICAgdmFsdWU6ICcnLFxuICAgIHBsYWNlaG9sZGVyOiAnRW50ZXIgeW91ciBuYW1lLi4uJyxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBpbnB1dDoge1xuICAgICAgYWN0aW9uOiAnaW5wdXQnLFxuICAgICAgdGFibGU6IHtcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IFRleHRJbnB1dCA9ICh7dHlwZSwgbGFiZWwsIHZhbHVlLCBwbGFjZWhvbGRlciwgZGlzYWJsZWQsIGlucHV0fSkgPT5cbiAgaHRtbGA8dmVyZG9jcy10ZXh0LWlucHV0IC50eXBlPSR7dHlwZX0gLmxhYmVsPSR7bGFiZWx9IC5wbGFjZWhvbGRlcj0ke3BsYWNlaG9sZGVyfSAudmFsdWU9JHt2YWx1ZX0gLmRpc2FibGVkPSR7ZGlzYWJsZWR9IEBpbnB1dD0ke2lucHV0fSAvPmA7XG5cblxuXG5UZXh0SW5wdXQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7dHlwZSwgbGFiZWwsIHZhbHVlLCBwbGFjZWhvbGRlciwgZGlzYWJsZWQsIGlucHV0fSkgPT5cXG4gIGh0bWxgPHZlcmRvY3MtdGV4dC1pbnB1dCAudHlwZT0ke3R5cGV9IC5sYWJlbD0ke2xhYmVsfSAucGxhY2Vob2xkZXI9JHtwbGFjZWhvbGRlcn0gLnZhbHVlPSR7dmFsdWV9IC5kaXNhYmxlZD0ke2Rpc2FibGVkfSBAaW5wdXQ9JHtpbnB1dH0gLz5gXCIgfSwgLi4uVGV4dElucHV0LnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdDb250cm9scy9Ub2dnbGUgQnV0dG9uJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtdG9nZ2xlLWJ1dHRvbicsXFxuICBhcmdzOiB7XFxuICAgIGljb246ICc8c3ZnIGNsYXNzPVxcXCJNdWlTdmdJY29uLXJvb3QgTXVpU3ZnSWNvbi1mb250U2l6ZU1lZGl1bSBNdWlCb3gtcm9vdCBjc3MtMW9tMGhrY1xcXCIgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiIHZpZXdCb3g9XFxcIjAgMCAyNCAyNFxcXCI+PHBhdGggZD1cXFwiTTIwIDJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDIybDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0tMiAxMkg2di0yaDEydjJ6bTAtM0g2VjloMTJ2MnptMC0zSDZWNmgxMnYyelxcXCI+PC9wYXRoPjwvc3ZnPicsXFxuICAgIGxhYmVsOiAnVXNlJyxcXG4gICAgc2l6ZTogJ25vcm1hbCcsXFxuICAgIGFjdGl2ZTogZmFsc2UsXFxuICB9LFxcbiAgLy8gYXJnVHlwZXM6IHtcXG4gIC8vICAgb3B0aW9uczoge3R5cGU6ICdvYmplY3QnLCBjb250cm9sOiAnb2JqZWN0J30sXFxuICAvLyAgIHRoZW1lOiB7dHlwZTogJ3N0cmluZycsIGNvbnRyb2w6ICdyYWRpbycsIG9wdGlvbnM6WydsaWdodCcsICdkYXJrJ10sIGRlZmF1bHRWYWx1ZTogJ2xpZ2h0J31cXG4gIC8vIH0sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBUb2dnbGVCdXR0b24gPSAoe2ljb24sIGxhYmVsLCBzaXplLCBhY3RpdmV9KSA9PiBodG1sYDx2ZXJkb2NzLXRvZ2dsZS1idXR0b24gLmljb249JHtpY29ufSAubGFiZWw9JHtsYWJlbH0gLnNpemU9JHtzaXplfSAuYWN0aXZlPSR7YWN0aXZlfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlRvZ2dsZUJ1dHRvblwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjgsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTU0LFwibGluZVwiOjE5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjI4LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxNTQsXCJsaW5lXCI6MTl9fX07XG4gICAgXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdDb250cm9scy9Ub2dnbGUgQnV0dG9uJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy10b2dnbGUtYnV0dG9uJyxcbiAgYXJnczoge1xuICAgIGljb246ICc8c3ZnIGNsYXNzPVwiTXVpU3ZnSWNvbi1yb290IE11aVN2Z0ljb24tZm9udFNpemVNZWRpdW0gTXVpQm94LXJvb3QgY3NzLTFvbTBoa2NcIiBmb2N1c2FibGU9XCJmYWxzZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTIwIDJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDIybDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0tMiAxMkg2di0yaDEydjJ6bTAtM0g2VjloMTJ2MnptMC0zSDZWNmgxMnYyelwiPjwvcGF0aD48L3N2Zz4nLFxuICAgIGxhYmVsOiAnVXNlJyxcbiAgICBzaXplOiAnbm9ybWFsJyxcbiAgICBhY3RpdmU6IGZhbHNlLFxuICB9LFxuICAvLyBhcmdUeXBlczoge1xuICAvLyAgIG9wdGlvbnM6IHt0eXBlOiAnb2JqZWN0JywgY29udHJvbDogJ29iamVjdCd9LFxuICAvLyAgIHRoZW1lOiB7dHlwZTogJ3N0cmluZycsIGNvbnRyb2w6ICdyYWRpbycsIG9wdGlvbnM6WydsaWdodCcsICdkYXJrJ10sIGRlZmF1bHRWYWx1ZTogJ2xpZ2h0J31cbiAgLy8gfSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IFRvZ2dsZUJ1dHRvbiA9ICh7aWNvbiwgbGFiZWwsIHNpemUsIGFjdGl2ZX0pID0+IGh0bWxgPHZlcmRvY3MtdG9nZ2xlLWJ1dHRvbiAuaWNvbj0ke2ljb259IC5sYWJlbD0ke2xhYmVsfSAuc2l6ZT0ke3NpemV9IC5hY3RpdmU9JHthY3RpdmV9IC8+YDtcblxuXG5cblRvZ2dsZUJ1dHRvbi5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtpY29uLCBsYWJlbCwgc2l6ZSwgYWN0aXZlfSkgPT4gaHRtbGA8dmVyZG9jcy10b2dnbGUtYnV0dG9uIC5pY29uPSR7aWNvbn0gLmxhYmVsPSR7bGFiZWx9IC5zaXplPSR7c2l6ZX0gLmFjdGl2ZT0ke2FjdGl2ZX0gLz5gXCIgfSwgLi4uVG9nZ2xlQnV0dG9uLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuXFxuY29uc3QgZHVtbXlPcHRpb25zID0ge1xcbiAgbGFiZWw6ICdWaWV3IGFzJyxcXG4gIGRlZmF1bHRTZWxlY3Rpb246IDEsXFxuICBidXR0b25zOiBbXFxuICAgIHtcXG4gICAgICBpZDogJ2xpc3QtdmlldycsXFxuICAgICAgaWNvbjpcXG4gICAgICAgICc8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZW5hYmxlLWJhY2tncm91bmQ9XFxcIm5ldyAwIDAgMjQgMjRcXFwiIGhlaWdodD1cXFwiMjRweFxcXCIgdmlld0JveD1cXFwiMCAwIDI0IDI0XFxcIiB3aWR0aD1cXFwiMjRweFxcXCIgZmlsbD1cXFwiIzAwMDAwMFxcXCI+PHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgaGVpZ2h0PVxcXCIyNFxcXCIgd2lkdGg9XFxcIjI0XFxcIi8+PHBhdGggZD1cXFwiTTMsNXYxNGgxOFY1SDN6IE03LDd2Mkg1VjdIN3ogTTUsMTN2LTJoMnYySDV6IE01LDE1aDJ2Mkg1VjE1eiBNMTksMTdIOXYtMmgxMFYxN3ogTTE5LDEzSDl2LTJoMTBWMTN6IE0xOSw5SDlWN2gxMFY5elxcXCIvPjwvc3ZnPicsXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICBpZDogJ2dyaWQtdmlldycsXFxuICAgICAgaWNvbjpcXG4gICAgICAgICc8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgaGVpZ2h0PVxcXCIyNHB4XFxcIiB2aWV3Qm94PVxcXCIwIDAgMjQgMjRcXFwiIHdpZHRoPVxcXCIyNHB4XFxcIiBmaWxsPVxcXCIjMDAwMDAwXFxcIj48cGF0aCBkPVxcXCJNMCAwaDI0djI0SDBWMHpcXFwiIGZpbGw9XFxcIm5vbmVcXFwiLz48cGF0aCBkPVxcXCJNMyA1djE0aDE5VjVIM3ptMTcgNGgtMi4yNVY3SDIwdjJ6TTkuMjUgMTFoMi4yNXYySDkuMjV2LTJ6bS0yIDJINXYtMmgyLjI1djJ6bTQuMjUtNEg5LjI1VjdoMi4yNXYyem0yLTJoMi4yNXYySDEzLjVWN3ptLTIgOHYySDkuMjV2LTJoMi4yNXptMiAwaDIuMjV2MkgxMy41di0yem0wLTJ2LTJoMi4yNXYySDEzLjV6bTQuMjUtMkgyMHYyaC0yLjI1di0yek03LjI1IDd2Mkg1VjdoMi4yNXpNNSAxNWgyLjI1djJINXYtMnptMTIuNzUgMnYtMkgyMHYyaC0yLjI1elxcXCIvPjwvc3ZnPicsXFxuICAgIH0sXFxuICBdLFxcbn07XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdDb250cm9scy9Ub2dnbGUnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy10b2dnbGUnLFxcbiAgYXJnczoge1xcbiAgICBvcHRpb25zOiBkdW1teU9wdGlvbnMsXFxuICB9LFxcbiAgLy8gYXJnVHlwZXM6IHtcXG4gIC8vICAgb3B0aW9uczoge3R5cGU6ICdvYmplY3QnLCBjb250cm9sOiAnb2JqZWN0J30sXFxuICAvLyAgIHRoZW1lOiB7dHlwZTogJ3N0cmluZycsIGNvbnRyb2w6ICdyYWRpbycsIG9wdGlvbnM6WydsaWdodCcsICdkYXJrJ10sIGRlZmF1bHRWYWx1ZTogJ2xpZ2h0J31cXG4gIC8vIH0sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBUb2dnbGUgPSAoe29wdGlvbnMsIHRoZW1lfSkgPT4gaHRtbGA8dmVyZG9jcy10b2dnbGUgLm9wdGlvbnM9JHtvcHRpb25zfSAudGhlbWU9JHt0aGVtZX0+PC92ZXJkb2NzLXRvZ2dsZT5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJUb2dnbGVcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjIyLFwibGluZVwiOjMzfSxcImVuZExvY1wiOntcImNvbFwiOjExOSxcImxpbmVcIjozM30sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyMixcImxpbmVcIjozM30sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTE5LFwibGluZVwiOjMzfX19O1xuICAgIFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuXG5jb25zdCBkdW1teU9wdGlvbnMgPSB7XG4gIGxhYmVsOiAnVmlldyBhcycsXG4gIGRlZmF1bHRTZWxlY3Rpb246IDEsXG4gIGJ1dHRvbnM6IFtcbiAgICB7XG4gICAgICBpZDogJ2xpc3QtdmlldycsXG4gICAgICBpY29uOlxuICAgICAgICAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZW5hYmxlLWJhY2tncm91bmQ9XCJuZXcgMCAwIDI0IDI0XCIgaGVpZ2h0PVwiMjRweFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB3aWR0aD1cIjI0cHhcIiBmaWxsPVwiIzAwMDAwMFwiPjxyZWN0IGZpbGw9XCJub25lXCIgaGVpZ2h0PVwiMjRcIiB3aWR0aD1cIjI0XCIvPjxwYXRoIGQ9XCJNMyw1djE0aDE4VjVIM3ogTTcsN3YySDVWN0g3eiBNNSwxM3YtMmgydjJINXogTTUsMTVoMnYySDVWMTV6IE0xOSwxN0g5di0yaDEwVjE3eiBNMTksMTNIOXYtMmgxMFYxM3ogTTE5LDlIOVY3aDEwVjl6XCIvPjwvc3ZnPicsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogJ2dyaWQtdmlldycsXG4gICAgICBpY29uOlxuICAgICAgICAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjRweFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB3aWR0aD1cIjI0cHhcIiBmaWxsPVwiIzAwMDAwMFwiPjxwYXRoIGQ9XCJNMCAwaDI0djI0SDBWMHpcIiBmaWxsPVwibm9uZVwiLz48cGF0aCBkPVwiTTMgNXYxNGgxOVY1SDN6bTE3IDRoLTIuMjVWN0gyMHYyek05LjI1IDExaDIuMjV2Mkg5LjI1di0yem0tMiAySDV2LTJoMi4yNXYyem00LjI1LTRIOS4yNVY3aDIuMjV2MnptMi0yaDIuMjV2MkgxMy41Vjd6bS0yIDh2Mkg5LjI1di0yaDIuMjV6bTIgMGgyLjI1djJIMTMuNXYtMnptMC0ydi0yaDIuMjV2MkgxMy41em00LjI1LTJIMjB2MmgtMi4yNXYtMnpNNy4yNSA3djJINVY3aDIuMjV6TTUgMTVoMi4yNXYySDV2LTJ6bTEyLjc1IDJ2LTJIMjB2MmgtMi4yNXpcIi8+PC9zdmc+JyxcbiAgICB9LFxuICBdLFxufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0NvbnRyb2xzL1RvZ2dsZScsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtdG9nZ2xlJyxcbiAgYXJnczoge1xuICAgIG9wdGlvbnM6IGR1bW15T3B0aW9ucyxcbiAgfSxcbiAgLy8gYXJnVHlwZXM6IHtcbiAgLy8gICBvcHRpb25zOiB7dHlwZTogJ29iamVjdCcsIGNvbnRyb2w6ICdvYmplY3QnfSxcbiAgLy8gICB0aGVtZToge3R5cGU6ICdzdHJpbmcnLCBjb250cm9sOiAncmFkaW8nLCBvcHRpb25zOlsnbGlnaHQnLCAnZGFyayddLCBkZWZhdWx0VmFsdWU6ICdsaWdodCd9XG4gIC8vIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBUb2dnbGUgPSAoe29wdGlvbnMsIHRoZW1lfSkgPT4gaHRtbGA8dmVyZG9jcy10b2dnbGUgLm9wdGlvbnM9JHtvcHRpb25zfSAudGhlbWU9JHt0aGVtZX0+PC92ZXJkb2NzLXRvZ2dsZT5gO1xuXG5cblxuVG9nZ2xlLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe29wdGlvbnMsIHRoZW1lfSkgPT4gaHRtbGA8dmVyZG9jcy10b2dnbGUgLm9wdGlvbnM9JHtvcHRpb25zfSAudGhlbWU9JHt0aGVtZX0+PC92ZXJkb2NzLXRvZ2dsZT5gXCIgfSwgLi4uVG9nZ2xlLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdDb250cm9scy9Ub29sYmFyIEljb24nLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy10b29sYmFyLWljb24nLFxcbiAgYXJnczoge1xcbiAgICB0ZXh0OiAnU2FtcGxlIHRvb2x0aXAgdGV4dCcsXFxuICAgIGljb246ICc8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgaGVpZ2h0PVxcXCIyNFxcXCIgd2lkdGg9XFxcIjI0XFxcIj48cGF0aCBkPVxcXCJNNy42IDEzLjkyNXEtLjU1IDAtLjkyNS0uMzc1dC0uMzc1LS45MjVxMC0uNTUuMzc1LS45MzcuMzc1LS4zODguOTI1LS4zODh0LjkyNS4zODhxLjM3NS4zODcuMzc1LjkzN3QtLjM3NS45MjVxLS4zNzUuMzc1LS45MjUuMzc1Wm00LjQgMHEtLjU1IDAtLjkyNS0uMzc1dC0uMzc1LS45MjVxMC0uNTUuMzc1LS45MzcuMzc1LS4zODguOTI1LS4zODh0LjkyNS4zODhxLjM3NS4zODcuMzc1LjkzN3QtLjM3NS45MjVxLS4zNzUuMzc1LS45MjUuMzc1Wm00LjQgMHEtLjU1IDAtLjkyNS0uMzc1dC0uMzc1LS45MjVxMC0uNTUuMzc1LS45MzcuMzc1LS4zODguOTI1LS4zODh0LjkyNS4zODhxLjM3NS4zODcuMzc1LjkzN3QtLjM3NS45MjVxLS4zNzUuMzc1LS45MjUuMzc1Wk01LjMgMjIuODVxLTEuMzI1IDAtMi4yMzgtLjkxMi0uOTEyLS45MTMtLjkxMi0yLjIzOFY2LjNxMC0xLjMyNS45MTItMi4yMzguOTEzLS45MTIgMi4yMzgtLjkxMkg2di0yaDIuNTc1djJoNi44NXYtMkgxOHYyaC43cTEuMzI1IDAgMi4yMzguOTEyLjkxMi45MTMuOTEyIDIuMjM4djEzLjRxMCAxLjMyNS0uOTEyIDIuMjM4LS45MTMuOTEyLTIuMjM4LjkxMlptMC0zLjE1aDEzLjRWMTBINS4zdjkuN1pNNS4zIDhoMTMuNFY2LjNINS4zWm0wIDBWNi4zIDhaXFxcIi8+PC9zdmc+JyxcXG4gIH0sXFxuICBhcmdUeXBlczoge30sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGxheW91dDogJ2Z1bGxzY3JlZW4nLFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFRvb2xiYXJJY29uID0gKHt0ZXh0LCBpY29ufSkgPT4gaHRtbGA8dmVyZG9jcy10b29sYmFyLWljb24gLnRleHQ9JHt0ZXh0fSAuaWNvbj0ke2ljb259IC8+IGA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlRvb2xiYXJJY29uXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoyNyxcImxpbmVcIjoxN30sXCJlbmRMb2NcIjp7XCJjb2xcIjoxMDQsXCJsaW5lXCI6MTd9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjcsXCJsaW5lXCI6MTd9LFwiZW5kQm9keVwiOntcImNvbFwiOjEwNCxcImxpbmVcIjoxN319fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0NvbnRyb2xzL1Rvb2xiYXIgSWNvbicsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtdG9vbGJhci1pY29uJyxcbiAgYXJnczoge1xuICAgIHRleHQ6ICdTYW1wbGUgdG9vbHRpcCB0ZXh0JyxcbiAgICBpY29uOiAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjRcIiB3aWR0aD1cIjI0XCI+PHBhdGggZD1cIk03LjYgMTMuOTI1cS0uNTUgMC0uOTI1LS4zNzV0LS4zNzUtLjkyNXEwLS41NS4zNzUtLjkzNy4zNzUtLjM4OC45MjUtLjM4OHQuOTI1LjM4OHEuMzc1LjM4Ny4zNzUuOTM3dC0uMzc1LjkyNXEtLjM3NS4zNzUtLjkyNS4zNzVabTQuNCAwcS0uNTUgMC0uOTI1LS4zNzV0LS4zNzUtLjkyNXEwLS41NS4zNzUtLjkzNy4zNzUtLjM4OC45MjUtLjM4OHQuOTI1LjM4OHEuMzc1LjM4Ny4zNzUuOTM3dC0uMzc1LjkyNXEtLjM3NS4zNzUtLjkyNS4zNzVabTQuNCAwcS0uNTUgMC0uOTI1LS4zNzV0LS4zNzUtLjkyNXEwLS41NS4zNzUtLjkzNy4zNzUtLjM4OC45MjUtLjM4OHQuOTI1LjM4OHEuMzc1LjM4Ny4zNzUuOTM3dC0uMzc1LjkyNXEtLjM3NS4zNzUtLjkyNS4zNzVaTTUuMyAyMi44NXEtMS4zMjUgMC0yLjIzOC0uOTEyLS45MTItLjkxMy0uOTEyLTIuMjM4VjYuM3EwLTEuMzI1LjkxMi0yLjIzOC45MTMtLjkxMiAyLjIzOC0uOTEySDZ2LTJoMi41NzV2Mmg2Ljg1di0ySDE4djJoLjdxMS4zMjUgMCAyLjIzOC45MTIuOTEyLjkxMy45MTIgMi4yMzh2MTMuNHEwIDEuMzI1LS45MTIgMi4yMzgtLjkxMy45MTItMi4yMzguOTEyWm0wLTMuMTVoMTMuNFYxMEg1LjN2OS43Wk01LjMgOGgxMy40VjYuM0g1LjNabTAgMFY2LjMgOFpcIi8+PC9zdmc+JyxcbiAgfSxcbiAgYXJnVHlwZXM6IHt9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFySWNvbiA9ICh7dGV4dCwgaWNvbn0pID0+IGh0bWxgPHZlcmRvY3MtdG9vbGJhci1pY29uIC50ZXh0PSR7dGV4dH0gLmljb249JHtpY29ufSAvPiBgO1xuXG5cblxuVG9vbGJhckljb24ucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7dGV4dCwgaWNvbn0pID0+IGh0bWxgPHZlcmRvY3MtdG9vbGJhci1pY29uIC50ZXh0PSR7dGV4dH0gLmljb249JHtpY29ufSAvPiBgXCIgfSwgLi4uVG9vbGJhckljb24ucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0RpYWxvZ3MvSW5pdGlhbCBEaWFsb2cnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1pbml0aWFsLWRpYWxvZycsXFxuICBhcmdzOiB7XFxuICAgIG9wZW46IHRydWUsXFxuICAgIGluaXRpYWxzOiAnUFQnLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGNsb3NlZDoge1xcbiAgICAgIGFjdGlvbjogJ2Nsb3NlZCcsXFxuICAgICAgdGFibGU6IHtcXG4gICAgICAgIGRpc2FibGU6IHRydWUsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gIH0sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBJbml0aWFsRGlhbG9nID0gKHtpbml0aWFscywgb3BlbiwgY2xvc2VkfSkgPT4gaHRtbGA8dmVyZG9jcy1pbml0aWFsLWRpYWxvZyAuaW5pdGlhbHM9JHtpbml0aWFsc30gLm9wZW49JHtvcGVufSBAY2xvc2VkPSR7Y2xvc2VkfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkluaXRpYWxEaWFsb2dcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjI5LFwibGluZVwiOjIxfSxcImVuZExvY1wiOntcImNvbFwiOjE0NSxcImxpbmVcIjoyMX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyOSxcImxpbmVcIjoyMX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTQ1LFwibGluZVwiOjIxfX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRGlhbG9ncy9Jbml0aWFsIERpYWxvZycsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtaW5pdGlhbC1kaWFsb2cnLFxuICBhcmdzOiB7XG4gICAgb3BlbjogdHJ1ZSxcbiAgICBpbml0aWFsczogJ1BUJyxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBjbG9zZWQ6IHtcbiAgICAgIGFjdGlvbjogJ2Nsb3NlZCcsXG4gICAgICB0YWJsZToge1xuICAgICAgICBkaXNhYmxlOiB0cnVlLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgSW5pdGlhbERpYWxvZyA9ICh7aW5pdGlhbHMsIG9wZW4sIGNsb3NlZH0pID0+IGh0bWxgPHZlcmRvY3MtaW5pdGlhbC1kaWFsb2cgLmluaXRpYWxzPSR7aW5pdGlhbHN9IC5vcGVuPSR7b3Blbn0gQGNsb3NlZD0ke2Nsb3NlZH0gLz5gO1xuXG5cblxuSW5pdGlhbERpYWxvZy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtpbml0aWFscywgb3BlbiwgY2xvc2VkfSkgPT4gaHRtbGA8dmVyZG9jcy1pbml0aWFsLWRpYWxvZyAuaW5pdGlhbHM9JHtpbml0aWFsc30gLm9wZW49JHtvcGVufSBAY2xvc2VkPSR7Y2xvc2VkfSAvPmBcIiB9LCAuLi5Jbml0aWFsRGlhbG9nLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdEaWFsb2dzL0tCQSBEaWFsb2cnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1rYmEtZGlhbG9nJyxcXG4gIGFyZ3M6IHtcXG4gICAgb3BlbjogdHJ1ZSxcXG4gICAgbW9kZTogJ2Nob2ljZScsXFxuICAgIGhlbHB0aXRsZTogJ09uZSBUaW1lIENvZGUnLFxcbiAgICBoZWxwdGV4dDogJ1BsZWFzZSBjaGVjayB5b3VyIHRleHQgbWVzc2FnZXMgZm9yIGEgc2VjdXJpdHkgY29kZSwgYW5kIGVudGVyIHRoZSBjb2RlIGJlbG93LicsXFxuICAgIGxhYmVsOiAnUElOJyxcXG4gICAgcGxhY2Vob2xkZXI6ICdFbnRlciB5b3VyIFBJTi4uLicsXFxuICAgIHN0ZXA6IDEsXFxuICAgIHN0ZXBzOiAzLFxcbiAgICBjaG9pY2VzOiBbJzU1MyBBcmJvciBEcicsICcxOCBMYWNleSBMbicsICcyM0EgQmFsbCBDdCcsICcyMzc1IENhdmFsbG8gQmx2ZCcsICcyMy0xIFJSLTcnLCAnMTUxIEJvdWxkZXIgUmQnXSxcXG4gIH0sXFxuICBhcmdUeXBlczoge1xcbiAgICBjbG9zZWQ6IHtcXG4gICAgICBhY3Rpb246ICdjbG9zZWQnLFxcbiAgICAgIHRhYmxlOiB7XFxuICAgICAgICBkaXNhYmxlOiB0cnVlLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICB9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgS0JBRGlhbG9nID0gKHtoZWxwdGl0bGUsIGhlbHB0ZXh0LCBsYWJlbCwgcGxhY2Vob2xkZXIsIG1vZGUsIHN0ZXAsIHN0ZXBzLCBjaG9pY2VzLCBvcGVuLCBjbG9zZWR9KSA9PlxcbiAgaHRtbGA8dmVyZG9jcy1rYmEtZGlhbG9nXFxuICAgIC5tb2RlPSR7bW9kZX1cXG4gICAgLmhlbHB0aXRsZT0ke2hlbHB0aXRsZX1cXG4gICAgLmhlbHB0ZXh0PSR7aGVscHRleHR9XFxuICAgIC5sYWJlbD0ke2xhYmVsfVxcbiAgICAucGxhY2Vob2xkZXI9JHtwbGFjZWhvbGRlcn1cXG4gICAgLnN0ZXA9JHtzdGVwfVxcbiAgICAuc3RlcHM9JHtzdGVwc31cXG4gICAgLmNob2ljZXM9JHtjaG9pY2VzfVxcbiAgICAub3Blbj0ke29wZW59XFxuICAgIEBjbG9zZWQ9JHtjbG9zZWR9XFxuICAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIktCQURpYWxvZ1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjUsXCJsaW5lXCI6Mjh9LFwiZW5kTG9jXCI6e1wiY29sXCI6NSxcImxpbmVcIjo0MH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyNSxcImxpbmVcIjoyOH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NSxcImxpbmVcIjo0MH19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0RpYWxvZ3MvS0JBIERpYWxvZycsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3Mta2JhLWRpYWxvZycsXG4gIGFyZ3M6IHtcbiAgICBvcGVuOiB0cnVlLFxuICAgIG1vZGU6ICdjaG9pY2UnLFxuICAgIGhlbHB0aXRsZTogJ09uZSBUaW1lIENvZGUnLFxuICAgIGhlbHB0ZXh0OiAnUGxlYXNlIGNoZWNrIHlvdXIgdGV4dCBtZXNzYWdlcyBmb3IgYSBzZWN1cml0eSBjb2RlLCBhbmQgZW50ZXIgdGhlIGNvZGUgYmVsb3cuJyxcbiAgICBsYWJlbDogJ1BJTicsXG4gICAgcGxhY2Vob2xkZXI6ICdFbnRlciB5b3VyIFBJTi4uLicsXG4gICAgc3RlcDogMSxcbiAgICBzdGVwczogMyxcbiAgICBjaG9pY2VzOiBbJzU1MyBBcmJvciBEcicsICcxOCBMYWNleSBMbicsICcyM0EgQmFsbCBDdCcsICcyMzc1IENhdmFsbG8gQmx2ZCcsICcyMy0xIFJSLTcnLCAnMTUxIEJvdWxkZXIgUmQnXSxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBjbG9zZWQ6IHtcbiAgICAgIGFjdGlvbjogJ2Nsb3NlZCcsXG4gICAgICB0YWJsZToge1xuICAgICAgICBkaXNhYmxlOiB0cnVlLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgS0JBRGlhbG9nID0gKHtoZWxwdGl0bGUsIGhlbHB0ZXh0LCBsYWJlbCwgcGxhY2Vob2xkZXIsIG1vZGUsIHN0ZXAsIHN0ZXBzLCBjaG9pY2VzLCBvcGVuLCBjbG9zZWR9KSA9PlxuICBodG1sYDx2ZXJkb2NzLWtiYS1kaWFsb2dcbiAgICAubW9kZT0ke21vZGV9XG4gICAgLmhlbHB0aXRsZT0ke2hlbHB0aXRsZX1cbiAgICAuaGVscHRleHQ9JHtoZWxwdGV4dH1cbiAgICAubGFiZWw9JHtsYWJlbH1cbiAgICAucGxhY2Vob2xkZXI9JHtwbGFjZWhvbGRlcn1cbiAgICAuc3RlcD0ke3N0ZXB9XG4gICAgLnN0ZXBzPSR7c3RlcHN9XG4gICAgLmNob2ljZXM9JHtjaG9pY2VzfVxuICAgIC5vcGVuPSR7b3Blbn1cbiAgICBAY2xvc2VkPSR7Y2xvc2VkfVxuICAvPmA7XG5cblxuXG5LQkFEaWFsb2cucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7aGVscHRpdGxlLCBoZWxwdGV4dCwgbGFiZWwsIHBsYWNlaG9sZGVyLCBtb2RlLCBzdGVwLCBzdGVwcywgY2hvaWNlcywgb3BlbiwgY2xvc2VkfSkgPT5cXG4gIGh0bWxgPHZlcmRvY3Mta2JhLWRpYWxvZ1xcbiAgICAubW9kZT0ke21vZGV9XFxuICAgIC5oZWxwdGl0bGU9JHtoZWxwdGl0bGV9XFxuICAgIC5oZWxwdGV4dD0ke2hlbHB0ZXh0fVxcbiAgICAubGFiZWw9JHtsYWJlbH1cXG4gICAgLnBsYWNlaG9sZGVyPSR7cGxhY2Vob2xkZXJ9XFxuICAgIC5zdGVwPSR7c3RlcH1cXG4gICAgLnN0ZXBzPSR7c3RlcHN9XFxuICAgIC5jaG9pY2VzPSR7Y2hvaWNlc31cXG4gICAgLm9wZW49JHtvcGVufVxcbiAgICBAY2xvc2VkPSR7Y2xvc2VkfVxcbiAgLz5gXCIgfSwgLi4uS0JBRGlhbG9nLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdEaWFsb2dzL09rIERpYWxvZycsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLW9rLWRpYWxvZycsXFxuICBhcmdzOiB7XFxuICAgIG9wZW46IHRydWUsXFxuICAgIGNhbmNlbDogdHJ1ZSxcXG4gICAgaGVhZGluZzogJ0xvZ2luIEVycm9yJyxcXG4gICAgbWVzc2FnZTogJ0xvZ2luIGZhaWxlZC4gUGxlYXNlIGNoZWNrIHlvdXIgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIGFuZCB0cnkgYWdhaW4uJyxcXG4gIH0sXFxuICBhcmdUeXBlczoge1xcbiAgICBjbG9zZWQ6IHtcXG4gICAgICBhY3Rpb246ICdjbG9zZWQnLFxcbiAgICAgIHRhYmxlOiB7XFxuICAgICAgICBkaXNhYmxlOiB0cnVlLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICB9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgT2tEaWFsb2cgPSAoe2hlYWRpbmcsIG1lc3NhZ2UsIG9wZW4sIGNhbmNlbCwgY2xvc2VkfSkgPT5cXG4gIGh0bWxgPHZlcmRvY3Mtb2stZGlhbG9nIC5oZWFkaW5nPSR7aGVhZGluZ30gLm1lc3NhZ2U9JHttZXNzYWdlfSAub3Blbj0ke29wZW59IC5jYW5jZWw9JHtjYW5jZWx9IEBjbG9zZWQ9JHtjbG9zZWR9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT2tEaWFsb2dcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjI0LFwibGluZVwiOjIzfSxcImVuZExvY1wiOntcImNvbFwiOjExOSxcImxpbmVcIjoyNH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyNCxcImxpbmVcIjoyM30sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTE5LFwibGluZVwiOjI0fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRGlhbG9ncy9PayBEaWFsb2cnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLW9rLWRpYWxvZycsXG4gIGFyZ3M6IHtcbiAgICBvcGVuOiB0cnVlLFxuICAgIGNhbmNlbDogdHJ1ZSxcbiAgICBoZWFkaW5nOiAnTG9naW4gRXJyb3InLFxuICAgIG1lc3NhZ2U6ICdMb2dpbiBmYWlsZWQuIFBsZWFzZSBjaGVjayB5b3VyIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBhbmQgdHJ5IGFnYWluLicsXG4gIH0sXG4gIGFyZ1R5cGVzOiB7XG4gICAgY2xvc2VkOiB7XG4gICAgICBhY3Rpb246ICdjbG9zZWQnLFxuICAgICAgdGFibGU6IHtcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IE9rRGlhbG9nID0gKHtoZWFkaW5nLCBtZXNzYWdlLCBvcGVuLCBjYW5jZWwsIGNsb3NlZH0pID0+XG4gIGh0bWxgPHZlcmRvY3Mtb2stZGlhbG9nIC5oZWFkaW5nPSR7aGVhZGluZ30gLm1lc3NhZ2U9JHttZXNzYWdlfSAub3Blbj0ke29wZW59IC5jYW5jZWw9JHtjYW5jZWx9IEBjbG9zZWQ9JHtjbG9zZWR9IC8+YDtcblxuXG5cbk9rRGlhbG9nLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe2hlYWRpbmcsIG1lc3NhZ2UsIG9wZW4sIGNhbmNlbCwgY2xvc2VkfSkgPT5cXG4gIGh0bWxgPHZlcmRvY3Mtb2stZGlhbG9nIC5oZWFkaW5nPSR7aGVhZGluZ30gLm1lc3NhZ2U9JHttZXNzYWdlfSAub3Blbj0ke29wZW59IC5jYW5jZWw9JHtjYW5jZWx9IEBjbG9zZWQ9JHtjbG9zZWR9IC8+YFwiIH0sIC4uLk9rRGlhbG9nLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdEaWFsb2dzL1NpZ25hdHVyZSBEaWFsb2cnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nJyxcXG4gIGFyZ3M6IHtcXG4gICAgb3BlbjogdHJ1ZSxcXG4gICAgbmFtZTogJ1BhaWdlIFR1cm5lcicsXFxuICB9LFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgY2xvc2VkOiB7XFxuICAgICAgYWN0aW9uOiAnY2xvc2VkJyxcXG4gICAgICB0YWJsZToge1xcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFNpZ25hdHVyZURpYWxvZyA9ICh7bmFtZSwgb3BlbiwgY2xvc2VkfSkgPT4gaHRtbGA8dmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nIC5uYW1lPSR7bmFtZX0gLm9wZW49JHtvcGVufSBAY2xvc2VkPSR7Y2xvc2VkfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlNpZ25hdHVyZURpYWxvZ1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MzEsXCJsaW5lXCI6MjF9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTM3LFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjMxLFwibGluZVwiOjIxfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxMzcsXCJsaW5lXCI6MjF9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdEaWFsb2dzL1NpZ25hdHVyZSBEaWFsb2cnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXNpZ25hdHVyZS1kaWFsb2cnLFxuICBhcmdzOiB7XG4gICAgb3BlbjogdHJ1ZSxcbiAgICBuYW1lOiAnUGFpZ2UgVHVybmVyJyxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBjbG9zZWQ6IHtcbiAgICAgIGFjdGlvbjogJ2Nsb3NlZCcsXG4gICAgICB0YWJsZToge1xuICAgICAgICBkaXNhYmxlOiB0cnVlLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgU2lnbmF0dXJlRGlhbG9nID0gKHtuYW1lLCBvcGVuLCBjbG9zZWR9KSA9PiBodG1sYDx2ZXJkb2NzLXNpZ25hdHVyZS1kaWFsb2cgLm5hbWU9JHtuYW1lfSAub3Blbj0ke29wZW59IEBjbG9zZWQ9JHtjbG9zZWR9IC8+YDtcblxuXG5cblNpZ25hdHVyZURpYWxvZy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtuYW1lLCBvcGVuLCBjbG9zZWR9KSA9PiBodG1sYDx2ZXJkb2NzLXNpZ25hdHVyZS1kaWFsb2cgLm5hbWU9JHtuYW1lfSAub3Blbj0ke29wZW59IEBjbG9zZWQ9JHtjbG9zZWR9IC8+YFwiIH0sIC4uLlNpZ25hdHVyZURpYWxvZy5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRGlhbG9ncy9UZW1wbGF0ZSBTZW5kZXIgRGlhbG9nJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtdGVtcGxhdGUtc2VuZGVyLWRpYWxvZycsXFxuICBhcmdzOiB7XFxuICAgIG9wZW46IHRydWUsXFxuICAgIG1lc3NhZ2U6ICdMb2dpbiBmYWlsZWQuIFBsZWFzZSBjaGVjayB5b3VyIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBhbmQgdHJ5IGFnYWluLicsXFxuICB9LFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgY2xvc2VkOiB7XFxuICAgICAgYWN0aW9uOiAnY2xvc2VkJyxcXG4gICAgICB0YWJsZToge1xcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFRlbXBsYXRlU2VuZGVyRGlhbG9nID0gKHttZXNzYWdlLCBvcGVuLCBjbG9zZWR9KSA9PiBodG1sYDx2ZXJkb2NzLXRlbXBsYXRlLXNlbmRlci1kaWFsb2cgLm1lc3NhZ2U9JHttZXNzYWdlfSAub3Blbj0ke29wZW59IEBjbG9zZWQ9JHtjbG9zZWR9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiVGVtcGxhdGVTZW5kZXJEaWFsb2dcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjM2LFwibGluZVwiOjIxfSxcImVuZExvY1wiOntcImNvbFwiOjE1NyxcImxpbmVcIjoyMX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjozNixcImxpbmVcIjoyMX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTU3LFwibGluZVwiOjIxfX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRGlhbG9ncy9UZW1wbGF0ZSBTZW5kZXIgRGlhbG9nJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy10ZW1wbGF0ZS1zZW5kZXItZGlhbG9nJyxcbiAgYXJnczoge1xuICAgIG9wZW46IHRydWUsXG4gICAgbWVzc2FnZTogJ0xvZ2luIGZhaWxlZC4gUGxlYXNlIGNoZWNrIHlvdXIgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIGFuZCB0cnkgYWdhaW4uJyxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBjbG9zZWQ6IHtcbiAgICAgIGFjdGlvbjogJ2Nsb3NlZCcsXG4gICAgICB0YWJsZToge1xuICAgICAgICBkaXNhYmxlOiB0cnVlLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgVGVtcGxhdGVTZW5kZXJEaWFsb2cgPSAoe21lc3NhZ2UsIG9wZW4sIGNsb3NlZH0pID0+IGh0bWxgPHZlcmRvY3MtdGVtcGxhdGUtc2VuZGVyLWRpYWxvZyAubWVzc2FnZT0ke21lc3NhZ2V9IC5vcGVuPSR7b3Blbn0gQGNsb3NlZD0ke2Nsb3NlZH0gLz5gO1xuXG5cblxuVGVtcGxhdGVTZW5kZXJEaWFsb2cucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7bWVzc2FnZSwgb3BlbiwgY2xvc2VkfSkgPT4gaHRtbGA8dmVyZG9jcy10ZW1wbGF0ZS1zZW5kZXItZGlhbG9nIC5tZXNzYWdlPSR7bWVzc2FnZX0gLm9wZW49JHtvcGVufSBAY2xvc2VkPSR7Y2xvc2VkfSAvPmBcIiB9LCAuLi5UZW1wbGF0ZVNlbmRlckRpYWxvZy5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRGlhbG9ncy9VcGxvYWQgRGlhbG9nJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtdXBsb2FkLWRpYWxvZycsXFxuICBhcmdzOiB7XFxuICAgIG9wZW46IHRydWUsXFxuICAgIG1lc3NhZ2U6ICdMb2dpbiBmYWlsZWQuIFBsZWFzZSBjaGVjayB5b3VyIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBhbmQgdHJ5IGFnYWluLicsXFxuICB9LFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgY2xvc2VkOiB7XFxuICAgICAgYWN0aW9uOiAnY2xvc2VkJyxcXG4gICAgICB0YWJsZToge1xcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFVwbG9hZERpYWxvZyA9ICh7bWVzc2FnZSwgb3BlbiwgY2xvc2VkfSkgPT4gaHRtbGA8dmVyZG9jcy11cGxvYWQtZGlhbG9nIC5tZXNzYWdlPSR7bWVzc2FnZX0gLm9wZW49JHtvcGVufSBAY2xvc2VkPSR7Y2xvc2VkfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlVwbG9hZERpYWxvZ1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjgsXCJsaW5lXCI6MjF9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTQwLFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjI4LFwibGluZVwiOjIxfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxNDAsXCJsaW5lXCI6MjF9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdEaWFsb2dzL1VwbG9hZCBEaWFsb2cnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXVwbG9hZC1kaWFsb2cnLFxuICBhcmdzOiB7XG4gICAgb3BlbjogdHJ1ZSxcbiAgICBtZXNzYWdlOiAnTG9naW4gZmFpbGVkLiBQbGVhc2UgY2hlY2sgeW91ciB1c2VybmFtZSBhbmQgcGFzc3dvcmQgYW5kIHRyeSBhZ2Fpbi4nLFxuICB9LFxuICBhcmdUeXBlczoge1xuICAgIGNsb3NlZDoge1xuICAgICAgYWN0aW9uOiAnY2xvc2VkJyxcbiAgICAgIHRhYmxlOiB7XG4gICAgICAgIGRpc2FibGU6IHRydWUsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBVcGxvYWREaWFsb2cgPSAoe21lc3NhZ2UsIG9wZW4sIGNsb3NlZH0pID0+IGh0bWxgPHZlcmRvY3MtdXBsb2FkLWRpYWxvZyAubWVzc2FnZT0ke21lc3NhZ2V9IC5vcGVuPSR7b3Blbn0gQGNsb3NlZD0ke2Nsb3NlZH0gLz5gO1xuXG5cblxuVXBsb2FkRGlhbG9nLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe21lc3NhZ2UsIG9wZW4sIGNsb3NlZH0pID0+IGh0bWxgPHZlcmRvY3MtdXBsb2FkLWRpYWxvZyAubWVzc2FnZT0ke21lc3NhZ2V9IC5vcGVuPSR7b3Blbn0gQGNsb3NlZD0ke2Nsb3NlZH0gLz5gXCIgfSwgLi4uVXBsb2FkRGlhbG9nLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdDb250cm9scy9Db250YWN0IFBpY2tlcicsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWNvbnRhY3QtcGlja2VyJyxcXG4gIGFyZ3M6IHtcXG4gICAgdGVtcGxhdGVSb2xlOiB7XFxuICAgICAgdGVtcGxhdGVfaWQ6ICc2NWNiYmEwNy1kMGFjLTRiNjItYWZlMy0yNWQxODYyMzg5MzgnLFxcbiAgICAgIG5hbWU6ICdSZWNpcGllbnQgMScsXFxuICAgICAgZnVsbF9uYW1lOiAnJyxcXG4gICAgICBlbWFpbDogJycsXFxuICAgICAgcGhvbmU6ICcnLFxcbiAgICAgIHR5cGU6ICdzaWduZXInLFxcbiAgICAgIHNlcXVlbmNlOiAxLFxcbiAgICAgIG1lc3NhZ2U6ICcnLFxcbiAgICB9LFxcbiAgICBjb250YWN0U3VnZ2VzdGlvbnM6IFtcXG4gICAgICB7bmFtZTogJ01lJywgZW1haWw6ICdteXVzZXJAbm9tYWlsLmNvbScsIHBob25lOiAnMjEyLTU1NS02NjY0J30sXFxuICAgICAge25hbWU6ICdXaWxsIFBvd2VyJywgZW1haWw6ICd3aWxsLnBvd2VyQG5vbWFpbC5jb20nLCBhdmF0YXI6ICdodHRwczovL2kucHJhdmF0YXIuY2MvNDg/aW1nPTU5J30sXFxuICAgICAge25hbWU6ICdQYWlnZSBUdXJuZXInLCBlbWFpbDogJ3BhaWdlLnR1cm5lckBub21haWwuY29tJywgcGhvbmU6ICcyMTItNTU1LTY2NjQnLCBhdmF0YXI6ICdodHRwczovL2kucHJhdmF0YXIuY2MvNDg/aW1nPTQxJ30sXFxuICAgICAge25hbWU6ICdCaWxsIEJvYXJkJywgcGhvbmU6ICcyMTItNTU1LTY2NjQnfSxcXG4gICAgXSxcXG4gIH0sXFxuICBhcmdUeXBlczoge1xcbiAgICBzZWFyY2hDb250YWN0czoge2FjdGlvbjogJ3NlYXJjaENvbnRhY3RzJ30sXFxuICAgIGNhbmNlbDoge2FjdGlvbjogJ2NhbmNlbCd9LFxcbiAgICBjb250YWN0U2VsZWN0ZWQ6IHthY3Rpb246ICdjb250YWN0U2VsZWN0ZWQnfSxcXG4gIH0sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBDb250YWN0UGlja2VyID0gKHt0ZW1wbGF0ZVJvbGUsIGNvbnRhY3RTdWdnZXN0aW9ucywgc2VhcmNoQ29udGFjdHMsIGNhbmNlbCwgY29udGFjdFNlbGVjdGVkfSkgPT5cXG4gIGh0bWxgPHZlcmRvY3MtY29udGFjdC1waWNrZXJcXG4gICAgLnRlbXBsYXRlUm9sZT0ke3RlbXBsYXRlUm9sZX1cXG4gICAgLmNvbnRhY3RTdWdnZXN0aW9ucz0ke2NvbnRhY3RTdWdnZXN0aW9uc31cXG4gICAgQHNlYXJjaENvbnRhY3RzPSR7c2VhcmNoQ29udGFjdHN9XFxuICAgIEBjYW5jZWw9JHtjYW5jZWx9XFxuICAgIEBjb250YWN0U2VsZWN0ZWQ9JHtjb250YWN0U2VsZWN0ZWR9XFxuICAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkNvbnRhY3RQaWNrZXJcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjI5LFwibGluZVwiOjMyfSxcImVuZExvY1wiOntcImNvbFwiOjUsXCJsaW5lXCI6Mzl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjksXCJsaW5lXCI6MzJ9LFwiZW5kQm9keVwiOntcImNvbFwiOjUsXCJsaW5lXCI6Mzl9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdDb250cm9scy9Db250YWN0IFBpY2tlcicsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtY29udGFjdC1waWNrZXInLFxuICBhcmdzOiB7XG4gICAgdGVtcGxhdGVSb2xlOiB7XG4gICAgICB0ZW1wbGF0ZV9pZDogJzY1Y2JiYTA3LWQwYWMtNGI2Mi1hZmUzLTI1ZDE4NjIzODkzOCcsXG4gICAgICBuYW1lOiAnUmVjaXBpZW50IDEnLFxuICAgICAgZnVsbF9uYW1lOiAnJyxcbiAgICAgIGVtYWlsOiAnJyxcbiAgICAgIHBob25lOiAnJyxcbiAgICAgIHR5cGU6ICdzaWduZXInLFxuICAgICAgc2VxdWVuY2U6IDEsXG4gICAgICBtZXNzYWdlOiAnJyxcbiAgICB9LFxuICAgIGNvbnRhY3RTdWdnZXN0aW9uczogW1xuICAgICAge25hbWU6ICdNZScsIGVtYWlsOiAnbXl1c2VyQG5vbWFpbC5jb20nLCBwaG9uZTogJzIxMi01NTUtNjY2NCd9LFxuICAgICAge25hbWU6ICdXaWxsIFBvd2VyJywgZW1haWw6ICd3aWxsLnBvd2VyQG5vbWFpbC5jb20nLCBhdmF0YXI6ICdodHRwczovL2kucHJhdmF0YXIuY2MvNDg/aW1nPTU5J30sXG4gICAgICB7bmFtZTogJ1BhaWdlIFR1cm5lcicsIGVtYWlsOiAncGFpZ2UudHVybmVyQG5vbWFpbC5jb20nLCBwaG9uZTogJzIxMi01NTUtNjY2NCcsIGF2YXRhcjogJ2h0dHBzOi8vaS5wcmF2YXRhci5jYy80OD9pbWc9NDEnfSxcbiAgICAgIHtuYW1lOiAnQmlsbCBCb2FyZCcsIHBob25lOiAnMjEyLTU1NS02NjY0J30sXG4gICAgXSxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBzZWFyY2hDb250YWN0czoge2FjdGlvbjogJ3NlYXJjaENvbnRhY3RzJ30sXG4gICAgY2FuY2VsOiB7YWN0aW9uOiAnY2FuY2VsJ30sXG4gICAgY29udGFjdFNlbGVjdGVkOiB7YWN0aW9uOiAnY29udGFjdFNlbGVjdGVkJ30sXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBDb250YWN0UGlja2VyID0gKHt0ZW1wbGF0ZVJvbGUsIGNvbnRhY3RTdWdnZXN0aW9ucywgc2VhcmNoQ29udGFjdHMsIGNhbmNlbCwgY29udGFjdFNlbGVjdGVkfSkgPT5cbiAgaHRtbGA8dmVyZG9jcy1jb250YWN0LXBpY2tlclxuICAgIC50ZW1wbGF0ZVJvbGU9JHt0ZW1wbGF0ZVJvbGV9XG4gICAgLmNvbnRhY3RTdWdnZXN0aW9ucz0ke2NvbnRhY3RTdWdnZXN0aW9uc31cbiAgICBAc2VhcmNoQ29udGFjdHM9JHtzZWFyY2hDb250YWN0c31cbiAgICBAY2FuY2VsPSR7Y2FuY2VsfVxuICAgIEBjb250YWN0U2VsZWN0ZWQ9JHtjb250YWN0U2VsZWN0ZWR9XG4gIC8+YDtcblxuXG5cbkNvbnRhY3RQaWNrZXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7dGVtcGxhdGVSb2xlLCBjb250YWN0U3VnZ2VzdGlvbnMsIHNlYXJjaENvbnRhY3RzLCBjYW5jZWwsIGNvbnRhY3RTZWxlY3RlZH0pID0+XFxuICBodG1sYDx2ZXJkb2NzLWNvbnRhY3QtcGlja2VyXFxuICAgIC50ZW1wbGF0ZVJvbGU9JHt0ZW1wbGF0ZVJvbGV9XFxuICAgIC5jb250YWN0U3VnZ2VzdGlvbnM9JHtjb250YWN0U3VnZ2VzdGlvbnN9XFxuICAgIEBzZWFyY2hDb250YWN0cz0ke3NlYXJjaENvbnRhY3RzfVxcbiAgICBAY2FuY2VsPSR7Y2FuY2VsfVxcbiAgICBAY29udGFjdFNlbGVjdGVkPSR7Y29udGFjdFNlbGVjdGVkfVxcbiAgLz5gXCIgfSwgLi4uQ29udGFjdFBpY2tlci5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRmllbGRzL0F0dGFjaG1lbnQnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1maWVsZC1hdHRhY2htZW50JyxcXG4gIGFyZ3M6IHtcXG4gICAgZmllbGQ6IHtcXG4gICAgICB4OiAwLFxcbiAgICAgIHk6IDAsXFxuICAgIH0sXFxuICAgIGRpc2FibGVkOiBmYWxzZSxcXG4gIH0sXFxuICBhcmdUeXBlczoge30sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBBdHRhY2htZW50ID0gKHtmaWVsZCwgZGlzYWJsZWR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLWF0dGFjaG1lbnQgLmZpZWxkPSR7ZmllbGR9IC5kaXNhYmxlZD0ke2Rpc2FibGVkfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkF0dGFjaG1lbnRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjI2LFwibGluZVwiOjE3fSxcImVuZExvY1wiOntcImNvbFwiOjEyMSxcImxpbmVcIjoxN30sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyNixcImxpbmVcIjoxN30sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTIxLFwibGluZVwiOjE3fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRmllbGRzL0F0dGFjaG1lbnQnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWZpZWxkLWF0dGFjaG1lbnQnLFxuICBhcmdzOiB7XG4gICAgZmllbGQ6IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgIH0sXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxuICB9LFxuICBhcmdUeXBlczoge30sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBBdHRhY2htZW50ID0gKHtmaWVsZCwgZGlzYWJsZWR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLWF0dGFjaG1lbnQgLmZpZWxkPSR7ZmllbGR9IC5kaXNhYmxlZD0ke2Rpc2FibGVkfSAvPmA7XG5cblxuXG5BdHRhY2htZW50LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe2ZpZWxkLCBkaXNhYmxlZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtYXR0YWNobWVudCAuZmllbGQ9JHtmaWVsZH0gLmRpc2FibGVkPSR7ZGlzYWJsZWR9IC8+YFwiIH0sIC4uLkF0dGFjaG1lbnQucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0ZpZWxkcy9DaGVja2JveCcsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWZpZWxkLWNoZWNrYm94JyxcXG4gIGFyZ3M6IHtcXG4gICAgZmllbGQ6IHtcXG4gICAgICBzZXR0aW5nczoge1xcbiAgICAgICAgeDogMCxcXG4gICAgICAgIHk6IDAsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gICAgb3B0aW9uOiAwLFxcbiAgICBkaXNhYmxlZDogZmFsc2UsXFxuICB9LFxcbiAgYXJnVHlwZXM6IHt9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgQ2hlY2tib3ggPSAoe2ZpZWxkLCBvcHRpb24sIGRpc2FibGVkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC1jaGVja2JveCAuZmllbGQ9JHtmaWVsZH0gLm9wdGlvbj0ke29wdGlvbn0gLmRpc2FibGVkPSR7ZGlzYWJsZWR9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiQ2hlY2tib3hcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjI0LFwibGluZVwiOjIwfSxcImVuZExvY1wiOntcImNvbFwiOjE0MyxcImxpbmVcIjoyMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyNCxcImxpbmVcIjoyMH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTQzLFwibGluZVwiOjIwfX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRmllbGRzL0NoZWNrYm94JyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1maWVsZC1jaGVja2JveCcsXG4gIGFyZ3M6IHtcbiAgICBmaWVsZDoge1xuICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMCxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBvcHRpb246IDAsXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxuICB9LFxuICBhcmdUeXBlczoge30sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBDaGVja2JveCA9ICh7ZmllbGQsIG9wdGlvbiwgZGlzYWJsZWR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLWNoZWNrYm94IC5maWVsZD0ke2ZpZWxkfSAub3B0aW9uPSR7b3B0aW9ufSAuZGlzYWJsZWQ9JHtkaXNhYmxlZH0gLz5gO1xuXG5cblxuQ2hlY2tib3gucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7ZmllbGQsIG9wdGlvbiwgZGlzYWJsZWR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLWNoZWNrYm94IC5maWVsZD0ke2ZpZWxkfSAub3B0aW9uPSR7b3B0aW9ufSAuZGlzYWJsZWQ9JHtkaXNhYmxlZH0gLz5gXCIgfSwgLi4uQ2hlY2tib3gucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0ZpZWxkcy9EYXRlJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtZGF0ZScsXFxuICBhcmdzOiB7XFxuICAgIGZpZWxkOiB7XFxuICAgICAgc2V0dGluZ3M6IHtcXG4gICAgICAgIHg6IDAsXFxuICAgICAgICB5OiAwLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICAgIGRpc2FibGVkOiBmYWxzZSxcXG4gIH0sXFxuICBhcmdUeXBlczoge30sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBEYXRlID0gKHtmaWVsZCwgZGlzYWJsZWR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLWRhdGUgLmZpZWxkPVxcXCIke2ZpZWxkfS5kaXNhYmxlZFxcXCIgPSR7ZGlzYWJsZWR9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRGF0ZVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjAsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTExLFwibGluZVwiOjE5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjIwLFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxMTEsXCJsaW5lXCI6MTl9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdGaWVsZHMvRGF0ZScsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtZGF0ZScsXG4gIGFyZ3M6IHtcbiAgICBmaWVsZDoge1xuICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMCxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gIH0sXG4gIGFyZ1R5cGVzOiB7fSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IERhdGUgPSAoe2ZpZWxkLCBkaXNhYmxlZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtZGF0ZSAuZmllbGQ9XCIke2ZpZWxkfS5kaXNhYmxlZFwiID0ke2Rpc2FibGVkfSAvPmA7XG5cblxuXG5EYXRlLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe2ZpZWxkLCBkaXNhYmxlZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtZGF0ZSAuZmllbGQ9XFxcIiR7ZmllbGR9LmRpc2FibGVkXFxcIiA9JHtkaXNhYmxlZH0gLz5gXCIgfSwgLi4uRGF0ZS5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRmllbGRzL0Ryb3Bkb3duJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtZHJvcGRvd24nLFxcbiAgYXJnczoge1xcbiAgICBmaWVsZDoge1xcbiAgICAgIHNldHRpbmdzOiB7XFxuICAgICAgICB4OiAwLFxcbiAgICAgICAgeTogMCxcXG4gICAgICAgIG9wdGlvbnM6IFt7aWQ6ICdpZDEnLCB2YWx1ZTogJ09wdGlvbiAxJ31dLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICB9LFxcbiAgYXJnVHlwZXM6IHt9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgRHJvcGRvd24gPSAoe2ZpZWxkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC1kcm9wZG93biAuZmllbGQ9JHtmaWVsZH0gLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJEcm9wZG93blwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjQsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6ODUsXCJsaW5lXCI6MTl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjQsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjg1LFwibGluZVwiOjE5fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRmllbGRzL0Ryb3Bkb3duJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1maWVsZC1kcm9wZG93bicsXG4gIGFyZ3M6IHtcbiAgICBmaWVsZDoge1xuICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMCxcbiAgICAgICAgb3B0aW9uczogW3tpZDogJ2lkMScsIHZhbHVlOiAnT3B0aW9uIDEnfV0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIGFyZ1R5cGVzOiB7fSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IERyb3Bkb3duID0gKHtmaWVsZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtZHJvcGRvd24gLmZpZWxkPSR7ZmllbGR9IC8+YDtcblxuXG5cbkRyb3Bkb3duLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe2ZpZWxkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC1kcm9wZG93biAuZmllbGQ9JHtmaWVsZH0gLz5gXCIgfSwgLi4uRHJvcGRvd24ucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0ZpZWxkcy9Jbml0aWFsJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtaW5pdGlhbCcsXFxuICBhcmdzOiB7XFxuICAgIGluaXRpYWxzOiAnUFQnLFxcbiAgICBmaWVsZDoge1xcbiAgICAgIHNldHRpbmdzOiB7XFxuICAgICAgICB4OiAwLFxcbiAgICAgICAgeTogMCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7fSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IEluaXRpYWwgPSAoe2luaXRpYWxzLCBmaWVsZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtaW5pdGlhbCAuZmllbGQ9JHtmaWVsZH0gLmluaXRpYWxzPSR7aW5pdGlhbHN9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiSW5pdGlhbFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjMsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTE1LFwibGluZVwiOjE5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjIzLFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxMTUsXCJsaW5lXCI6MTl9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdGaWVsZHMvSW5pdGlhbCcsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtaW5pdGlhbCcsXG4gIGFyZ3M6IHtcbiAgICBpbml0aWFsczogJ1BUJyxcbiAgICBmaWVsZDoge1xuICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMCxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgYXJnVHlwZXM6IHt9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgSW5pdGlhbCA9ICh7aW5pdGlhbHMsIGZpZWxkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC1pbml0aWFsIC5maWVsZD0ke2ZpZWxkfSAuaW5pdGlhbHM9JHtpbml0aWFsc30gLz5gO1xuXG5cblxuSW5pdGlhbC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtpbml0aWFscywgZmllbGR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLWluaXRpYWwgLmZpZWxkPSR7ZmllbGR9IC5pbml0aWFscz0ke2luaXRpYWxzfSAvPmBcIiB9LCAuLi5Jbml0aWFsLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdGaWVsZHMvUGF5bWVudCcsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWZpZWxkLXBheW1lbnQnLFxcbiAgYXJnczoge1xcbiAgICBmaWVsZDoge1xcbiAgICAgIHNldHRpbmdzOiB7XFxuICAgICAgICB4OiAwLFxcbiAgICAgICAgeTogMCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7fSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFBheW1lbnQgPSAoe2ZpZWxkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC1wYXltZW50IC5maWVsZD0ke2ZpZWxkfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlBheW1lbnRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjIzLFwibGluZVwiOjE4fSxcImVuZExvY1wiOntcImNvbFwiOjgzLFwibGluZVwiOjE4fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjIzLFwibGluZVwiOjE4fSxcImVuZEJvZHlcIjp7XCJjb2xcIjo4MyxcImxpbmVcIjoxOH19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0ZpZWxkcy9QYXltZW50JyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1maWVsZC1wYXltZW50JyxcbiAgYXJnczoge1xuICAgIGZpZWxkOiB7XG4gICAgICBzZXR0aW5nczoge1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBhcmdUeXBlczoge30sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBQYXltZW50ID0gKHtmaWVsZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtcGF5bWVudCAuZmllbGQ9JHtmaWVsZH0gLz5gO1xuXG5cblxuUGF5bWVudC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtmaWVsZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtcGF5bWVudCAuZmllbGQ9JHtmaWVsZH0gLz5gXCIgfSwgLi4uUGF5bWVudC5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRmllbGRzL1JhZGlvIEJ1dHRvbicsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWZpZWxkLXJhZGlvLWJ1dHRvbicsXFxuICBhcmdzOiB7XFxuICAgIGZpZWxkOiB7XFxuICAgICAgc2V0dGluZ3M6IHtcXG4gICAgICAgIHg6IDAsXFxuICAgICAgICB5OiAwLFxcbiAgICAgICAgY2hlY2tlZDogZmFsc2UsXFxuICAgICAgICBuYW1lOiAncmFkaW8tMScsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gIH0sXFxuICBhcmdUeXBlczoge30sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBSYWRpb0J1dHRvbiA9ICh7ZmllbGR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLXJhZGlvLWJ1dHRvbiAuZmllbGQ9JHtmaWVsZH0gLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJSYWRpb0J1dHRvblwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjcsXCJsaW5lXCI6MjB9LFwiZW5kTG9jXCI6e1wiY29sXCI6OTIsXCJsaW5lXCI6MjB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjcsXCJsaW5lXCI6MjB9LFwiZW5kQm9keVwiOntcImNvbFwiOjkyLFwibGluZVwiOjIwfX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRmllbGRzL1JhZGlvIEJ1dHRvbicsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtcmFkaW8tYnV0dG9uJyxcbiAgYXJnczoge1xuICAgIGZpZWxkOiB7XG4gICAgICBzZXR0aW5nczoge1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwLFxuICAgICAgICBjaGVja2VkOiBmYWxzZSxcbiAgICAgICAgbmFtZTogJ3JhZGlvLTEnLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBhcmdUeXBlczoge30sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBSYWRpb0J1dHRvbiA9ICh7ZmllbGR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLXJhZGlvLWJ1dHRvbiAuZmllbGQ9JHtmaWVsZH0gLz5gO1xuXG5cblxuUmFkaW9CdXR0b24ucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7ZmllbGR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLXJhZGlvLWJ1dHRvbiAuZmllbGQ9JHtmaWVsZH0gLz5gXCIgfSwgLi4uUmFkaW9CdXR0b24ucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0ZpZWxkcy9TaWduYXR1cmUnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1maWVsZC1zaWduYXR1cmUnLFxcbiAgYXJnczoge1xcbiAgICBuYW1lOiAnUGFpZ2UgVHVybmVyJyxcXG4gICAgZmllbGQ6IHtcXG4gICAgICBzZXR0aW5nczoge1xcbiAgICAgICAgeDogMCxcXG4gICAgICAgIHk6IDAsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gIH0sXFxuICBhcmdUeXBlczoge30sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBTaWduYXR1cmUgPSAoe25hbWUsIGZpZWxkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC1zaWduYXR1cmUgLm5hbWU9JHtuYW1lfSAuZmllbGQ9JHtmaWVsZH0gLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJTaWduYXR1cmVcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjI1LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEwNyxcImxpbmVcIjoxOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyNSxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTA3LFwibGluZVwiOjE5fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRmllbGRzL1NpZ25hdHVyZScsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtc2lnbmF0dXJlJyxcbiAgYXJnczoge1xuICAgIG5hbWU6ICdQYWlnZSBUdXJuZXInLFxuICAgIGZpZWxkOiB7XG4gICAgICBzZXR0aW5nczoge1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBhcmdUeXBlczoge30sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBTaWduYXR1cmUgPSAoe25hbWUsIGZpZWxkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC1zaWduYXR1cmUgLm5hbWU9JHtuYW1lfSAuZmllbGQ9JHtmaWVsZH0gLz5gO1xuXG5cblxuU2lnbmF0dXJlLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe25hbWUsIGZpZWxkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC1zaWduYXR1cmUgLm5hbWU9JHtuYW1lfSAuZmllbGQ9JHtmaWVsZH0gLz5gXCIgfSwgLi4uU2lnbmF0dXJlLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdGaWVsZHMvVGV4dGFyZWEnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1maWVsZC10ZXh0YXJlYScsXFxuICBhcmdzOiB7XFxuICAgIGZpZWxkOiB7XFxuICAgICAgc2V0dGluZ3M6IHtcXG4gICAgICAgIHBsYWNlaG9sZGVyOiAnRW1haWwgYWRkcmVzcy4uLicsXFxuICAgICAgICB4OiAwLFxcbiAgICAgICAgeTogMCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7fSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFRleHRhcmVhID0gKHtmaWVsZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtdGV4dGFyZWEgLmZpZWxkPSR7ZmllbGR9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiVGV4dGFyZWFcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjI0LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjg1LFwibGluZVwiOjE5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjI0LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjo4NSxcImxpbmVcIjoxOX19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0ZpZWxkcy9UZXh0YXJlYScsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtdGV4dGFyZWEnLFxuICBhcmdzOiB7XG4gICAgZmllbGQ6IHtcbiAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgIHBsYWNlaG9sZGVyOiAnRW1haWwgYWRkcmVzcy4uLicsXG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIGFyZ1R5cGVzOiB7fSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IFRleHRhcmVhID0gKHtmaWVsZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtdGV4dGFyZWEgLmZpZWxkPSR7ZmllbGR9IC8+YDtcblxuXG5cblRleHRhcmVhLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe2ZpZWxkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC10ZXh0YXJlYSAuZmllbGQ9JHtmaWVsZH0gLz5gXCIgfSwgLi4uVGV4dGFyZWEucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0ZpZWxkcy9UZXh0Ym94JyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtdGV4dGJveCcsXFxuICBhcmdzOiB7XFxuICAgIGZpZWxkOiB7XFxuICAgICAgc2V0dGluZ3M6IHtcXG4gICAgICAgIHg6IDAsXFxuICAgICAgICB5OiAwLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICAgIGRpc2FibGVkOiBmYWxzZSxcXG4gIH0sXFxuICBhcmdUeXBlczoge30sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBUZXh0Ym94ID0gKHtmaWVsZCwgZGlzYWJsZWR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLXRleHRib3ggLmZpZWxkPSR7ZmllbGR9IC5kaXNhYmxlZD0ke2Rpc2FibGVkfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlRleHRib3hcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjIzLFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjExNSxcImxpbmVcIjoxOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyMyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTE1LFwibGluZVwiOjE5fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRmllbGRzL1RleHRib3gnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWZpZWxkLXRleHRib3gnLFxuICBhcmdzOiB7XG4gICAgZmllbGQ6IHtcbiAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgICB9LFxuICAgIH0sXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxuICB9LFxuICBhcmdUeXBlczoge30sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBUZXh0Ym94ID0gKHtmaWVsZCwgZGlzYWJsZWR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLXRleHRib3ggLmZpZWxkPSR7ZmllbGR9IC5kaXNhYmxlZD0ke2Rpc2FibGVkfSAvPmA7XG5cblxuXG5UZXh0Ym94LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe2ZpZWxkLCBkaXNhYmxlZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtdGV4dGJveCAuZmllbGQ9JHtmaWVsZH0gLmRpc2FibGVkPSR7ZGlzYWJsZWR9IC8+YFwiIH0sIC4uLlRleHRib3gucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0ZpZWxkcy9UaW1lc3RhbXAnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1maWVsZC10aW1lc3RhbXAnLFxcbiAgYXJnczoge1xcbiAgICBmaWVsZDoge1xcbiAgICAgIG5hbWU6ICd0aW1lc3RhbXBQMS04JyxcXG4gICAgICByZWNpcGllbnRfcm9sZTogJ1JlY2lwaWVudCAyJyxcXG4gICAgICBlbnZlbG9wZV9pZDogJzk2Y2NjMmU5LTFiYjgtNGJlOC05ZGJkLTcxMTMxMDczODNlZScsXFxuICAgICAgcGFnZTogMSxcXG4gICAgICB0eXBlOiAndGltZXN0YW1wJyxcXG4gICAgICByZXF1aXJlZDogdHJ1ZSxcXG4gICAgICBzZXR0aW5nczoge1xcbiAgICAgICAgeDogNDI2Ljk5OTk5OTk5OTk5OTk0LFxcbiAgICAgICAgeTogNDkzLjI1LFxcbiAgICAgICAgd2lkdGg6IDY0LFxcbiAgICAgICAgaGVpZ2h0OiAxNSxcXG4gICAgICB9LFxcbiAgICAgIHZhbGlkYXRvcjogbnVsbCxcXG4gICAgICBsYWJlbDogbnVsbCxcXG4gICAgICBwcmVwYXJlZDogZmFsc2UsXFxuICAgICAgcmVjaXBpZW50czogW10sXFxuICAgIH0sXFxuICB9LFxcbiAgYXJnVHlwZXM6IHt9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgVGltZXN0YW1wID0gKHtmaWVsZH0pID0+IGh0bWxgPHZlcmRvY3MtZmllbGQtdGltZXN0YW1wIC5maWVsZD0ke2ZpZWxkfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlRpbWVzdGFtcFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjUsXCJsaW5lXCI6MzB9LFwiZW5kTG9jXCI6e1wiY29sXCI6ODcsXCJsaW5lXCI6MzB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjUsXCJsaW5lXCI6MzB9LFwiZW5kQm9keVwiOntcImNvbFwiOjg3LFwibGluZVwiOjMwfX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRmllbGRzL1RpbWVzdGFtcCcsXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtZmllbGQtdGltZXN0YW1wJyxcbiAgYXJnczoge1xuICAgIGZpZWxkOiB7XG4gICAgICBuYW1lOiAndGltZXN0YW1wUDEtOCcsXG4gICAgICByZWNpcGllbnRfcm9sZTogJ1JlY2lwaWVudCAyJyxcbiAgICAgIGVudmVsb3BlX2lkOiAnOTZjY2MyZTktMWJiOC00YmU4LTlkYmQtNzExMzEwNzM4M2VlJyxcbiAgICAgIHBhZ2U6IDEsXG4gICAgICB0eXBlOiAndGltZXN0YW1wJyxcbiAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgeDogNDI2Ljk5OTk5OTk5OTk5OTk0LFxuICAgICAgICB5OiA0OTMuMjUsXG4gICAgICAgIHdpZHRoOiA2NCxcbiAgICAgICAgaGVpZ2h0OiAxNSxcbiAgICAgIH0sXG4gICAgICB2YWxpZGF0b3I6IG51bGwsXG4gICAgICBsYWJlbDogbnVsbCxcbiAgICAgIHByZXBhcmVkOiBmYWxzZSxcbiAgICAgIHJlY2lwaWVudHM6IFtdLFxuICAgIH0sXG4gIH0sXG4gIGFyZ1R5cGVzOiB7fSxcbn0gYXMgTWV0YTtcblxuZXhwb3J0IGNvbnN0IFRpbWVzdGFtcCA9ICh7ZmllbGR9KSA9PiBodG1sYDx2ZXJkb2NzLWZpZWxkLXRpbWVzdGFtcCAuZmllbGQ9JHtmaWVsZH0gLz5gO1xuXG5cblxuVGltZXN0YW1wLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe2ZpZWxkfSkgPT4gaHRtbGA8dmVyZG9jcy1maWVsZC10aW1lc3RhbXAgLmZpZWxkPSR7ZmllbGR9IC8+YFwiIH0sIC4uLlRpbWVzdGFtcC5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnU2VhcmNoL1F1aWNrIEZ1bmN0aW9ucycsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXF1aWNrLWZ1bmN0aW9ucycsXFxuICBhcmdzOiB7XFxuICAgIG9wdGlvbnM6IHtcXG4gICAgICB0aXRsZTogJ1F1aWNrIENyZWF0ZScsXFxuICAgIH0sXFxuICB9LFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgY3JlYXRlVGVtcGxhdGU6IHthY3Rpb246ICdjcmVhdGVUZW1wbGF0ZSd9LFxcbiAgICBjcmVhdGVEb2N1bWVudDoge2FjdGlvbjogJ2NyZWF0ZURvY3VtZW50J30sXFxuICB9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgUXVpY2tGdW5jdGlvbnMgPSAoe29wdGlvbnMsIGNyZWF0ZVRlbXBsYXRlLCBjcmVhdGVEb2N1bWVudH0pID0+XFxuICBodG1sYDx2ZXJkb2NzLXF1aWNrLWZ1bmN0aW9ucyAub3B0aW9ucz0ke29wdGlvbnN9IEBjcmVhdGVUZW1wbGF0ZT0ke2NyZWF0ZVRlbXBsYXRlfSBAY3JlYXRlRG9jdW1lbnQ9JHtjcmVhdGVEb2N1bWVudH0gdGFsbCAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlF1aWNrRnVuY3Rpb25zXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjozMCxcImxpbmVcIjoxOH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxMjgsXCJsaW5lXCI6MTl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MzAsXCJsaW5lXCI6MTh9LFwiZW5kQm9keVwiOntcImNvbFwiOjEyOCxcImxpbmVcIjoxOX19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ1NlYXJjaC9RdWljayBGdW5jdGlvbnMnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXF1aWNrLWZ1bmN0aW9ucycsXG4gIGFyZ3M6IHtcbiAgICBvcHRpb25zOiB7XG4gICAgICB0aXRsZTogJ1F1aWNrIENyZWF0ZScsXG4gICAgfSxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBjcmVhdGVUZW1wbGF0ZToge2FjdGlvbjogJ2NyZWF0ZVRlbXBsYXRlJ30sXG4gICAgY3JlYXRlRG9jdW1lbnQ6IHthY3Rpb246ICdjcmVhdGVEb2N1bWVudCd9LFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgUXVpY2tGdW5jdGlvbnMgPSAoe29wdGlvbnMsIGNyZWF0ZVRlbXBsYXRlLCBjcmVhdGVEb2N1bWVudH0pID0+XG4gIGh0bWxgPHZlcmRvY3MtcXVpY2stZnVuY3Rpb25zIC5vcHRpb25zPSR7b3B0aW9uc30gQGNyZWF0ZVRlbXBsYXRlPSR7Y3JlYXRlVGVtcGxhdGV9IEBjcmVhdGVEb2N1bWVudD0ke2NyZWF0ZURvY3VtZW50fSB0YWxsIC8+YDtcblxuXG5cblF1aWNrRnVuY3Rpb25zLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe29wdGlvbnMsIGNyZWF0ZVRlbXBsYXRlLCBjcmVhdGVEb2N1bWVudH0pID0+XFxuICBodG1sYDx2ZXJkb2NzLXF1aWNrLWZ1bmN0aW9ucyAub3B0aW9ucz0ke29wdGlvbnN9IEBjcmVhdGVUZW1wbGF0ZT0ke2NyZWF0ZVRlbXBsYXRlfSBAY3JlYXRlRG9jdW1lbnQ9JHtjcmVhdGVEb2N1bWVudH0gdGFsbCAvPmBcIiB9LCAuLi5RdWlja0Z1bmN0aW9ucy5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbi8qKlxcbiAqIERpc3BsYXkgYSBsaXN0IG9mIHN0YXJyZWQgaXRlbXMgKGZhdm9yaXRlIHRlbXBsYXRlcykuXFxuICovXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdTZWFyY2gvU2VhcmNoIEFjdGl2aXR5JyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3Mtc2VhcmNoLWFjdGl2aXR5JyxcXG4gIGFyZ3M6IHt9LFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgdHlwZToge2RlZmF1bHRWYWx1ZTogJ3JlY2VudCd9LFxcbiAgICBlbnRyeVNlbGVjdGVkOiB7YWN0aW9uOiAnZW50cnlTZWxlY3RlZCd9LFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFNlYXJjaEFjdGl2aXR5ID0gKHt0eXBlLCBlbnRyeVNlbGVjdGVkfSkgPT4gaHRtbGA8dmVyZG9jcy1zZWFyY2gtYWN0aXZpdHkgLnR5cGU9JHt0eXBlfSBAZW50cnlTZWxlY3RlZD0ke2VudHJ5U2VsZWN0ZWR9IHRhbGwgLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJTZWFyY2hBY3Rpdml0eVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MzAsXCJsaW5lXCI6MTd9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTQxLFwibGluZVwiOjE3fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjMwLFwibGluZVwiOjE3fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxNDEsXCJsaW5lXCI6MTd9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbi8qKlxuICogRGlzcGxheSBhIGxpc3Qgb2Ygc3RhcnJlZCBpdGVtcyAoZmF2b3JpdGUgdGVtcGxhdGVzKS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ1NlYXJjaC9TZWFyY2ggQWN0aXZpdHknLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXNlYXJjaC1hY3Rpdml0eScsXG4gIGFyZ3M6IHt9LFxuICBhcmdUeXBlczoge1xuICAgIHR5cGU6IHtkZWZhdWx0VmFsdWU6ICdyZWNlbnQnfSxcbiAgICBlbnRyeVNlbGVjdGVkOiB7YWN0aW9uOiAnZW50cnlTZWxlY3RlZCd9LFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgU2VhcmNoQWN0aXZpdHkgPSAoe3R5cGUsIGVudHJ5U2VsZWN0ZWR9KSA9PiBodG1sYDx2ZXJkb2NzLXNlYXJjaC1hY3Rpdml0eSAudHlwZT0ke3R5cGV9IEBlbnRyeVNlbGVjdGVkPSR7ZW50cnlTZWxlY3RlZH0gdGFsbCAvPmA7XG5cblxuXG5TZWFyY2hBY3Rpdml0eS5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHt0eXBlLCBlbnRyeVNlbGVjdGVkfSkgPT4gaHRtbGA8dmVyZG9jcy1zZWFyY2gtYWN0aXZpdHkgLnR5cGU9JHt0eXBlfSBAZW50cnlTZWxlY3RlZD0ke2VudHJ5U2VsZWN0ZWR9IHRhbGwgLz5gXCIgfSwgLi4uU2VhcmNoQWN0aXZpdHkucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ1NlYXJjaC9TZWFyY2ggQm94JyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3Mtc2VhcmNoLWJveCcsXFxuICBhcmdzOiB7XFxuICAgIHR5cGU6ICdhbGwnLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIHNlYXJjaENsaWNrZWQ6IHthY3Rpb246ICdzZWFyY2hDbGlja2VkJ30sXFxuICAgIHR5cGVDaGFuZ2VkOiB7YWN0aW9uOiAndHlwZUNoYW5nZWQnfSxcXG4gICAgcXVlcnlDaGFuZ2VkOiB7YWN0aW9uOiAncXVlcnlDaGFuZ2VkJ30sXFxuICAgIHR5cGU6IHt0eXBlOiAnc3RyaW5nJywgY29udHJvbDogJ3JhZGlvJywgb3B0aW9uczogWydhbGwnLCAnZG9jdW1lbnQnLCAndGVtcGxhdGUnLCAnb3JnYW5pemF0aW9uJ119LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXFxuICB9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgU2VhcmNoQm94ID0gKHt0eXBlLCBzZWFyY2hDbGlja2VkLCB0eXBlQ2hhbmdlZCwgcXVlcnlDaGFuZ2VkfSkgPT5cXG4gIGh0bWxgPHZlcmRvY3Mtc2VhcmNoLWJveCAudHlwZT0ke3R5cGV9IEBzZWFyY2hDbGlja2VkPSR7c2VhcmNoQ2xpY2tlZH0gQHR5cGVDaGFuZ2VkPSR7dHlwZUNoYW5nZWR9IEBxdWVyeUNoYW5nZWQ9JHtxdWVyeUNoYW5nZWR9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiU2VhcmNoQm94XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoyNSxcImxpbmVcIjoyMX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxMzQsXCJsaW5lXCI6MjJ9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjUsXCJsaW5lXCI6MjF9LFwiZW5kQm9keVwiOntcImNvbFwiOjEzNCxcImxpbmVcIjoyMn19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ1NlYXJjaC9TZWFyY2ggQm94JyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1zZWFyY2gtYm94JyxcbiAgYXJnczoge1xuICAgIHR5cGU6ICdhbGwnLFxuICB9LFxuICBhcmdUeXBlczoge1xuICAgIHNlYXJjaENsaWNrZWQ6IHthY3Rpb246ICdzZWFyY2hDbGlja2VkJ30sXG4gICAgdHlwZUNoYW5nZWQ6IHthY3Rpb246ICd0eXBlQ2hhbmdlZCd9LFxuICAgIHF1ZXJ5Q2hhbmdlZDoge2FjdGlvbjogJ3F1ZXJ5Q2hhbmdlZCd9LFxuICAgIHR5cGU6IHt0eXBlOiAnc3RyaW5nJywgY29udHJvbDogJ3JhZGlvJywgb3B0aW9uczogWydhbGwnLCAnZG9jdW1lbnQnLCAndGVtcGxhdGUnLCAnb3JnYW5pemF0aW9uJ119LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBTZWFyY2hCb3ggPSAoe3R5cGUsIHNlYXJjaENsaWNrZWQsIHR5cGVDaGFuZ2VkLCBxdWVyeUNoYW5nZWR9KSA9PlxuICBodG1sYDx2ZXJkb2NzLXNlYXJjaC1ib3ggLnR5cGU9JHt0eXBlfSBAc2VhcmNoQ2xpY2tlZD0ke3NlYXJjaENsaWNrZWR9IEB0eXBlQ2hhbmdlZD0ke3R5cGVDaGFuZ2VkfSBAcXVlcnlDaGFuZ2VkPSR7cXVlcnlDaGFuZ2VkfSAvPmA7XG5cblxuXG5TZWFyY2hCb3gucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7dHlwZSwgc2VhcmNoQ2xpY2tlZCwgdHlwZUNoYW5nZWQsIHF1ZXJ5Q2hhbmdlZH0pID0+XFxuICBodG1sYDx2ZXJkb2NzLXNlYXJjaC1ib3ggLnR5cGU9JHt0eXBlfSBAc2VhcmNoQ2xpY2tlZD0ke3NlYXJjaENsaWNrZWR9IEB0eXBlQ2hhbmdlZD0ke3R5cGVDaGFuZ2VkfSBAcXVlcnlDaGFuZ2VkPSR7cXVlcnlDaGFuZ2VkfSAvPmBcIiB9LCAuLi5TZWFyY2hCb3gucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5pbXBvcnQge2FjdGlvbn0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1hY3Rpb25zJztcXG5cXG4vKipcXG4gKiBEaXNwbGF5IGEgc2V0IG9mIHRhYnMgdG8gZmlsdGVyIGJ5IHNlYXJjaGFibGUgY29udGVudCB0eXBlcy5cXG4gKi9cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ1NlYXJjaC9UYWJzJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3Mtc2VhcmNoLXRhYnMnLFxcbiAgYXJnczoge30sXFxuICBhcmdUeXBlczoge30sXFxufSBhcyBNZXRhO1xcblxcbmNvbnN0IGxpc3RlbmVyID0ge1xcbiAgaGFuZGxlRXZlbnQoZSkge1xcbiAgICBhY3Rpb24oJ3NlbGVjdGVkJywgZSk7XFxuICB9LFxcbiAgY2FwdHVyZTogdHJ1ZSxcXG59O1xcblxcbmV4cG9ydCBjb25zdCBUYWJzID0gKHtvcHRpb25zfSkgPT4gaHRtbGA8dmVyZG9jcy1zZWFyY2gtdGFicyAub3B0aW9ucz0ke29wdGlvbnN9IEBvcHRpb25TZWxlY3RlZD0ke2xpc3RlbmVyfSB0YWxsIC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiVGFic1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjAsXCJsaW5lXCI6MjJ9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTE3LFwibGluZVwiOjIyfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjIwLFwibGluZVwiOjIyfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxMTcsXCJsaW5lXCI6MjJ9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5pbXBvcnQge2FjdGlvbn0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1hY3Rpb25zJztcblxuLyoqXG4gKiBEaXNwbGF5IGEgc2V0IG9mIHRhYnMgdG8gZmlsdGVyIGJ5IHNlYXJjaGFibGUgY29udGVudCB0eXBlcy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ1NlYXJjaC9UYWJzJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1zZWFyY2gtdGFicycsXG4gIGFyZ3M6IHt9LFxuICBhcmdUeXBlczoge30sXG59IGFzIE1ldGE7XG5cbmNvbnN0IGxpc3RlbmVyID0ge1xuICBoYW5kbGVFdmVudChlKSB7XG4gICAgYWN0aW9uKCdzZWxlY3RlZCcsIGUpO1xuICB9LFxuICBjYXB0dXJlOiB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IFRhYnMgPSAoe29wdGlvbnN9KSA9PiBodG1sYDx2ZXJkb2NzLXNlYXJjaC10YWJzIC5vcHRpb25zPSR7b3B0aW9uc30gQG9wdGlvblNlbGVjdGVkPSR7bGlzdGVuZXJ9IHRhbGwgLz5gO1xuXG5cblxuVGFicy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtvcHRpb25zfSkgPT4gaHRtbGA8dmVyZG9jcy1zZWFyY2gtdGFicyAub3B0aW9ucz0ke29wdGlvbnN9IEBvcHRpb25TZWxlY3RlZD0ke2xpc3RlbmVyfSB0YWxsIC8+YFwiIH0sIC4uLlRhYnMucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0VsZW1lbnRzL1RlbXBsYXRlIENyZWF0ZScsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXRlbXBsYXRlLWNyZWF0ZScsXFxuICBhcmdzOiB7XFxuICAgIHRlbXBsYXRlUm9sZToge1xcbiAgICAgIHRlbXBsYXRlX2lkOiAnNjVjYmJhMDctZDBhYy00YjYyLWFmZTMtMjVkMTg2MjM4OTM4JyxcXG4gICAgICBuYW1lOiAnUmVjaXBpZW50IDEnLFxcbiAgICAgIGZ1bGxfbmFtZTogJycsXFxuICAgICAgZW1haWw6ICcnLFxcbiAgICAgIHBob25lOiAnJyxcXG4gICAgICB0eXBlOiAnc2lnbmVyJyxcXG4gICAgICBzZXF1ZW5jZTogMSxcXG4gICAgICBtZXNzYWdlOiAnJyxcXG4gICAgfSxcXG4gICAgY29udGFjdFN1Z2dlc3Rpb25zOiBbXFxuICAgICAge25hbWU6ICdNZScsIGVtYWlsOiAnbXl1c2VyQG5vbWFpbC5jb20nLCBwaG9uZTogJzIxMi01NTUtNjY2NCd9LFxcbiAgICAgIHtuYW1lOiAnV2lsbCBQb3dlcicsIGVtYWlsOiAnd2lsbC5wb3dlckBub21haWwuY29tJywgYXZhdGFyOiAnaHR0cHM6Ly9pLnByYXZhdGFyLmNjLzQ4P2ltZz01OSd9LFxcbiAgICAgIHtuYW1lOiAnUGFpZ2UgVHVybmVyJywgZW1haWw6ICdwYWlnZS50dXJuZXJAbm9tYWlsLmNvbScsIHBob25lOiAnMjEyLTU1NS02NjY0JywgYXZhdGFyOiAnaHR0cHM6Ly9pLnByYXZhdGFyLmNjLzQ4P2ltZz00MSd9LFxcbiAgICAgIHtuYW1lOiAnQmlsbCBCb2FyZCcsIHBob25lOiAnMjEyLTU1NS02NjY0J30sXFxuICAgIF0sXFxuICB9LFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgc2VhcmNoQ29udGFjdHM6IHthY3Rpb246ICdzZWFyY2hDb250YWN0cyd9LFxcbiAgICBjYW5jZWw6IHthY3Rpb246ICdjYW5jZWwnfSxcXG4gICAgY29udGFjdFNlbGVjdGVkOiB7YWN0aW9uOiAnY29udGFjdFNlbGVjdGVkJ30sXFxuICB9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgVGVtcGxhdGVDcmVhdGUgPSAoe3RlbXBsYXRlUm9sZSwgY29udGFjdFN1Z2dlc3Rpb25zLCBzZWFyY2hDb250YWN0cywgY2FuY2VsLCBjb250YWN0U2VsZWN0ZWR9KSA9PlxcbiAgaHRtbGA8dmVyZG9jcy10ZW1wbGF0ZS1jcmVhdGVcXG4gICAgLnRlbXBsYXRlUm9sZT0ke3RlbXBsYXRlUm9sZX1cXG4gICAgLmNvbnRhY3RTdWdnZXN0aW9ucz0ke2NvbnRhY3RTdWdnZXN0aW9uc31cXG4gICAgQHNlYXJjaENvbnRhY3RzPSR7c2VhcmNoQ29udGFjdHN9XFxuICAgIEBjYW5jZWw9JHtjYW5jZWx9XFxuICAgIEBjb250YWN0U2VsZWN0ZWQ9JHtjb250YWN0U2VsZWN0ZWR9XFxuICAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlRlbXBsYXRlQ3JlYXRlXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjozMCxcImxpbmVcIjozMn0sXCJlbmRMb2NcIjp7XCJjb2xcIjo1LFwibGluZVwiOjM5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjMwLFwibGluZVwiOjMyfSxcImVuZEJvZHlcIjp7XCJjb2xcIjo1LFwibGluZVwiOjM5fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRWxlbWVudHMvVGVtcGxhdGUgQ3JlYXRlJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy10ZW1wbGF0ZS1jcmVhdGUnLFxuICBhcmdzOiB7XG4gICAgdGVtcGxhdGVSb2xlOiB7XG4gICAgICB0ZW1wbGF0ZV9pZDogJzY1Y2JiYTA3LWQwYWMtNGI2Mi1hZmUzLTI1ZDE4NjIzODkzOCcsXG4gICAgICBuYW1lOiAnUmVjaXBpZW50IDEnLFxuICAgICAgZnVsbF9uYW1lOiAnJyxcbiAgICAgIGVtYWlsOiAnJyxcbiAgICAgIHBob25lOiAnJyxcbiAgICAgIHR5cGU6ICdzaWduZXInLFxuICAgICAgc2VxdWVuY2U6IDEsXG4gICAgICBtZXNzYWdlOiAnJyxcbiAgICB9LFxuICAgIGNvbnRhY3RTdWdnZXN0aW9uczogW1xuICAgICAge25hbWU6ICdNZScsIGVtYWlsOiAnbXl1c2VyQG5vbWFpbC5jb20nLCBwaG9uZTogJzIxMi01NTUtNjY2NCd9LFxuICAgICAge25hbWU6ICdXaWxsIFBvd2VyJywgZW1haWw6ICd3aWxsLnBvd2VyQG5vbWFpbC5jb20nLCBhdmF0YXI6ICdodHRwczovL2kucHJhdmF0YXIuY2MvNDg/aW1nPTU5J30sXG4gICAgICB7bmFtZTogJ1BhaWdlIFR1cm5lcicsIGVtYWlsOiAncGFpZ2UudHVybmVyQG5vbWFpbC5jb20nLCBwaG9uZTogJzIxMi01NTUtNjY2NCcsIGF2YXRhcjogJ2h0dHBzOi8vaS5wcmF2YXRhci5jYy80OD9pbWc9NDEnfSxcbiAgICAgIHtuYW1lOiAnQmlsbCBCb2FyZCcsIHBob25lOiAnMjEyLTU1NS02NjY0J30sXG4gICAgXSxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBzZWFyY2hDb250YWN0czoge2FjdGlvbjogJ3NlYXJjaENvbnRhY3RzJ30sXG4gICAgY2FuY2VsOiB7YWN0aW9uOiAnY2FuY2VsJ30sXG4gICAgY29udGFjdFNlbGVjdGVkOiB7YWN0aW9uOiAnY29udGFjdFNlbGVjdGVkJ30sXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBUZW1wbGF0ZUNyZWF0ZSA9ICh7dGVtcGxhdGVSb2xlLCBjb250YWN0U3VnZ2VzdGlvbnMsIHNlYXJjaENvbnRhY3RzLCBjYW5jZWwsIGNvbnRhY3RTZWxlY3RlZH0pID0+XG4gIGh0bWxgPHZlcmRvY3MtdGVtcGxhdGUtY3JlYXRlXG4gICAgLnRlbXBsYXRlUm9sZT0ke3RlbXBsYXRlUm9sZX1cbiAgICAuY29udGFjdFN1Z2dlc3Rpb25zPSR7Y29udGFjdFN1Z2dlc3Rpb25zfVxuICAgIEBzZWFyY2hDb250YWN0cz0ke3NlYXJjaENvbnRhY3RzfVxuICAgIEBjYW5jZWw9JHtjYW5jZWx9XG4gICAgQGNvbnRhY3RTZWxlY3RlZD0ke2NvbnRhY3RTZWxlY3RlZH1cbiAgLz5gO1xuXG5cblxuVGVtcGxhdGVDcmVhdGUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7dGVtcGxhdGVSb2xlLCBjb250YWN0U3VnZ2VzdGlvbnMsIHNlYXJjaENvbnRhY3RzLCBjYW5jZWwsIGNvbnRhY3RTZWxlY3RlZH0pID0+XFxuICBodG1sYDx2ZXJkb2NzLXRlbXBsYXRlLWNyZWF0ZVxcbiAgICAudGVtcGxhdGVSb2xlPSR7dGVtcGxhdGVSb2xlfVxcbiAgICAuY29udGFjdFN1Z2dlc3Rpb25zPSR7Y29udGFjdFN1Z2dlc3Rpb25zfVxcbiAgICBAc2VhcmNoQ29udGFjdHM9JHtzZWFyY2hDb250YWN0c31cXG4gICAgQGNhbmNlbD0ke2NhbmNlbH1cXG4gICAgQGNvbnRhY3RTZWxlY3RlZD0ke2NvbnRhY3RTZWxlY3RlZH1cXG4gIC8+YFwiIH0sIC4uLlRlbXBsYXRlQ3JlYXRlLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdFbGVtZW50cy9UZW1wbGF0ZSBGaWVsZHMnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy10ZW1wbGF0ZS1maWVsZHMnLFxcbiAgYXJnczoge1xcbiAgICB0ZW1wbGF0ZUlkOiAnZDIzMzg3NDItZjNhMS00NjViLTg1OTItODA2NTg3NDEzY2MxJyxcXG4gIH0sXFxuICBhcmdUeXBlczoge1xcbiAgICBjYW5jZWw6IHthY3Rpb246ICdjYW5jZWwnfSxcXG4gICAgc2F2ZToge2FjdGlvbjogJ3NhdmUnfSxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGxheW91dDogJ2Z1bGxzY3JlZW4nLFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFRlbXBsYXRlRmllbGRzID0gKHt0ZW1wbGF0ZUlkLCBjYW5jZWwsIHNhdmV9KSA9PiBodG1sYDx2ZXJkb2NzLXRlbXBsYXRlLWZpZWxkcyAudGVtcGxhdGVJZD0ke3RlbXBsYXRlSWR9IEBjYW5jZWw9JHtjYW5jZWx9IEBzYXZlPSR7c2F2ZX0gLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJUZW1wbGF0ZUZpZWxkc1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MzAsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MTUzLFwibGluZVwiOjE5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjMwLFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxNTMsXCJsaW5lXCI6MTl9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdFbGVtZW50cy9UZW1wbGF0ZSBGaWVsZHMnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXRlbXBsYXRlLWZpZWxkcycsXG4gIGFyZ3M6IHtcbiAgICB0ZW1wbGF0ZUlkOiAnZDIzMzg3NDItZjNhMS00NjViLTg1OTItODA2NTg3NDEzY2MxJyxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBjYW5jZWw6IHthY3Rpb246ICdjYW5jZWwnfSxcbiAgICBzYXZlOiB7YWN0aW9uOiAnc2F2ZSd9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBUZW1wbGF0ZUZpZWxkcyA9ICh7dGVtcGxhdGVJZCwgY2FuY2VsLCBzYXZlfSkgPT4gaHRtbGA8dmVyZG9jcy10ZW1wbGF0ZS1maWVsZHMgLnRlbXBsYXRlSWQ9JHt0ZW1wbGF0ZUlkfSBAY2FuY2VsPSR7Y2FuY2VsfSBAc2F2ZT0ke3NhdmV9IC8+YDtcblxuXG5cblRlbXBsYXRlRmllbGRzLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe3RlbXBsYXRlSWQsIGNhbmNlbCwgc2F2ZX0pID0+IGh0bWxgPHZlcmRvY3MtdGVtcGxhdGUtZmllbGRzIC50ZW1wbGF0ZUlkPSR7dGVtcGxhdGVJZH0gQGNhbmNlbD0ke2NhbmNlbH0gQHNhdmU9JHtzYXZlfSAvPmBcIiB9LCAuLi5UZW1wbGF0ZUZpZWxkcy5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRWxlbWVudHMvVGVtcGxhdGUgUHJvcGVydGllcycsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXRlbXBsYXRlLXByb3BlcnRpZXMnLFxcbiAgYXJnczoge1xcbiAgICB0ZW1wbGF0ZVJvbGU6IHtcXG4gICAgICB0ZW1wbGF0ZV9pZDogJzY1Y2JiYTA3LWQwYWMtNGI2Mi1hZmUzLTI1ZDE4NjIzODkzOCcsXFxuICAgICAgbmFtZTogJ1JlY2lwaWVudCAxJyxcXG4gICAgICBmdWxsX25hbWU6ICcnLFxcbiAgICAgIGVtYWlsOiAnJyxcXG4gICAgICBwaG9uZTogJycsXFxuICAgICAgdHlwZTogJ3NpZ25lcicsXFxuICAgICAgc2VxdWVuY2U6IDEsXFxuICAgICAgbWVzc2FnZTogJycsXFxuICAgIH0sXFxuICAgIGNvbnRhY3RTdWdnZXN0aW9uczogW1xcbiAgICAgIHtuYW1lOiAnTWUnLCBlbWFpbDogJ215dXNlckBub21haWwuY29tJywgcGhvbmU6ICcyMTItNTU1LTY2NjQnfSxcXG4gICAgICB7bmFtZTogJ1dpbGwgUG93ZXInLCBlbWFpbDogJ3dpbGwucG93ZXJAbm9tYWlsLmNvbScsIGF2YXRhcjogJ2h0dHBzOi8vaS5wcmF2YXRhci5jYy80OD9pbWc9NTknfSxcXG4gICAgICB7bmFtZTogJ1BhaWdlIFR1cm5lcicsIGVtYWlsOiAncGFpZ2UudHVybmVyQG5vbWFpbC5jb20nLCBwaG9uZTogJzIxMi01NTUtNjY2NCcsIGF2YXRhcjogJ2h0dHBzOi8vaS5wcmF2YXRhci5jYy80OD9pbWc9NDEnfSxcXG4gICAgICB7bmFtZTogJ0JpbGwgQm9hcmQnLCBwaG9uZTogJzIxMi01NTUtNjY2NCd9LFxcbiAgICBdLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIHNlYXJjaENvbnRhY3RzOiB7YWN0aW9uOiAnc2VhcmNoQ29udGFjdHMnfSxcXG4gICAgY2FuY2VsOiB7YWN0aW9uOiAnY2FuY2VsJ30sXFxuICAgIGNvbnRhY3RTZWxlY3RlZDoge2FjdGlvbjogJ2NvbnRhY3RTZWxlY3RlZCd9LFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFRlbXBsYXRlUHJvcGVydGllcyA9ICh7dGVtcGxhdGVSb2xlLCBjb250YWN0U3VnZ2VzdGlvbnMsIHNlYXJjaENvbnRhY3RzLCBjYW5jZWwsIGNvbnRhY3RTZWxlY3RlZH0pID0+XFxuICBodG1sYDx2ZXJkb2NzLXRlbXBsYXRlLXByb3BlcnRpZXNcXG4gICAgLnRlbXBsYXRlUm9sZT0ke3RlbXBsYXRlUm9sZX1cXG4gICAgLmNvbnRhY3RTdWdnZXN0aW9ucz0ke2NvbnRhY3RTdWdnZXN0aW9uc31cXG4gICAgQHNlYXJjaENvbnRhY3RzPSR7c2VhcmNoQ29udGFjdHN9XFxuICAgIEBjYW5jZWw9JHtjYW5jZWx9XFxuICAgIEBjb250YWN0U2VsZWN0ZWQ9JHtjb250YWN0U2VsZWN0ZWR9XFxuICAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlRlbXBsYXRlUHJvcGVydGllc1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MzQsXCJsaW5lXCI6MzJ9LFwiZW5kTG9jXCI6e1wiY29sXCI6NSxcImxpbmVcIjozOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjozNCxcImxpbmVcIjozMn0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NSxcImxpbmVcIjozOX19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0VsZW1lbnRzL1RlbXBsYXRlIFByb3BlcnRpZXMnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXRlbXBsYXRlLXByb3BlcnRpZXMnLFxuICBhcmdzOiB7XG4gICAgdGVtcGxhdGVSb2xlOiB7XG4gICAgICB0ZW1wbGF0ZV9pZDogJzY1Y2JiYTA3LWQwYWMtNGI2Mi1hZmUzLTI1ZDE4NjIzODkzOCcsXG4gICAgICBuYW1lOiAnUmVjaXBpZW50IDEnLFxuICAgICAgZnVsbF9uYW1lOiAnJyxcbiAgICAgIGVtYWlsOiAnJyxcbiAgICAgIHBob25lOiAnJyxcbiAgICAgIHR5cGU6ICdzaWduZXInLFxuICAgICAgc2VxdWVuY2U6IDEsXG4gICAgICBtZXNzYWdlOiAnJyxcbiAgICB9LFxuICAgIGNvbnRhY3RTdWdnZXN0aW9uczogW1xuICAgICAge25hbWU6ICdNZScsIGVtYWlsOiAnbXl1c2VyQG5vbWFpbC5jb20nLCBwaG9uZTogJzIxMi01NTUtNjY2NCd9LFxuICAgICAge25hbWU6ICdXaWxsIFBvd2VyJywgZW1haWw6ICd3aWxsLnBvd2VyQG5vbWFpbC5jb20nLCBhdmF0YXI6ICdodHRwczovL2kucHJhdmF0YXIuY2MvNDg/aW1nPTU5J30sXG4gICAgICB7bmFtZTogJ1BhaWdlIFR1cm5lcicsIGVtYWlsOiAncGFpZ2UudHVybmVyQG5vbWFpbC5jb20nLCBwaG9uZTogJzIxMi01NTUtNjY2NCcsIGF2YXRhcjogJ2h0dHBzOi8vaS5wcmF2YXRhci5jYy80OD9pbWc9NDEnfSxcbiAgICAgIHtuYW1lOiAnQmlsbCBCb2FyZCcsIHBob25lOiAnMjEyLTU1NS02NjY0J30sXG4gICAgXSxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBzZWFyY2hDb250YWN0czoge2FjdGlvbjogJ3NlYXJjaENvbnRhY3RzJ30sXG4gICAgY2FuY2VsOiB7YWN0aW9uOiAnY2FuY2VsJ30sXG4gICAgY29udGFjdFNlbGVjdGVkOiB7YWN0aW9uOiAnY29udGFjdFNlbGVjdGVkJ30sXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBUZW1wbGF0ZVByb3BlcnRpZXMgPSAoe3RlbXBsYXRlUm9sZSwgY29udGFjdFN1Z2dlc3Rpb25zLCBzZWFyY2hDb250YWN0cywgY2FuY2VsLCBjb250YWN0U2VsZWN0ZWR9KSA9PlxuICBodG1sYDx2ZXJkb2NzLXRlbXBsYXRlLXByb3BlcnRpZXNcbiAgICAudGVtcGxhdGVSb2xlPSR7dGVtcGxhdGVSb2xlfVxuICAgIC5jb250YWN0U3VnZ2VzdGlvbnM9JHtjb250YWN0U3VnZ2VzdGlvbnN9XG4gICAgQHNlYXJjaENvbnRhY3RzPSR7c2VhcmNoQ29udGFjdHN9XG4gICAgQGNhbmNlbD0ke2NhbmNlbH1cbiAgICBAY29udGFjdFNlbGVjdGVkPSR7Y29udGFjdFNlbGVjdGVkfVxuICAvPmA7XG5cblxuXG5UZW1wbGF0ZVByb3BlcnRpZXMucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7dGVtcGxhdGVSb2xlLCBjb250YWN0U3VnZ2VzdGlvbnMsIHNlYXJjaENvbnRhY3RzLCBjYW5jZWwsIGNvbnRhY3RTZWxlY3RlZH0pID0+XFxuICBodG1sYDx2ZXJkb2NzLXRlbXBsYXRlLXByb3BlcnRpZXNcXG4gICAgLnRlbXBsYXRlUm9sZT0ke3RlbXBsYXRlUm9sZX1cXG4gICAgLmNvbnRhY3RTdWdnZXN0aW9ucz0ke2NvbnRhY3RTdWdnZXN0aW9uc31cXG4gICAgQHNlYXJjaENvbnRhY3RzPSR7c2VhcmNoQ29udGFjdHN9XFxuICAgIEBjYW5jZWw9JHtjYW5jZWx9XFxuICAgIEBjb250YWN0U2VsZWN0ZWQ9JHtjb250YWN0U2VsZWN0ZWR9XFxuICAvPmBcIiB9LCAuLi5UZW1wbGF0ZVByb3BlcnRpZXMucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0VsZW1lbnRzL1RlbXBsYXRlIFJlY2lwaWVudHMnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy10ZW1wbGF0ZS1yZWNpcGllbnRzJyxcXG4gIGFyZ3M6IHtcXG4gICAgdGVtcGxhdGVSb2xlOiB7XFxuICAgICAgdGVtcGxhdGVfaWQ6ICc2NWNiYmEwNy1kMGFjLTRiNjItYWZlMy0yNWQxODYyMzg5MzgnLFxcbiAgICAgIG5hbWU6ICdSZWNpcGllbnQgMScsXFxuICAgICAgZnVsbF9uYW1lOiAnJyxcXG4gICAgICBlbWFpbDogJycsXFxuICAgICAgcGhvbmU6ICcnLFxcbiAgICAgIHR5cGU6ICdzaWduZXInLFxcbiAgICAgIHNlcXVlbmNlOiAxLFxcbiAgICAgIG1lc3NhZ2U6ICcnLFxcbiAgICB9LFxcbiAgICBjb250YWN0U3VnZ2VzdGlvbnM6IFtcXG4gICAgICB7bmFtZTogJ01lJywgZW1haWw6ICdteXVzZXJAbm9tYWlsLmNvbScsIHBob25lOiAnMjEyLTU1NS02NjY0J30sXFxuICAgICAge25hbWU6ICdXaWxsIFBvd2VyJywgZW1haWw6ICd3aWxsLnBvd2VyQG5vbWFpbC5jb20nLCBhdmF0YXI6ICdodHRwczovL2kucHJhdmF0YXIuY2MvNDg/aW1nPTU5J30sXFxuICAgICAge25hbWU6ICdQYWlnZSBUdXJuZXInLCBlbWFpbDogJ3BhaWdlLnR1cm5lckBub21haWwuY29tJywgcGhvbmU6ICcyMTItNTU1LTY2NjQnLCBhdmF0YXI6ICdodHRwczovL2kucHJhdmF0YXIuY2MvNDg/aW1nPTQxJ30sXFxuICAgICAge25hbWU6ICdCaWxsIEJvYXJkJywgcGhvbmU6ICcyMTItNTU1LTY2NjQnfSxcXG4gICAgXSxcXG4gIH0sXFxuICBhcmdUeXBlczoge1xcbiAgICBzZWFyY2hDb250YWN0czoge2FjdGlvbjogJ3NlYXJjaENvbnRhY3RzJ30sXFxuICAgIGNhbmNlbDoge2FjdGlvbjogJ2NhbmNlbCd9LFxcbiAgICBjb250YWN0U2VsZWN0ZWQ6IHthY3Rpb246ICdjb250YWN0U2VsZWN0ZWQnfSxcXG4gIH0sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBUZW1wbGF0ZVJlY2lwaWVudHMgPSAoe3RlbXBsYXRlUm9sZSwgY29udGFjdFN1Z2dlc3Rpb25zLCBzZWFyY2hDb250YWN0cywgY2FuY2VsLCBjb250YWN0U2VsZWN0ZWR9KSA9PlxcbiAgaHRtbGA8dmVyZG9jcy10ZW1wbGF0ZS1yZWNpcGllbnRzXFxuICAgIC50ZW1wbGF0ZVJvbGU9JHt0ZW1wbGF0ZVJvbGV9XFxuICAgIC5jb250YWN0U3VnZ2VzdGlvbnM9JHtjb250YWN0U3VnZ2VzdGlvbnN9XFxuICAgIEBzZWFyY2hDb250YWN0cz0ke3NlYXJjaENvbnRhY3RzfVxcbiAgICBAY2FuY2VsPSR7Y2FuY2VsfVxcbiAgICBAY29udGFjdFNlbGVjdGVkPSR7Y29udGFjdFNlbGVjdGVkfVxcbiAgLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJUZW1wbGF0ZVJlY2lwaWVudHNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjM0LFwibGluZVwiOjMyfSxcImVuZExvY1wiOntcImNvbFwiOjUsXCJsaW5lXCI6Mzl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MzQsXCJsaW5lXCI6MzJ9LFwiZW5kQm9keVwiOntcImNvbFwiOjUsXCJsaW5lXCI6Mzl9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdFbGVtZW50cy9UZW1wbGF0ZSBSZWNpcGllbnRzJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy10ZW1wbGF0ZS1yZWNpcGllbnRzJyxcbiAgYXJnczoge1xuICAgIHRlbXBsYXRlUm9sZToge1xuICAgICAgdGVtcGxhdGVfaWQ6ICc2NWNiYmEwNy1kMGFjLTRiNjItYWZlMy0yNWQxODYyMzg5MzgnLFxuICAgICAgbmFtZTogJ1JlY2lwaWVudCAxJyxcbiAgICAgIGZ1bGxfbmFtZTogJycsXG4gICAgICBlbWFpbDogJycsXG4gICAgICBwaG9uZTogJycsXG4gICAgICB0eXBlOiAnc2lnbmVyJyxcbiAgICAgIHNlcXVlbmNlOiAxLFxuICAgICAgbWVzc2FnZTogJycsXG4gICAgfSxcbiAgICBjb250YWN0U3VnZ2VzdGlvbnM6IFtcbiAgICAgIHtuYW1lOiAnTWUnLCBlbWFpbDogJ215dXNlckBub21haWwuY29tJywgcGhvbmU6ICcyMTItNTU1LTY2NjQnfSxcbiAgICAgIHtuYW1lOiAnV2lsbCBQb3dlcicsIGVtYWlsOiAnd2lsbC5wb3dlckBub21haWwuY29tJywgYXZhdGFyOiAnaHR0cHM6Ly9pLnByYXZhdGFyLmNjLzQ4P2ltZz01OSd9LFxuICAgICAge25hbWU6ICdQYWlnZSBUdXJuZXInLCBlbWFpbDogJ3BhaWdlLnR1cm5lckBub21haWwuY29tJywgcGhvbmU6ICcyMTItNTU1LTY2NjQnLCBhdmF0YXI6ICdodHRwczovL2kucHJhdmF0YXIuY2MvNDg/aW1nPTQxJ30sXG4gICAgICB7bmFtZTogJ0JpbGwgQm9hcmQnLCBwaG9uZTogJzIxMi01NTUtNjY2NCd9LFxuICAgIF0sXG4gIH0sXG4gIGFyZ1R5cGVzOiB7XG4gICAgc2VhcmNoQ29udGFjdHM6IHthY3Rpb246ICdzZWFyY2hDb250YWN0cyd9LFxuICAgIGNhbmNlbDoge2FjdGlvbjogJ2NhbmNlbCd9LFxuICAgIGNvbnRhY3RTZWxlY3RlZDoge2FjdGlvbjogJ2NvbnRhY3RTZWxlY3RlZCd9LFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgVGVtcGxhdGVSZWNpcGllbnRzID0gKHt0ZW1wbGF0ZVJvbGUsIGNvbnRhY3RTdWdnZXN0aW9ucywgc2VhcmNoQ29udGFjdHMsIGNhbmNlbCwgY29udGFjdFNlbGVjdGVkfSkgPT5cbiAgaHRtbGA8dmVyZG9jcy10ZW1wbGF0ZS1yZWNpcGllbnRzXG4gICAgLnRlbXBsYXRlUm9sZT0ke3RlbXBsYXRlUm9sZX1cbiAgICAuY29udGFjdFN1Z2dlc3Rpb25zPSR7Y29udGFjdFN1Z2dlc3Rpb25zfVxuICAgIEBzZWFyY2hDb250YWN0cz0ke3NlYXJjaENvbnRhY3RzfVxuICAgIEBjYW5jZWw9JHtjYW5jZWx9XG4gICAgQGNvbnRhY3RTZWxlY3RlZD0ke2NvbnRhY3RTZWxlY3RlZH1cbiAgLz5gO1xuXG5cblxuVGVtcGxhdGVSZWNpcGllbnRzLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoe3RlbXBsYXRlUm9sZSwgY29udGFjdFN1Z2dlc3Rpb25zLCBzZWFyY2hDb250YWN0cywgY2FuY2VsLCBjb250YWN0U2VsZWN0ZWR9KSA9PlxcbiAgaHRtbGA8dmVyZG9jcy10ZW1wbGF0ZS1yZWNpcGllbnRzXFxuICAgIC50ZW1wbGF0ZVJvbGU9JHt0ZW1wbGF0ZVJvbGV9XFxuICAgIC5jb250YWN0U3VnZ2VzdGlvbnM9JHtjb250YWN0U3VnZ2VzdGlvbnN9XFxuICAgIEBzZWFyY2hDb250YWN0cz0ke3NlYXJjaENvbnRhY3RzfVxcbiAgICBAY2FuY2VsPSR7Y2FuY2VsfVxcbiAgICBAY29udGFjdFNlbGVjdGVkPSR7Y29udGFjdFNlbGVjdGVkfVxcbiAgLz5gXCIgfSwgLi4uVGVtcGxhdGVSZWNpcGllbnRzLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdFbWJlZHMvQXV0aCcsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWF1dGgnLFxcbiAgYXJnczoge1xcbiAgICBkZWJ1ZzogdHJ1ZSxcXG4gICAgdmlzaWJsZTogdHJ1ZSxcXG4gICAgbG9nbzogJ2h0dHBzOi8vdmVyZG9jcy5jb20vYXNzZXRzL2JsdWUtbG9nby5zdmcnLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIHNka0Vycm9yOiB7XFxuICAgICAgYWN0aW9uOiAnZXJyb3InLFxcbiAgICAgIHRhYmxlOiB7XFxuICAgICAgICBkaXNhYmxlOiB0cnVlLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICAgIGF1dGhlbnRpY2F0ZWQ6IHtcXG4gICAgICBhY3Rpb246ICdhdXRoZW50aWNhdGVkJyxcXG4gICAgICB0YWJsZToge1xcbiAgICAgICAgZGlzYWJsZTogdHJ1ZSxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IEF1dGggPSAoe3Zpc2libGUsIGxvZ28sIGRlYnVnLCBhdXRoZW50aWNhdGVkLCBzZGtFcnJvcn0pID0+XFxuICBodG1sYDx2ZXJkb2NzLWF1dGggLnZpc2libGU9JHt2aXNpYmxlfSAubG9nbz0ke2xvZ299IC5kZWJ1Zz0ke2RlYnVnfSBAYXV0aGVudGljYXRlZD0ke2F1dGhlbnRpY2F0ZWR9IEBzZGtFcnJvcj0ke3Nka0Vycm9yfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkF1dGhcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjIwLFwibGluZVwiOjI4fSxcImVuZExvY1wiOntcImNvbFwiOjEyOCxcImxpbmVcIjoyOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyMCxcImxpbmVcIjoyOH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTI4LFwibGluZVwiOjI5fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRW1iZWRzL0F1dGgnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWF1dGgnLFxuICBhcmdzOiB7XG4gICAgZGVidWc6IHRydWUsXG4gICAgdmlzaWJsZTogdHJ1ZSxcbiAgICBsb2dvOiAnaHR0cHM6Ly92ZXJkb2NzLmNvbS9hc3NldHMvYmx1ZS1sb2dvLnN2ZycsXG4gIH0sXG4gIGFyZ1R5cGVzOiB7XG4gICAgc2RrRXJyb3I6IHtcbiAgICAgIGFjdGlvbjogJ2Vycm9yJyxcbiAgICAgIHRhYmxlOiB7XG4gICAgICAgIGRpc2FibGU6IHRydWUsXG4gICAgICB9LFxuICAgIH0sXG4gICAgYXV0aGVudGljYXRlZDoge1xuICAgICAgYWN0aW9uOiAnYXV0aGVudGljYXRlZCcsXG4gICAgICB0YWJsZToge1xuICAgICAgICBkaXNhYmxlOiB0cnVlLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgQXV0aCA9ICh7dmlzaWJsZSwgbG9nbywgZGVidWcsIGF1dGhlbnRpY2F0ZWQsIHNka0Vycm9yfSkgPT5cbiAgaHRtbGA8dmVyZG9jcy1hdXRoIC52aXNpYmxlPSR7dmlzaWJsZX0gLmxvZ289JHtsb2dvfSAuZGVidWc9JHtkZWJ1Z30gQGF1dGhlbnRpY2F0ZWQ9JHthdXRoZW50aWNhdGVkfSBAc2RrRXJyb3I9JHtzZGtFcnJvcn0gLz5gO1xuXG5cblxuQXV0aC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHt2aXNpYmxlLCBsb2dvLCBkZWJ1ZywgYXV0aGVudGljYXRlZCwgc2RrRXJyb3J9KSA9PlxcbiAgaHRtbGA8dmVyZG9jcy1hdXRoIC52aXNpYmxlPSR7dmlzaWJsZX0gLmxvZ289JHtsb2dvfSAuZGVidWc9JHtkZWJ1Z30gQGF1dGhlbnRpY2F0ZWQ9JHthdXRoZW50aWNhdGVkfSBAc2RrRXJyb3I9JHtzZGtFcnJvcn0gLz5gXCIgfSwgLi4uQXV0aC5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRW1iZWRzL0J1aWxkJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3MtYnVpbGQnLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBsYXlvdXQ6ICdmdWxsc2NyZWVuJyxcXG4gIH0sXFxufSBhcyBNZXRhO1xcblxcbmV4cG9ydCBjb25zdCBCdWlsZCA9ICh7fSkgPT4gaHRtbGA8dmVyZG9jcy1idWlsZCAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkJ1aWxkXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoyMSxcImxpbmVcIjoxMn0sXCJlbmRMb2NcIjp7XCJjb2xcIjo1MixcImxpbmVcIjoxMn0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyMSxcImxpbmVcIjoxMn0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NTIsXCJsaW5lXCI6MTJ9fX07XG4gICAgXG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdFbWJlZHMvQnVpbGQnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLWJ1aWxkJyxcbiAgcGFyYW1ldGVyczoge1xuICAgIGxheW91dDogJ2Z1bGxzY3JlZW4nLFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgQnVpbGQgPSAoe30pID0+IGh0bWxgPHZlcmRvY3MtYnVpbGQgLz5gO1xuXG5cblxuQnVpbGQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7fSkgPT4gaHRtbGA8dmVyZG9jcy1idWlsZCAvPmBcIiB9LCAuLi5CdWlsZC5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRW1iZWRzL1ByZXZpZXcnLFxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1wcmV2aWV3JyxcXG4gIGFyZ3M6IHtcXG4gICAgdGVtcGxhdGVJZDogJ2QyMzM4NzQyLWYzYTEtNDY1Yi04NTkyLTgwNjU4NzQxM2NjMScsXFxuICB9LFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgdGVtcGxhdGVJZDoge2NvbnRyb2w6IHt0eXBlOiAnc3RyaW5nJ319LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXFxuICB9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgUHJldmlldyA9ICh7dGVtcGxhdGVJZH0pID0+IGh0bWxgPHZlcmRvY3MtcHJldmlldyAudGVtcGxhdGVJZD0ke3RlbXBsYXRlSWR9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiUHJldmlld1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjMsXCJsaW5lXCI6MTh9LFwiZW5kTG9jXCI6e1wiY29sXCI6OTIsXCJsaW5lXCI6MTh9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjMsXCJsaW5lXCI6MTh9LFwiZW5kQm9keVwiOntcImNvbFwiOjkyLFwibGluZVwiOjE4fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRW1iZWRzL1ByZXZpZXcnLFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXByZXZpZXcnLFxuICBhcmdzOiB7XG4gICAgdGVtcGxhdGVJZDogJ2QyMzM4NzQyLWYzYTEtNDY1Yi04NTkyLTgwNjU4NzQxM2NjMScsXG4gIH0sXG4gIGFyZ1R5cGVzOiB7XG4gICAgdGVtcGxhdGVJZDoge2NvbnRyb2w6IHt0eXBlOiAnc3RyaW5nJ319LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBQcmV2aWV3ID0gKHt0ZW1wbGF0ZUlkfSkgPT4gaHRtbGA8dmVyZG9jcy1wcmV2aWV3IC50ZW1wbGF0ZUlkPSR7dGVtcGxhdGVJZH0gLz5gO1xuXG5cblxuUHJldmlldy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHt0ZW1wbGF0ZUlkfSkgPT4gaHRtbGA8dmVyZG9jcy1wcmV2aWV3IC50ZW1wbGF0ZUlkPSR7dGVtcGxhdGVJZH0gLz5gXCIgfSwgLi4uUHJldmlldy5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQge2h0bWx9IGZyb20gJ2xpdC1odG1sJztcXG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xcbmltcG9ydCB7YWN0aW9ufSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRW1iZWRzL1NlYXJjaCcsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXNlYXJjaCcsXFxuICBhcmdzOiB7fSxcXG4gIGFyZ1R5cGVzOiB7fSxcXG59IGFzIE1ldGE7XFxuXFxuY29uc3QgbGlzdGVuZXIgPSB7XFxuICBoYW5kbGVFdmVudChlKSB7XFxuICAgIGFjdGlvbignc2VsZWN0ZWQnLCBlKTtcXG4gIH0sXFxuICBjYXB0dXJlOiB0cnVlLFxcbn07XFxuXFxuZXhwb3J0IGNvbnN0IFNlYXJjaCA9ICh7b3B0aW9uc30pID0+IGh0bWxgPHZlcmRvY3Mtc2VhcmNoIC5vcHRpb25zPSR7b3B0aW9uc30gQG9wdGlvblNlbGVjdGVkPSR7bGlzdGVuZXJ9IHRhbGwgLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJTZWFyY2hcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjIyLFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjExNCxcImxpbmVcIjoxOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoyMixcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MTE0LFwibGluZVwiOjE5fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuaW1wb3J0IHthY3Rpb259IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tYWN0aW9ucyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdFbWJlZHMvU2VhcmNoJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1zZWFyY2gnLFxuICBhcmdzOiB7fSxcbiAgYXJnVHlwZXM6IHt9LFxufSBhcyBNZXRhO1xuXG5jb25zdCBsaXN0ZW5lciA9IHtcbiAgaGFuZGxlRXZlbnQoZSkge1xuICAgIGFjdGlvbignc2VsZWN0ZWQnLCBlKTtcbiAgfSxcbiAgY2FwdHVyZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBTZWFyY2ggPSAoe29wdGlvbnN9KSA9PiBodG1sYDx2ZXJkb2NzLXNlYXJjaCAub3B0aW9ucz0ke29wdGlvbnN9IEBvcHRpb25TZWxlY3RlZD0ke2xpc3RlbmVyfSB0YWxsIC8+YDtcblxuXG5cblNlYXJjaC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKHtvcHRpb25zfSkgPT4gaHRtbGA8dmVyZG9jcy1zZWFyY2ggLm9wdGlvbnM9JHtvcHRpb25zfSBAb3B0aW9uU2VsZWN0ZWQ9JHtsaXN0ZW5lcn0gdGFsbCAvPmBcIiB9LCAuLi5TZWFyY2gucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0VtYmVkcy9TZW5kJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3Mtc2VuZCcsXFxuICBhcmdzOiB7XFxuICAgIHRlbXBsYXRlSWQ6ICdkMjMzODc0Mi1mM2ExLTQ2NWItODU5Mi04MDY1ODc0MTNjYzEnLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIHRlbXBsYXRlSWQ6IHtjb250cm9sOiB7dHlwZTogJ3N0cmluZyd9fSxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGxheW91dDogJ2Z1bGxzY3JlZW4nLFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFNlbmQgPSAoe3RlbXBsYXRlSWR9KSA9PiBodG1sYDx2ZXJkb2NzLXNlbmQgLnRlbXBsYXRlSWQ9JHt0ZW1wbGF0ZUlkfSAvPmA7XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlNlbmRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjIwLFwibGluZVwiOjE4fSxcImVuZExvY1wiOntcImNvbFwiOjg2LFwibGluZVwiOjE4fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjIwLFwibGluZVwiOjE4fSxcImVuZEJvZHlcIjp7XCJjb2xcIjo4NixcImxpbmVcIjoxOH19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0VtYmVkcy9TZW5kJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1zZW5kJyxcbiAgYXJnczoge1xuICAgIHRlbXBsYXRlSWQ6ICdkMjMzODc0Mi1mM2ExLTQ2NWItODU5Mi04MDY1ODc0MTNjYzEnLFxuICB9LFxuICBhcmdUeXBlczoge1xuICAgIHRlbXBsYXRlSWQ6IHtjb250cm9sOiB7dHlwZTogJ3N0cmluZyd9fSxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGxheW91dDogJ2Z1bGxzY3JlZW4nLFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgU2VuZCA9ICh7dGVtcGxhdGVJZH0pID0+IGh0bWxgPHZlcmRvY3Mtc2VuZCAudGVtcGxhdGVJZD0ke3RlbXBsYXRlSWR9IC8+YDtcblxuXG5cblNlbmQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7dGVtcGxhdGVJZH0pID0+IGh0bWxgPHZlcmRvY3Mtc2VuZCAudGVtcGxhdGVJZD0ke3RlbXBsYXRlSWR9IC8+YFwiIH0sIC4uLlNlbmQucGFyYW1ldGVycyB9OyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XFxuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0VtYmVkcy9TaWduJyxcXG4gIGNvbXBvbmVudDogJ3ZlcmRvY3Mtc2lnbicsXFxuICBhcmdzOiB7XFxuICAgIGRvY3VtZW50SWQ6ICdmYTJlNmFmYS00ZGE4LTRjNmUtYWIzNy0yN2VjMzY2YjA5MGInLFxcbiAgICByb2xlSWQ6ICdTZWxsZXInLFxcbiAgICBpbnZpdGVDb2RlOiAnMDZjZWNjNzZhZDliM2QwMmE4ZmFkYWI1YjBhYWQwNjUnLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGRvY3VtZW50SWQ6IHtjb250cm9sOiB7dHlwZTogJ3N0cmluZyd9fSxcXG4gICAgcm9sZUlkOiB7Y29udHJvbDoge3R5cGU6ICdzdHJpbmcnfX0sXFxuICAgIGludml0ZUNvZGU6IHtjb250cm9sOiB7dHlwZTogJ3N0cmluZyd9fSxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGxheW91dDogJ2Z1bGxzY3JlZW4nLFxcbiAgfSxcXG59IGFzIE1ldGE7XFxuXFxuZXhwb3J0IGNvbnN0IFNpZ24gPSAoe2RvY3VtZW50SWQsIHJvbGVJZCwgaW52aXRlQ29kZX0pID0+IGh0bWxgPHZlcmRvY3Mtc2lnbiAuZG9jdW1lbnRJZD0ke2RvY3VtZW50SWR9IC5yb2xlSWQ9JHtyb2xlSWR9IC5pbnZpdGVDb2RlPSR7aW52aXRlQ29kZX0gLz5gO1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJTaWduXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoyMCxcImxpbmVcIjoyMn0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxNTAsXCJsaW5lXCI6MjJ9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjAsXCJsaW5lXCI6MjJ9LFwiZW5kQm9keVwiOntcImNvbFwiOjE1MCxcImxpbmVcIjoyMn19fTtcbiAgICBcbmltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xuaW1wb3J0IHtNZXRhfSBmcm9tICdAc3Rvcnlib29rL3dlYi1jb21wb25lbnRzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0VtYmVkcy9TaWduJyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy1zaWduJyxcbiAgYXJnczoge1xuICAgIGRvY3VtZW50SWQ6ICdmYTJlNmFmYS00ZGE4LTRjNmUtYWIzNy0yN2VjMzY2YjA5MGInLFxuICAgIHJvbGVJZDogJ1NlbGxlcicsXG4gICAgaW52aXRlQ29kZTogJzA2Y2VjYzc2YWQ5YjNkMDJhOGZhZGFiNWIwYWFkMDY1JyxcbiAgfSxcbiAgYXJnVHlwZXM6IHtcbiAgICBkb2N1bWVudElkOiB7Y29udHJvbDoge3R5cGU6ICdzdHJpbmcnfX0sXG4gICAgcm9sZUlkOiB7Y29udHJvbDoge3R5cGU6ICdzdHJpbmcnfX0sXG4gICAgaW52aXRlQ29kZToge2NvbnRyb2w6IHt0eXBlOiAnc3RyaW5nJ319LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXG4gIH0sXG59IGFzIE1ldGE7XG5cbmV4cG9ydCBjb25zdCBTaWduID0gKHtkb2N1bWVudElkLCByb2xlSWQsIGludml0ZUNvZGV9KSA9PiBodG1sYDx2ZXJkb2NzLXNpZ24gLmRvY3VtZW50SWQ9JHtkb2N1bWVudElkfSAucm9sZUlkPSR7cm9sZUlkfSAuaW52aXRlQ29kZT0ke2ludml0ZUNvZGV9IC8+YDtcblxuXG5cblNpZ24ucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7ZG9jdW1lbnRJZCwgcm9sZUlkLCBpbnZpdGVDb2RlfSkgPT4gaHRtbGA8dmVyZG9jcy1zaWduIC5kb2N1bWVudElkPSR7ZG9jdW1lbnRJZH0gLnJvbGVJZD0ke3JvbGVJZH0gLmludml0ZUNvZGU9JHtpbnZpdGVDb2RlfSAvPmBcIiB9LCAuLi5TaWduLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCB7aHRtbH0gZnJvbSAnbGl0LWh0bWwnO1xcbmltcG9ydCB7TWV0YX0gZnJvbSAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7XFxuXFxuY29uc3QgbG9jYWxTb3VyY2UgPSAnaHR0cHM6Ly9zdGFnZS1hcGkudmVyZG9jcy5jb20vZW52ZWxvcGVzLzY0ZDdlYjVhLWE0ZmItNDA0NC1hY2NmLWEwYjliYTUzMGU0Mi9lbnZlbG9wZV9kb2N1bWVudHMvYmQ5MmZjZmEtNjNmZC00Yjk0LTg1NmUtZTdmNGM3YzBiMmUxP2ZpbGU9dHJ1ZSc7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdFbWJlZHMvVmlldycsXFxuICBjb21wb25lbnQ6ICd2ZXJkb2NzLXZpZXcnLFxcbiAgYXJnczoge1xcbiAgICBzb3VyY2U6IGxvY2FsU291cmNlLFxcbiAgfSxcXG4gIGFyZ1R5cGVzOiB7fSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgbGF5b3V0OiAnZnVsbHNjcmVlbicsXFxuICB9LFxcbn0gYXMgTWV0YTtcXG5cXG5leHBvcnQgY29uc3QgVmlldyA9ICh7c291cmNlfSkgPT4gaHRtbGA8dmVyZG9jcy12aWV3IC5zb3VyY2U9JHtzb3VyY2V9IC8+YDtcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiVmlld1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MjAsXCJsaW5lXCI6MTh9LFwiZW5kTG9jXCI6e1wiY29sXCI6NzQsXCJsaW5lXCI6MTh9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MjAsXCJsaW5lXCI6MTh9LFwiZW5kQm9keVwiOntcImNvbFwiOjc0LFwibGluZVwiOjE4fX19O1xuICAgIFxuaW1wb3J0IHtodG1sfSBmcm9tICdsaXQtaHRtbCc7XG5pbXBvcnQge01ldGF9IGZyb20gJ0BzdG9yeWJvb2svd2ViLWNvbXBvbmVudHMnO1xuXG5jb25zdCBsb2NhbFNvdXJjZSA9ICdodHRwczovL3N0YWdlLWFwaS52ZXJkb2NzLmNvbS9lbnZlbG9wZXMvNjRkN2ViNWEtYTRmYi00MDQ0LWFjY2YtYTBiOWJhNTMwZTQyL2VudmVsb3BlX2RvY3VtZW50cy9iZDkyZmNmYS02M2ZkLTRiOTQtODU2ZS1lN2Y0YzdjMGIyZTE/ZmlsZT10cnVlJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0VtYmVkcy9WaWV3JyxcbiAgY29tcG9uZW50OiAndmVyZG9jcy12aWV3JyxcbiAgYXJnczoge1xuICAgIHNvdXJjZTogbG9jYWxTb3VyY2UsXG4gIH0sXG4gIGFyZ1R5cGVzOiB7fSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGxheW91dDogJ2Z1bGxzY3JlZW4nLFxuICB9LFxufSBhcyBNZXRhO1xuXG5leHBvcnQgY29uc3QgVmlldyA9ICh7c291cmNlfSkgPT4gaHRtbGA8dmVyZG9jcy12aWV3IC5zb3VyY2U9JHtzb3VyY2V9IC8+YDtcblxuXG5cblZpZXcucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7c291cmNlfSkgPT4gaHRtbGA8dmVyZG9jcy12aWV3IC5zb3VyY2U9JHtzb3VyY2V9IC8+YFwiIH0sIC4uLlZpZXcucGFyYW1ldGVycyB9OyIsImltcG9ydCAnQHN0b3J5Ym9vay93ZWItY29tcG9uZW50cyc7Il0sInNvdXJjZVJvb3QiOiIifQ==
/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import { type IAuthStatus, type IColumn, type IContactSearchEvent, type IContactSelectEvent, type ICreateEnvelopeRecipient, type IDocumentPageInfo, type IEnvelope, type IFilterOption, type IMenuOption, type IRecipient, type IRole, type ISearchEvent, type ISelectedFile, type ITab, type ITemplate, type ITemplateField, type SDKError, type TContentType, type TEnvelopeStatus, type TVerdocsBuildStep, type VerdocsAuthCustomEvent, type VerdocsBuildCustomEvent, type VerdocsContactPickerCustomEvent, type VerdocsDropdownCustomEvent, type VerdocsEndpoint, type VerdocsEnvelopeDocumentPageCustomEvent, type VerdocsEnvelopeRecipientLinkCustomEvent, type VerdocsEnvelopeRecipientSummaryCustomEvent, type VerdocsEnvelopeSidebarCustomEvent, type VerdocsEnvelopesListCustomEvent, type VerdocsFieldAttachmentCustomEvent, type VerdocsFieldCheckboxCustomEvent, type VerdocsFieldDateCustomEvent, type VerdocsFieldDropdownCustomEvent, type VerdocsFieldInitialCustomEvent, type VerdocsFieldPaymentCustomEvent, type VerdocsFieldRadioCustomEvent, type VerdocsFieldSignatureCustomEvent, type VerdocsFieldTextareaCustomEvent, type VerdocsFieldTextboxCustomEvent, type VerdocsFieldTimestampCustomEvent, type VerdocsFileChooserCustomEvent, type VerdocsKbaDialogCustomEvent, type VerdocsPreviewCustomEvent, type VerdocsQuickFilterCustomEvent, type VerdocsSearchBoxCustomEvent, type VerdocsSendCustomEvent, type VerdocsSignCustomEvent, type VerdocsTableCustomEvent, type VerdocsTabsCustomEvent, type VerdocsTemplateBuildTabsCustomEvent, type VerdocsTemplateCreateCustomEvent, type VerdocsTemplateDocumentPageCustomEvent, type VerdocsTemplateFieldPropertiesCustomEvent, type VerdocsTemplateFieldsCustomEvent, type VerdocsTemplateRolePropertiesCustomEvent, type VerdocsTemplateRolesCustomEvent, type VerdocsTemplateStarCustomEvent, type VerdocsTemplatesListCustomEvent, type VerdocsUploadDialogCustomEvent, type VerdocsViewCustomEvent } from "@verdocs/web-sdk";
import { VerdocsAuth as VerdocsAuthElement, defineCustomElement as defineVerdocsAuth } from "@verdocs/web-sdk/components/verdocs-auth.js";
import { VerdocsBuild as VerdocsBuildElement, defineCustomElement as defineVerdocsBuild } from "@verdocs/web-sdk/components/verdocs-build.js";
import { VerdocsButtonPanel as VerdocsButtonPanelElement, defineCustomElement as defineVerdocsButtonPanel } from "@verdocs/web-sdk/components/verdocs-button-panel.js";
import { VerdocsButton as VerdocsButtonElement, defineCustomElement as defineVerdocsButton } from "@verdocs/web-sdk/components/verdocs-button.js";
import { VerdocsCheckbox as VerdocsCheckboxElement, defineCustomElement as defineVerdocsCheckbox } from "@verdocs/web-sdk/components/verdocs-checkbox.js";
import { VerdocsComponentError as VerdocsComponentErrorElement, defineCustomElement as defineVerdocsComponentError } from "@verdocs/web-sdk/components/verdocs-component-error.js";
import { VerdocsContactPicker as VerdocsContactPickerElement, defineCustomElement as defineVerdocsContactPicker } from "@verdocs/web-sdk/components/verdocs-contact-picker.js";
import { VerdocsDialog as VerdocsDialogElement, defineCustomElement as defineVerdocsDialog } from "@verdocs/web-sdk/components/verdocs-dialog.js";
import { VerdocsDropdown as VerdocsDropdownElement, defineCustomElement as defineVerdocsDropdown } from "@verdocs/web-sdk/components/verdocs-dropdown.js";
import { VerdocsEnvelopeDocumentPage as VerdocsEnvelopeDocumentPageElement, defineCustomElement as defineVerdocsEnvelopeDocumentPage } from "@verdocs/web-sdk/components/verdocs-envelope-document-page.js";
import { VerdocsEnvelopeRecipientLink as VerdocsEnvelopeRecipientLinkElement, defineCustomElement as defineVerdocsEnvelopeRecipientLink } from "@verdocs/web-sdk/components/verdocs-envelope-recipient-link.js";
import { VerdocsEnvelopeRecipientSummary as VerdocsEnvelopeRecipientSummaryElement, defineCustomElement as defineVerdocsEnvelopeRecipientSummary } from "@verdocs/web-sdk/components/verdocs-envelope-recipient-summary.js";
import { VerdocsEnvelopeSidebar as VerdocsEnvelopeSidebarElement, defineCustomElement as defineVerdocsEnvelopeSidebar } from "@verdocs/web-sdk/components/verdocs-envelope-sidebar.js";
import { VerdocsEnvelopesList as VerdocsEnvelopesListElement, defineCustomElement as defineVerdocsEnvelopesList } from "@verdocs/web-sdk/components/verdocs-envelopes-list.js";
import { VerdocsFieldAttachment as VerdocsFieldAttachmentElement, defineCustomElement as defineVerdocsFieldAttachment } from "@verdocs/web-sdk/components/verdocs-field-attachment.js";
import { VerdocsFieldCheckbox as VerdocsFieldCheckboxElement, defineCustomElement as defineVerdocsFieldCheckbox } from "@verdocs/web-sdk/components/verdocs-field-checkbox.js";
import { VerdocsFieldDate as VerdocsFieldDateElement, defineCustomElement as defineVerdocsFieldDate } from "@verdocs/web-sdk/components/verdocs-field-date.js";
import { VerdocsFieldDropdown as VerdocsFieldDropdownElement, defineCustomElement as defineVerdocsFieldDropdown } from "@verdocs/web-sdk/components/verdocs-field-dropdown.js";
import { VerdocsFieldInitial as VerdocsFieldInitialElement, defineCustomElement as defineVerdocsFieldInitial } from "@verdocs/web-sdk/components/verdocs-field-initial.js";
import { VerdocsFieldPayment as VerdocsFieldPaymentElement, defineCustomElement as defineVerdocsFieldPayment } from "@verdocs/web-sdk/components/verdocs-field-payment.js";
import { VerdocsFieldRadio as VerdocsFieldRadioElement, defineCustomElement as defineVerdocsFieldRadio } from "@verdocs/web-sdk/components/verdocs-field-radio.js";
import { VerdocsFieldSignature as VerdocsFieldSignatureElement, defineCustomElement as defineVerdocsFieldSignature } from "@verdocs/web-sdk/components/verdocs-field-signature.js";
import { VerdocsFieldTextarea as VerdocsFieldTextareaElement, defineCustomElement as defineVerdocsFieldTextarea } from "@verdocs/web-sdk/components/verdocs-field-textarea.js";
import { VerdocsFieldTextbox as VerdocsFieldTextboxElement, defineCustomElement as defineVerdocsFieldTextbox } from "@verdocs/web-sdk/components/verdocs-field-textbox.js";
import { VerdocsFieldTimestamp as VerdocsFieldTimestampElement, defineCustomElement as defineVerdocsFieldTimestamp } from "@verdocs/web-sdk/components/verdocs-field-timestamp.js";
import { VerdocsFileChooser as VerdocsFileChooserElement, defineCustomElement as defineVerdocsFileChooser } from "@verdocs/web-sdk/components/verdocs-file-chooser.js";
import { VerdocsHelpIcon as VerdocsHelpIconElement, defineCustomElement as defineVerdocsHelpIcon } from "@verdocs/web-sdk/components/verdocs-help-icon.js";
import { VerdocsInitialDialog as VerdocsInitialDialogElement, defineCustomElement as defineVerdocsInitialDialog } from "@verdocs/web-sdk/components/verdocs-initial-dialog.js";
import { VerdocsKbaDialog as VerdocsKbaDialogElement, defineCustomElement as defineVerdocsKbaDialog } from "@verdocs/web-sdk/components/verdocs-kba-dialog.js";
import { VerdocsLoader as VerdocsLoaderElement, defineCustomElement as defineVerdocsLoader } from "@verdocs/web-sdk/components/verdocs-loader.js";
import { VerdocsOkDialog as VerdocsOkDialogElement, defineCustomElement as defineVerdocsOkDialog } from "@verdocs/web-sdk/components/verdocs-ok-dialog.js";
import { VerdocsOrganizationCard as VerdocsOrganizationCardElement, defineCustomElement as defineVerdocsOrganizationCard } from "@verdocs/web-sdk/components/verdocs-organization-card.js";
import { VerdocsPagination as VerdocsPaginationElement, defineCustomElement as defineVerdocsPagination } from "@verdocs/web-sdk/components/verdocs-pagination.js";
import { VerdocsPortal as VerdocsPortalElement, defineCustomElement as defineVerdocsPortal } from "@verdocs/web-sdk/components/verdocs-portal.js";
import { VerdocsPreview as VerdocsPreviewElement, defineCustomElement as defineVerdocsPreview } from "@verdocs/web-sdk/components/verdocs-preview.js";
import { VerdocsProgressBar as VerdocsProgressBarElement, defineCustomElement as defineVerdocsProgressBar } from "@verdocs/web-sdk/components/verdocs-progress-bar.js";
import { VerdocsQuickFilter as VerdocsQuickFilterElement, defineCustomElement as defineVerdocsQuickFilter } from "@verdocs/web-sdk/components/verdocs-quick-filter.js";
import { VerdocsQuickFunctions as VerdocsQuickFunctionsElement, defineCustomElement as defineVerdocsQuickFunctions } from "@verdocs/web-sdk/components/verdocs-quick-functions.js";
import { VerdocsRadioButton as VerdocsRadioButtonElement, defineCustomElement as defineVerdocsRadioButton } from "@verdocs/web-sdk/components/verdocs-radio-button.js";
import { VerdocsSearchBox as VerdocsSearchBoxElement, defineCustomElement as defineVerdocsSearchBox } from "@verdocs/web-sdk/components/verdocs-search-box.js";
import { VerdocsSearchTabs as VerdocsSearchTabsElement, defineCustomElement as defineVerdocsSearchTabs } from "@verdocs/web-sdk/components/verdocs-search-tabs.js";
import { VerdocsSelectInput as VerdocsSelectInputElement, defineCustomElement as defineVerdocsSelectInput } from "@verdocs/web-sdk/components/verdocs-select-input.js";
import { VerdocsSend as VerdocsSendElement, defineCustomElement as defineVerdocsSend } from "@verdocs/web-sdk/components/verdocs-send.js";
import { VerdocsSign as VerdocsSignElement, defineCustomElement as defineVerdocsSign } from "@verdocs/web-sdk/components/verdocs-sign.js";
import { VerdocsSignatureDialog as VerdocsSignatureDialogElement, defineCustomElement as defineVerdocsSignatureDialog } from "@verdocs/web-sdk/components/verdocs-signature-dialog.js";
import { VerdocsSpinner as VerdocsSpinnerElement, defineCustomElement as defineVerdocsSpinner } from "@verdocs/web-sdk/components/verdocs-spinner.js";
import { VerdocsStatusIndicator as VerdocsStatusIndicatorElement, defineCustomElement as defineVerdocsStatusIndicator } from "@verdocs/web-sdk/components/verdocs-status-indicator.js";
import { VerdocsSwitch as VerdocsSwitchElement, defineCustomElement as defineVerdocsSwitch } from "@verdocs/web-sdk/components/verdocs-switch.js";
import { VerdocsTable as VerdocsTableElement, defineCustomElement as defineVerdocsTable } from "@verdocs/web-sdk/components/verdocs-table.js";
import { VerdocsTabs as VerdocsTabsElement, defineCustomElement as defineVerdocsTabs } from "@verdocs/web-sdk/components/verdocs-tabs.js";
import { VerdocsTemplateBuildTabs as VerdocsTemplateBuildTabsElement, defineCustomElement as defineVerdocsTemplateBuildTabs } from "@verdocs/web-sdk/components/verdocs-template-build-tabs.js";
import { VerdocsTemplateCard as VerdocsTemplateCardElement, defineCustomElement as defineVerdocsTemplateCard } from "@verdocs/web-sdk/components/verdocs-template-card.js";
import { VerdocsTemplateCreate as VerdocsTemplateCreateElement, defineCustomElement as defineVerdocsTemplateCreate } from "@verdocs/web-sdk/components/verdocs-template-create.js";
import { VerdocsTemplateDocumentPage as VerdocsTemplateDocumentPageElement, defineCustomElement as defineVerdocsTemplateDocumentPage } from "@verdocs/web-sdk/components/verdocs-template-document-page.js";
import { VerdocsTemplateFieldProperties as VerdocsTemplateFieldPropertiesElement, defineCustomElement as defineVerdocsTemplateFieldProperties } from "@verdocs/web-sdk/components/verdocs-template-field-properties.js";
import { VerdocsTemplateFields as VerdocsTemplateFieldsElement, defineCustomElement as defineVerdocsTemplateFields } from "@verdocs/web-sdk/components/verdocs-template-fields.js";
import { VerdocsTemplateRoleProperties as VerdocsTemplateRolePropertiesElement, defineCustomElement as defineVerdocsTemplateRoleProperties } from "@verdocs/web-sdk/components/verdocs-template-role-properties.js";
import { VerdocsTemplateRoles as VerdocsTemplateRolesElement, defineCustomElement as defineVerdocsTemplateRoles } from "@verdocs/web-sdk/components/verdocs-template-roles.js";
import { VerdocsTemplateStar as VerdocsTemplateStarElement, defineCustomElement as defineVerdocsTemplateStar } from "@verdocs/web-sdk/components/verdocs-template-star.js";
import { VerdocsTemplateTags as VerdocsTemplateTagsElement, defineCustomElement as defineVerdocsTemplateTags } from "@verdocs/web-sdk/components/verdocs-template-tags.js";
import { VerdocsTemplatesList as VerdocsTemplatesListElement, defineCustomElement as defineVerdocsTemplatesList } from "@verdocs/web-sdk/components/verdocs-templates-list.js";
import { VerdocsTextInput as VerdocsTextInputElement, defineCustomElement as defineVerdocsTextInput } from "@verdocs/web-sdk/components/verdocs-text-input.js";
import { VerdocsToggleButton as VerdocsToggleButtonElement, defineCustomElement as defineVerdocsToggleButton } from "@verdocs/web-sdk/components/verdocs-toggle-button.js";
import { VerdocsToggle as VerdocsToggleElement, defineCustomElement as defineVerdocsToggle } from "@verdocs/web-sdk/components/verdocs-toggle.js";
import { VerdocsToolbarIcon as VerdocsToolbarIconElement, defineCustomElement as defineVerdocsToolbarIcon } from "@verdocs/web-sdk/components/verdocs-toolbar-icon.js";
import { VerdocsUploadDialog as VerdocsUploadDialogElement, defineCustomElement as defineVerdocsUploadDialog } from "@verdocs/web-sdk/components/verdocs-upload-dialog.js";
import { VerdocsView as VerdocsViewElement, defineCustomElement as defineVerdocsView } from "@verdocs/web-sdk/components/verdocs-view.js";
import React from 'react';

type VerdocsAuthEvents = {
    onAuthenticated: EventName<VerdocsAuthCustomEvent<IAuthStatus>>,
    onSdkError: EventName<VerdocsAuthCustomEvent<SDKError>>
};

export const VerdocsAuth = /*@__PURE__*/ createComponent<VerdocsAuthElement, VerdocsAuthEvents>({
    tagName: 'verdocs-auth',
    elementClass: VerdocsAuthElement,
    react: React,
    events: {
        onAuthenticated: 'authenticated',
        onSdkError: 'sdkError'
    } as VerdocsAuthEvents,
    defineCustomElement: defineVerdocsAuth
});

type VerdocsBuildEvents = {
    onSdkError: EventName<VerdocsBuildCustomEvent<SDKError>>,
    onStepChanged: EventName<VerdocsBuildCustomEvent<TVerdocsBuildStep>>,
    onSend: EventName<VerdocsBuildCustomEvent<{ recipients: ICreateEnvelopeRecipient[]; name: string; template_id: string }>>,
    onTemplateUpdated: EventName<VerdocsBuildCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; event: string }>>,
    onTemplateCreated: EventName<VerdocsBuildCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; event: string }>>,
    onRolesUpdated: EventName<VerdocsBuildCustomEvent<{ endpoint: VerdocsEndpoint; templateId: string; event: 'added' | 'deleted' | 'updated'; roles: IRole[] }>>
};

export const VerdocsBuild = /*@__PURE__*/ createComponent<VerdocsBuildElement, VerdocsBuildEvents>({
    tagName: 'verdocs-build',
    elementClass: VerdocsBuildElement,
    react: React,
    events: {
        onSdkError: 'sdkError',
        onStepChanged: 'stepChanged',
        onSend: 'send',
        onTemplateUpdated: 'templateUpdated',
        onTemplateCreated: 'templateCreated',
        onRolesUpdated: 'rolesUpdated'
    } as VerdocsBuildEvents,
    defineCustomElement: defineVerdocsBuild
});

type VerdocsButtonEvents = NonNullable<unknown>;

export const VerdocsButton = /*@__PURE__*/ createComponent<VerdocsButtonElement, VerdocsButtonEvents>({
    tagName: 'verdocs-button',
    elementClass: VerdocsButtonElement,
    react: React,
    events: {} as VerdocsButtonEvents,
    defineCustomElement: defineVerdocsButton
});

type VerdocsButtonPanelEvents = NonNullable<unknown>;

export const VerdocsButtonPanel = /*@__PURE__*/ createComponent<VerdocsButtonPanelElement, VerdocsButtonPanelEvents>({
    tagName: 'verdocs-button-panel',
    elementClass: VerdocsButtonPanelElement,
    react: React,
    events: {} as VerdocsButtonPanelEvents,
    defineCustomElement: defineVerdocsButtonPanel
});

type VerdocsCheckboxEvents = NonNullable<unknown>;

export const VerdocsCheckbox = /*@__PURE__*/ createComponent<VerdocsCheckboxElement, VerdocsCheckboxEvents>({
    tagName: 'verdocs-checkbox',
    elementClass: VerdocsCheckboxElement,
    react: React,
    events: {} as VerdocsCheckboxEvents,
    defineCustomElement: defineVerdocsCheckbox
});

type VerdocsComponentErrorEvents = NonNullable<unknown>;

export const VerdocsComponentError = /*@__PURE__*/ createComponent<VerdocsComponentErrorElement, VerdocsComponentErrorEvents>({
    tagName: 'verdocs-component-error',
    elementClass: VerdocsComponentErrorElement,
    react: React,
    events: {} as VerdocsComponentErrorEvents,
    defineCustomElement: defineVerdocsComponentError
});

type VerdocsContactPickerEvents = {
    onSearchContacts: EventName<VerdocsContactPickerCustomEvent<IContactSearchEvent>>,
    onExit: EventName<CustomEvent<any>>,
    onNext: EventName<VerdocsContactPickerCustomEvent<IContactSelectEvent>>
};

export const VerdocsContactPicker = /*@__PURE__*/ createComponent<VerdocsContactPickerElement, VerdocsContactPickerEvents>({
    tagName: 'verdocs-contact-picker',
    elementClass: VerdocsContactPickerElement,
    react: React,
    events: {
        onSearchContacts: 'searchContacts',
        onExit: 'exit',
        onNext: 'next'
    } as VerdocsContactPickerEvents,
    defineCustomElement: defineVerdocsContactPicker
});

type VerdocsDialogEvents = { onExit: EventName<CustomEvent<any>> };

export const VerdocsDialog = /*@__PURE__*/ createComponent<VerdocsDialogElement, VerdocsDialogEvents>({
    tagName: 'verdocs-dialog',
    elementClass: VerdocsDialogElement,
    react: React,
    events: { onExit: 'exit' } as VerdocsDialogEvents,
    defineCustomElement: defineVerdocsDialog
});

type VerdocsDropdownEvents = { onOptionSelected: EventName<VerdocsDropdownCustomEvent<IMenuOption>> };

export const VerdocsDropdown = /*@__PURE__*/ createComponent<VerdocsDropdownElement, VerdocsDropdownEvents>({
    tagName: 'verdocs-dropdown',
    elementClass: VerdocsDropdownElement,
    react: React,
    events: { onOptionSelected: 'optionSelected' } as VerdocsDropdownEvents,
    defineCustomElement: defineVerdocsDropdown
});

type VerdocsEnvelopeDocumentPageEvents = { onPageRendered: EventName<VerdocsEnvelopeDocumentPageCustomEvent<IDocumentPageInfo>> };

export const VerdocsEnvelopeDocumentPage = /*@__PURE__*/ createComponent<VerdocsEnvelopeDocumentPageElement, VerdocsEnvelopeDocumentPageEvents>({
    tagName: 'verdocs-envelope-document-page',
    elementClass: VerdocsEnvelopeDocumentPageElement,
    react: React,
    events: { onPageRendered: 'pageRendered' } as VerdocsEnvelopeDocumentPageEvents,
    defineCustomElement: defineVerdocsEnvelopeDocumentPage
});

type VerdocsEnvelopeRecipientLinkEvents = {
    onNext: EventName<VerdocsEnvelopeRecipientLinkCustomEvent<{ envelope: IEnvelope }>>,
    onSdkError: EventName<VerdocsEnvelopeRecipientLinkCustomEvent<SDKError>>
};

export const VerdocsEnvelopeRecipientLink = /*@__PURE__*/ createComponent<VerdocsEnvelopeRecipientLinkElement, VerdocsEnvelopeRecipientLinkEvents>({
    tagName: 'verdocs-envelope-recipient-link',
    elementClass: VerdocsEnvelopeRecipientLinkElement,
    react: React,
    events: {
        onNext: 'next',
        onSdkError: 'sdkError'
    } as VerdocsEnvelopeRecipientLinkEvents,
    defineCustomElement: defineVerdocsEnvelopeRecipientLink
});

type VerdocsEnvelopeRecipientSummaryEvents = {
    onAnother: EventName<VerdocsEnvelopeRecipientSummaryCustomEvent<{ envelope: IEnvelope }>>,
    onView: EventName<VerdocsEnvelopeRecipientSummaryCustomEvent<{ envelope: IEnvelope }>>,
    onNext: EventName<VerdocsEnvelopeRecipientSummaryCustomEvent<{ envelope: IEnvelope }>>,
    onSdkError: EventName<VerdocsEnvelopeRecipientSummaryCustomEvent<SDKError>>
};

export const VerdocsEnvelopeRecipientSummary = /*@__PURE__*/ createComponent<VerdocsEnvelopeRecipientSummaryElement, VerdocsEnvelopeRecipientSummaryEvents>({
    tagName: 'verdocs-envelope-recipient-summary',
    elementClass: VerdocsEnvelopeRecipientSummaryElement,
    react: React,
    events: {
        onAnother: 'another',
        onView: 'view',
        onNext: 'next',
        onSdkError: 'sdkError'
    } as VerdocsEnvelopeRecipientSummaryEvents,
    defineCustomElement: defineVerdocsEnvelopeRecipientSummary
});

type VerdocsEnvelopeSidebarEvents = {
    onSdkError: EventName<VerdocsEnvelopeSidebarCustomEvent<SDKError>>,
    onEnvelopeUpdated: EventName<VerdocsEnvelopeSidebarCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope; event: string }>>,
    onToggle: EventName<CustomEvent<{ open: boolean }>>,
    onAnother: EventName<VerdocsEnvelopeSidebarCustomEvent<{ envelope: IEnvelope }>>
};

export const VerdocsEnvelopeSidebar = /*@__PURE__*/ createComponent<VerdocsEnvelopeSidebarElement, VerdocsEnvelopeSidebarEvents>({
    tagName: 'verdocs-envelope-sidebar',
    elementClass: VerdocsEnvelopeSidebarElement,
    react: React,
    events: {
        onSdkError: 'sdkError',
        onEnvelopeUpdated: 'envelopeUpdated',
        onToggle: 'toggle',
        onAnother: 'another'
    } as VerdocsEnvelopeSidebarEvents,
    defineCustomElement: defineVerdocsEnvelopeSidebar
});

type VerdocsEnvelopesListEvents = {
    onChangeView: EventName<CustomEvent<'all' | 'inbox' | 'sent' | 'completed' | 'action' | 'waiting'>>,
    onChangeStatus: EventName<VerdocsEnvelopesListCustomEvent<TEnvelopeStatus | 'all'>>,
    onChangeSort: EventName<CustomEvent<'name' | 'created_at' | 'updated_at' | 'canceled_at' | 'status'>>,
    onChangeMatch: EventName<CustomEvent<string>>,
    onSdkError: EventName<VerdocsEnvelopesListCustomEvent<SDKError>>,
    onViewEnvelope: EventName<VerdocsEnvelopesListCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope }>>,
    onFinishEnvelope: EventName<VerdocsEnvelopesListCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope }>>
};

export const VerdocsEnvelopesList = /*@__PURE__*/ createComponent<VerdocsEnvelopesListElement, VerdocsEnvelopesListEvents>({
    tagName: 'verdocs-envelopes-list',
    elementClass: VerdocsEnvelopesListElement,
    react: React,
    events: {
        onChangeView: 'changeView',
        onChangeStatus: 'changeStatus',
        onChangeSort: 'changeSort',
        onChangeMatch: 'changeMatch',
        onSdkError: 'sdkError',
        onViewEnvelope: 'viewEnvelope',
        onFinishEnvelope: 'finishEnvelope'
    } as VerdocsEnvelopesListEvents,
    defineCustomElement: defineVerdocsEnvelopesList
});

type VerdocsFieldAttachmentEvents = {
    onSettingsChanged: EventName<VerdocsFieldAttachmentCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onAttached: EventName<VerdocsFieldAttachmentCustomEvent<ISelectedFile>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldAttachment = /*@__PURE__*/ createComponent<VerdocsFieldAttachmentElement, VerdocsFieldAttachmentEvents>({
    tagName: 'verdocs-field-attachment',
    elementClass: VerdocsFieldAttachmentElement,
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onAttached: 'attached',
        onDeleted: 'deleted'
    } as VerdocsFieldAttachmentEvents,
    defineCustomElement: defineVerdocsFieldAttachment
});

type VerdocsFieldCheckboxEvents = {
    onSettingsChanged: EventName<VerdocsFieldCheckboxCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldCheckbox = /*@__PURE__*/ createComponent<VerdocsFieldCheckboxElement, VerdocsFieldCheckboxEvents>({
    tagName: 'verdocs-field-checkbox',
    elementClass: VerdocsFieldCheckboxElement,
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldCheckboxEvents,
    defineCustomElement: defineVerdocsFieldCheckbox
});

type VerdocsFieldDateEvents = {
    onSettingsPress: EventName<CustomEvent<any>>,
    onSettingsChanged: EventName<VerdocsFieldDateCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldDate = /*@__PURE__*/ createComponent<VerdocsFieldDateElement, VerdocsFieldDateEvents>({
    tagName: 'verdocs-field-date',
    elementClass: VerdocsFieldDateElement,
    react: React,
    events: {
        onSettingsPress: 'settingsPress',
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldDateEvents,
    defineCustomElement: defineVerdocsFieldDate
});

type VerdocsFieldDropdownEvents = {
    onFieldChange: EventName<CustomEvent<string>>,
    onSettingsChanged: EventName<VerdocsFieldDropdownCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldDropdown = /*@__PURE__*/ createComponent<VerdocsFieldDropdownElement, VerdocsFieldDropdownEvents>({
    tagName: 'verdocs-field-dropdown',
    elementClass: VerdocsFieldDropdownElement,
    react: React,
    events: {
        onFieldChange: 'fieldChange',
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldDropdownEvents,
    defineCustomElement: defineVerdocsFieldDropdown
});

type VerdocsFieldInitialEvents = {
    onAdopt: EventName<CustomEvent<string>>,
    onExit: EventName<CustomEvent<any>>,
    onFieldChange: EventName<CustomEvent<string>>,
    onSettingsChanged: EventName<VerdocsFieldInitialCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onSettingsPress: EventName<CustomEvent<any>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldInitial = /*@__PURE__*/ createComponent<VerdocsFieldInitialElement, VerdocsFieldInitialEvents>({
    tagName: 'verdocs-field-initial',
    elementClass: VerdocsFieldInitialElement,
    react: React,
    events: {
        onAdopt: 'adopt',
        onExit: 'exit',
        onFieldChange: 'fieldChange',
        onSettingsChanged: 'settingsChanged',
        onSettingsPress: 'settingsPress',
        onDeleted: 'deleted'
    } as VerdocsFieldInitialEvents,
    defineCustomElement: defineVerdocsFieldInitial
});

type VerdocsFieldPaymentEvents = {
    onSettingsChanged: EventName<VerdocsFieldPaymentCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldPayment = /*@__PURE__*/ createComponent<VerdocsFieldPaymentElement, VerdocsFieldPaymentEvents>({
    tagName: 'verdocs-field-payment',
    elementClass: VerdocsFieldPaymentElement,
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldPaymentEvents,
    defineCustomElement: defineVerdocsFieldPayment
});

type VerdocsFieldRadioEvents = {
    onSettingsChanged: EventName<VerdocsFieldRadioCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldRadio = /*@__PURE__*/ createComponent<VerdocsFieldRadioElement, VerdocsFieldRadioEvents>({
    tagName: 'verdocs-field-radio',
    elementClass: VerdocsFieldRadioElement,
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldRadioEvents,
    defineCustomElement: defineVerdocsFieldRadio
});

type VerdocsFieldSignatureEvents = {
    onFieldChange: EventName<CustomEvent<string>>,
    onSettingsPress: EventName<CustomEvent<any>>,
    onSettingsChanged: EventName<VerdocsFieldSignatureCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldSignature = /*@__PURE__*/ createComponent<VerdocsFieldSignatureElement, VerdocsFieldSignatureEvents>({
    tagName: 'verdocs-field-signature',
    elementClass: VerdocsFieldSignatureElement,
    react: React,
    events: {
        onFieldChange: 'fieldChange',
        onSettingsPress: 'settingsPress',
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldSignatureEvents,
    defineCustomElement: defineVerdocsFieldSignature
});

type VerdocsFieldTextareaEvents = {
    onSettingsChanged: EventName<VerdocsFieldTextareaCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldTextarea = /*@__PURE__*/ createComponent<VerdocsFieldTextareaElement, VerdocsFieldTextareaEvents>({
    tagName: 'verdocs-field-textarea',
    elementClass: VerdocsFieldTextareaElement,
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldTextareaEvents,
    defineCustomElement: defineVerdocsFieldTextarea
});

type VerdocsFieldTextboxEvents = {
    onSettingsChanged: EventName<VerdocsFieldTextboxCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldTextbox = /*@__PURE__*/ createComponent<VerdocsFieldTextboxElement, VerdocsFieldTextboxEvents>({
    tagName: 'verdocs-field-textbox',
    elementClass: VerdocsFieldTextboxElement,
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldTextboxEvents,
    defineCustomElement: defineVerdocsFieldTextbox
});

type VerdocsFieldTimestampEvents = {
    onSettingsChanged: EventName<VerdocsFieldTimestampCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldTimestamp = /*@__PURE__*/ createComponent<VerdocsFieldTimestampElement, VerdocsFieldTimestampEvents>({
    tagName: 'verdocs-field-timestamp',
    elementClass: VerdocsFieldTimestampElement,
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldTimestampEvents,
    defineCustomElement: defineVerdocsFieldTimestamp
});

type VerdocsFileChooserEvents = { onFileSelected: EventName<VerdocsFileChooserCustomEvent<{ file: File | null }>> };

export const VerdocsFileChooser = /*@__PURE__*/ createComponent<VerdocsFileChooserElement, VerdocsFileChooserEvents>({
    tagName: 'verdocs-file-chooser',
    elementClass: VerdocsFileChooserElement,
    react: React,
    events: { onFileSelected: 'fileSelected' } as VerdocsFileChooserEvents,
    defineCustomElement: defineVerdocsFileChooser
});

type VerdocsHelpIconEvents = NonNullable<unknown>;

export const VerdocsHelpIcon = /*@__PURE__*/ createComponent<VerdocsHelpIconElement, VerdocsHelpIconEvents>({
    tagName: 'verdocs-help-icon',
    elementClass: VerdocsHelpIconElement,
    react: React,
    events: {} as VerdocsHelpIconEvents,
    defineCustomElement: defineVerdocsHelpIcon
});

type VerdocsInitialDialogEvents = {
    onNext: EventName<CustomEvent<string>>,
    onExit: EventName<CustomEvent<any>>
};

export const VerdocsInitialDialog = /*@__PURE__*/ createComponent<VerdocsInitialDialogElement, VerdocsInitialDialogEvents>({
    tagName: 'verdocs-initial-dialog',
    elementClass: VerdocsInitialDialogElement,
    react: React,
    events: {
        onNext: 'next',
        onExit: 'exit'
    } as VerdocsInitialDialogEvents,
    defineCustomElement: defineVerdocsInitialDialog
});

type VerdocsKbaDialogEvents = {
    onExit: EventName<CustomEvent<any>>,
    onPinEntered: EventName<VerdocsKbaDialogCustomEvent<string | IRecipient>>,
    onNext: EventName<VerdocsKbaDialogCustomEvent<string | IRecipient | string[]>>
};

export const VerdocsKbaDialog = /*@__PURE__*/ createComponent<VerdocsKbaDialogElement, VerdocsKbaDialogEvents>({
    tagName: 'verdocs-kba-dialog',
    elementClass: VerdocsKbaDialogElement,
    react: React,
    events: {
        onExit: 'exit',
        onPinEntered: 'pinEntered',
        onNext: 'next'
    } as VerdocsKbaDialogEvents,
    defineCustomElement: defineVerdocsKbaDialog
});

type VerdocsLoaderEvents = NonNullable<unknown>;

export const VerdocsLoader = /*@__PURE__*/ createComponent<VerdocsLoaderElement, VerdocsLoaderEvents>({
    tagName: 'verdocs-loader',
    elementClass: VerdocsLoaderElement,
    react: React,
    events: {} as VerdocsLoaderEvents,
    defineCustomElement: defineVerdocsLoader
});

type VerdocsOkDialogEvents = {
    onNext: EventName<CustomEvent<any>>,
    onExit: EventName<CustomEvent<any>>
};

export const VerdocsOkDialog = /*@__PURE__*/ createComponent<VerdocsOkDialogElement, VerdocsOkDialogEvents>({
    tagName: 'verdocs-ok-dialog',
    elementClass: VerdocsOkDialogElement,
    react: React,
    events: {
        onNext: 'next',
        onExit: 'exit'
    } as VerdocsOkDialogEvents,
    defineCustomElement: defineVerdocsOkDialog
});

type VerdocsOrganizationCardEvents = NonNullable<unknown>;

export const VerdocsOrganizationCard = /*@__PURE__*/ createComponent<VerdocsOrganizationCardElement, VerdocsOrganizationCardEvents>({
    tagName: 'verdocs-organization-card',
    elementClass: VerdocsOrganizationCardElement,
    react: React,
    events: {} as VerdocsOrganizationCardEvents,
    defineCustomElement: defineVerdocsOrganizationCard
});

type VerdocsPaginationEvents = { onSelectPage: EventName<CustomEvent<{ selectedPage: number }>> };

export const VerdocsPagination = /*@__PURE__*/ createComponent<VerdocsPaginationElement, VerdocsPaginationEvents>({
    tagName: 'verdocs-pagination',
    elementClass: VerdocsPaginationElement,
    react: React,
    events: { onSelectPage: 'selectPage' } as VerdocsPaginationEvents,
    defineCustomElement: defineVerdocsPagination
});

type VerdocsPortalEvents = { onClickAway: EventName<CustomEvent<void>> };

export const VerdocsPortal = /*@__PURE__*/ createComponent<VerdocsPortalElement, VerdocsPortalEvents>({
    tagName: 'verdocs-portal',
    elementClass: VerdocsPortalElement,
    react: React,
    events: { onClickAway: 'clickAway' } as VerdocsPortalEvents,
    defineCustomElement: defineVerdocsPortal
});

type VerdocsPreviewEvents = { onSdkError: EventName<VerdocsPreviewCustomEvent<SDKError>> };

export const VerdocsPreview = /*@__PURE__*/ createComponent<VerdocsPreviewElement, VerdocsPreviewEvents>({
    tagName: 'verdocs-preview',
    elementClass: VerdocsPreviewElement,
    react: React,
    events: { onSdkError: 'sdkError' } as VerdocsPreviewEvents,
    defineCustomElement: defineVerdocsPreview
});

type VerdocsProgressBarEvents = NonNullable<unknown>;

export const VerdocsProgressBar = /*@__PURE__*/ createComponent<VerdocsProgressBarElement, VerdocsProgressBarEvents>({
    tagName: 'verdocs-progress-bar',
    elementClass: VerdocsProgressBarElement,
    react: React,
    events: {} as VerdocsProgressBarEvents,
    defineCustomElement: defineVerdocsProgressBar
});

type VerdocsQuickFilterEvents = { onOptionSelected: EventName<VerdocsQuickFilterCustomEvent<IFilterOption>> };

export const VerdocsQuickFilter = /*@__PURE__*/ createComponent<VerdocsQuickFilterElement, VerdocsQuickFilterEvents>({
    tagName: 'verdocs-quick-filter',
    elementClass: VerdocsQuickFilterElement,
    react: React,
    events: { onOptionSelected: 'optionSelected' } as VerdocsQuickFilterEvents,
    defineCustomElement: defineVerdocsQuickFilter
});

type VerdocsQuickFunctionsEvents = {
    onCreateTemplate: EventName<CustomEvent<any>>,
    onCreateDocument: EventName<CustomEvent<any>>
};

export const VerdocsQuickFunctions = /*@__PURE__*/ createComponent<VerdocsQuickFunctionsElement, VerdocsQuickFunctionsEvents>({
    tagName: 'verdocs-quick-functions',
    elementClass: VerdocsQuickFunctionsElement,
    react: React,
    events: {
        onCreateTemplate: 'createTemplate',
        onCreateDocument: 'createDocument'
    } as VerdocsQuickFunctionsEvents,
    defineCustomElement: defineVerdocsQuickFunctions
});

type VerdocsRadioButtonEvents = NonNullable<unknown>;

export const VerdocsRadioButton = /*@__PURE__*/ createComponent<VerdocsRadioButtonElement, VerdocsRadioButtonEvents>({
    tagName: 'verdocs-radio-button',
    elementClass: VerdocsRadioButtonElement,
    react: React,
    events: {} as VerdocsRadioButtonEvents,
    defineCustomElement: defineVerdocsRadioButton
});

type VerdocsSearchBoxEvents = {
    onSearchClicked: EventName<VerdocsSearchBoxCustomEvent<ISearchEvent>>,
    onTypeChanged: EventName<VerdocsSearchBoxCustomEvent<TContentType>>,
    onQueryChanged: EventName<CustomEvent<string>>
};

export const VerdocsSearchBox = /*@__PURE__*/ createComponent<VerdocsSearchBoxElement, VerdocsSearchBoxEvents>({
    tagName: 'verdocs-search-box',
    elementClass: VerdocsSearchBoxElement,
    react: React,
    events: {
        onSearchClicked: 'searchClicked',
        onTypeChanged: 'typeChanged',
        onQueryChanged: 'queryChanged'
    } as VerdocsSearchBoxEvents,
    defineCustomElement: defineVerdocsSearchBox
});

type VerdocsSearchTabsEvents = NonNullable<unknown>;

export const VerdocsSearchTabs = /*@__PURE__*/ createComponent<VerdocsSearchTabsElement, VerdocsSearchTabsEvents>({
    tagName: 'verdocs-search-tabs',
    elementClass: VerdocsSearchTabsElement,
    react: React,
    events: {} as VerdocsSearchTabsEvents,
    defineCustomElement: defineVerdocsSearchTabs
});

type VerdocsSelectInputEvents = NonNullable<unknown>;

export const VerdocsSelectInput = /*@__PURE__*/ createComponent<VerdocsSelectInputElement, VerdocsSelectInputEvents>({
    tagName: 'verdocs-select-input',
    elementClass: VerdocsSelectInputElement,
    react: React,
    events: {} as VerdocsSelectInputEvents,
    defineCustomElement: defineVerdocsSelectInput
});

type VerdocsSendEvents = {
    onSendingEnvelope: EventName<CustomEvent<{ sending: boolean }>>,
    onSend: EventName<VerdocsSendCustomEvent<{ recipients: ICreateEnvelopeRecipient[]; name: string; template_id: string; envelope_id: string; envelope: IEnvelope }>>,
    onExit: EventName<CustomEvent<any>>,
    onSdkError: EventName<VerdocsSendCustomEvent<SDKError>>,
    onSearchContacts: EventName<VerdocsSendCustomEvent<IContactSearchEvent>>
};

export const VerdocsSend = /*@__PURE__*/ createComponent<VerdocsSendElement, VerdocsSendEvents>({
    tagName: 'verdocs-send',
    elementClass: VerdocsSendElement,
    react: React,
    events: {
        onSendingEnvelope: 'sendingEnvelope',
        onSend: 'send',
        onExit: 'exit',
        onSdkError: 'sdkError',
        onSearchContacts: 'searchContacts'
    } as VerdocsSendEvents,
    defineCustomElement: defineVerdocsSend
});

type VerdocsSignEvents = {
    onSdkError: EventName<VerdocsSignCustomEvent<SDKError>>,
    onEnvelopeLoaded: EventName<VerdocsSignCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope }>>,
    onEnvelopeUpdated: EventName<VerdocsSignCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope; event: string }>>
};

export const VerdocsSign = /*@__PURE__*/ createComponent<VerdocsSignElement, VerdocsSignEvents>({
    tagName: 'verdocs-sign',
    elementClass: VerdocsSignElement,
    react: React,
    events: {
        onSdkError: 'sdkError',
        onEnvelopeLoaded: 'envelopeLoaded',
        onEnvelopeUpdated: 'envelopeUpdated'
    } as VerdocsSignEvents,
    defineCustomElement: defineVerdocsSign
});

type VerdocsSignatureDialogEvents = {
    onNext: EventName<CustomEvent<string>>,
    onExit: EventName<CustomEvent<any>>
};

export const VerdocsSignatureDialog = /*@__PURE__*/ createComponent<VerdocsSignatureDialogElement, VerdocsSignatureDialogEvents>({
    tagName: 'verdocs-signature-dialog',
    elementClass: VerdocsSignatureDialogElement,
    react: React,
    events: {
        onNext: 'next',
        onExit: 'exit'
    } as VerdocsSignatureDialogEvents,
    defineCustomElement: defineVerdocsSignatureDialog
});

type VerdocsSpinnerEvents = NonNullable<unknown>;

export const VerdocsSpinner = /*@__PURE__*/ createComponent<VerdocsSpinnerElement, VerdocsSpinnerEvents>({
    tagName: 'verdocs-spinner',
    elementClass: VerdocsSpinnerElement,
    react: React,
    events: {} as VerdocsSpinnerEvents,
    defineCustomElement: defineVerdocsSpinner
});

type VerdocsStatusIndicatorEvents = NonNullable<unknown>;

export const VerdocsStatusIndicator = /*@__PURE__*/ createComponent<VerdocsStatusIndicatorElement, VerdocsStatusIndicatorEvents>({
    tagName: 'verdocs-status-indicator',
    elementClass: VerdocsStatusIndicatorElement,
    react: React,
    events: {} as VerdocsStatusIndicatorEvents,
    defineCustomElement: defineVerdocsStatusIndicator
});

type VerdocsSwitchEvents = { onCheckedChange: EventName<CustomEvent<boolean>> };

export const VerdocsSwitch = /*@__PURE__*/ createComponent<VerdocsSwitchElement, VerdocsSwitchEvents>({
    tagName: 'verdocs-switch',
    elementClass: VerdocsSwitchElement,
    react: React,
    events: { onCheckedChange: 'checkedChange' } as VerdocsSwitchEvents,
    defineCustomElement: defineVerdocsSwitch
});

type VerdocsTableEvents = {
    onColHeaderClick: EventName<VerdocsTableCustomEvent<{ col: IColumn }>>,
    onRowClick: EventName<CustomEvent<{ row: any }>>
};

export const VerdocsTable = /*@__PURE__*/ createComponent<VerdocsTableElement, VerdocsTableEvents>({
    tagName: 'verdocs-table',
    elementClass: VerdocsTableElement,
    react: React,
    events: {
        onColHeaderClick: 'colHeaderClick',
        onRowClick: 'rowClick'
    } as VerdocsTableEvents,
    defineCustomElement: defineVerdocsTable
});

type VerdocsTabsEvents = { onSelectTab: EventName<VerdocsTabsCustomEvent<{ tab: ITab; index: number }>> };

export const VerdocsTabs = /*@__PURE__*/ createComponent<VerdocsTabsElement, VerdocsTabsEvents>({
    tagName: 'verdocs-tabs',
    elementClass: VerdocsTabsElement,
    react: React,
    events: { onSelectTab: 'selectTab' } as VerdocsTabsEvents,
    defineCustomElement: defineVerdocsTabs
});

type VerdocsTemplateBuildTabsEvents = {
    onSdkError: EventName<VerdocsTemplateBuildTabsCustomEvent<SDKError>>,
    onStepChanged: EventName<VerdocsTemplateBuildTabsCustomEvent<TVerdocsBuildStep>>
};

export const VerdocsTemplateBuildTabs = /*@__PURE__*/ createComponent<VerdocsTemplateBuildTabsElement, VerdocsTemplateBuildTabsEvents>({
    tagName: 'verdocs-template-build-tabs',
    elementClass: VerdocsTemplateBuildTabsElement,
    react: React,
    events: {
        onSdkError: 'sdkError',
        onStepChanged: 'stepChanged'
    } as VerdocsTemplateBuildTabsEvents,
    defineCustomElement: defineVerdocsTemplateBuildTabs
});

type VerdocsTemplateCardEvents = NonNullable<unknown>;

export const VerdocsTemplateCard = /*@__PURE__*/ createComponent<VerdocsTemplateCardElement, VerdocsTemplateCardEvents>({
    tagName: 'verdocs-template-card',
    elementClass: VerdocsTemplateCardElement,
    react: React,
    events: {} as VerdocsTemplateCardEvents,
    defineCustomElement: defineVerdocsTemplateCard
});

type VerdocsTemplateCreateEvents = {
    onExit: EventName<CustomEvent<any>>,
    onNext: EventName<VerdocsTemplateCreateCustomEvent<ITemplate>>,
    onSdkError: EventName<VerdocsTemplateCreateCustomEvent<SDKError>>,
    onTemplateCreated: EventName<VerdocsTemplateCreateCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; templateId: string }>>
};

export const VerdocsTemplateCreate = /*@__PURE__*/ createComponent<VerdocsTemplateCreateElement, VerdocsTemplateCreateEvents>({
    tagName: 'verdocs-template-create',
    elementClass: VerdocsTemplateCreateElement,
    react: React,
    events: {
        onExit: 'exit',
        onNext: 'next',
        onSdkError: 'sdkError',
        onTemplateCreated: 'templateCreated'
    } as VerdocsTemplateCreateEvents,
    defineCustomElement: defineVerdocsTemplateCreate
});

type VerdocsTemplateDocumentPageEvents = { onPageRendered: EventName<VerdocsTemplateDocumentPageCustomEvent<IDocumentPageInfo>> };

export const VerdocsTemplateDocumentPage = /*@__PURE__*/ createComponent<VerdocsTemplateDocumentPageElement, VerdocsTemplateDocumentPageEvents>({
    tagName: 'verdocs-template-document-page',
    elementClass: VerdocsTemplateDocumentPageElement,
    react: React,
    events: { onPageRendered: 'pageRendered' } as VerdocsTemplateDocumentPageEvents,
    defineCustomElement: defineVerdocsTemplateDocumentPage
});

type VerdocsTemplateFieldPropertiesEvents = {
    onClose: EventName<CustomEvent<any>>,
    onDelete: EventName<CustomEvent<{ templateId: string; roleName: string }>>,
    onSettingsChanged: EventName<VerdocsTemplateFieldPropertiesCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onSdkError: EventName<VerdocsTemplateFieldPropertiesCustomEvent<SDKError>>
};

export const VerdocsTemplateFieldProperties = /*@__PURE__*/ createComponent<VerdocsTemplateFieldPropertiesElement, VerdocsTemplateFieldPropertiesEvents>({
    tagName: 'verdocs-template-field-properties',
    elementClass: VerdocsTemplateFieldPropertiesElement,
    react: React,
    events: {
        onClose: 'close',
        onDelete: 'delete',
        onSettingsChanged: 'settingsChanged',
        onSdkError: 'sdkError'
    } as VerdocsTemplateFieldPropertiesEvents,
    defineCustomElement: defineVerdocsTemplateFieldProperties
});

type VerdocsTemplateFieldsEvents = {
    onSdkError: EventName<VerdocsTemplateFieldsCustomEvent<SDKError>>,
    onTemplateUpdated: EventName<VerdocsTemplateFieldsCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; event: string }>>,
    onFieldsUpdated: EventName<VerdocsTemplateFieldsCustomEvent<{ endpoint: VerdocsEndpoint; templateId: string; event: 'added' | 'deleted' | 'updated'; fields: ITemplateField[] }>>
};

export const VerdocsTemplateFields = /*@__PURE__*/ createComponent<VerdocsTemplateFieldsElement, VerdocsTemplateFieldsEvents>({
    tagName: 'verdocs-template-fields',
    elementClass: VerdocsTemplateFieldsElement,
    react: React,
    events: {
        onSdkError: 'sdkError',
        onTemplateUpdated: 'templateUpdated',
        onFieldsUpdated: 'fieldsUpdated'
    } as VerdocsTemplateFieldsEvents,
    defineCustomElement: defineVerdocsTemplateFields
});

type VerdocsTemplateRolePropertiesEvents = {
    onClose: EventName<CustomEvent<any>>,
    onDelete: EventName<CustomEvent<{ templateId: string; roleName: string }>>,
    onSdkError: EventName<VerdocsTemplateRolePropertiesCustomEvent<SDKError>>
};

export const VerdocsTemplateRoleProperties = /*@__PURE__*/ createComponent<VerdocsTemplateRolePropertiesElement, VerdocsTemplateRolePropertiesEvents>({
    tagName: 'verdocs-template-role-properties',
    elementClass: VerdocsTemplateRolePropertiesElement,
    react: React,
    events: {
        onClose: 'close',
        onDelete: 'delete',
        onSdkError: 'sdkError'
    } as VerdocsTemplateRolePropertiesEvents,
    defineCustomElement: defineVerdocsTemplateRoleProperties
});

type VerdocsTemplateRolesEvents = {
    onNext: EventName<CustomEvent<any>>,
    onExit: EventName<CustomEvent<any>>,
    onSdkError: EventName<VerdocsTemplateRolesCustomEvent<SDKError>>,
    onRolesUpdated: EventName<VerdocsTemplateRolesCustomEvent<{ endpoint: VerdocsEndpoint; templateId: string; event: 'added' | 'deleted' | 'updated'; roles: IRole[] }>>
};

export const VerdocsTemplateRoles = /*@__PURE__*/ createComponent<VerdocsTemplateRolesElement, VerdocsTemplateRolesEvents>({
    tagName: 'verdocs-template-roles',
    elementClass: VerdocsTemplateRolesElement,
    react: React,
    events: {
        onNext: 'next',
        onExit: 'exit',
        onSdkError: 'sdkError',
        onRolesUpdated: 'rolesUpdated'
    } as VerdocsTemplateRolesEvents,
    defineCustomElement: defineVerdocsTemplateRoles
});

type VerdocsTemplateStarEvents = {
    onStarChange: EventName<CustomEvent<{ templateId: string; starred: boolean; count: number }>>,
    onSdkError: EventName<VerdocsTemplateStarCustomEvent<SDKError>>
};

export const VerdocsTemplateStar = /*@__PURE__*/ createComponent<VerdocsTemplateStarElement, VerdocsTemplateStarEvents>({
    tagName: 'verdocs-template-star',
    elementClass: VerdocsTemplateStarElement,
    react: React,
    events: {
        onStarChange: 'starChange',
        onSdkError: 'sdkError'
    } as VerdocsTemplateStarEvents,
    defineCustomElement: defineVerdocsTemplateStar
});

type VerdocsTemplateTagsEvents = NonNullable<unknown>;

export const VerdocsTemplateTags = /*@__PURE__*/ createComponent<VerdocsTemplateTagsElement, VerdocsTemplateTagsEvents>({
    tagName: 'verdocs-template-tags',
    elementClass: VerdocsTemplateTagsElement,
    react: React,
    events: {} as VerdocsTemplateTagsEvents,
    defineCustomElement: defineVerdocsTemplateTags
});

type VerdocsTemplatesListEvents = {
    onSdkError: EventName<VerdocsTemplatesListCustomEvent<SDKError>>,
    onViewTemplate: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onSignNow: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onSubmittedData: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onEditTemplate: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onTemplateDeleted: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onChangeSort: EventName<CustomEvent<string>>,
    onChangeVisibility: EventName<CustomEvent<'private_shared' | 'private' | 'shared' | 'public'>>,
    onChangeStarred: EventName<CustomEvent<'all' | 'starred' | 'unstarred'>>,
    onChangeName: EventName<CustomEvent<string>>
};

export const VerdocsTemplatesList = /*@__PURE__*/ createComponent<VerdocsTemplatesListElement, VerdocsTemplatesListEvents>({
    tagName: 'verdocs-templates-list',
    elementClass: VerdocsTemplatesListElement,
    react: React,
    events: {
        onSdkError: 'sdkError',
        onViewTemplate: 'viewTemplate',
        onSignNow: 'signNow',
        onSubmittedData: 'submittedData',
        onEditTemplate: 'editTemplate',
        onTemplateDeleted: 'templateDeleted',
        onChangeSort: 'changeSort',
        onChangeVisibility: 'changeVisibility',
        onChangeStarred: 'changeStarred',
        onChangeName: 'changeName'
    } as VerdocsTemplatesListEvents,
    defineCustomElement: defineVerdocsTemplatesList
});

type VerdocsTextInputEvents = NonNullable<unknown>;

export const VerdocsTextInput = /*@__PURE__*/ createComponent<VerdocsTextInputElement, VerdocsTextInputEvents>({
    tagName: 'verdocs-text-input',
    elementClass: VerdocsTextInputElement,
    react: React,
    events: {} as VerdocsTextInputEvents,
    defineCustomElement: defineVerdocsTextInput
});

type VerdocsToggleEvents = NonNullable<unknown>;

export const VerdocsToggle = /*@__PURE__*/ createComponent<VerdocsToggleElement, VerdocsToggleEvents>({
    tagName: 'verdocs-toggle',
    elementClass: VerdocsToggleElement,
    react: React,
    events: {} as VerdocsToggleEvents,
    defineCustomElement: defineVerdocsToggle
});

type VerdocsToggleButtonEvents = { onToggle: EventName<CustomEvent<{ active: boolean }>> };

export const VerdocsToggleButton = /*@__PURE__*/ createComponent<VerdocsToggleButtonElement, VerdocsToggleButtonEvents>({
    tagName: 'verdocs-toggle-button',
    elementClass: VerdocsToggleButtonElement,
    react: React,
    events: { onToggle: 'toggle' } as VerdocsToggleButtonEvents,
    defineCustomElement: defineVerdocsToggleButton
});

type VerdocsToolbarIconEvents = NonNullable<unknown>;

export const VerdocsToolbarIcon = /*@__PURE__*/ createComponent<VerdocsToolbarIconElement, VerdocsToolbarIconEvents>({
    tagName: 'verdocs-toolbar-icon',
    elementClass: VerdocsToolbarIconElement,
    react: React,
    events: {} as VerdocsToolbarIconEvents,
    defineCustomElement: defineVerdocsToolbarIcon
});

type VerdocsUploadDialogEvents = {
    onExit: EventName<CustomEvent<any>>,
    onNext: EventName<VerdocsUploadDialogCustomEvent<File[]>>,
    onRemove: EventName<CustomEvent<any>>
};

export const VerdocsUploadDialog = /*@__PURE__*/ createComponent<VerdocsUploadDialogElement, VerdocsUploadDialogEvents>({
    tagName: 'verdocs-upload-dialog',
    elementClass: VerdocsUploadDialogElement,
    react: React,
    events: {
        onExit: 'exit',
        onNext: 'next',
        onRemove: 'remove'
    } as VerdocsUploadDialogEvents,
    defineCustomElement: defineVerdocsUploadDialog
});

type VerdocsViewEvents = {
    onSdkError: EventName<VerdocsViewCustomEvent<SDKError>>,
    onEnvelopeUpdated: EventName<VerdocsViewCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope; event: string }>>,
    onAnother: EventName<CustomEvent<any>>,
    onView: EventName<CustomEvent<any>>,
    onNext: EventName<CustomEvent<any>>
};

export const VerdocsView = /*@__PURE__*/ createComponent<VerdocsViewElement, VerdocsViewEvents>({
    tagName: 'verdocs-view',
    elementClass: VerdocsViewElement,
    react: React,
    events: {
        onSdkError: 'sdkError',
        onEnvelopeUpdated: 'envelopeUpdated',
        onAnother: 'another',
        onView: 'view',
        onNext: 'next'
    } as VerdocsViewEvents,
    defineCustomElement: defineVerdocsView
});

'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import { type IAuthStatus, type IColumn, type IContactSearchEvent, type IContactSelectEvent, type ICreateEnvelopeRecipient, type IDocumentPageInfo, type IEnvelope, type IFilterOption, type IMenuOption, type IRecipient, type IRole, type ISearchEvent, type ISelectedFile, type ITab, type ITemplate, type ITemplateField, type SDKError, type TContentType, type TEnvelopeStatus, type TVerdocsBuildStep, type VerdocsAuthCustomEvent, type VerdocsBuildCustomEvent, type VerdocsContactPickerCustomEvent, type VerdocsDropdownCustomEvent, type VerdocsEndpoint, type VerdocsEnvelopeDocumentPageCustomEvent, type VerdocsEnvelopeRecipientLinkCustomEvent, type VerdocsEnvelopeRecipientSummaryCustomEvent, type VerdocsEnvelopeSidebarCustomEvent, type VerdocsEnvelopesListCustomEvent, type VerdocsFieldAttachmentCustomEvent, type VerdocsFieldCheckboxCustomEvent, type VerdocsFieldDateCustomEvent, type VerdocsFieldDropdownCustomEvent, type VerdocsFieldInitialCustomEvent, type VerdocsFieldPaymentCustomEvent, type VerdocsFieldRadioCustomEvent, type VerdocsFieldSignatureCustomEvent, type VerdocsFieldTextareaCustomEvent, type VerdocsFieldTextboxCustomEvent, type VerdocsFieldTimestampCustomEvent, type VerdocsFileChooserCustomEvent, type VerdocsKbaDialogCustomEvent, type VerdocsPreviewCustomEvent, type VerdocsQuickFilterCustomEvent, type VerdocsSearchBoxCustomEvent, type VerdocsSendCustomEvent, type VerdocsSignCustomEvent, type VerdocsTableCustomEvent, type VerdocsTabsCustomEvent, type VerdocsTemplateAttachmentsCustomEvent, type VerdocsTemplateBuildTabsCustomEvent, type VerdocsTemplateCreateCustomEvent, type VerdocsTemplateDocumentPageCustomEvent, type VerdocsTemplateFieldPropertiesCustomEvent, type VerdocsTemplateFieldsCustomEvent, type VerdocsTemplateRolePropertiesCustomEvent, type VerdocsTemplateRolesCustomEvent, type VerdocsTemplateSettingsCustomEvent, type VerdocsTemplateStarCustomEvent, type VerdocsTemplatesListCustomEvent, type VerdocsUploadDialogCustomEvent, type VerdocsViewCustomEvent } from "@verdocs/web-sdk";
import { VerdocsAuth as VerdocsAuthElement, defineCustomElement as defineVerdocsAuth } from "@verdocs/web-sdk/dist/components/verdocs-auth.js";
import { VerdocsBuild as VerdocsBuildElement, defineCustomElement as defineVerdocsBuild } from "@verdocs/web-sdk/dist/components/verdocs-build.js";
import { VerdocsButtonPanel as VerdocsButtonPanelElement, defineCustomElement as defineVerdocsButtonPanel } from "@verdocs/web-sdk/dist/components/verdocs-button-panel.js";
import { VerdocsButton as VerdocsButtonElement, defineCustomElement as defineVerdocsButton } from "@verdocs/web-sdk/dist/components/verdocs-button.js";
import { VerdocsCheckbox as VerdocsCheckboxElement, defineCustomElement as defineVerdocsCheckbox } from "@verdocs/web-sdk/dist/components/verdocs-checkbox.js";
import { VerdocsComponentError as VerdocsComponentErrorElement, defineCustomElement as defineVerdocsComponentError } from "@verdocs/web-sdk/dist/components/verdocs-component-error.js";
import { VerdocsContactPicker as VerdocsContactPickerElement, defineCustomElement as defineVerdocsContactPicker } from "@verdocs/web-sdk/dist/components/verdocs-contact-picker.js";
import { VerdocsDialog as VerdocsDialogElement, defineCustomElement as defineVerdocsDialog } from "@verdocs/web-sdk/dist/components/verdocs-dialog.js";
import { VerdocsDropdown as VerdocsDropdownElement, defineCustomElement as defineVerdocsDropdown } from "@verdocs/web-sdk/dist/components/verdocs-dropdown.js";
import { VerdocsEnvelopeDocumentPage as VerdocsEnvelopeDocumentPageElement, defineCustomElement as defineVerdocsEnvelopeDocumentPage } from "@verdocs/web-sdk/dist/components/verdocs-envelope-document-page.js";
import { VerdocsEnvelopeRecipientLink as VerdocsEnvelopeRecipientLinkElement, defineCustomElement as defineVerdocsEnvelopeRecipientLink } from "@verdocs/web-sdk/dist/components/verdocs-envelope-recipient-link.js";
import { VerdocsEnvelopeRecipientSummary as VerdocsEnvelopeRecipientSummaryElement, defineCustomElement as defineVerdocsEnvelopeRecipientSummary } from "@verdocs/web-sdk/dist/components/verdocs-envelope-recipient-summary.js";
import { VerdocsEnvelopeSidebar as VerdocsEnvelopeSidebarElement, defineCustomElement as defineVerdocsEnvelopeSidebar } from "@verdocs/web-sdk/dist/components/verdocs-envelope-sidebar.js";
import { VerdocsEnvelopesList as VerdocsEnvelopesListElement, defineCustomElement as defineVerdocsEnvelopesList } from "@verdocs/web-sdk/dist/components/verdocs-envelopes-list.js";
import { VerdocsFieldAttachment as VerdocsFieldAttachmentElement, defineCustomElement as defineVerdocsFieldAttachment } from "@verdocs/web-sdk/dist/components/verdocs-field-attachment.js";
import { VerdocsFieldCheckbox as VerdocsFieldCheckboxElement, defineCustomElement as defineVerdocsFieldCheckbox } from "@verdocs/web-sdk/dist/components/verdocs-field-checkbox.js";
import { VerdocsFieldDate as VerdocsFieldDateElement, defineCustomElement as defineVerdocsFieldDate } from "@verdocs/web-sdk/dist/components/verdocs-field-date.js";
import { VerdocsFieldDropdown as VerdocsFieldDropdownElement, defineCustomElement as defineVerdocsFieldDropdown } from "@verdocs/web-sdk/dist/components/verdocs-field-dropdown.js";
import { VerdocsFieldInitial as VerdocsFieldInitialElement, defineCustomElement as defineVerdocsFieldInitial } from "@verdocs/web-sdk/dist/components/verdocs-field-initial.js";
import { VerdocsFieldPayment as VerdocsFieldPaymentElement, defineCustomElement as defineVerdocsFieldPayment } from "@verdocs/web-sdk/dist/components/verdocs-field-payment.js";
import { VerdocsFieldRadio as VerdocsFieldRadioElement, defineCustomElement as defineVerdocsFieldRadio } from "@verdocs/web-sdk/dist/components/verdocs-field-radio.js";
import { VerdocsFieldSignature as VerdocsFieldSignatureElement, defineCustomElement as defineVerdocsFieldSignature } from "@verdocs/web-sdk/dist/components/verdocs-field-signature.js";
import { VerdocsFieldTextarea as VerdocsFieldTextareaElement, defineCustomElement as defineVerdocsFieldTextarea } from "@verdocs/web-sdk/dist/components/verdocs-field-textarea.js";
import { VerdocsFieldTextbox as VerdocsFieldTextboxElement, defineCustomElement as defineVerdocsFieldTextbox } from "@verdocs/web-sdk/dist/components/verdocs-field-textbox.js";
import { VerdocsFieldTimestamp as VerdocsFieldTimestampElement, defineCustomElement as defineVerdocsFieldTimestamp } from "@verdocs/web-sdk/dist/components/verdocs-field-timestamp.js";
import { VerdocsFileChooser as VerdocsFileChooserElement, defineCustomElement as defineVerdocsFileChooser } from "@verdocs/web-sdk/dist/components/verdocs-file-chooser.js";
import { VerdocsHelpIcon as VerdocsHelpIconElement, defineCustomElement as defineVerdocsHelpIcon } from "@verdocs/web-sdk/dist/components/verdocs-help-icon.js";
import { VerdocsInitialDialog as VerdocsInitialDialogElement, defineCustomElement as defineVerdocsInitialDialog } from "@verdocs/web-sdk/dist/components/verdocs-initial-dialog.js";
import { VerdocsKbaDialog as VerdocsKbaDialogElement, defineCustomElement as defineVerdocsKbaDialog } from "@verdocs/web-sdk/dist/components/verdocs-kba-dialog.js";
import { VerdocsLoader as VerdocsLoaderElement, defineCustomElement as defineVerdocsLoader } from "@verdocs/web-sdk/dist/components/verdocs-loader.js";
import { VerdocsMenuPanel as VerdocsMenuPanelElement, defineCustomElement as defineVerdocsMenuPanel } from "@verdocs/web-sdk/dist/components/verdocs-menu-panel.js";
import { VerdocsMultiselect as VerdocsMultiselectElement, defineCustomElement as defineVerdocsMultiselect } from "@verdocs/web-sdk/dist/components/verdocs-multiselect.js";
import { VerdocsOkDialog as VerdocsOkDialogElement, defineCustomElement as defineVerdocsOkDialog } from "@verdocs/web-sdk/dist/components/verdocs-ok-dialog.js";
import { VerdocsOrganizationCard as VerdocsOrganizationCardElement, defineCustomElement as defineVerdocsOrganizationCard } from "@verdocs/web-sdk/dist/components/verdocs-organization-card.js";
import { VerdocsPagination as VerdocsPaginationElement, defineCustomElement as defineVerdocsPagination } from "@verdocs/web-sdk/dist/components/verdocs-pagination.js";
import { VerdocsPortal as VerdocsPortalElement, defineCustomElement as defineVerdocsPortal } from "@verdocs/web-sdk/dist/components/verdocs-portal.js";
import { VerdocsPreview as VerdocsPreviewElement, defineCustomElement as defineVerdocsPreview } from "@verdocs/web-sdk/dist/components/verdocs-preview.js";
import { VerdocsProgressBar as VerdocsProgressBarElement, defineCustomElement as defineVerdocsProgressBar } from "@verdocs/web-sdk/dist/components/verdocs-progress-bar.js";
import { VerdocsQuickFilter as VerdocsQuickFilterElement, defineCustomElement as defineVerdocsQuickFilter } from "@verdocs/web-sdk/dist/components/verdocs-quick-filter.js";
import { VerdocsQuickFunctions as VerdocsQuickFunctionsElement, defineCustomElement as defineVerdocsQuickFunctions } from "@verdocs/web-sdk/dist/components/verdocs-quick-functions.js";
import { VerdocsRadioButton as VerdocsRadioButtonElement, defineCustomElement as defineVerdocsRadioButton } from "@verdocs/web-sdk/dist/components/verdocs-radio-button.js";
import { VerdocsSearchBox as VerdocsSearchBoxElement, defineCustomElement as defineVerdocsSearchBox } from "@verdocs/web-sdk/dist/components/verdocs-search-box.js";
import { VerdocsSearchTabs as VerdocsSearchTabsElement, defineCustomElement as defineVerdocsSearchTabs } from "@verdocs/web-sdk/dist/components/verdocs-search-tabs.js";
import { VerdocsSelectInput as VerdocsSelectInputElement, defineCustomElement as defineVerdocsSelectInput } from "@verdocs/web-sdk/dist/components/verdocs-select-input.js";
import { VerdocsSend as VerdocsSendElement, defineCustomElement as defineVerdocsSend } from "@verdocs/web-sdk/dist/components/verdocs-send.js";
import { VerdocsSign as VerdocsSignElement, defineCustomElement as defineVerdocsSign } from "@verdocs/web-sdk/dist/components/verdocs-sign.js";
import { VerdocsSignatureDialog as VerdocsSignatureDialogElement, defineCustomElement as defineVerdocsSignatureDialog } from "@verdocs/web-sdk/dist/components/verdocs-signature-dialog.js";
import { VerdocsSpinner as VerdocsSpinnerElement, defineCustomElement as defineVerdocsSpinner } from "@verdocs/web-sdk/dist/components/verdocs-spinner.js";
import { VerdocsStatusIndicator as VerdocsStatusIndicatorElement, defineCustomElement as defineVerdocsStatusIndicator } from "@verdocs/web-sdk/dist/components/verdocs-status-indicator.js";
import { VerdocsSwitch as VerdocsSwitchElement, defineCustomElement as defineVerdocsSwitch } from "@verdocs/web-sdk/dist/components/verdocs-switch.js";
import { VerdocsTable as VerdocsTableElement, defineCustomElement as defineVerdocsTable } from "@verdocs/web-sdk/dist/components/verdocs-table.js";
import { VerdocsTabs as VerdocsTabsElement, defineCustomElement as defineVerdocsTabs } from "@verdocs/web-sdk/dist/components/verdocs-tabs.js";
import { VerdocsTemplateAttachments as VerdocsTemplateAttachmentsElement, defineCustomElement as defineVerdocsTemplateAttachments } from "@verdocs/web-sdk/dist/components/verdocs-template-attachments.js";
import { VerdocsTemplateBuildTabs as VerdocsTemplateBuildTabsElement, defineCustomElement as defineVerdocsTemplateBuildTabs } from "@verdocs/web-sdk/dist/components/verdocs-template-build-tabs.js";
import { VerdocsTemplateCard as VerdocsTemplateCardElement, defineCustomElement as defineVerdocsTemplateCard } from "@verdocs/web-sdk/dist/components/verdocs-template-card.js";
import { VerdocsTemplateCreate as VerdocsTemplateCreateElement, defineCustomElement as defineVerdocsTemplateCreate } from "@verdocs/web-sdk/dist/components/verdocs-template-create.js";
import { VerdocsTemplateDocumentPage as VerdocsTemplateDocumentPageElement, defineCustomElement as defineVerdocsTemplateDocumentPage } from "@verdocs/web-sdk/dist/components/verdocs-template-document-page.js";
import { VerdocsTemplateFieldProperties as VerdocsTemplateFieldPropertiesElement, defineCustomElement as defineVerdocsTemplateFieldProperties } from "@verdocs/web-sdk/dist/components/verdocs-template-field-properties.js";
import { VerdocsTemplateFields as VerdocsTemplateFieldsElement, defineCustomElement as defineVerdocsTemplateFields } from "@verdocs/web-sdk/dist/components/verdocs-template-fields.js";
import { VerdocsTemplateRoleProperties as VerdocsTemplateRolePropertiesElement, defineCustomElement as defineVerdocsTemplateRoleProperties } from "@verdocs/web-sdk/dist/components/verdocs-template-role-properties.js";
import { VerdocsTemplateRoles as VerdocsTemplateRolesElement, defineCustomElement as defineVerdocsTemplateRoles } from "@verdocs/web-sdk/dist/components/verdocs-template-roles.js";
import { VerdocsTemplateSettings as VerdocsTemplateSettingsElement, defineCustomElement as defineVerdocsTemplateSettings } from "@verdocs/web-sdk/dist/components/verdocs-template-settings.js";
import { VerdocsTemplateStar as VerdocsTemplateStarElement, defineCustomElement as defineVerdocsTemplateStar } from "@verdocs/web-sdk/dist/components/verdocs-template-star.js";
import { VerdocsTemplateTags as VerdocsTemplateTagsElement, defineCustomElement as defineVerdocsTemplateTags } from "@verdocs/web-sdk/dist/components/verdocs-template-tags.js";
import { VerdocsTemplatesList as VerdocsTemplatesListElement, defineCustomElement as defineVerdocsTemplatesList } from "@verdocs/web-sdk/dist/components/verdocs-templates-list.js";
import { VerdocsTextInput as VerdocsTextInputElement, defineCustomElement as defineVerdocsTextInput } from "@verdocs/web-sdk/dist/components/verdocs-text-input.js";
import { VerdocsToggleButton as VerdocsToggleButtonElement, defineCustomElement as defineVerdocsToggleButton } from "@verdocs/web-sdk/dist/components/verdocs-toggle-button.js";
import { VerdocsToggle as VerdocsToggleElement, defineCustomElement as defineVerdocsToggle } from "@verdocs/web-sdk/dist/components/verdocs-toggle.js";
import { VerdocsToolbarIcon as VerdocsToolbarIconElement, defineCustomElement as defineVerdocsToolbarIcon } from "@verdocs/web-sdk/dist/components/verdocs-toolbar-icon.js";
import { VerdocsUploadDialog as VerdocsUploadDialogElement, defineCustomElement as defineVerdocsUploadDialog } from "@verdocs/web-sdk/dist/components/verdocs-upload-dialog.js";
import { VerdocsView as VerdocsViewElement, defineCustomElement as defineVerdocsView } from "@verdocs/web-sdk/dist/components/verdocs-view.js";
import React from 'react';

type VerdocsAuthEvents = {
    onAuthenticated: EventName<VerdocsAuthCustomEvent<IAuthStatus>>,
    onSdkError: EventName<VerdocsAuthCustomEvent<SDKError>>
};

export const VerdocsAuth: StencilReactComponent<VerdocsAuthElement, VerdocsAuthEvents> = /*@__PURE__*/ createComponent<VerdocsAuthElement, VerdocsAuthEvents>({
    tagName: 'verdocs-auth',
    elementClass: VerdocsAuthElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onAuthenticated: 'authenticated',
        onSdkError: 'sdkError'
    } as VerdocsAuthEvents,
    defineCustomElement: defineVerdocsAuth
});

type VerdocsBuildEvents = {
    onCancel: EventName<CustomEvent<any>>,
    onSdkError: EventName<VerdocsBuildCustomEvent<SDKError>>,
    onStepChanged: EventName<VerdocsBuildCustomEvent<TVerdocsBuildStep>>,
    onSend: EventName<VerdocsBuildCustomEvent<{ recipients: ICreateEnvelopeRecipient[]; name: string; template_id: string }>>,
    onTemplateUpdated: EventName<VerdocsBuildCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; event: string }>>,
    onTemplateCreated: EventName<VerdocsBuildCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; event: string }>>,
    onRolesUpdated: EventName<VerdocsBuildCustomEvent<{ endpoint: VerdocsEndpoint; templateId: string; event: 'added' | 'deleted' | 'updated'; roles: IRole[] }>>
};

export const VerdocsBuild: StencilReactComponent<VerdocsBuildElement, VerdocsBuildEvents> = /*@__PURE__*/ createComponent<VerdocsBuildElement, VerdocsBuildEvents>({
    tagName: 'verdocs-build',
    elementClass: VerdocsBuildElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCancel: 'cancel',
        onSdkError: 'sdkError',
        onStepChanged: 'stepChanged',
        onSend: 'send',
        onTemplateUpdated: 'templateUpdated',
        onTemplateCreated: 'templateCreated',
        onRolesUpdated: 'rolesUpdated'
    } as VerdocsBuildEvents,
    defineCustomElement: defineVerdocsBuild
});

type VerdocsButtonEvents = NonNullable<unknown>;

export const VerdocsButton: StencilReactComponent<VerdocsButtonElement, VerdocsButtonEvents> = /*@__PURE__*/ createComponent<VerdocsButtonElement, VerdocsButtonEvents>({
    tagName: 'verdocs-button',
    elementClass: VerdocsButtonElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsButtonEvents,
    defineCustomElement: defineVerdocsButton
});

type VerdocsButtonPanelEvents = NonNullable<unknown>;

export const VerdocsButtonPanel: StencilReactComponent<VerdocsButtonPanelElement, VerdocsButtonPanelEvents> = /*@__PURE__*/ createComponent<VerdocsButtonPanelElement, VerdocsButtonPanelEvents>({
    tagName: 'verdocs-button-panel',
    elementClass: VerdocsButtonPanelElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsButtonPanelEvents,
    defineCustomElement: defineVerdocsButtonPanel
});

type VerdocsCheckboxEvents = NonNullable<unknown>;

export const VerdocsCheckbox: StencilReactComponent<VerdocsCheckboxElement, VerdocsCheckboxEvents> = /*@__PURE__*/ createComponent<VerdocsCheckboxElement, VerdocsCheckboxEvents>({
    tagName: 'verdocs-checkbox',
    elementClass: VerdocsCheckboxElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsCheckboxEvents,
    defineCustomElement: defineVerdocsCheckbox
});

type VerdocsComponentErrorEvents = NonNullable<unknown>;

export const VerdocsComponentError: StencilReactComponent<VerdocsComponentErrorElement, VerdocsComponentErrorEvents> = /*@__PURE__*/ createComponent<VerdocsComponentErrorElement, VerdocsComponentErrorEvents>({
    tagName: 'verdocs-component-error',
    elementClass: VerdocsComponentErrorElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsComponentErrorEvents,
    defineCustomElement: defineVerdocsComponentError
});

type VerdocsContactPickerEvents = {
    onSearchContacts: EventName<VerdocsContactPickerCustomEvent<IContactSearchEvent>>,
    onExit: EventName<CustomEvent<any>>,
    onNext: EventName<VerdocsContactPickerCustomEvent<IContactSelectEvent>>
};

export const VerdocsContactPicker: StencilReactComponent<VerdocsContactPickerElement, VerdocsContactPickerEvents> = /*@__PURE__*/ createComponent<VerdocsContactPickerElement, VerdocsContactPickerEvents>({
    tagName: 'verdocs-contact-picker',
    elementClass: VerdocsContactPickerElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSearchContacts: 'searchContacts',
        onExit: 'exit',
        onNext: 'next'
    } as VerdocsContactPickerEvents,
    defineCustomElement: defineVerdocsContactPicker
});

type VerdocsDialogEvents = { onExit: EventName<CustomEvent<any>> };

export const VerdocsDialog: StencilReactComponent<VerdocsDialogElement, VerdocsDialogEvents> = /*@__PURE__*/ createComponent<VerdocsDialogElement, VerdocsDialogEvents>({
    tagName: 'verdocs-dialog',
    elementClass: VerdocsDialogElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onExit: 'exit' } as VerdocsDialogEvents,
    defineCustomElement: defineVerdocsDialog
});

type VerdocsDropdownEvents = { onOptionSelected: EventName<VerdocsDropdownCustomEvent<IMenuOption>> };

export const VerdocsDropdown: StencilReactComponent<VerdocsDropdownElement, VerdocsDropdownEvents> = /*@__PURE__*/ createComponent<VerdocsDropdownElement, VerdocsDropdownEvents>({
    tagName: 'verdocs-dropdown',
    elementClass: VerdocsDropdownElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onOptionSelected: 'optionSelected' } as VerdocsDropdownEvents,
    defineCustomElement: defineVerdocsDropdown
});

type VerdocsEnvelopeDocumentPageEvents = { onPageRendered: EventName<VerdocsEnvelopeDocumentPageCustomEvent<IDocumentPageInfo>> };

export const VerdocsEnvelopeDocumentPage: StencilReactComponent<VerdocsEnvelopeDocumentPageElement, VerdocsEnvelopeDocumentPageEvents> = /*@__PURE__*/ createComponent<VerdocsEnvelopeDocumentPageElement, VerdocsEnvelopeDocumentPageEvents>({
    tagName: 'verdocs-envelope-document-page',
    elementClass: VerdocsEnvelopeDocumentPageElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onPageRendered: 'pageRendered' } as VerdocsEnvelopeDocumentPageEvents,
    defineCustomElement: defineVerdocsEnvelopeDocumentPage
});

type VerdocsEnvelopeRecipientLinkEvents = {
    onNext: EventName<VerdocsEnvelopeRecipientLinkCustomEvent<{ envelope: IEnvelope }>>,
    onSdkError: EventName<VerdocsEnvelopeRecipientLinkCustomEvent<SDKError>>
};

export const VerdocsEnvelopeRecipientLink: StencilReactComponent<VerdocsEnvelopeRecipientLinkElement, VerdocsEnvelopeRecipientLinkEvents> = /*@__PURE__*/ createComponent<VerdocsEnvelopeRecipientLinkElement, VerdocsEnvelopeRecipientLinkEvents>({
    tagName: 'verdocs-envelope-recipient-link',
    elementClass: VerdocsEnvelopeRecipientLinkElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onNext: 'next',
        onSdkError: 'sdkError'
    } as VerdocsEnvelopeRecipientLinkEvents,
    defineCustomElement: defineVerdocsEnvelopeRecipientLink
});

type VerdocsEnvelopeRecipientSummaryEvents = {
    onAnother: EventName<VerdocsEnvelopeRecipientSummaryCustomEvent<{ envelope: IEnvelope }>>,
    onView: EventName<VerdocsEnvelopeRecipientSummaryCustomEvent<{ envelope: IEnvelope }>>,
    onNext: EventName<VerdocsEnvelopeRecipientSummaryCustomEvent<{ envelope: IEnvelope }>>,
    onSdkError: EventName<VerdocsEnvelopeRecipientSummaryCustomEvent<SDKError>>
};

export const VerdocsEnvelopeRecipientSummary: StencilReactComponent<VerdocsEnvelopeRecipientSummaryElement, VerdocsEnvelopeRecipientSummaryEvents> = /*@__PURE__*/ createComponent<VerdocsEnvelopeRecipientSummaryElement, VerdocsEnvelopeRecipientSummaryEvents>({
    tagName: 'verdocs-envelope-recipient-summary',
    elementClass: VerdocsEnvelopeRecipientSummaryElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onAnother: 'another',
        onView: 'view',
        onNext: 'next',
        onSdkError: 'sdkError'
    } as VerdocsEnvelopeRecipientSummaryEvents,
    defineCustomElement: defineVerdocsEnvelopeRecipientSummary
});

type VerdocsEnvelopeSidebarEvents = {
    onSdkError: EventName<VerdocsEnvelopeSidebarCustomEvent<SDKError>>,
    onEnvelopeUpdated: EventName<VerdocsEnvelopeSidebarCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope; event: string }>>,
    onToggle: EventName<CustomEvent<{ open: boolean }>>,
    onAnother: EventName<VerdocsEnvelopeSidebarCustomEvent<{ envelope: IEnvelope }>>
};

export const VerdocsEnvelopeSidebar: StencilReactComponent<VerdocsEnvelopeSidebarElement, VerdocsEnvelopeSidebarEvents> = /*@__PURE__*/ createComponent<VerdocsEnvelopeSidebarElement, VerdocsEnvelopeSidebarEvents>({
    tagName: 'verdocs-envelope-sidebar',
    elementClass: VerdocsEnvelopeSidebarElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSdkError: 'sdkError',
        onEnvelopeUpdated: 'envelopeUpdated',
        onToggle: 'toggle',
        onAnother: 'another'
    } as VerdocsEnvelopeSidebarEvents,
    defineCustomElement: defineVerdocsEnvelopeSidebar
});

type VerdocsEnvelopesListEvents = {
    onChangeView: EventName<CustomEvent<'all' | 'inbox' | 'sent' | 'completed' | 'action' | 'waiting'>>,
    onChangeStatus: EventName<VerdocsEnvelopesListCustomEvent<TEnvelopeStatus | 'all'>>,
    onChangeSort: EventName<CustomEvent<'name' | 'created_at' | 'updated_at' | 'canceled_at' | 'status'>>,
    onChangeMatch: EventName<CustomEvent<string>>,
    onSdkError: EventName<VerdocsEnvelopesListCustomEvent<SDKError>>,
    onViewEnvelope: EventName<VerdocsEnvelopesListCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope }>>,
    onFinishEnvelope: EventName<VerdocsEnvelopesListCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope }>>
};

export const VerdocsEnvelopesList: StencilReactComponent<VerdocsEnvelopesListElement, VerdocsEnvelopesListEvents> = /*@__PURE__*/ createComponent<VerdocsEnvelopesListElement, VerdocsEnvelopesListEvents>({
    tagName: 'verdocs-envelopes-list',
    elementClass: VerdocsEnvelopesListElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onChangeView: 'changeView',
        onChangeStatus: 'changeStatus',
        onChangeSort: 'changeSort',
        onChangeMatch: 'changeMatch',
        onSdkError: 'sdkError',
        onViewEnvelope: 'viewEnvelope',
        onFinishEnvelope: 'finishEnvelope'
    } as VerdocsEnvelopesListEvents,
    defineCustomElement: defineVerdocsEnvelopesList
});

type VerdocsFieldAttachmentEvents = {
    onSettingsChanged: EventName<VerdocsFieldAttachmentCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onAttached: EventName<VerdocsFieldAttachmentCustomEvent<ISelectedFile>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldAttachment: StencilReactComponent<VerdocsFieldAttachmentElement, VerdocsFieldAttachmentEvents> = /*@__PURE__*/ createComponent<VerdocsFieldAttachmentElement, VerdocsFieldAttachmentEvents>({
    tagName: 'verdocs-field-attachment',
    elementClass: VerdocsFieldAttachmentElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onAttached: 'attached',
        onDeleted: 'deleted'
    } as VerdocsFieldAttachmentEvents,
    defineCustomElement: defineVerdocsFieldAttachment
});

type VerdocsFieldCheckboxEvents = {
    onSettingsChanged: EventName<VerdocsFieldCheckboxCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldCheckbox: StencilReactComponent<VerdocsFieldCheckboxElement, VerdocsFieldCheckboxEvents> = /*@__PURE__*/ createComponent<VerdocsFieldCheckboxElement, VerdocsFieldCheckboxEvents>({
    tagName: 'verdocs-field-checkbox',
    elementClass: VerdocsFieldCheckboxElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldCheckboxEvents,
    defineCustomElement: defineVerdocsFieldCheckbox
});

type VerdocsFieldDateEvents = {
    onSettingsPress: EventName<CustomEvent<any>>,
    onSettingsChanged: EventName<VerdocsFieldDateCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldDate: StencilReactComponent<VerdocsFieldDateElement, VerdocsFieldDateEvents> = /*@__PURE__*/ createComponent<VerdocsFieldDateElement, VerdocsFieldDateEvents>({
    tagName: 'verdocs-field-date',
    elementClass: VerdocsFieldDateElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSettingsPress: 'settingsPress',
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldDateEvents,
    defineCustomElement: defineVerdocsFieldDate
});

type VerdocsFieldDropdownEvents = {
    onFieldChange: EventName<CustomEvent<string>>,
    onSettingsChanged: EventName<VerdocsFieldDropdownCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldDropdown: StencilReactComponent<VerdocsFieldDropdownElement, VerdocsFieldDropdownEvents> = /*@__PURE__*/ createComponent<VerdocsFieldDropdownElement, VerdocsFieldDropdownEvents>({
    tagName: 'verdocs-field-dropdown',
    elementClass: VerdocsFieldDropdownElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onFieldChange: 'fieldChange',
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldDropdownEvents,
    defineCustomElement: defineVerdocsFieldDropdown
});

type VerdocsFieldInitialEvents = {
    onAdopt: EventName<CustomEvent<string>>,
    onExit: EventName<CustomEvent<any>>,
    onFieldChange: EventName<CustomEvent<string>>,
    onSettingsChanged: EventName<VerdocsFieldInitialCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onSettingsPress: EventName<CustomEvent<any>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldInitial: StencilReactComponent<VerdocsFieldInitialElement, VerdocsFieldInitialEvents> = /*@__PURE__*/ createComponent<VerdocsFieldInitialElement, VerdocsFieldInitialEvents>({
    tagName: 'verdocs-field-initial',
    elementClass: VerdocsFieldInitialElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onAdopt: 'adopt',
        onExit: 'exit',
        onFieldChange: 'fieldChange',
        onSettingsChanged: 'settingsChanged',
        onSettingsPress: 'settingsPress',
        onDeleted: 'deleted'
    } as VerdocsFieldInitialEvents,
    defineCustomElement: defineVerdocsFieldInitial
});

type VerdocsFieldPaymentEvents = {
    onSettingsChanged: EventName<VerdocsFieldPaymentCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldPayment: StencilReactComponent<VerdocsFieldPaymentElement, VerdocsFieldPaymentEvents> = /*@__PURE__*/ createComponent<VerdocsFieldPaymentElement, VerdocsFieldPaymentEvents>({
    tagName: 'verdocs-field-payment',
    elementClass: VerdocsFieldPaymentElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldPaymentEvents,
    defineCustomElement: defineVerdocsFieldPayment
});

type VerdocsFieldRadioEvents = {
    onSettingsChanged: EventName<VerdocsFieldRadioCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldRadio: StencilReactComponent<VerdocsFieldRadioElement, VerdocsFieldRadioEvents> = /*@__PURE__*/ createComponent<VerdocsFieldRadioElement, VerdocsFieldRadioEvents>({
    tagName: 'verdocs-field-radio',
    elementClass: VerdocsFieldRadioElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldRadioEvents,
    defineCustomElement: defineVerdocsFieldRadio
});

type VerdocsFieldSignatureEvents = {
    onFieldChange: EventName<CustomEvent<string>>,
    onSettingsPress: EventName<CustomEvent<any>>,
    onSettingsChanged: EventName<VerdocsFieldSignatureCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldSignature: StencilReactComponent<VerdocsFieldSignatureElement, VerdocsFieldSignatureEvents> = /*@__PURE__*/ createComponent<VerdocsFieldSignatureElement, VerdocsFieldSignatureEvents>({
    tagName: 'verdocs-field-signature',
    elementClass: VerdocsFieldSignatureElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onFieldChange: 'fieldChange',
        onSettingsPress: 'settingsPress',
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldSignatureEvents,
    defineCustomElement: defineVerdocsFieldSignature
});

type VerdocsFieldTextareaEvents = {
    onSettingsChanged: EventName<VerdocsFieldTextareaCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldTextarea: StencilReactComponent<VerdocsFieldTextareaElement, VerdocsFieldTextareaEvents> = /*@__PURE__*/ createComponent<VerdocsFieldTextareaElement, VerdocsFieldTextareaEvents>({
    tagName: 'verdocs-field-textarea',
    elementClass: VerdocsFieldTextareaElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldTextareaEvents,
    defineCustomElement: defineVerdocsFieldTextarea
});

type VerdocsFieldTextboxEvents = {
    onSettingsChanged: EventName<VerdocsFieldTextboxCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldTextbox: StencilReactComponent<VerdocsFieldTextboxElement, VerdocsFieldTextboxEvents> = /*@__PURE__*/ createComponent<VerdocsFieldTextboxElement, VerdocsFieldTextboxEvents>({
    tagName: 'verdocs-field-textbox',
    elementClass: VerdocsFieldTextboxElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldTextboxEvents,
    defineCustomElement: defineVerdocsFieldTextbox
});

type VerdocsFieldTimestampEvents = {
    onSettingsChanged: EventName<VerdocsFieldTimestampCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onDeleted: EventName<CustomEvent<{ fieldName: string }>>
};

export const VerdocsFieldTimestamp: StencilReactComponent<VerdocsFieldTimestampElement, VerdocsFieldTimestampEvents> = /*@__PURE__*/ createComponent<VerdocsFieldTimestampElement, VerdocsFieldTimestampEvents>({
    tagName: 'verdocs-field-timestamp',
    elementClass: VerdocsFieldTimestampElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSettingsChanged: 'settingsChanged',
        onDeleted: 'deleted'
    } as VerdocsFieldTimestampEvents,
    defineCustomElement: defineVerdocsFieldTimestamp
});

type VerdocsFileChooserEvents = { onFileSelected: EventName<VerdocsFileChooserCustomEvent<{ file: File | null }>> };

export const VerdocsFileChooser: StencilReactComponent<VerdocsFileChooserElement, VerdocsFileChooserEvents> = /*@__PURE__*/ createComponent<VerdocsFileChooserElement, VerdocsFileChooserEvents>({
    tagName: 'verdocs-file-chooser',
    elementClass: VerdocsFileChooserElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onFileSelected: 'fileSelected' } as VerdocsFileChooserEvents,
    defineCustomElement: defineVerdocsFileChooser
});

type VerdocsHelpIconEvents = NonNullable<unknown>;

export const VerdocsHelpIcon: StencilReactComponent<VerdocsHelpIconElement, VerdocsHelpIconEvents> = /*@__PURE__*/ createComponent<VerdocsHelpIconElement, VerdocsHelpIconEvents>({
    tagName: 'verdocs-help-icon',
    elementClass: VerdocsHelpIconElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsHelpIconEvents,
    defineCustomElement: defineVerdocsHelpIcon
});

type VerdocsInitialDialogEvents = {
    onNext: EventName<CustomEvent<string>>,
    onExit: EventName<CustomEvent<any>>
};

export const VerdocsInitialDialog: StencilReactComponent<VerdocsInitialDialogElement, VerdocsInitialDialogEvents> = /*@__PURE__*/ createComponent<VerdocsInitialDialogElement, VerdocsInitialDialogEvents>({
    tagName: 'verdocs-initial-dialog',
    elementClass: VerdocsInitialDialogElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onNext: 'next',
        onExit: 'exit'
    } as VerdocsInitialDialogEvents,
    defineCustomElement: defineVerdocsInitialDialog
});

type VerdocsKbaDialogEvents = {
    onExit: EventName<CustomEvent<any>>,
    onPinEntered: EventName<VerdocsKbaDialogCustomEvent<string | IRecipient>>,
    onNext: EventName<VerdocsKbaDialogCustomEvent<string | IRecipient | string[]>>
};

export const VerdocsKbaDialog: StencilReactComponent<VerdocsKbaDialogElement, VerdocsKbaDialogEvents> = /*@__PURE__*/ createComponent<VerdocsKbaDialogElement, VerdocsKbaDialogEvents>({
    tagName: 'verdocs-kba-dialog',
    elementClass: VerdocsKbaDialogElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onExit: 'exit',
        onPinEntered: 'pinEntered',
        onNext: 'next'
    } as VerdocsKbaDialogEvents,
    defineCustomElement: defineVerdocsKbaDialog
});

type VerdocsLoaderEvents = NonNullable<unknown>;

export const VerdocsLoader: StencilReactComponent<VerdocsLoaderElement, VerdocsLoaderEvents> = /*@__PURE__*/ createComponent<VerdocsLoaderElement, VerdocsLoaderEvents>({
    tagName: 'verdocs-loader',
    elementClass: VerdocsLoaderElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsLoaderEvents,
    defineCustomElement: defineVerdocsLoader
});

type VerdocsMenuPanelEvents = { onClose: EventName<CustomEvent<void>> };

export const VerdocsMenuPanel: StencilReactComponent<VerdocsMenuPanelElement, VerdocsMenuPanelEvents> = /*@__PURE__*/ createComponent<VerdocsMenuPanelElement, VerdocsMenuPanelEvents>({
    tagName: 'verdocs-menu-panel',
    elementClass: VerdocsMenuPanelElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onClose: 'close' } as VerdocsMenuPanelEvents,
    defineCustomElement: defineVerdocsMenuPanel
});

type VerdocsMultiselectEvents = { onSelectionChanged: EventName<CustomEvent<{ selectedOptions: string[] }>> };

export const VerdocsMultiselect: StencilReactComponent<VerdocsMultiselectElement, VerdocsMultiselectEvents> = /*@__PURE__*/ createComponent<VerdocsMultiselectElement, VerdocsMultiselectEvents>({
    tagName: 'verdocs-multiselect',
    elementClass: VerdocsMultiselectElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onSelectionChanged: 'selectionChanged' } as VerdocsMultiselectEvents,
    defineCustomElement: defineVerdocsMultiselect
});

type VerdocsOkDialogEvents = {
    onNext: EventName<CustomEvent<any>>,
    onExit: EventName<CustomEvent<any>>
};

export const VerdocsOkDialog: StencilReactComponent<VerdocsOkDialogElement, VerdocsOkDialogEvents> = /*@__PURE__*/ createComponent<VerdocsOkDialogElement, VerdocsOkDialogEvents>({
    tagName: 'verdocs-ok-dialog',
    elementClass: VerdocsOkDialogElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onNext: 'next',
        onExit: 'exit'
    } as VerdocsOkDialogEvents,
    defineCustomElement: defineVerdocsOkDialog
});

type VerdocsOrganizationCardEvents = NonNullable<unknown>;

export const VerdocsOrganizationCard: StencilReactComponent<VerdocsOrganizationCardElement, VerdocsOrganizationCardEvents> = /*@__PURE__*/ createComponent<VerdocsOrganizationCardElement, VerdocsOrganizationCardEvents>({
    tagName: 'verdocs-organization-card',
    elementClass: VerdocsOrganizationCardElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsOrganizationCardEvents,
    defineCustomElement: defineVerdocsOrganizationCard
});

type VerdocsPaginationEvents = { onSelectPage: EventName<CustomEvent<{ selectedPage: number }>> };

export const VerdocsPagination: StencilReactComponent<VerdocsPaginationElement, VerdocsPaginationEvents> = /*@__PURE__*/ createComponent<VerdocsPaginationElement, VerdocsPaginationEvents>({
    tagName: 'verdocs-pagination',
    elementClass: VerdocsPaginationElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onSelectPage: 'selectPage' } as VerdocsPaginationEvents,
    defineCustomElement: defineVerdocsPagination
});

type VerdocsPortalEvents = { onClickAway: EventName<CustomEvent<void>> };

export const VerdocsPortal: StencilReactComponent<VerdocsPortalElement, VerdocsPortalEvents> = /*@__PURE__*/ createComponent<VerdocsPortalElement, VerdocsPortalEvents>({
    tagName: 'verdocs-portal',
    elementClass: VerdocsPortalElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onClickAway: 'clickAway' } as VerdocsPortalEvents,
    defineCustomElement: defineVerdocsPortal
});

type VerdocsPreviewEvents = { onSdkError: EventName<VerdocsPreviewCustomEvent<SDKError>> };

export const VerdocsPreview: StencilReactComponent<VerdocsPreviewElement, VerdocsPreviewEvents> = /*@__PURE__*/ createComponent<VerdocsPreviewElement, VerdocsPreviewEvents>({
    tagName: 'verdocs-preview',
    elementClass: VerdocsPreviewElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onSdkError: 'sdkError' } as VerdocsPreviewEvents,
    defineCustomElement: defineVerdocsPreview
});

type VerdocsProgressBarEvents = NonNullable<unknown>;

export const VerdocsProgressBar: StencilReactComponent<VerdocsProgressBarElement, VerdocsProgressBarEvents> = /*@__PURE__*/ createComponent<VerdocsProgressBarElement, VerdocsProgressBarEvents>({
    tagName: 'verdocs-progress-bar',
    elementClass: VerdocsProgressBarElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsProgressBarEvents,
    defineCustomElement: defineVerdocsProgressBar
});

type VerdocsQuickFilterEvents = { onOptionSelected: EventName<VerdocsQuickFilterCustomEvent<IFilterOption>> };

export const VerdocsQuickFilter: StencilReactComponent<VerdocsQuickFilterElement, VerdocsQuickFilterEvents> = /*@__PURE__*/ createComponent<VerdocsQuickFilterElement, VerdocsQuickFilterEvents>({
    tagName: 'verdocs-quick-filter',
    elementClass: VerdocsQuickFilterElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onOptionSelected: 'optionSelected' } as VerdocsQuickFilterEvents,
    defineCustomElement: defineVerdocsQuickFilter
});

type VerdocsQuickFunctionsEvents = {
    onCreateTemplate: EventName<CustomEvent<any>>,
    onCreateDocument: EventName<CustomEvent<any>>
};

export const VerdocsQuickFunctions: StencilReactComponent<VerdocsQuickFunctionsElement, VerdocsQuickFunctionsEvents> = /*@__PURE__*/ createComponent<VerdocsQuickFunctionsElement, VerdocsQuickFunctionsEvents>({
    tagName: 'verdocs-quick-functions',
    elementClass: VerdocsQuickFunctionsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCreateTemplate: 'createTemplate',
        onCreateDocument: 'createDocument'
    } as VerdocsQuickFunctionsEvents,
    defineCustomElement: defineVerdocsQuickFunctions
});

type VerdocsRadioButtonEvents = NonNullable<unknown>;

export const VerdocsRadioButton: StencilReactComponent<VerdocsRadioButtonElement, VerdocsRadioButtonEvents> = /*@__PURE__*/ createComponent<VerdocsRadioButtonElement, VerdocsRadioButtonEvents>({
    tagName: 'verdocs-radio-button',
    elementClass: VerdocsRadioButtonElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsRadioButtonEvents,
    defineCustomElement: defineVerdocsRadioButton
});

type VerdocsSearchBoxEvents = {
    onSearchClicked: EventName<VerdocsSearchBoxCustomEvent<ISearchEvent>>,
    onTypeChanged: EventName<VerdocsSearchBoxCustomEvent<TContentType>>,
    onQueryChanged: EventName<CustomEvent<string>>
};

export const VerdocsSearchBox: StencilReactComponent<VerdocsSearchBoxElement, VerdocsSearchBoxEvents> = /*@__PURE__*/ createComponent<VerdocsSearchBoxElement, VerdocsSearchBoxEvents>({
    tagName: 'verdocs-search-box',
    elementClass: VerdocsSearchBoxElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSearchClicked: 'searchClicked',
        onTypeChanged: 'typeChanged',
        onQueryChanged: 'queryChanged'
    } as VerdocsSearchBoxEvents,
    defineCustomElement: defineVerdocsSearchBox
});

type VerdocsSearchTabsEvents = NonNullable<unknown>;

export const VerdocsSearchTabs: StencilReactComponent<VerdocsSearchTabsElement, VerdocsSearchTabsEvents> = /*@__PURE__*/ createComponent<VerdocsSearchTabsElement, VerdocsSearchTabsEvents>({
    tagName: 'verdocs-search-tabs',
    elementClass: VerdocsSearchTabsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsSearchTabsEvents,
    defineCustomElement: defineVerdocsSearchTabs
});

type VerdocsSelectInputEvents = NonNullable<unknown>;

export const VerdocsSelectInput: StencilReactComponent<VerdocsSelectInputElement, VerdocsSelectInputEvents> = /*@__PURE__*/ createComponent<VerdocsSelectInputElement, VerdocsSelectInputEvents>({
    tagName: 'verdocs-select-input',
    elementClass: VerdocsSelectInputElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsSelectInputEvents,
    defineCustomElement: defineVerdocsSelectInput
});

type VerdocsSendEvents = {
    onBeforeSend: EventName<VerdocsSendCustomEvent<{ recipients: ICreateEnvelopeRecipient[]; name: string; template_id: string; template: ITemplate }>>,
    onSend: EventName<VerdocsSendCustomEvent<{ recipients: ICreateEnvelopeRecipient[]; name: string; template_id: string; envelope_id: string; envelope: IEnvelope }>>,
    onExit: EventName<CustomEvent<any>>,
    onSdkError: EventName<VerdocsSendCustomEvent<SDKError>>,
    onSearchContacts: EventName<VerdocsSendCustomEvent<IContactSearchEvent>>
};

export const VerdocsSend: StencilReactComponent<VerdocsSendElement, VerdocsSendEvents> = /*@__PURE__*/ createComponent<VerdocsSendElement, VerdocsSendEvents>({
    tagName: 'verdocs-send',
    elementClass: VerdocsSendElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onBeforeSend: 'beforeSend',
        onSend: 'send',
        onExit: 'exit',
        onSdkError: 'sdkError',
        onSearchContacts: 'searchContacts'
    } as VerdocsSendEvents,
    defineCustomElement: defineVerdocsSend
});

type VerdocsSignEvents = {
    onSdkError: EventName<VerdocsSignCustomEvent<SDKError>>,
    onEnvelopeLoaded: EventName<VerdocsSignCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope }>>,
    onEnvelopeUpdated: EventName<VerdocsSignCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope; event: string }>>
};

export const VerdocsSign: StencilReactComponent<VerdocsSignElement, VerdocsSignEvents> = /*@__PURE__*/ createComponent<VerdocsSignElement, VerdocsSignEvents>({
    tagName: 'verdocs-sign',
    elementClass: VerdocsSignElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSdkError: 'sdkError',
        onEnvelopeLoaded: 'envelopeLoaded',
        onEnvelopeUpdated: 'envelopeUpdated'
    } as VerdocsSignEvents,
    defineCustomElement: defineVerdocsSign
});

type VerdocsSignatureDialogEvents = {
    onNext: EventName<CustomEvent<string>>,
    onExit: EventName<CustomEvent<any>>
};

export const VerdocsSignatureDialog: StencilReactComponent<VerdocsSignatureDialogElement, VerdocsSignatureDialogEvents> = /*@__PURE__*/ createComponent<VerdocsSignatureDialogElement, VerdocsSignatureDialogEvents>({
    tagName: 'verdocs-signature-dialog',
    elementClass: VerdocsSignatureDialogElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onNext: 'next',
        onExit: 'exit'
    } as VerdocsSignatureDialogEvents,
    defineCustomElement: defineVerdocsSignatureDialog
});

type VerdocsSpinnerEvents = NonNullable<unknown>;

export const VerdocsSpinner: StencilReactComponent<VerdocsSpinnerElement, VerdocsSpinnerEvents> = /*@__PURE__*/ createComponent<VerdocsSpinnerElement, VerdocsSpinnerEvents>({
    tagName: 'verdocs-spinner',
    elementClass: VerdocsSpinnerElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsSpinnerEvents,
    defineCustomElement: defineVerdocsSpinner
});

type VerdocsStatusIndicatorEvents = NonNullable<unknown>;

export const VerdocsStatusIndicator: StencilReactComponent<VerdocsStatusIndicatorElement, VerdocsStatusIndicatorEvents> = /*@__PURE__*/ createComponent<VerdocsStatusIndicatorElement, VerdocsStatusIndicatorEvents>({
    tagName: 'verdocs-status-indicator',
    elementClass: VerdocsStatusIndicatorElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsStatusIndicatorEvents,
    defineCustomElement: defineVerdocsStatusIndicator
});

type VerdocsSwitchEvents = { onCheckedChange: EventName<CustomEvent<boolean>> };

export const VerdocsSwitch: StencilReactComponent<VerdocsSwitchElement, VerdocsSwitchEvents> = /*@__PURE__*/ createComponent<VerdocsSwitchElement, VerdocsSwitchEvents>({
    tagName: 'verdocs-switch',
    elementClass: VerdocsSwitchElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onCheckedChange: 'checkedChange' } as VerdocsSwitchEvents,
    defineCustomElement: defineVerdocsSwitch
});

type VerdocsTableEvents = {
    onColHeaderClick: EventName<VerdocsTableCustomEvent<{ col: IColumn }>>,
    onRowClick: EventName<CustomEvent<{ row: any }>>
};

export const VerdocsTable: StencilReactComponent<VerdocsTableElement, VerdocsTableEvents> = /*@__PURE__*/ createComponent<VerdocsTableElement, VerdocsTableEvents>({
    tagName: 'verdocs-table',
    elementClass: VerdocsTableElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onColHeaderClick: 'colHeaderClick',
        onRowClick: 'rowClick'
    } as VerdocsTableEvents,
    defineCustomElement: defineVerdocsTable
});

type VerdocsTabsEvents = { onSelectTab: EventName<VerdocsTabsCustomEvent<{ tab: ITab; index: number }>> };

export const VerdocsTabs: StencilReactComponent<VerdocsTabsElement, VerdocsTabsEvents> = /*@__PURE__*/ createComponent<VerdocsTabsElement, VerdocsTabsEvents>({
    tagName: 'verdocs-tabs',
    elementClass: VerdocsTabsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onSelectTab: 'selectTab' } as VerdocsTabsEvents,
    defineCustomElement: defineVerdocsTabs
});

type VerdocsTemplateAttachmentsEvents = {
    onExit: EventName<CustomEvent<any>>,
    onNext: EventName<VerdocsTemplateAttachmentsCustomEvent<{ template: ITemplate }>>,
    onTemplateUpdated: EventName<VerdocsTemplateAttachmentsCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; event: string }>>,
    onSdkError: EventName<VerdocsTemplateAttachmentsCustomEvent<SDKError>>
};

export const VerdocsTemplateAttachments: StencilReactComponent<VerdocsTemplateAttachmentsElement, VerdocsTemplateAttachmentsEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateAttachmentsElement, VerdocsTemplateAttachmentsEvents>({
    tagName: 'verdocs-template-attachments',
    elementClass: VerdocsTemplateAttachmentsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onExit: 'exit',
        onNext: 'next',
        onTemplateUpdated: 'templateUpdated',
        onSdkError: 'sdkError'
    } as VerdocsTemplateAttachmentsEvents,
    defineCustomElement: defineVerdocsTemplateAttachments
});

type VerdocsTemplateBuildTabsEvents = {
    onSdkError: EventName<VerdocsTemplateBuildTabsCustomEvent<SDKError>>,
    onStepChanged: EventName<VerdocsTemplateBuildTabsCustomEvent<TVerdocsBuildStep>>
};

export const VerdocsTemplateBuildTabs: StencilReactComponent<VerdocsTemplateBuildTabsElement, VerdocsTemplateBuildTabsEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateBuildTabsElement, VerdocsTemplateBuildTabsEvents>({
    tagName: 'verdocs-template-build-tabs',
    elementClass: VerdocsTemplateBuildTabsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSdkError: 'sdkError',
        onStepChanged: 'stepChanged'
    } as VerdocsTemplateBuildTabsEvents,
    defineCustomElement: defineVerdocsTemplateBuildTabs
});

type VerdocsTemplateCardEvents = NonNullable<unknown>;

export const VerdocsTemplateCard: StencilReactComponent<VerdocsTemplateCardElement, VerdocsTemplateCardEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateCardElement, VerdocsTemplateCardEvents>({
    tagName: 'verdocs-template-card',
    elementClass: VerdocsTemplateCardElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsTemplateCardEvents,
    defineCustomElement: defineVerdocsTemplateCard
});

type VerdocsTemplateCreateEvents = {
    onExit: EventName<CustomEvent<any>>,
    onNext: EventName<VerdocsTemplateCreateCustomEvent<ITemplate>>,
    onSdkError: EventName<VerdocsTemplateCreateCustomEvent<SDKError>>,
    onTemplateCreated: EventName<VerdocsTemplateCreateCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; templateId: string }>>
};

export const VerdocsTemplateCreate: StencilReactComponent<VerdocsTemplateCreateElement, VerdocsTemplateCreateEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateCreateElement, VerdocsTemplateCreateEvents>({
    tagName: 'verdocs-template-create',
    elementClass: VerdocsTemplateCreateElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onExit: 'exit',
        onNext: 'next',
        onSdkError: 'sdkError',
        onTemplateCreated: 'templateCreated'
    } as VerdocsTemplateCreateEvents,
    defineCustomElement: defineVerdocsTemplateCreate
});

type VerdocsTemplateDocumentPageEvents = { onPageRendered: EventName<VerdocsTemplateDocumentPageCustomEvent<IDocumentPageInfo>> };

export const VerdocsTemplateDocumentPage: StencilReactComponent<VerdocsTemplateDocumentPageElement, VerdocsTemplateDocumentPageEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateDocumentPageElement, VerdocsTemplateDocumentPageEvents>({
    tagName: 'verdocs-template-document-page',
    elementClass: VerdocsTemplateDocumentPageElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onPageRendered: 'pageRendered' } as VerdocsTemplateDocumentPageEvents,
    defineCustomElement: defineVerdocsTemplateDocumentPage
});

type VerdocsTemplateFieldPropertiesEvents = {
    onClose: EventName<CustomEvent<any>>,
    onDelete: EventName<CustomEvent<{ templateId: string; roleName: string }>>,
    onSettingsChanged: EventName<VerdocsTemplateFieldPropertiesCustomEvent<{ fieldName: string; field: ITemplateField }>>,
    onSdkError: EventName<VerdocsTemplateFieldPropertiesCustomEvent<SDKError>>
};

export const VerdocsTemplateFieldProperties: StencilReactComponent<VerdocsTemplateFieldPropertiesElement, VerdocsTemplateFieldPropertiesEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateFieldPropertiesElement, VerdocsTemplateFieldPropertiesEvents>({
    tagName: 'verdocs-template-field-properties',
    elementClass: VerdocsTemplateFieldPropertiesElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onClose: 'close',
        onDelete: 'delete',
        onSettingsChanged: 'settingsChanged',
        onSdkError: 'sdkError'
    } as VerdocsTemplateFieldPropertiesEvents,
    defineCustomElement: defineVerdocsTemplateFieldProperties
});

type VerdocsTemplateFieldsEvents = {
    onSdkError: EventName<VerdocsTemplateFieldsCustomEvent<SDKError>>,
    onTemplateUpdated: EventName<VerdocsTemplateFieldsCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; event: string }>>,
    onFieldsUpdated: EventName<VerdocsTemplateFieldsCustomEvent<{ endpoint: VerdocsEndpoint; templateId: string; event: 'added' | 'deleted' | 'updated'; fields: ITemplateField[] }>>
};

export const VerdocsTemplateFields: StencilReactComponent<VerdocsTemplateFieldsElement, VerdocsTemplateFieldsEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateFieldsElement, VerdocsTemplateFieldsEvents>({
    tagName: 'verdocs-template-fields',
    elementClass: VerdocsTemplateFieldsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSdkError: 'sdkError',
        onTemplateUpdated: 'templateUpdated',
        onFieldsUpdated: 'fieldsUpdated'
    } as VerdocsTemplateFieldsEvents,
    defineCustomElement: defineVerdocsTemplateFields
});

type VerdocsTemplateRolePropertiesEvents = {
    onClose: EventName<CustomEvent<any>>,
    onDelete: EventName<CustomEvent<{ templateId: string; roleName: string }>>,
    onSdkError: EventName<VerdocsTemplateRolePropertiesCustomEvent<SDKError>>
};

export const VerdocsTemplateRoleProperties: StencilReactComponent<VerdocsTemplateRolePropertiesElement, VerdocsTemplateRolePropertiesEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateRolePropertiesElement, VerdocsTemplateRolePropertiesEvents>({
    tagName: 'verdocs-template-role-properties',
    elementClass: VerdocsTemplateRolePropertiesElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onClose: 'close',
        onDelete: 'delete',
        onSdkError: 'sdkError'
    } as VerdocsTemplateRolePropertiesEvents,
    defineCustomElement: defineVerdocsTemplateRoleProperties
});

type VerdocsTemplateRolesEvents = {
    onNext: EventName<CustomEvent<any>>,
    onExit: EventName<CustomEvent<any>>,
    onSdkError: EventName<VerdocsTemplateRolesCustomEvent<SDKError>>,
    onRolesUpdated: EventName<VerdocsTemplateRolesCustomEvent<{ endpoint: VerdocsEndpoint; templateId: string; event: 'added' | 'deleted' | 'updated'; roles: IRole[] }>>
};

export const VerdocsTemplateRoles: StencilReactComponent<VerdocsTemplateRolesElement, VerdocsTemplateRolesEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateRolesElement, VerdocsTemplateRolesEvents>({
    tagName: 'verdocs-template-roles',
    elementClass: VerdocsTemplateRolesElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onNext: 'next',
        onExit: 'exit',
        onSdkError: 'sdkError',
        onRolesUpdated: 'rolesUpdated'
    } as VerdocsTemplateRolesEvents,
    defineCustomElement: defineVerdocsTemplateRoles
});

type VerdocsTemplateSettingsEvents = {
    onNext: EventName<CustomEvent<any>>,
    onExit: EventName<CustomEvent<any>>,
    onSdkError: EventName<VerdocsTemplateSettingsCustomEvent<SDKError>>,
    onTemplateUpdated: EventName<VerdocsTemplateSettingsCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate; event: string }>>
};

export const VerdocsTemplateSettings: StencilReactComponent<VerdocsTemplateSettingsElement, VerdocsTemplateSettingsEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateSettingsElement, VerdocsTemplateSettingsEvents>({
    tagName: 'verdocs-template-settings',
    elementClass: VerdocsTemplateSettingsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onNext: 'next',
        onExit: 'exit',
        onSdkError: 'sdkError',
        onTemplateUpdated: 'templateUpdated'
    } as VerdocsTemplateSettingsEvents,
    defineCustomElement: defineVerdocsTemplateSettings
});

type VerdocsTemplateStarEvents = {
    onStarChange: EventName<CustomEvent<{ templateId: string; starred: boolean; count: number }>>,
    onSdkError: EventName<VerdocsTemplateStarCustomEvent<SDKError>>
};

export const VerdocsTemplateStar: StencilReactComponent<VerdocsTemplateStarElement, VerdocsTemplateStarEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateStarElement, VerdocsTemplateStarEvents>({
    tagName: 'verdocs-template-star',
    elementClass: VerdocsTemplateStarElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onStarChange: 'starChange',
        onSdkError: 'sdkError'
    } as VerdocsTemplateStarEvents,
    defineCustomElement: defineVerdocsTemplateStar
});

type VerdocsTemplateTagsEvents = NonNullable<unknown>;

export const VerdocsTemplateTags: StencilReactComponent<VerdocsTemplateTagsElement, VerdocsTemplateTagsEvents> = /*@__PURE__*/ createComponent<VerdocsTemplateTagsElement, VerdocsTemplateTagsEvents>({
    tagName: 'verdocs-template-tags',
    elementClass: VerdocsTemplateTagsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsTemplateTagsEvents,
    defineCustomElement: defineVerdocsTemplateTags
});

type VerdocsTemplatesListEvents = {
    onSdkError: EventName<VerdocsTemplatesListCustomEvent<SDKError>>,
    onViewTemplate: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onSignNow: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onSubmittedData: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onEditTemplate: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onTemplateDeleted: EventName<VerdocsTemplatesListCustomEvent<{ endpoint: VerdocsEndpoint; template: ITemplate }>>,
    onChangeSort: EventName<CustomEvent<string>>,
    onChangeVisibility: EventName<CustomEvent<'private_shared' | 'private' | 'shared' | 'public'>>,
    onChangeStarred: EventName<CustomEvent<'all' | 'starred' | 'unstarred'>>,
    onChangeName: EventName<CustomEvent<string>>
};

export const VerdocsTemplatesList: StencilReactComponent<VerdocsTemplatesListElement, VerdocsTemplatesListEvents> = /*@__PURE__*/ createComponent<VerdocsTemplatesListElement, VerdocsTemplatesListEvents>({
    tagName: 'verdocs-templates-list',
    elementClass: VerdocsTemplatesListElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSdkError: 'sdkError',
        onViewTemplate: 'viewTemplate',
        onSignNow: 'signNow',
        onSubmittedData: 'submittedData',
        onEditTemplate: 'editTemplate',
        onTemplateDeleted: 'templateDeleted',
        onChangeSort: 'changeSort',
        onChangeVisibility: 'changeVisibility',
        onChangeStarred: 'changeStarred',
        onChangeName: 'changeName'
    } as VerdocsTemplatesListEvents,
    defineCustomElement: defineVerdocsTemplatesList
});

type VerdocsTextInputEvents = NonNullable<unknown>;

export const VerdocsTextInput: StencilReactComponent<VerdocsTextInputElement, VerdocsTextInputEvents> = /*@__PURE__*/ createComponent<VerdocsTextInputElement, VerdocsTextInputEvents>({
    tagName: 'verdocs-text-input',
    elementClass: VerdocsTextInputElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsTextInputEvents,
    defineCustomElement: defineVerdocsTextInput
});

type VerdocsToggleEvents = NonNullable<unknown>;

export const VerdocsToggle: StencilReactComponent<VerdocsToggleElement, VerdocsToggleEvents> = /*@__PURE__*/ createComponent<VerdocsToggleElement, VerdocsToggleEvents>({
    tagName: 'verdocs-toggle',
    elementClass: VerdocsToggleElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsToggleEvents,
    defineCustomElement: defineVerdocsToggle
});

type VerdocsToggleButtonEvents = { onToggle: EventName<CustomEvent<{ active: boolean }>> };

export const VerdocsToggleButton: StencilReactComponent<VerdocsToggleButtonElement, VerdocsToggleButtonEvents> = /*@__PURE__*/ createComponent<VerdocsToggleButtonElement, VerdocsToggleButtonEvents>({
    tagName: 'verdocs-toggle-button',
    elementClass: VerdocsToggleButtonElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onToggle: 'toggle' } as VerdocsToggleButtonEvents,
    defineCustomElement: defineVerdocsToggleButton
});

type VerdocsToolbarIconEvents = NonNullable<unknown>;

export const VerdocsToolbarIcon: StencilReactComponent<VerdocsToolbarIconElement, VerdocsToolbarIconEvents> = /*@__PURE__*/ createComponent<VerdocsToolbarIconElement, VerdocsToolbarIconEvents>({
    tagName: 'verdocs-toolbar-icon',
    elementClass: VerdocsToolbarIconElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as VerdocsToolbarIconEvents,
    defineCustomElement: defineVerdocsToolbarIcon
});

type VerdocsUploadDialogEvents = {
    onExit: EventName<CustomEvent<any>>,
    onNext: EventName<VerdocsUploadDialogCustomEvent<File[]>>,
    onRemove: EventName<CustomEvent<any>>
};

export const VerdocsUploadDialog: StencilReactComponent<VerdocsUploadDialogElement, VerdocsUploadDialogEvents> = /*@__PURE__*/ createComponent<VerdocsUploadDialogElement, VerdocsUploadDialogEvents>({
    tagName: 'verdocs-upload-dialog',
    elementClass: VerdocsUploadDialogElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onExit: 'exit',
        onNext: 'next',
        onRemove: 'remove'
    } as VerdocsUploadDialogEvents,
    defineCustomElement: defineVerdocsUploadDialog
});

type VerdocsViewEvents = {
    onSdkError: EventName<VerdocsViewCustomEvent<SDKError>>,
    onEnvelopeUpdated: EventName<VerdocsViewCustomEvent<{ endpoint: VerdocsEndpoint; envelope: IEnvelope; event: string }>>,
    onAnother: EventName<CustomEvent<any>>,
    onView: EventName<CustomEvent<any>>,
    onNext: EventName<CustomEvent<any>>
};

export const VerdocsView: StencilReactComponent<VerdocsViewElement, VerdocsViewEvents> = /*@__PURE__*/ createComponent<VerdocsViewElement, VerdocsViewEvents>({
    tagName: 'verdocs-view',
    elementClass: VerdocsViewElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSdkError: 'sdkError',
        onEnvelopeUpdated: 'envelopeUpdated',
        onAnother: 'another',
        onView: 'view',
        onNext: 'next'
    } as VerdocsViewEvents,
    defineCustomElement: defineVerdocsView
});

/*! For license information please see 15.f65abc26.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"./dist/esm/Colors-1b298092.js":function(module,__webpack_exports__,__webpack_require__){"use strict";function getRGBA(roleIndex){switch(roleIndex%10){case 0:return 0===roleIndex?"rgba(255, 193, 7, 0.4)":"rgba(134, 134, 134, 0.3)";case 1:return"rgba(156, 39, 176, .4)";case 2:return"rgba(33, 150, 243, .4)";case 3:return"rgba(220, 231, 117, 0.3)";case 4:return"rgba(121, 134, 203, 0.3)";case 5:return"rgba(77, 182, 172, 0.3)";case 6:return"rgba(255, 202, 165, 0.3)";case 7:return"rgba(2, 247, 190, 0.3)";case 8:return"rgba(255, 138, 101, 0.3)";case 9:return"rgba(82, 255, 79, 0.3)";default:return"rgba(229, 115, 155, 0.3)"}}__webpack_require__.d(__webpack_exports__,"a",(function(){return getRGBA}))},"./dist/esm/TemplateDocuments-89ba2276.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return createTemplateDocument})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getTemplateDocument}));__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js");var getTemplateDocument=function getTemplateDocument(endpoint,templateId,documentId){return endpoint.api.get("/templates/".concat(templateId,"/documents/").concat(documentId)).then((function(r){return r.data}))},createTemplateDocument=function createTemplateDocument(endpoint,templateId,file,_onUploadProgress){var formData=new FormData;return formData.append("document",file,file.name),endpoint.api.post("/templates/".concat(templateId,"/documents"),formData,{timeout:1e4,onUploadProgress:function onUploadProgress(event){return null==_onUploadProgress?void 0:_onUploadProgress(Math.floor(100*event.loaded/event.total),event.loaded,event.total)}}).then((function(r){return r.data}))}},"./dist/esm/Templates-91922342.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return loadTemplate}));__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js");var _Templates_f7c590c0_js__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__("./dist/esm/Templates-f7c590c0.js"),_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__("./dist/esm/templateStore-3b26e38d.js");function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(void 0===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}var loadTemplate=function(){var _ref=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(_regeneratorRuntime().mark((function _callee(endpoint,templateId){var template;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_22__.a.template=null,templateId){_context.next=4;break}return console.log("[TEMPLATES] Missing required template ID"),_context.abrupt("return");case 4:return _templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_22__.a.loading=!0,_context.prev=5,console.log("[TEMPLATES] Loading template "+templateId),_context.next=9,Object(_Templates_f7c590c0_js__WEBPACK_IMPORTED_MODULE_21__.c)(endpoint,templateId);case 9:if(template=_context.sent){_context.next=13;break}return console.log("[TEMPLATES] Unable to load template"),_context.abrupt("return");case 13:_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_22__.a.template=template,_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_22__.a.loading=!1,_context.next=21;break;case 17:throw _context.prev=17,_context.t0=_context.catch(5),console.log("[TEMPLATES] Error loading template",_context.t0),_context.t0;case 21:case"end":return _context.stop()}}),_callee,null,[[5,17]])})));return function loadTemplate(_x,_x2){return _ref.apply(this,arguments)}}()},"./dist/esm/Templates-f7c590c0.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getTemplates})),__webpack_require__.d(__webpack_exports__,"b",(function(){return createTemplate})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getTemplate}));var getTemplates=function getTemplates(endpoint,params){return endpoint.api.post("/templates",{params:params}).then((function(r){return r.data}))},getTemplate=function getTemplate(endpoint,templateId){return endpoint.api.get("/templates/".concat(templateId)).then((function(r){return r.data}))},createTemplate=function createTemplate(endpoint,params){return endpoint.api.post("/templates/",params).then((function(r){return r.data}))}},"./dist/esm/errors-9b5498c8.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SDKError}));__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.reflect.construct.js"),__webpack_require__("./node_modules/core-js/modules/es.map.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}function _possibleConstructorReturn(self,call){if(call&&("object"==typeof call||"function"==typeof call))return call;if(void 0!==call)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(self)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _wrapNativeSuper(Class){var _cache="function"==typeof Map?new Map:void 0;return _wrapNativeSuper=function _wrapNativeSuper(Class){if(null===Class||!function _isNativeFunction(fn){return-1!==Function.toString.call(fn).indexOf("[native code]")}(Class))return Class;if("function"!=typeof Class)throw new TypeError("Super expression must either be null or a function");if(void 0!==_cache){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper)}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor)}return Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(Wrapper,Class)},_wrapNativeSuper(Class)}function _construct(Parent,args,Class){return _construct=_isNativeReflectConstruct()?Reflect.construct.bind():function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var instance=new(Function.bind.apply(Parent,a));return Class&&_setPrototypeOf(instance,Class.prototype),instance},_construct.apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}var SDKError=function(_Error){!function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),Object.defineProperty(subClass,"prototype",{writable:!1}),superClass&&_setPrototypeOf(subClass,superClass)}(SDKError,_Error);var _super=function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}(SDKError);function SDKError(message,statusCode,response){var _this;return function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,SDKError),(_this=_super.call(this,message||"SDK Error")).response=response,_this.statusCode=statusCode,Object.setPrototypeOf(_assertThisInitialized(_this),(this instanceof SDKError?this.constructor:void 0).prototype),_this}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(SDKError)}(_wrapNativeSuper(Error))},"./dist/esm/verdocs-template-create_4.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_template_create",(function(){return VerdocsTemplateCreate})),__webpack_require__.d(__webpack_exports__,"verdocs_template_fields",(function(){return VerdocsTemplateFields})),__webpack_require__.d(__webpack_exports__,"verdocs_template_properties",(function(){return VerdocsTemplateProperties})),__webpack_require__.d(__webpack_exports__,"verdocs_template_recipients",(function(){return VerdocsTemplateRecipients}));__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.splice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.parse-int.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.string.trim.js"),__webpack_require__("./node_modules/core-js/modules/es.string.search.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reduce.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.reflect.construct.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.date.now.js"),__webpack_require__("./node_modules/core-js/modules/web.timers.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.array.some.js"),__webpack_require__("./node_modules/core-js/modules/es.reflect.get.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.global-this.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.string.match-all.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find-index.js"),__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js");var _senderLabels,_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__=__webpack_require__("./dist/esm/index-f78d163d.js"),_Templates_f7c590c0_js__WEBPACK_IMPORTED_MODULE_56__=__webpack_require__("./dist/esm/Templates-f7c590c0.js"),_TemplateDocuments_89ba2276_js__WEBPACK_IMPORTED_MODULE_57__=__webpack_require__("./dist/esm/TemplateDocuments-89ba2276.js"),_Types_ab9f6af8_js__WEBPACK_IMPORTED_MODULE_58__=__webpack_require__("./dist/esm/Types-ab9f6af8.js"),_VerdocsEndpoint_82f4600d_js__WEBPACK_IMPORTED_MODULE_59__=__webpack_require__("./dist/esm/VerdocsEndpoint-82f4600d.js"),_errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_60__=__webpack_require__("./dist/esm/errors-9b5498c8.js"),_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_61__=__webpack_require__("./dist/esm/Colors-1b298092.js"),_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_62__=__webpack_require__("./dist/esm/utils-3f23facc.js"),_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_63__=__webpack_require__("./dist/esm/templateStore-3b26e38d.js"),_Templates_91922342_js__WEBPACK_IMPORTED_MODULE_64__=__webpack_require__("./dist/esm/Templates-91922342.js");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(void 0===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}function _asyncIterator(iterable){var method,async,sync,retry=2;for("undefined"!=typeof Symbol&&(async=Symbol.asyncIterator,sync=Symbol.iterator);retry--;){if(async&&null!=(method=iterable[async]))return method.call(iterable);if(sync&&null!=(method=iterable[sync]))return new AsyncFromSyncIterator(method.call(iterable));async="@@asyncIterator",sync="@@iterator"}throw new TypeError("Object is not async iterable")}function AsyncFromSyncIterator(s){function AsyncFromSyncIteratorContinuation(r){if(Object(r)!==r)return Promise.reject(new TypeError(r+" is not an object."));var done=r.done;return Promise.resolve(r.value).then((function(value){return{value:value,done:done}}))}return AsyncFromSyncIterator=function AsyncFromSyncIterator(s){this.s=s,this.n=s.next},AsyncFromSyncIterator.prototype={s:null,n:null,next:function next(){return AsyncFromSyncIteratorContinuation(this.n.apply(this.s,arguments))},return:function _return(value){var ret=this.s.return;return void 0===ret?Promise.resolve({value:value,done:!0}):AsyncFromSyncIteratorContinuation(ret.apply(this.s,arguments))},throw:function _throw(value){var thr=this.s.return;return void 0===thr?Promise.reject(value):AsyncFromSyncIteratorContinuation(thr.apply(this.s,arguments))}},new AsyncFromSyncIterator(s)}var createPage=function createPage(endpoint,templateId,params){return endpoint.api.post("/templates/".concat(templateId,"/pages"),params).then((function(r){return r.data}))},VerdocsTemplateCreate=function(){function VerdocsTemplateCreate(hostRef){_classCallCheck(this,VerdocsTemplateCreate),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.j)(this,hostRef),this.cancel=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"cancel",7),this.templateCreated=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"templateCreated",7),this.sdkError=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"sdkError",7),this.endpoint=_VerdocsEndpoint_82f4600d_js__WEBPACK_IMPORTED_MODULE_59__.a.getDefault(),this.file=void 0}var _handleSubmit;return _createClass(VerdocsTemplateCreate,[{key:"componentWillLoad",value:function componentWillLoad(){}},{key:"handleFileChanged",value:function handleFileChanged(e){var _a;console.log("files",e.target.files),this.file=(null===(_a=e.target.files)||void 0===_a?void 0:_a[0])||null,console.log("Selected file",this.file)}},{key:"handleUpload",value:function handleUpload(e){e.stopPropagation(),document.getElementById("verdocs-template-create-file").click()}},{key:"handleCancel",value:function handleCancel(e){var _a;e.stopPropagation(),null===(_a=this.cancel)||void 0===_a||_a.emit()}},{key:"handleSubmit",value:(_handleSubmit=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(e){var _a,_b,_c,_d,template,template_document,_iteratorAbruptCompletion,_didIteratorError,_iteratorError,_iterator,_step,pageNumber,page;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(e.stopPropagation(),this.file){_context.next=3;break}return _context.abrupt("return");case 3:return _context.prev=3,_context.next=6,Object(_Templates_f7c590c0_js__WEBPACK_IMPORTED_MODULE_56__.b)(this.endpoint,{name:this.file.name});case 6:return template=_context.sent,console.log("created template",template),_context.next=10,Object(_TemplateDocuments_89ba2276_js__WEBPACK_IMPORTED_MODULE_57__.a)(this.endpoint,template.id,this.file);case 10:template_document=_context.sent,console.log("created document",template_document),_iteratorAbruptCompletion=!1,_didIteratorError=!1,_context.prev=14,_iterator=_asyncIterator(Array.from(Array(template_document.page_numbers).keys(),(function(n){return n+1})));case 16:return _context.next=18,_iterator.next();case 18:if(!(_iteratorAbruptCompletion=!(_step=_context.sent).done)){_context.next=28;break}return pageNumber=_step.value,console.log("Updating page",pageNumber),_context.next=23,createPage(this.endpoint,template.id,{sequence:pageNumber,page_number:pageNumber,document_id:template_document.id});case 23:page=_context.sent,console.log("Created page",page);case 25:_iteratorAbruptCompletion=!1,_context.next=16;break;case 28:_context.next=34;break;case 30:_context.prev=30,_context.t0=_context.catch(14),_didIteratorError=!0,_iteratorError=_context.t0;case 34:if(_context.prev=34,_context.prev=35,!_iteratorAbruptCompletion||null==_iterator.return){_context.next=39;break}return _context.next=39,_iterator.return();case 39:if(_context.prev=39,!_didIteratorError){_context.next=42;break}throw _iteratorError;case 42:return _context.finish(39);case 43:return _context.finish(34);case 44:null===(_a=this.templateCreated)||void 0===_a||_a.emit({template:template,template_document:template_document}),_context.next=51;break;case 47:_context.prev=47,_context.t1=_context.catch(3),console.log("[TEMPLATE-CREATE] Error creating template",_context.t1),null===(_b=this.sdkError)||void 0===_b||_b.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_60__.a(_context.t1.message,null===(_c=_context.t1.response)||void 0===_c?void 0:_c.status,null===(_d=_context.t1.response)||void 0===_d?void 0:_d.data));case 51:case"end":return _context.stop()}}),_callee,this,[[3,47],[14,30,34,44],[35,,39,43]])}))),function handleSubmit(_x){return _handleSubmit.apply(this,arguments)})},{key:"render",value:function render(){var _this=this;return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("form",{onSubmit:function onSubmit(e){return e.preventDefault()},onClick:function onClick(e){return e.stopPropagation()},autocomplete:"off"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("input",{type:"file",id:"verdocs-template-create-file",multiple:!0,accept:"application/pdf",style:{display:"none"},onChange:function onChange(e){return _this.handleFileChanged(e)}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"upload-box"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("span",{innerHTML:'<svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><path d="M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"></path></svg>'})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{style:{marginTop:"20px",fontSize:"20px",fontWeight:"bold"}},"Drag a file here"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{style:{marginTop:"20px",marginBottom:"20px",fontSize:"16px"}},"Or, if you prefer..."),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-button",{label:"Select a file from your computer",size:"small",onClick:function onClick(e){return _this.handleUpload(e)}})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"buttons"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-button",{variant:"outline",label:"Cancel",size:"small",onClick:function onClick(e){return _this.handleCancel(e)}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-button",{label:"Next",size:"small",onClick:function onClick(e){return _this.handleSubmit(e)},disabled:!this.file})))}}]),VerdocsTemplateCreate}();function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}VerdocsTemplateCreate.style='verdocs-template-create{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-template-create form{background-color:#ffffff;padding:12px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}verdocs-template-create form .upload-box{max-width:320px;text-align:center;padding:44px 18px 66px;border:2px dashed #979797;color:rgba(0, 0, 0, 0.54)}verdocs-template-create form .upload-box svg{width:64px;fill:#5c6575}verdocs-template-create .buttons{display:-ms-flexbox;display:flex;-webkit-column-gap:8px;-moz-column-gap:8px;column-gap:8px;margin-top:16px;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:end;justify-content:flex-end}verdocs-template-create .buttons .flex-fill{-ms-flex:1;flex:1}verdocs-template-create ::-webkit-input-placeholder{color:#aaaaaa}verdocs-template-create ::-moz-placeholder{color:#aaaaaa}verdocs-template-create :-ms-input-placeholder{color:#aaaaaa}verdocs-template-create ::-ms-input-placeholder{color:#aaaaaa}verdocs-template-create ::placeholder{color:#aaaaaa}';var interact_min=function createCommonjsModule(fn,basedir,module){return fn(module={path:basedir,exports:{},require:function require(path,base){return function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}()}},module.exports),module.exports}((function(module,exports){module.exports=function(){var t={};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,t.default=function(t){return!(!t||!t.Window)&&t instanceof t.Window};var e={};Object.defineProperty(e,"__esModule",{value:!0}),e.getWindow=function(e){return(0,t.default)(e)?e:(e.ownerDocument||e).defaultView||r.window},e.init=o,e.window=e.realWindow=void 0;var n=void 0;e.realWindow=n;var r=void 0;function o(t){e.realWindow=n=t;var o=t.document.createTextNode("");o.ownerDocument!==t.document&&"function"==typeof t.wrap&&t.wrap(o)===o&&(t=t.wrap(t)),e.window=r=t}e.window=r,"undefined"!=typeof window&&window&&o(window);var i={};function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;var s=function s(t){return!!t&&"object"===a(t)},l=function l(t){return"function"==typeof t},u={window:function window(n){return n===e.window||(0,t.default)(n)},docFrag:function docFrag(t){return s(t)&&11===t.nodeType},object:s,func:l,number:function number(t){return"number"==typeof t},bool:function bool(t){return"boolean"==typeof t},string:function string(t){return"string"==typeof t},element:function element(t){if(!t||"object"!==a(t))return!1;var n=e.getWindow(t)||e.window;return/object|function/.test("undefined"==typeof Element?"undefined":a(Element))?t instanceof Element||t instanceof n.Element:1===t.nodeType&&"string"==typeof t.nodeName},plainObject:function plainObject(t){return s(t)&&!!t.constructor&&/function Object\b/.test(t.constructor.toString())},array:function array(t){return s(t)&&void 0!==t.length&&l(t.splice)}};i.default=u;var c={};function f(t){var e=t.interaction;if("drag"===e.prepared.name){var n=e.prepared.axis;"x"===n?(e.coords.cur.page.y=e.coords.start.page.y,e.coords.cur.client.y=e.coords.start.client.y,e.coords.velocity.client.y=0,e.coords.velocity.page.y=0):"y"===n&&(e.coords.cur.page.x=e.coords.start.page.x,e.coords.cur.client.x=e.coords.start.client.x,e.coords.velocity.client.x=0,e.coords.velocity.page.x=0)}}function d(t){var e=t.iEvent,n=t.interaction;if("drag"===n.prepared.name){var r=n.prepared.axis;if("x"===r||"y"===r){var o="x"===r?"y":"x";e.page[o]=n.coords.start.page[o],e.client[o]=n.coords.start.client[o],e.delta[o]=0}}}Object.defineProperty(c,"__esModule",{value:!0}),c.default=void 0;var p={id:"actions/drag",install:function install(t){var e=t.actions,n=t.Interactable,r=t.defaults;n.prototype.draggable=p.draggable,e.map.drag=p,e.methodDict.drag="draggable",r.actions.drag=p.defaults},listeners:{"interactions:before-action-move":f,"interactions:action-resume":f,"interactions:action-move":d,"auto-start:check":function autoStartCheck(t){var e=t.interaction,n=t.interactable,r=t.buttons,o=n.options.drag;if(o&&o.enabled&&(!e.pointerIsDown||!/mouse|pointer/.test(e.pointerType)||0!=(r&n.options.drag.mouseButtons)))return t.action={name:"drag",axis:"start"===o.lockAxis?o.startAxis:o.lockAxis},!1}},draggable:function draggable(t){return i.default.object(t)?(this.options.drag.enabled=!1!==t.enabled,this.setPerAction("drag",t),this.setOnEvents("drag",t),/^(xy|x|y|start)$/.test(t.lockAxis)&&(this.options.drag.lockAxis=t.lockAxis),/^(xy|x|y)$/.test(t.startAxis)&&(this.options.drag.startAxis=t.startAxis),this):i.default.bool(t)?(this.options.drag.enabled=t,this):this.options.drag},beforeMove:f,move:d,defaults:{startAxis:"xy",lockAxis:"xy"},getCursor:function getCursor(){return"move"}},v=p;c.default=v;var h={};Object.defineProperty(h,"__esModule",{value:!0}),h.default=void 0;var g={init:function init(t){var e=t;g.document=e.document,g.DocumentFragment=e.DocumentFragment||y,g.SVGElement=e.SVGElement||y,g.SVGSVGElement=e.SVGSVGElement||y,g.SVGElementInstance=e.SVGElementInstance||y,g.Element=e.Element||y,g.HTMLElement=e.HTMLElement||g.Element,g.Event=e.Event,g.Touch=e.Touch||y,g.PointerEvent=e.PointerEvent||e.MSPointerEvent},document:null,DocumentFragment:null,SVGElement:null,SVGSVGElement:null,SVGElementInstance:null,Element:null,HTMLElement:null,Event:null,Touch:null,PointerEvent:null};function y(){}var m=g;h.default=m;var b={};Object.defineProperty(b,"__esModule",{value:!0}),b.default=void 0;var x={init:function init(t){var e=h.default.Element,n=t.navigator||{};x.supportsTouch="ontouchstart"in t||i.default.func(t.DocumentTouch)&&h.default.document instanceof t.DocumentTouch,x.supportsPointerEvent=!1!==n.pointerEnabled&&!!h.default.PointerEvent,x.isIOS=/iP(hone|od|ad)/.test(n.platform),x.isIOS7=/iP(hone|od|ad)/.test(n.platform)&&/OS 7[^\d]/.test(n.appVersion),x.isIe9=/MSIE 9/.test(n.userAgent),x.isOperaMobile="Opera"===n.appName&&x.supportsTouch&&/Presto/.test(n.userAgent),x.prefixedMatchesSelector="matches"in e.prototype?"matches":"webkitMatchesSelector"in e.prototype?"webkitMatchesSelector":"mozMatchesSelector"in e.prototype?"mozMatchesSelector":"oMatchesSelector"in e.prototype?"oMatchesSelector":"msMatchesSelector",x.pEventTypes=x.supportsPointerEvent?h.default.PointerEvent===t.MSPointerEvent?{up:"MSPointerUp",down:"MSPointerDown",over:"mouseover",out:"mouseout",move:"MSPointerMove",cancel:"MSPointerCancel"}:{up:"pointerup",down:"pointerdown",over:"pointerover",out:"pointerout",move:"pointermove",cancel:"pointercancel"}:null,x.wheelEvent=h.default.document&&"onmousewheel"in h.default.document?"mousewheel":"wheel"},supportsTouch:null,supportsPointerEvent:null,isIOS7:null,isIOS:null,isIe9:null,isOperaMobile:null,prefixedMatchesSelector:null,pEventTypes:null,wheelEvent:null},w=x;b.default=w;var _={};function P(t){var e=t.parentNode;if(i.default.docFrag(e)){for(;(e=e.host)&&i.default.docFrag(e););return e}return e}function O(t,n){return e.window!==e.realWindow&&(n=n.replace(/\/deep\//g," ")),t[b.default.prefixedMatchesSelector](n)}Object.defineProperty(_,"__esModule",{value:!0}),_.closest=function(t,e){for(;i.default.element(t);){if(O(t,e))return t;t=P(t)}return null},_.getActualElement=function(t){return t.correspondingUseElement||t},_.getElementClientRect=j,_.getElementRect=function(t){var n=j(t);if(!b.default.isIOS7&&n){var r=T(e.getWindow(t));n.left+=r.x,n.right+=r.x,n.top+=r.y,n.bottom+=r.y}return n},_.getPath=function(t){for(var e=[];t;)e.push(t),t=P(t);return e},_.getScrollXY=T,_.indexOfDeepestElement=function(t){for(var n,r=[],o=0;o<t.length;o++){var i=t[o],a=t[n];if(i&&o!==n)if(a){var s=E(i),l=E(a);if(s!==i.ownerDocument)if(l!==i.ownerDocument)if(s!==l){r=r.length?r:S(a);var u=void 0;if(a instanceof h.default.HTMLElement&&i instanceof h.default.SVGElement&&!(i instanceof h.default.SVGSVGElement)){if(i===l)continue;u=i.ownerSVGElement}else u=i;for(var c=S(u,a.ownerDocument),f=0;c[f]&&c[f]===r[f];)f++;var d=[c[f-1],c[f],r[f]];if(d[0])for(var p=d[0].lastChild;p;){if(p===d[1]){n=o,r=c;break}if(p===d[2])break;p=p.previousSibling}}else v=i,g=a,(parseInt(e.getWindow(v).getComputedStyle(v).zIndex,10)||0)>=(parseInt(e.getWindow(g).getComputedStyle(g).zIndex,10)||0)&&(n=o);else n=o}else n=o}var v,g;return n},_.matchesSelector=O,_.matchesUpTo=function(t,e,n){for(;i.default.element(t);){if(O(t,e))return!0;if((t=P(t))===n)return O(t,e)}return!1},_.nodeContains=function(t,e){if(t.contains)return t.contains(e);for(;e;){if(e===t)return!0;e=e.parentNode}return!1},_.parentNode=P,_.trySelector=function(t){return!!i.default.string(t)&&(h.default.document.querySelector(t),!0)};var E=function E(t){return t.parentNode||t.host};function S(t,e){for(var n,r=[],o=t;(n=E(o))&&o!==e&&n!==o.ownerDocument;)r.unshift(o),o=n;return r}function T(t){return{x:(t=t||e.window).scrollX||t.document.documentElement.scrollLeft,y:t.scrollY||t.document.documentElement.scrollTop}}function j(t){var e=t instanceof h.default.SVGElement?t.getBoundingClientRect():t.getClientRects()[0];return e&&{left:e.left,right:e.right,top:e.top,bottom:e.bottom,width:e.width||e.right-e.left,height:e.height||e.bottom-e.top}}var M={};Object.defineProperty(M,"__esModule",{value:!0}),M.default=function(t,e){for(var n in e)t[n]=e[n];return t};var k={};function I(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function D(t,e,n){return"parent"===t?(0,_.parentNode)(n):"self"===t?e.getRect(n):(0,_.closest)(n,t)}Object.defineProperty(k,"__esModule",{value:!0}),k.addEdges=function(t,e,n){t.left&&(e.left+=n.x),t.right&&(e.right+=n.x),t.top&&(e.top+=n.y),t.bottom&&(e.bottom+=n.y),e.width=e.right-e.left,e.height=e.bottom-e.top},k.getStringOptionResult=D,k.rectToXY=function(t){return t&&{x:"x"in t?t.x:t.left,y:"y"in t?t.y:t.top}},k.resolveRectLike=function(t,e,n,r){var o,a=t;return i.default.string(a)?a=D(a,e,n):i.default.func(a)&&(a=a.apply(void 0,function(t){if(Array.isArray(t))return I(t)}(o=r)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(o)||function(t,e){if(t){if("string"==typeof t)return I(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?I(t,e):void 0}}(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())),i.default.element(a)&&(a=(0,_.getElementRect)(a)),a},k.tlbrToXywh=function(t){return!t||"x"in t&&"y"in t||((t=(0,M.default)({},t)).x=t.left||0,t.y=t.top||0,t.width=t.width||(t.right||0)-t.x,t.height=t.height||(t.bottom||0)-t.y),t},k.xywhToTlbr=function(t){return!t||"left"in t&&"top"in t||((t=(0,M.default)({},t)).left=t.x||0,t.top=t.y||0,t.right=t.right||t.left+t.width,t.bottom=t.bottom||t.top+t.height),t};var A={};Object.defineProperty(A,"__esModule",{value:!0}),A.default=function(t,e,n){var r=t.options[n],o=r&&r.origin||t.options.origin,i=(0,k.resolveRectLike)(o,t,e,[t&&e]);return(0,k.rectToXY)(i)||{x:0,y:0}};var z={};function C(t){return t.trim().split(/ +/)}Object.defineProperty(z,"__esModule",{value:!0}),z.default=function t(e,n,r){if(r=r||{},i.default.string(e)&&-1!==e.search(" ")&&(e=C(e)),i.default.array(e))return e.reduce((function(e,o){return(0,M.default)(e,t(o,n,r))}),r);if(i.default.object(e)&&(n=e,e=""),i.default.func(n))r[e]=r[e]||[],r[e].push(n);else if(i.default.array(n))for(var o=0;o<n.length;o++){var a;a=n[o],t(e,a,r)}else if(i.default.object(n))for(var s in n){var l=C(s).map((function(t){return"".concat(e).concat(t)}));t(l,n[s],r)}return r};var R={};Object.defineProperty(R,"__esModule",{value:!0}),R.default=void 0,R.default=function(t,e){return Math.sqrt(t*t+e*e)};var F={};Object.defineProperty(F,"__esModule",{value:!0}),F.default=function(t,e){t.__set||(t.__set={});var n=function n(_n2){"function"!=typeof t[_n2]&&"__set"!==_n2&&Object.defineProperty(t,_n2,{get:function get(){return _n2 in t.__set?t.__set[_n2]:t.__set[_n2]=e[_n2]},set:function set(e){t.__set[_n2]=e},configurable:!0})};for(var r in e)n(r);return t};var X={};function B(t){return t instanceof h.default.Event||t instanceof h.default.Touch}function Y(t,e,n){return t=t||"page",(n=n||{}).x=e[t+"X"],n.y=e[t+"Y"],n}function W(t,e){return e=e||{x:0,y:0},b.default.isOperaMobile&&B(t)?(Y("screen",t,e),e.x+=window.scrollX,e.y+=window.scrollY):Y("page",t,e),e}function L(t,e){return e=e||{},b.default.isOperaMobile&&B(t)?Y("screen",t,e):Y("client",t,e),e}function U(t){var e=[];return i.default.array(t)?(e[0]=t[0],e[1]=t[1]):"touchend"===t.type?1===t.touches.length?(e[0]=t.touches[0],e[1]=t.changedTouches[0]):0===t.touches.length&&(e[0]=t.changedTouches[0],e[1]=t.changedTouches[1]):(e[0]=t.touches[0],e[1]=t.touches[1]),e}function V(t){for(var e={pageX:0,pageY:0,clientX:0,clientY:0,screenX:0,screenY:0},n=0;n<t.length;n++){var r=t[n];for(var o in e)e[o]+=r[o]}for(var i in e)e[i]/=t.length;return e}Object.defineProperty(X,"__esModule",{value:!0}),X.coordsToEvent=function(t){return{coords:t,get page(){return this.coords.page},get client(){return this.coords.client},get timeStamp(){return this.coords.timeStamp},get pageX(){return this.coords.page.x},get pageY(){return this.coords.page.y},get clientX(){return this.coords.client.x},get clientY(){return this.coords.client.y},get pointerId(){return this.coords.pointerId},get target(){return this.coords.target},get type(){return this.coords.type},get pointerType(){return this.coords.pointerType},get buttons(){return this.coords.buttons},preventDefault:function preventDefault(){}}},X.copyCoords=function(t,e){t.page=t.page||{},t.page.x=e.page.x,t.page.y=e.page.y,t.client=t.client||{},t.client.x=e.client.x,t.client.y=e.client.y,t.timeStamp=e.timeStamp},X.getClientXY=L,X.getEventTargets=function(t){var e=i.default.func(t.composedPath)?t.composedPath():t.path;return[_.getActualElement(e?e[0]:t.target),_.getActualElement(t.currentTarget)]},X.getPageXY=W,X.getPointerId=function(t){return i.default.number(t.pointerId)?t.pointerId:t.identifier},X.getPointerType=function(t){return i.default.string(t.pointerType)?t.pointerType:i.default.number(t.pointerType)?[void 0,void 0,"touch","pen","mouse"][t.pointerType]:/touch/.test(t.type||"")||t instanceof h.default.Touch?"touch":"mouse"},X.getTouchPair=U,X.getXY=Y,X.isNativePointer=B,X.newCoords=function(){return{page:{x:0,y:0},client:{x:0,y:0},timeStamp:0}},X.pointerAverage=V,Object.defineProperty(X,"pointerExtend",{enumerable:!0,get:function get(){return F.default}}),X.setCoordDeltas=function(t,e,n){t.page.x=n.page.x-e.page.x,t.page.y=n.page.y-e.page.y,t.client.x=n.client.x-e.client.x,t.client.y=n.client.y-e.client.y,t.timeStamp=n.timeStamp-e.timeStamp},X.setCoordVelocity=function(t,e){var n=Math.max(e.timeStamp/1e3,.001);t.page.x=e.page.x/n,t.page.y=e.page.y/n,t.client.x=e.client.x/n,t.client.y=e.client.y/n,t.timeStamp=n},X.setCoords=function(t,e,n){var r=e.length>1?V(e):e[0];W(r,t.page),L(r,t.client),t.timeStamp=n},X.setZeroCoords=function(t){t.page.x=0,t.page.y=0,t.client.x=0,t.client.y=0},X.touchAngle=function(t,e){var n=e+"X",r=e+"Y",o=U(t),i=o[1][n]-o[0][n],a=o[1][r]-o[0][r];return 180*Math.atan2(a,i)/Math.PI},X.touchBBox=function(t){if(!t.length)return null;var e=U(t),n=Math.min(e[0].pageX,e[1].pageX),r=Math.min(e[0].pageY,e[1].pageY),o=Math.max(e[0].pageX,e[1].pageX),i=Math.max(e[0].pageY,e[1].pageY);return{x:n,y:r,left:n,top:r,right:o,bottom:i,width:o-n,height:i-r}},X.touchDistance=function(t,e){var n=e+"X",r=e+"Y",o=U(t),i=o[0][n]-o[1][n],a=o[0][r]-o[1][r];return(0,R.default)(i,a)};var N={};function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function G(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(N,"__esModule",{value:!0}),N.BaseEvent=void 0;var $=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),G(this,"immediatePropagationStopped",!1),G(this,"propagationStopped",!1),this._interaction=e}var e,n;return e=t,(n=[{key:"preventDefault",value:function value(){}},{key:"stopPropagation",value:function value(){this.propagationStopped=!0}},{key:"stopImmediatePropagation",value:function value(){this.immediatePropagationStopped=this.propagationStopped=!0}}])&&q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();N.BaseEvent=$,Object.defineProperty($.prototype,"interaction",{get:function get(){return this._interaction._proxy},set:function set(){}});var H={};Object.defineProperty(H,"__esModule",{value:!0}),H.remove=H.merge=H.from=H.findIndex=H.find=H.contains=void 0,H.contains=function(t,e){return-1!==t.indexOf(e)},H.remove=function(t,e){return t.splice(t.indexOf(e),1)};var K=function K(t,e){for(var n=0;n<e.length;n++){var r=e[n];t.push(r)}return t};H.merge=K,H.from=function(t){return K([],t)};var Z=function Z(t,e){for(var n=0;n<t.length;n++)if(e(t[n],n,t))return n;return-1};H.findIndex=Z,H.find=function(t,e){return t[Z(t,e)]};var J={};function Q(t){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Q(t)}function tt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function et(t,e){return et=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},et(t,e)}function nt(t,e){if(e&&("object"===Q(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return rt(t)}function rt(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function ot(t){return ot=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},ot(t)}function it(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(J,"__esModule",{value:!0}),J.DropEvent=void 0;var at=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&et(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=ot(r);if(o){var n=ot(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return nt(this,t)});function a(t,e,n){var r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),it(rt(r=i.call(this,e._interaction)),"dropzone",void 0),it(rt(r),"dragEvent",void 0),it(rt(r),"relatedTarget",void 0),it(rt(r),"draggable",void 0),it(rt(r),"propagationStopped",!1),it(rt(r),"immediatePropagationStopped",!1);var o="dragleave"===n?t.prev:t.cur,s=o.element,l=o.dropzone;return r.type=n,r.target=s,r.currentTarget=s,r.dropzone=l,r.dragEvent=e,r.relatedTarget=e.target,r.draggable=e.interactable,r.timeStamp=e.timeStamp,r}return e=a,(n=[{key:"reject",value:function value(){var t=this,e=this._interaction.dropState;if("dropactivate"===this.type||this.dropzone&&e.cur.dropzone===this.dropzone&&e.cur.element===this.target)if(e.prev.dropzone=this.dropzone,e.prev.element=this.target,e.rejected=!0,e.events.enter=null,this.stopImmediatePropagation(),"dropactivate"===this.type){var n=e.activeDrops,r=H.findIndex(n,(function(e){var n=e.dropzone,r=e.element;return n===t.dropzone&&r===t.target}));e.activeDrops.splice(r,1);var o=new a(e,this.dragEvent,"dropdeactivate");o.dropzone=this.dropzone,o.target=this.target,this.dropzone.fire(o)}else this.dropzone.fire(new a(e,this.dragEvent,"dragleave"))}},{key:"preventDefault",value:function value(){}},{key:"stopPropagation",value:function value(){this.propagationStopped=!0}},{key:"stopImmediatePropagation",value:function value(){this.immediatePropagationStopped=this.propagationStopped=!0}}])&&tt(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(N.BaseEvent);J.DropEvent=at;var st={};function lt(t,e){for(var n=0;n<t.slice().length;n++){var r=t.slice()[n],o=r.dropzone,i=r.element;e.dropzone=o,e.target=i,o.fire(e),e.propagationStopped=e.immediatePropagationStopped=!1}}function ut(t,e){for(var n=function(t,e){for(var n=t.interactables,r=[],o=0;o<n.list.length;o++){var a=n.list[o];if(a.options.drop.enabled){var s=a.options.drop.accept;if(!(i.default.element(s)&&s!==e||i.default.string(s)&&!_.matchesSelector(e,s)||i.default.func(s)&&!s({dropzone:a,draggableElement:e})))for(var l=i.default.string(a.target)?a._context.querySelectorAll(a.target):i.default.array(a.target)?a.target:[a.target],u=0;u<l.length;u++){var c=l[u];c!==e&&r.push({dropzone:a,element:c,rect:a.getRect(c)})}}}return r}(t,e),r=0;r<n.length;r++){var o=n[r];o.rect=o.dropzone.getRect(o.element)}return n}function ct(t,e,n){for(var r=t.dropState,o=t.interactable,i=t.element,a=[],s=0;s<r.activeDrops.length;s++){var l=r.activeDrops[s],u=l.dropzone,c=l.element,f=l.rect;a.push(u.dropCheck(e,n,o,i,c,f)?c:null)}var d=_.indexOfDeepestElement(a);return r.activeDrops[d]||null}function ft(t,e,n){var r=t.dropState,o={enter:null,leave:null,activate:null,deactivate:null,move:null,drop:null};return"dragstart"===n.type&&(o.activate=new J.DropEvent(r,n,"dropactivate"),o.activate.target=null,o.activate.dropzone=null),"dragend"===n.type&&(o.deactivate=new J.DropEvent(r,n,"dropdeactivate"),o.deactivate.target=null,o.deactivate.dropzone=null),r.rejected||(r.cur.element!==r.prev.element&&(r.prev.dropzone&&(o.leave=new J.DropEvent(r,n,"dragleave"),n.dragLeave=o.leave.target=r.prev.element,n.prevDropzone=o.leave.dropzone=r.prev.dropzone),r.cur.dropzone&&(o.enter=new J.DropEvent(r,n,"dragenter"),n.dragEnter=r.cur.element,n.dropzone=r.cur.dropzone)),"dragend"===n.type&&r.cur.dropzone&&(o.drop=new J.DropEvent(r,n,"drop"),n.dropzone=r.cur.dropzone,n.relatedTarget=r.cur.element),"dragmove"===n.type&&r.cur.dropzone&&(o.move=new J.DropEvent(r,n,"dropmove"),o.move.dragmove=n,n.dropzone=r.cur.dropzone)),o}function dt(t,e){var n=t.dropState,r=n.activeDrops,o=n.cur,i=n.prev;e.leave&&i.dropzone.fire(e.leave),e.enter&&o.dropzone.fire(e.enter),e.move&&o.dropzone.fire(e.move),e.drop&&o.dropzone.fire(e.drop),e.deactivate&&lt(r,e.deactivate),n.prev.dropzone=o.dropzone,n.prev.element=o.element}function pt(t,e){var n=t.interaction,r=t.iEvent,o=t.event;if("dragmove"===r.type||"dragend"===r.type){var i=n.dropState;e.dynamicDrop&&(i.activeDrops=ut(e,n.element));var a=r,s=ct(n,a,o);i.rejected=i.rejected&&!!s&&s.dropzone===i.cur.dropzone&&s.element===i.cur.element,i.cur.dropzone=s&&s.dropzone,i.cur.element=s&&s.element,i.events=ft(n,0,a)}}Object.defineProperty(st,"__esModule",{value:!0}),st.default=void 0;var vt={id:"actions/drop",install:function install(t){var e=t.actions,n=t.interactStatic,r=t.Interactable,o=t.defaults;t.usePlugin(c.default),r.prototype.dropzone=function(t){return function(t,e){if(i.default.object(e)){if(t.options.drop.enabled=!1!==e.enabled,e.listeners){var n=(0,z.default)(e.listeners),r=Object.keys(n).reduce((function(t,e){return t[/^(enter|leave)/.test(e)?"drag".concat(e):/^(activate|deactivate|move)/.test(e)?"drop".concat(e):e]=n[e],t}),{});t.off(t.options.drop.listeners),t.on(r),t.options.drop.listeners=r}return i.default.func(e.ondrop)&&t.on("drop",e.ondrop),i.default.func(e.ondropactivate)&&t.on("dropactivate",e.ondropactivate),i.default.func(e.ondropdeactivate)&&t.on("dropdeactivate",e.ondropdeactivate),i.default.func(e.ondragenter)&&t.on("dragenter",e.ondragenter),i.default.func(e.ondragleave)&&t.on("dragleave",e.ondragleave),i.default.func(e.ondropmove)&&t.on("dropmove",e.ondropmove),/^(pointer|center)$/.test(e.overlap)?t.options.drop.overlap=e.overlap:i.default.number(e.overlap)&&(t.options.drop.overlap=Math.max(Math.min(1,e.overlap),0)),"accept"in e&&(t.options.drop.accept=e.accept),"checker"in e&&(t.options.drop.checker=e.checker),t}return i.default.bool(e)?(t.options.drop.enabled=e,t):t.options.drop}(this,t)},r.prototype.dropCheck=function(t,e,n,r,o,a){return function(t,e,n,r,o,a,s){var l=!1;if(!(s=s||t.getRect(a)))return!!t.options.drop.checker&&t.options.drop.checker(e,n,l,t,a,r,o);var u=t.options.drop.overlap;if("pointer"===u){var c=(0,A.default)(r,o,"drag"),f=X.getPageXY(e);f.x+=c.x,f.y+=c.y;var d=f.x>s.left&&f.x<s.right,p=f.y>s.top&&f.y<s.bottom;l=d&&p}var v=r.getRect(o);if(v&&"center"===u){var h=v.left+v.width/2,g=v.top+v.height/2;l=h>=s.left&&h<=s.right&&g>=s.top&&g<=s.bottom}return v&&i.default.number(u)&&(l=Math.max(0,Math.min(s.right,v.right)-Math.max(s.left,v.left))*Math.max(0,Math.min(s.bottom,v.bottom)-Math.max(s.top,v.top))/(v.width*v.height)>=u),t.options.drop.checker&&(l=t.options.drop.checker(e,n,l,t,a,r,o)),l}(this,t,e,n,r,o,a)},n.dynamicDrop=function(e){return i.default.bool(e)?(t.dynamicDrop=e,n):t.dynamicDrop},(0,M.default)(e.phaselessTypes,{dragenter:!0,dragleave:!0,dropactivate:!0,dropdeactivate:!0,dropmove:!0,drop:!0}),e.methodDict.drop="dropzone",t.dynamicDrop=!1,o.actions.drop=vt.defaults},listeners:{"interactions:before-action-start":function interactionsBeforeActionStart(t){var e=t.interaction;"drag"===e.prepared.name&&(e.dropState={cur:{dropzone:null,element:null},prev:{dropzone:null,element:null},rejected:null,events:null,activeDrops:[]})},"interactions:after-action-start":function interactionsAfterActionStart(t,e){var n=t.interaction,r=t.iEvent;if("drag"===n.prepared.name){var o=n.dropState;o.activeDrops=null,o.events=null,o.activeDrops=ut(e,n.element),o.events=ft(n,0,r),o.events.activate&&(lt(o.activeDrops,o.events.activate),e.fire("actions/drop:start",{interaction:n,dragEvent:r}))}},"interactions:action-move":pt,"interactions:after-action-move":function interactionsAfterActionMove(t,e){var n=t.interaction,r=t.iEvent;"drag"===n.prepared.name&&(dt(n,n.dropState.events),e.fire("actions/drop:move",{interaction:n,dragEvent:r}),n.dropState.events={})},"interactions:action-end":function interactionsActionEnd(t,e){if("drag"===t.interaction.prepared.name){var n=t.interaction,r=t.iEvent;pt(t,e),dt(n,n.dropState.events),e.fire("actions/drop:end",{interaction:n,dragEvent:r})}},"interactions:stop":function interactionsStop(t){var e=t.interaction;if("drag"===e.prepared.name){var n=e.dropState;n&&(n.activeDrops=null,n.events=null,n.cur.dropzone=null,n.cur.element=null,n.prev.dropzone=null,n.prev.element=null,n.rejected=!1)}}},getActiveDrops:ut,getDrop:ct,getDropEvents:ft,fireDropEvents:dt,defaults:{enabled:!1,accept:null,overlap:"pointer"}},ht=vt;st.default=ht;var gt={};function yt(t){var e=t.interaction,n=t.iEvent,r=t.phase;if("gesture"===e.prepared.name){var o=e.pointers.map((function(t){return t.pointer})),a="start"===r,s="end"===r,l=e.interactable.options.deltaSource;if(n.touches=[o[0],o[1]],a)n.distance=X.touchDistance(o,l),n.box=X.touchBBox(o),n.scale=1,n.ds=0,n.angle=X.touchAngle(o,l),n.da=0,e.gesture.startDistance=n.distance,e.gesture.startAngle=n.angle;else if(s){var u=e.prevEvent;n.distance=u.distance,n.box=u.box,n.scale=u.scale,n.ds=0,n.angle=u.angle,n.da=0}else n.distance=X.touchDistance(o,l),n.box=X.touchBBox(o),n.scale=n.distance/e.gesture.startDistance,n.angle=X.touchAngle(o,l),n.ds=n.scale-e.gesture.scale,n.da=n.angle-e.gesture.angle;e.gesture.distance=n.distance,e.gesture.angle=n.angle,i.default.number(n.scale)&&n.scale!==1/0&&!isNaN(n.scale)&&(e.gesture.scale=n.scale)}}Object.defineProperty(gt,"__esModule",{value:!0}),gt.default=void 0;var mt={id:"actions/gesture",before:["actions/drag","actions/resize"],install:function install(t){var e=t.actions,n=t.Interactable,r=t.defaults;n.prototype.gesturable=function(t){return i.default.object(t)?(this.options.gesture.enabled=!1!==t.enabled,this.setPerAction("gesture",t),this.setOnEvents("gesture",t),this):i.default.bool(t)?(this.options.gesture.enabled=t,this):this.options.gesture},e.map.gesture=mt,e.methodDict.gesture="gesturable",r.actions.gesture=mt.defaults},listeners:{"interactions:action-start":yt,"interactions:action-move":yt,"interactions:action-end":yt,"interactions:new":function interactionsNew(t){t.interaction.gesture={angle:0,distance:0,scale:1,startAngle:0,startDistance:0}},"auto-start:check":function autoStartCheck(t){if(!(t.interaction.pointers.length<2)){var e=t.interactable.options.gesture;if(e&&e.enabled)return t.action={name:"gesture"},!1}}},defaults:{},getCursor:function getCursor(){return""}},bt=mt;gt.default=bt;var xt={};function wt(t,e,n,r,o,a,s){if(!e)return!1;if(!0===e){var l=i.default.number(a.width)?a.width:a.right-a.left,u=i.default.number(a.height)?a.height:a.bottom-a.top;if(s=Math.min(s,Math.abs(("left"===t||"right"===t?l:u)/2)),l<0&&("left"===t?t="right":"right"===t&&(t="left")),u<0&&("top"===t?t="bottom":"bottom"===t&&(t="top")),"left"===t){var c=l>=0?a.left:a.right;return n.x<c+s}if("top"===t){var f=u>=0?a.top:a.bottom;return n.y<f+s}if("right"===t)return n.x>(l>=0?a.right:a.left)-s;if("bottom"===t)return n.y>(u>=0?a.bottom:a.top)-s}return!!i.default.element(r)&&(i.default.element(e)?e===r:_.matchesUpTo(r,e,o))}function _t(t){var e=t.iEvent,n=t.interaction;if("resize"===n.prepared.name&&n.resizeAxes){var r=e;n.interactable.options.resize.square?("y"===n.resizeAxes?r.delta.x=r.delta.y:r.delta.y=r.delta.x,r.axes="xy"):(r.axes=n.resizeAxes,"x"===n.resizeAxes?r.delta.y=0:"y"===n.resizeAxes&&(r.delta.x=0))}}Object.defineProperty(xt,"__esModule",{value:!0}),xt.default=void 0;var Pt={id:"actions/resize",before:["actions/drag"],install:function install(t){var e=t.actions,n=t.browser,r=t.Interactable,o=t.defaults;Pt.cursors=function(t){return t.isIe9?{x:"e-resize",y:"s-resize",xy:"se-resize",top:"n-resize",left:"w-resize",bottom:"s-resize",right:"e-resize",topleft:"se-resize",bottomright:"se-resize",topright:"ne-resize",bottomleft:"ne-resize"}:{x:"ew-resize",y:"ns-resize",xy:"nwse-resize",top:"ns-resize",left:"ew-resize",bottom:"ns-resize",right:"ew-resize",topleft:"nwse-resize",bottomright:"nwse-resize",topright:"nesw-resize",bottomleft:"nesw-resize"}}(n),Pt.defaultMargin=n.supportsTouch||n.supportsPointerEvent?20:10,r.prototype.resizable=function(e){return function(t,e,n){return i.default.object(e)?(t.options.resize.enabled=!1!==e.enabled,t.setPerAction("resize",e),t.setOnEvents("resize",e),i.default.string(e.axis)&&/^x$|^y$|^xy$/.test(e.axis)?t.options.resize.axis=e.axis:null===e.axis&&(t.options.resize.axis=n.defaults.actions.resize.axis),i.default.bool(e.preserveAspectRatio)?t.options.resize.preserveAspectRatio=e.preserveAspectRatio:i.default.bool(e.square)&&(t.options.resize.square=e.square),t):i.default.bool(e)?(t.options.resize.enabled=e,t):t.options.resize}(this,e,t)},e.map.resize=Pt,e.methodDict.resize="resizable",o.actions.resize=Pt.defaults},listeners:{"interactions:new":function interactionsNew(t){t.interaction.resizeAxes="xy"},"interactions:action-start":function interactionsActionStart(t){!function(t){var e=t.iEvent,n=t.interaction;if("resize"===n.prepared.name&&n.prepared.edges){var r=e,o=n.rect;n._rects={start:(0,M.default)({},o),corrected:(0,M.default)({},o),previous:(0,M.default)({},o),delta:{left:0,right:0,width:0,top:0,bottom:0,height:0}},r.edges=n.prepared.edges,r.rect=n._rects.corrected,r.deltaRect=n._rects.delta}}(t),_t(t)},"interactions:action-move":function interactionsActionMove(t){!function(t){var e=t.iEvent,n=t.interaction;if("resize"===n.prepared.name&&n.prepared.edges){var r=e,o=n.interactable.options.resize.invert,i="reposition"===o||"negate"===o,a=n.rect,s=n._rects,l=s.start,u=s.corrected,c=s.delta,f=s.previous;if((0,M.default)(f,u),i){if((0,M.default)(u,a),"reposition"===o){if(u.top>u.bottom){var d=u.top;u.top=u.bottom,u.bottom=d}if(u.left>u.right){var p=u.left;u.left=u.right,u.right=p}}}else u.top=Math.min(a.top,l.bottom),u.bottom=Math.max(a.bottom,l.top),u.left=Math.min(a.left,l.right),u.right=Math.max(a.right,l.left);for(var v in u.width=u.right-u.left,u.height=u.bottom-u.top,u)c[v]=u[v]-f[v];r.edges=n.prepared.edges,r.rect=u,r.deltaRect=c}}(t),_t(t)},"interactions:action-end":function interactionsActionEnd(t){var e=t.iEvent,n=t.interaction;if("resize"===n.prepared.name&&n.prepared.edges){var r=e;r.edges=n.prepared.edges,r.rect=n._rects.corrected,r.deltaRect=n._rects.delta}},"auto-start:check":function autoStartCheck(t){var e=t.interaction,n=t.interactable,r=t.element,o=t.rect,a=t.buttons;if(o){var s=(0,M.default)({},e.coords.cur.page),l=n.options.resize;if(l&&l.enabled&&(!e.pointerIsDown||!/mouse|pointer/.test(e.pointerType)||0!=(a&l.mouseButtons))){if(i.default.object(l.edges)){var u={left:!1,right:!1,top:!1,bottom:!1};for(var c in u)u[c]=wt(c,l.edges[c],s,e._latestPointer.eventTarget,r,o,l.margin||Pt.defaultMargin);u.left=u.left&&!u.right,u.top=u.top&&!u.bottom,(u.left||u.right||u.top||u.bottom)&&(t.action={name:"resize",edges:u})}else{var f="y"!==l.axis&&s.x>o.right-Pt.defaultMargin,d="x"!==l.axis&&s.y>o.bottom-Pt.defaultMargin;(f||d)&&(t.action={name:"resize",axes:(f?"x":"")+(d?"y":"")})}return!t.action&&void 0}}}},defaults:{square:!1,preserveAspectRatio:!1,axis:"xy",margin:NaN,edges:null,invert:"none"},cursors:null,getCursor:function getCursor(t){var e=t.edges,n=t.axis,r=t.name,o=Pt.cursors,i=null;if(n)i=o[r+n];else if(e){for(var a="",s=["top","bottom","left","right"],l=0;l<s.length;l++){var u=s[l];e[u]&&(a+=u)}i=o[a]}return i},defaultMargin:null},Ot=Pt;xt.default=Ot;var Et={};Object.defineProperty(Et,"__esModule",{value:!0}),Et.default=void 0;var St={id:"actions",install:function install(t){t.usePlugin(gt.default),t.usePlugin(xt.default),t.usePlugin(c.default),t.usePlugin(st.default)}};Et.default=St;var Tt={};Object.defineProperty(Tt,"__esModule",{value:!0}),Tt.default=void 0;var jt,Mt,kt=0,It={request:function request(t){return jt(t)},cancel:function cancel(t){return Mt(t)},init:function init(t){if(jt=t.requestAnimationFrame,Mt=t.cancelAnimationFrame,!jt)for(var e=["ms","moz","webkit","o"],n=0;n<e.length;n++){var r=e[n];jt=t["".concat(r,"RequestAnimationFrame")],Mt=t["".concat(r,"CancelAnimationFrame")]||t["".concat(r,"CancelRequestAnimationFrame")]}jt=jt&&jt.bind(t),Mt=Mt&&Mt.bind(t),jt||(jt=function jt(e){var n=Date.now(),r=Math.max(0,16-(n-kt)),o=t.setTimeout((function(){e(n+r)}),r);return kt=n+r,o},Mt=function Mt(t){return clearTimeout(t)})}};Tt.default=It;var Dt={};Object.defineProperty(Dt,"__esModule",{value:!0}),Dt.default=void 0,Dt.getContainer=zt,Dt.getScroll=Ct,Dt.getScrollSize=function(t){return i.default.window(t)&&(t=window.document.body),{x:t.scrollWidth,y:t.scrollHeight}},Dt.getScrollSizeDelta=function(t,e){var n=t.interaction,r=t.element,o=n&&n.interactable.options[n.prepared.name].autoScroll;if(!o||!o.enabled)return e(),{x:0,y:0};var i=zt(o.container,n.interactable,r),a=Ct(i);e();var s=Ct(i);return{x:s.x-a.x,y:s.y-a.y}};var At={defaults:{enabled:!1,margin:60,container:null,speed:300},now:Date.now,interaction:null,i:0,x:0,y:0,isScrolling:!1,prevTime:0,margin:0,speed:0,start:function start(t){At.isScrolling=!0,Tt.default.cancel(At.i),t.autoScroll=At,At.interaction=t,At.prevTime=At.now(),At.i=Tt.default.request(At.scroll)},stop:function stop(){At.isScrolling=!1,At.interaction&&(At.interaction.autoScroll=null),Tt.default.cancel(At.i)},scroll:function scroll(){var t=At.interaction,e=t.interactable,n=t.element,r=t.prepared.name,o=e.options[r].autoScroll,a=zt(o.container,e,n),s=At.now(),l=(s-At.prevTime)/1e3,u=o.speed*l;if(u>=1){var c={x:At.x*u,y:At.y*u};if(c.x||c.y){var f=Ct(a);i.default.window(a)?a.scrollBy(c.x,c.y):a&&(a.scrollLeft+=c.x,a.scrollTop+=c.y);var d=Ct(a),p={x:d.x-f.x,y:d.y-f.y};(p.x||p.y)&&e.fire({type:"autoscroll",target:n,interactable:e,delta:p,interaction:t,container:a})}At.prevTime=s}At.isScrolling&&(Tt.default.cancel(At.i),At.i=Tt.default.request(At.scroll))},check:function check(t,e){var n;return null==(n=t.options[e].autoScroll)?void 0:n.enabled},onInteractionMove:function onInteractionMove(t){var e=t.interaction,n=t.pointer;if(e.interacting()&&At.check(e.interactable,e.prepared.name))if(e.simulation)At.x=At.y=0;else{var r,o,a,s,l=e.interactable,u=e.element,c=e.prepared.name,f=l.options[c].autoScroll,d=zt(f.container,l,u);if(i.default.window(d))s=n.clientX<At.margin,r=n.clientY<At.margin,o=n.clientX>d.innerWidth-At.margin,a=n.clientY>d.innerHeight-At.margin;else{var p=_.getElementClientRect(d);s=n.clientX<p.left+At.margin,r=n.clientY<p.top+At.margin,o=n.clientX>p.right-At.margin,a=n.clientY>p.bottom-At.margin}At.x=o?1:s?-1:0,At.y=a?1:r?-1:0,At.isScrolling||(At.margin=f.margin,At.speed=f.speed,At.start(e))}}};function zt(t,n,r){return(i.default.string(t)?(0,k.getStringOptionResult)(t,n,r):t)||(0,e.getWindow)(r)}function Ct(t){return i.default.window(t)&&(t=window.document.body),{x:t.scrollLeft,y:t.scrollTop}}var Rt={id:"auto-scroll",install:function install(t){var e=t.defaults,n=t.actions;t.autoScroll=At,At.now=function(){return t.now()},n.phaselessTypes.autoscroll=!0,e.perAction.autoScroll=At.defaults},listeners:{"interactions:new":function interactionsNew(t){t.interaction.autoScroll=null},"interactions:destroy":function interactionsDestroy(t){t.interaction.autoScroll=null,At.stop(),At.interaction&&(At.interaction=null)},"interactions:stop":At.stop,"interactions:action-move":function interactionsActionMove(t){return At.onInteractionMove(t)}}},Ft=Rt;Dt.default=Ft;var Xt={};Object.defineProperty(Xt,"__esModule",{value:!0}),Xt.copyAction=function(t,e){return t.name=e.name,t.axis=e.axis,t.edges=e.edges,t},Xt.sign=void 0,Xt.warnOnce=function(t,n){var r=!1;return function(){return r||(e.window.console.warn(n),r=!0),t.apply(this,arguments)}},Xt.sign=function(t){return t>=0?1:-1};var Bt={};function Yt(t){return i.default.bool(t)?(this.options.styleCursor=t,this):null===t?(delete this.options.styleCursor,this):this.options.styleCursor}function Wt(t){return i.default.func(t)?(this.options.actionChecker=t,this):null===t?(delete this.options.actionChecker,this):this.options.actionChecker}Object.defineProperty(Bt,"__esModule",{value:!0}),Bt.default=void 0;var Lt={id:"auto-start/interactableMethods",install:function install(t){var e=t.Interactable;e.prototype.getAction=function(e,n,r,o){var i=function(t,e,n,r,o){var i=t.getRect(r),a={action:null,interactable:t,interaction:n,element:r,rect:i,buttons:e.buttons||{0:1,1:4,3:8,4:16}[e.button]};return o.fire("auto-start:check",a),a.action}(this,n,r,o,t);return this.options.actionChecker?this.options.actionChecker(e,n,i,this,o,r):i},e.prototype.ignoreFrom=(0,Xt.warnOnce)((function(t){return this._backCompatOption("ignoreFrom",t)}),"Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue})."),e.prototype.allowFrom=(0,Xt.warnOnce)((function(t){return this._backCompatOption("allowFrom",t)}),"Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue})."),e.prototype.actionChecker=Wt,e.prototype.styleCursor=Yt}};Bt.default=Lt;var Ut={};function Vt(t,e,n,r,o){return e.testIgnoreAllow(e.options[t.name],n,r)&&e.options[t.name].enabled&&$t(e,n,t,o)?t:null}function Nt(t,e,n,r,o,i,a){for(var s=0,l=r.length;s<l;s++){var u=r[s],c=o[s],f=u.getAction(e,n,t,c);if(f){var d=Vt(f,u,c,i,a);if(d)return{action:d,interactable:u,element:c}}}return{action:null,interactable:null,element:null}}function qt(t,e,n,r,o){var a=[],s=[],l=r;function u(t){a.push(t),s.push(l)}for(;i.default.element(l);){a=[],s=[],o.interactables.forEachMatch(l,u);var c=Nt(t,e,n,a,s,r,o);if(c.action&&!c.interactable.options[c.action.name].manualStart)return c;l=_.parentNode(l)}return{action:null,interactable:null,element:null}}function Gt(t,e,n){var r=e.action,o=e.interactable,i=e.element;r=r||{name:null},t.interactable=o,t.element=i,(0,Xt.copyAction)(t.prepared,r),t.rect=o&&r.name?o.getRect(i):null,Zt(t,n),n.fire("autoStart:prepared",{interaction:t})}function $t(t,e,n,r){var o=t.options,i=o[n.name].max,a=o[n.name].maxPerElement,s=r.autoStart.maxInteractions,l=0,u=0,c=0;if(!(i&&a&&s))return!1;for(var f=0;f<r.interactions.list.length;f++){var d=r.interactions.list[f],p=d.prepared.name;if(d.interacting()){if(++l>=s)return!1;if(d.interactable===t){if((u+=p===n.name?1:0)>=i)return!1;if(d.element===e&&(c++,p===n.name&&c>=a))return!1}}}return s>0}function Ht(t,e){return i.default.number(t)?(e.autoStart.maxInteractions=t,this):e.autoStart.maxInteractions}function Kt(t,e,n){var r=n.autoStart.cursorElement;r&&r!==t&&(r.style.cursor=""),t.ownerDocument.documentElement.style.cursor=e,t.style.cursor=e,n.autoStart.cursorElement=e?t:null}function Zt(t,e){var n=t.interactable,r=t.element,o=t.prepared;if("mouse"===t.pointerType&&n&&n.options.styleCursor){var a="";if(o.name){var s=n.options[o.name].cursorChecker;a=i.default.func(s)?s(o,n,r,t._interacting):e.actions.map[o.name].getCursor(o)}Kt(t.element,a||"",e)}else e.autoStart.cursorElement&&Kt(e.autoStart.cursorElement,"",e)}Object.defineProperty(Ut,"__esModule",{value:!0}),Ut.default=void 0;var Jt={id:"auto-start/base",before:["actions"],install:function install(t){var e=t.interactStatic,n=t.defaults;t.usePlugin(Bt.default),n.base.actionChecker=null,n.base.styleCursor=!0,(0,M.default)(n.perAction,{manualStart:!1,max:1/0,maxPerElement:1,allowFrom:null,ignoreFrom:null,mouseButtons:1}),e.maxInteractions=function(e){return Ht(e,t)},t.autoStart={maxInteractions:1/0,withinInteractionLimit:$t,cursorElement:null}},listeners:{"interactions:down":function interactionsDown(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget;n.interacting()||Gt(n,qt(n,r,o,i,e),e)},"interactions:move":function interactionsMove(t,e){!function(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget;"mouse"!==n.pointerType||n.pointerIsDown||n.interacting()||Gt(n,qt(n,r,o,i,e),e)}(t,e),function(t,e){var n=t.interaction;if(n.pointerIsDown&&!n.interacting()&&n.pointerWasMoved&&n.prepared.name){e.fire("autoStart:before-start",t);var r=n.interactable,o=n.prepared.name;o&&r&&(r.options[o].manualStart||!$t(r,n.element,n.prepared,e)?n.stop():(n.start(n.prepared,r,n.element),Zt(n,e)))}}(t,e)},"interactions:stop":function interactionsStop(t,e){var n=t.interaction,r=n.interactable;r&&r.options.styleCursor&&Kt(n.element,"",e)}},maxInteractions:Ht,withinInteractionLimit:$t,validateAction:Vt},Qt=Jt;Ut.default=Qt;var te={};Object.defineProperty(te,"__esModule",{value:!0}),te.default=void 0;var ee={id:"auto-start/dragAxis",listeners:{"autoStart:before-start":function autoStartBeforeStart(t,e){var n=t.interaction,r=t.eventTarget,o=t.dx,a=t.dy;if("drag"===n.prepared.name){var s=Math.abs(o),l=Math.abs(a),u=n.interactable.options.drag,c=u.startAxis,f=s>l?"x":s<l?"y":"xy";if(n.prepared.axis="start"===u.lockAxis?f[0]:u.lockAxis,"xy"!==f&&"xy"!==c&&c!==f){n.prepared.name=null;for(var d=r,p=function p(t){if(t!==n.interactable){var o=n.interactable.options.drag;if(!o.manualStart&&t.testIgnoreAllow(o,d,r)){var i=t.getAction(n.downPointer,n.downEvent,n,d);if(i&&"drag"===i.name&&function(t,e){if(!e)return!1;var n=e.options.drag.startAxis;return"xy"===t||"xy"===n||n===t}(f,t)&&Ut.default.validateAction(i,t,d,r,e))return t}}};i.default.element(d);){var v=e.interactables.forEachMatch(d,p);if(v){n.prepared.name="drag",n.interactable=v,n.element=d;break}d=(0,_.parentNode)(d)}}}}}};te.default=ee;var ne={};function re(t){var e=t.prepared&&t.prepared.name;if(!e)return null;var n=t.interactable.options;return n[e].hold||n[e].delay}Object.defineProperty(ne,"__esModule",{value:!0}),ne.default=void 0;var oe={id:"auto-start/hold",install:function install(t){var e=t.defaults;t.usePlugin(Ut.default),e.perAction.hold=0,e.perAction.delay=0},listeners:{"interactions:new":function interactionsNew(t){t.interaction.autoStartHoldTimer=null},"autoStart:prepared":function autoStartPrepared(t){var e=t.interaction,n=re(e);n>0&&(e.autoStartHoldTimer=setTimeout((function(){e.start(e.prepared,e.interactable,e.element)}),n))},"interactions:move":function interactionsMove(t){var e=t.interaction,n=t.duplicate;e.autoStartHoldTimer&&e.pointerWasMoved&&!n&&(clearTimeout(e.autoStartHoldTimer),e.autoStartHoldTimer=null)},"autoStart:before-start":function autoStartBeforeStart(t){var e=t.interaction;re(e)>0&&(e.prepared.name=null)}},getHoldDuration:re},ie=oe;ne.default=ie;var ae={};Object.defineProperty(ae,"__esModule",{value:!0}),ae.default=void 0;var se={id:"auto-start",install:function install(t){t.usePlugin(Ut.default),t.usePlugin(ne.default),t.usePlugin(te.default)}};ae.default=se;var le={};function ue(t){return/^(always|never|auto)$/.test(t)?(this.options.preventDefault=t,this):i.default.bool(t)?(this.options.preventDefault=t?"always":"never",this):this.options.preventDefault}function ce(t){var e=t.interaction,n=t.event;e.interactable&&e.interactable.checkAndPreventDefault(n)}function fe(t){var n=t.Interactable;n.prototype.preventDefault=ue,n.prototype.checkAndPreventDefault=function(n){return function(t,n,r){var o=t.options.preventDefault;if("never"!==o)if("always"!==o){if(n.events.supportsPassive&&/^touch(start|move)$/.test(r.type)){var a=(0,e.getWindow)(r.target).document,s=n.getDocOptions(a);if(!s||!s.events||!1!==s.events.passive)return}/^(mouse|pointer|touch)*(down|start)/i.test(r.type)||i.default.element(r.target)&&(0,_.matchesSelector)(r.target,"input,select,textarea,[contenteditable=true],[contenteditable=true] *")||r.preventDefault()}else r.preventDefault()}(this,t,n)},t.interactions.docEvents.push({type:"dragstart",listener:function listener(e){for(var n=0;n<t.interactions.list.length;n++){var r=t.interactions.list[n];if(r.element&&(r.element===e.target||(0,_.nodeContains)(r.element,e.target)))return void r.interactable.checkAndPreventDefault(e)}}})}Object.defineProperty(le,"__esModule",{value:!0}),le.default=void 0,le.install=fe;var de={id:"core/interactablePreventDefault",install:fe,listeners:["down","move","up","cancel"].reduce((function(t,e){return t["interactions:".concat(e)]=ce,t}),{})};le.default=de;var pe={};Object.defineProperty(pe,"__esModule",{value:!0}),pe.default=void 0,pe.default={};var ve,he={};Object.defineProperty(he,"__esModule",{value:!0}),he.default=void 0,function(t){t.touchAction="touchAction",t.boxSizing="boxSizing",t.noListeners="noListeners"}(ve||(ve={}));var ge={id:"dev-tools",install:function install(){}};he.default=ge;var ye={};Object.defineProperty(ye,"__esModule",{value:!0}),ye.default=function t(e){var n={};for(var r in e){var o=e[r];i.default.plainObject(o)?n[r]=t(o):i.default.array(o)?n[r]=H.from(o):n[r]=o}return n};var me={};function be(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(t,e)||function(t,e){if(t){if("string"==typeof t)return xe(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?xe(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function xe(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function we(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function _e(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(me,"__esModule",{value:!0}),me.default=void 0,me.getRectOffset=Ee;var Pe=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),_e(this,"states",[]),_e(this,"startOffset",{left:0,right:0,top:0,bottom:0}),_e(this,"startDelta",void 0),_e(this,"result",void 0),_e(this,"endResult",void 0),_e(this,"edges",void 0),_e(this,"interaction",void 0),this.interaction=e,this.result=Oe()}var e,n;return e=t,(n=[{key:"start",value:function value(t,e){var n=t.phase,r=this.interaction,o=function(t){var e=t.interactable.options[t.prepared.name],n=e.modifiers;return n&&n.length?n:["snap","snapSize","snapEdges","restrict","restrictEdges","restrictSize"].map((function(t){var n=e[t];return n&&n.enabled&&{options:n,methods:n._methods}})).filter((function(t){return!!t}))}(r);this.prepareStates(o),this.edges=(0,M.default)({},r.edges),this.startOffset=Ee(r.rect,e),this.startDelta={x:0,y:0};var i=this.fillArg({phase:n,pageCoords:e,preEnd:!1});return this.result=Oe(),this.startAll(i),this.result=this.setAll(i)}},{key:"fillArg",value:function value(t){var e=this.interaction;return t.interaction=e,t.interactable=e.interactable,t.element=e.element,t.rect=t.rect||e.rect,t.edges=this.edges,t.startOffset=this.startOffset,t}},{key:"startAll",value:function value(t){for(var e=0;e<this.states.length;e++){var n=this.states[e];n.methods.start&&(t.state=n,n.methods.start(t))}}},{key:"setAll",value:function value(t){var e=t.phase,n=t.preEnd,r=t.skipModifiers,o=t.rect;t.coords=(0,M.default)({},t.pageCoords),t.rect=(0,M.default)({},o);for(var i=r?this.states.slice(r):this.states,a=Oe(t.coords,t.rect),s=0;s<i.length;s++){var l,u=i[s],c=u.options,f=(0,M.default)({},t.coords),d=null;null!=(l=u.methods)&&l.set&&this.shouldDo(c,n,e)&&(t.state=u,d=u.methods.set(t),k.addEdges(this.interaction.edges,t.rect,{x:t.coords.x-f.x,y:t.coords.y-f.y})),a.eventProps.push(d)}a.delta.x=t.coords.x-t.pageCoords.x,a.delta.y=t.coords.y-t.pageCoords.y,a.rectDelta.left=t.rect.left-o.left,a.rectDelta.right=t.rect.right-o.right,a.rectDelta.top=t.rect.top-o.top,a.rectDelta.bottom=t.rect.bottom-o.bottom;var p=this.result.coords,v=this.result.rect;if(p&&v){var h=a.rect.left!==v.left||a.rect.right!==v.right||a.rect.top!==v.top||a.rect.bottom!==v.bottom;a.changed=h||p.x!==a.coords.x||p.y!==a.coords.y}return a}},{key:"applyToInteraction",value:function value(t){var e=this.interaction,n=t.phase,r=e.coords.cur,o=e.coords.start,i=this.result,a=this.startDelta,s=i.delta;"start"===n&&(0,M.default)(this.startDelta,i.delta);for(var l=0;l<[[o,a],[r,s]].length;l++){var u=be([[o,a],[r,s]][l],2),c=u[0],f=u[1];c.page.x+=f.x,c.page.y+=f.y,c.client.x+=f.x,c.client.y+=f.y}var d=this.result.rectDelta,p=t.rect||e.rect;p.left+=d.left,p.right+=d.right,p.top+=d.top,p.bottom+=d.bottom,p.width=p.right-p.left,p.height=p.bottom-p.top}},{key:"setAndApply",value:function value(t){var e=this.interaction,n=t.phase,r=t.preEnd,o=t.skipModifiers,i=this.setAll(this.fillArg({preEnd:r,phase:n,pageCoords:t.modifiedCoords||e.coords.cur.page}));if(this.result=i,!i.changed&&(!o||o<this.states.length)&&e.interacting())return!1;if(t.modifiedCoords){var a=e.coords.cur.page,s={x:t.modifiedCoords.x-a.x,y:t.modifiedCoords.y-a.y};i.coords.x+=s.x,i.coords.y+=s.y,i.delta.x+=s.x,i.delta.y+=s.y}this.applyToInteraction(t)}},{key:"beforeEnd",value:function value(t){var e=t.interaction,n=t.event,r=this.states;if(r&&r.length){for(var o=!1,i=0;i<r.length;i++){var a=r[i];t.state=a;var s=a.options,l=a.methods,u=l.beforeEnd&&l.beforeEnd(t);if(u)return this.endResult=u,!1;o=o||!o&&this.shouldDo(s,!0,t.phase,!0)}o&&e.move({event:n,preEnd:!0})}}},{key:"stop",value:function value(t){var e=t.interaction;if(this.states&&this.states.length){var n=(0,M.default)({states:this.states,interactable:e.interactable,element:e.element,rect:null},t);this.fillArg(n);for(var r=0;r<this.states.length;r++){var o=this.states[r];n.state=o,o.methods.stop&&o.methods.stop(n)}this.states=null,this.endResult=null}}},{key:"prepareStates",value:function value(t){this.states=[];for(var e=0;e<t.length;e++){var n=t[e],r=n.options,o=n.methods,i=n.name;this.states.push({options:r,methods:o,index:e,name:i})}return this.states}},{key:"restoreInteractionCoords",value:function value(t){var e=t.interaction,n=e.coords,r=e.rect,o=e.modification;if(o.result){for(var i=o.startDelta,a=o.result,s=a.delta,l=a.rectDelta,u=[[n.start,i],[n.cur,s]],c=0;c<u.length;c++){var f=be(u[c],2),d=f[0],p=f[1];d.page.x-=p.x,d.page.y-=p.y,d.client.x-=p.x,d.client.y-=p.y}r.left-=l.left,r.right-=l.right,r.top-=l.top,r.bottom-=l.bottom}}},{key:"shouldDo",value:function value(t,e,n,r){return!(!t||!1===t.enabled||r&&!t.endOnly||t.endOnly&&!e||"start"===n&&!t.setStart)}},{key:"copyFrom",value:function value(t){this.startOffset=t.startOffset,this.startDelta=t.startDelta,this.edges=t.edges,this.states=t.states.map((function(t){return(0,ye.default)(t)})),this.result=Oe((0,M.default)({},t.result.coords),(0,M.default)({},t.result.rect))}},{key:"destroy",value:function value(){for(var t in this)this[t]=null}}])&&we(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function Oe(t,e){return{rect:e,coords:t,delta:{x:0,y:0},rectDelta:{left:0,right:0,top:0,bottom:0},eventProps:[],changed:!0}}function Ee(t,e){return t?{left:e.x-t.left,top:e.y-t.top,right:t.right-e.x,bottom:t.bottom-e.y}:{left:0,top:0,right:0,bottom:0}}me.default=Pe;var Se={};function Te(t){var e=t.iEvent,n=t.interaction.modification.result;n&&(e.modifiers=n.eventProps)}Object.defineProperty(Se,"__esModule",{value:!0}),Se.addEventModifiers=Te,Se.default=void 0,Se.makeModifier=function(t,e){var n=t.defaults,r={start:t.start,set:t.set,beforeEnd:t.beforeEnd,stop:t.stop},o=function o(t){var o=t||{};for(var i in o.enabled=!1!==o.enabled,n)i in o||(o[i]=n[i]);var a={options:o,methods:r,name:e,enable:function enable(){return o.enabled=!0,a},disable:function disable(){return o.enabled=!1,a}};return a};return e&&"string"==typeof e&&(o._defaults=n,o._methods=r),o};var je={id:"modifiers/base",before:["actions"],install:function install(t){t.defaults.perAction.modifiers=[]},listeners:{"interactions:new":function interactionsNew(t){var e=t.interaction;e.modification=new me.default(e)},"interactions:before-action-start":function interactionsBeforeActionStart(t){var e=t.interaction.modification;e.start(t,t.interaction.coords.start.page),t.interaction.edges=e.edges,e.applyToInteraction(t)},"interactions:before-action-move":function interactionsBeforeActionMove(t){return t.interaction.modification.setAndApply(t)},"interactions:before-action-end":function interactionsBeforeActionEnd(t){return t.interaction.modification.beforeEnd(t)},"interactions:action-start":Te,"interactions:action-move":Te,"interactions:action-end":Te,"interactions:after-action-start":function interactionsAfterActionStart(t){return t.interaction.modification.restoreInteractionCoords(t)},"interactions:after-action-move":function interactionsAfterActionMove(t){return t.interaction.modification.restoreInteractionCoords(t)},"interactions:stop":function interactionsStop(t){return t.interaction.modification.stop(t)}}},Me=je;Se.default=Me;var ke={};Object.defineProperty(ke,"__esModule",{value:!0}),ke.defaults=void 0,ke.defaults={base:{preventDefault:"auto",deltaSource:"page"},perAction:{enabled:!1,origin:{x:0,y:0}},actions:{}};var Ie={};function De(t){return De="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},De(t)}function Ae(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ze(t,e){return ze=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},ze(t,e)}function Ce(t,e){if(e&&("object"===De(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return Re(t)}function Re(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Fe(t){return Fe=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Fe(t)}function Xe(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(Ie,"__esModule",{value:!0}),Ie.InteractEvent=void 0;var Be=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&ze(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=Fe(r);if(o){var n=Fe(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return Ce(this,t)});function a(t,e,n,r,o,s,l){var u;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),Xe(Re(u=i.call(this,t)),"relatedTarget",null),Xe(Re(u),"screenX",void 0),Xe(Re(u),"screenY",void 0),Xe(Re(u),"button",void 0),Xe(Re(u),"buttons",void 0),Xe(Re(u),"ctrlKey",void 0),Xe(Re(u),"shiftKey",void 0),Xe(Re(u),"altKey",void 0),Xe(Re(u),"metaKey",void 0),Xe(Re(u),"page",void 0),Xe(Re(u),"client",void 0),Xe(Re(u),"delta",void 0),Xe(Re(u),"rect",void 0),Xe(Re(u),"x0",void 0),Xe(Re(u),"y0",void 0),Xe(Re(u),"t0",void 0),Xe(Re(u),"dt",void 0),Xe(Re(u),"duration",void 0),Xe(Re(u),"clientX0",void 0),Xe(Re(u),"clientY0",void 0),Xe(Re(u),"velocity",void 0),Xe(Re(u),"speed",void 0),Xe(Re(u),"swipe",void 0),Xe(Re(u),"axes",void 0),Xe(Re(u),"preEnd",void 0),o=o||t.element;var c=t.interactable,f=(c&&c.options||ke.defaults).deltaSource,d=(0,A.default)(c,o,n),p="start"===r,v="end"===r,h=p?Re(u):t.prevEvent,g=p?t.coords.start:v?{page:h.page,client:h.client,timeStamp:t.coords.cur.timeStamp}:t.coords.cur;return u.page=(0,M.default)({},g.page),u.client=(0,M.default)({},g.client),u.rect=(0,M.default)({},t.rect),u.timeStamp=g.timeStamp,v||(u.page.x-=d.x,u.page.y-=d.y,u.client.x-=d.x,u.client.y-=d.y),u.ctrlKey=e.ctrlKey,u.altKey=e.altKey,u.shiftKey=e.shiftKey,u.metaKey=e.metaKey,u.button=e.button,u.buttons=e.buttons,u.target=o,u.currentTarget=o,u.preEnd=s,u.type=l||n+(r||""),u.interactable=c,u.t0=p?t.pointers[t.pointers.length-1].downTime:h.t0,u.x0=t.coords.start.page.x-d.x,u.y0=t.coords.start.page.y-d.y,u.clientX0=t.coords.start.client.x-d.x,u.clientY0=t.coords.start.client.y-d.y,u.delta=p||v?{x:0,y:0}:{x:u[f].x-h[f].x,y:u[f].y-h[f].y},u.dt=t.coords.delta.timeStamp,u.duration=u.timeStamp-u.t0,u.velocity=(0,M.default)({},t.coords.velocity[f]),u.speed=(0,R.default)(u.velocity.x,u.velocity.y),u.swipe=v||"inertiastart"===r?u.getSwipe():null,u}return e=a,(n=[{key:"getSwipe",value:function value(){var t=this._interaction;if(t.prevEvent.speed<600||this.timeStamp-t.prevEvent.timeStamp>150)return null;var e=180*Math.atan2(t.prevEvent.velocityY,t.prevEvent.velocityX)/Math.PI;e<0&&(e+=360);var n=112.5<=e&&e<247.5,r=202.5<=e&&e<337.5;return{up:r,down:!r&&22.5<=e&&e<157.5,left:n,right:!n&&(292.5<=e||e<67.5),angle:e,speed:t.prevEvent.speed,velocity:{x:t.prevEvent.velocityX,y:t.prevEvent.velocityY}}}},{key:"preventDefault",value:function value(){}},{key:"stopImmediatePropagation",value:function value(){this.immediatePropagationStopped=this.propagationStopped=!0}},{key:"stopPropagation",value:function value(){this.propagationStopped=!0}}])&&Ae(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(N.BaseEvent);Ie.InteractEvent=Be,Object.defineProperties(Be.prototype,{pageX:{get:function get(){return this.page.x},set:function set(t){this.page.x=t}},pageY:{get:function get(){return this.page.y},set:function set(t){this.page.y=t}},clientX:{get:function get(){return this.client.x},set:function set(t){this.client.x=t}},clientY:{get:function get(){return this.client.y},set:function set(t){this.client.y=t}},dx:{get:function get(){return this.delta.x},set:function set(t){this.delta.x=t}},dy:{get:function get(){return this.delta.y},set:function set(t){this.delta.y=t}},velocityX:{get:function get(){return this.velocity.x},set:function set(t){this.velocity.x=t}},velocityY:{get:function get(){return this.velocity.y},set:function set(t){this.velocity.y=t}}});var Ye={};function We(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Le(t,e,n){return e&&We(t.prototype,e),n&&We(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function Ue(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(Ye,"__esModule",{value:!0}),Ye.PointerInfo=void 0;var Ve=Le((function t(e,n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Ue(this,"id",void 0),Ue(this,"pointer",void 0),Ue(this,"event",void 0),Ue(this,"downTime",void 0),Ue(this,"downTarget",void 0),this.id=e,this.pointer=n,this.event=r,this.downTime=o,this.downTarget=i}));Ye.PointerInfo=Ve;var Ne,qe,Ge={};function $e(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function He(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(Ge,"__esModule",{value:!0}),Ge.Interaction=void 0,Object.defineProperty(Ge,"PointerInfo",{enumerable:!0,get:function get(){return Ye.PointerInfo}}),Ge.default=Ge._ProxyValues=Ge._ProxyMethods=void 0,Ge._ProxyValues=Ne,function(t){t.interactable="",t.element="",t.prepared="",t.pointerIsDown="",t.pointerWasMoved="",t._proxy=""}(Ne||(Ge._ProxyValues=Ne={})),Ge._ProxyMethods=qe,function(t){t.start="",t.move="",t.end="",t.stop="",t.interacting=""}(qe||(Ge._ProxyMethods=qe={}));var Ke=0,Ze=function(){function t(e){var n=this,r=e.pointerType,o=e.scopeFire;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),He(this,"interactable",null),He(this,"element",null),He(this,"rect",null),He(this,"_rects",void 0),He(this,"edges",null),He(this,"_scopeFire",void 0),He(this,"prepared",{name:null,axis:null,edges:null}),He(this,"pointerType",void 0),He(this,"pointers",[]),He(this,"downEvent",null),He(this,"downPointer",{}),He(this,"_latestPointer",{pointer:null,event:null,eventTarget:null}),He(this,"prevEvent",null),He(this,"pointerIsDown",!1),He(this,"pointerWasMoved",!1),He(this,"_interacting",!1),He(this,"_ending",!1),He(this,"_stopped",!0),He(this,"_proxy",null),He(this,"simulation",null),He(this,"doMove",(0,Xt.warnOnce)((function(t){this.move(t)}),"The interaction.doMove() method has been renamed to interaction.move()")),He(this,"coords",{start:X.newCoords(),prev:X.newCoords(),cur:X.newCoords(),delta:X.newCoords(),velocity:X.newCoords()}),He(this,"_id",Ke++),this._scopeFire=o,this.pointerType=r;var i=this;this._proxy={};var a=function a(t){Object.defineProperty(n._proxy,t,{get:function get(){return i[t]}})};for(var s in Ne)a(s);var l=function l(t){Object.defineProperty(n._proxy,t,{value:function value(){return i[t].apply(i,arguments)}})};for(var u in qe)l(u);this._scopeFire("interactions:new",{interaction:this})}var e,n;return e=t,n=[{key:"pointerMoveTolerance",get:function get(){return 1}},{key:"pointerDown",value:function value(t,e,n){var r=this.updatePointer(t,e,n,!0),o=this.pointers[r];this._scopeFire("interactions:down",{pointer:t,event:e,eventTarget:n,pointerIndex:r,pointerInfo:o,type:"down",interaction:this})}},{key:"start",value:function value(t,e,n){return!(this.interacting()||!this.pointerIsDown||this.pointers.length<("gesture"===t.name?2:1)||!e.options[t.name].enabled)&&((0,Xt.copyAction)(this.prepared,t),this.interactable=e,this.element=n,this.rect=e.getRect(n),this.edges=this.prepared.edges?(0,M.default)({},this.prepared.edges):{left:!0,right:!0,top:!0,bottom:!0},this._stopped=!1,this._interacting=this._doPhase({interaction:this,event:this.downEvent,phase:"start"})&&!this._stopped,this._interacting)}},{key:"pointerMove",value:function value(t,e,n){this.simulation||this.modification&&this.modification.endResult||this.updatePointer(t,e,n,!1);var r,o,i=this.coords.cur.page.x===this.coords.prev.page.x&&this.coords.cur.page.y===this.coords.prev.page.y&&this.coords.cur.client.x===this.coords.prev.client.x&&this.coords.cur.client.y===this.coords.prev.client.y;this.pointerIsDown&&!this.pointerWasMoved&&(r=this.coords.cur.client.x-this.coords.start.client.x,o=this.coords.cur.client.y-this.coords.start.client.y,this.pointerWasMoved=(0,R.default)(r,o)>this.pointerMoveTolerance);var a=this.getPointerIndex(t),s={pointer:t,pointerIndex:a,pointerInfo:this.pointers[a],event:e,type:"move",eventTarget:n,dx:r,dy:o,duplicate:i,interaction:this};i||X.setCoordVelocity(this.coords.velocity,this.coords.delta),this._scopeFire("interactions:move",s),i||this.simulation||(this.interacting()&&(s.type=null,this.move(s)),this.pointerWasMoved&&X.copyCoords(this.coords.prev,this.coords.cur))}},{key:"move",value:function value(t){t&&t.event||X.setZeroCoords(this.coords.delta),(t=(0,M.default)({pointer:this._latestPointer.pointer,event:this._latestPointer.event,eventTarget:this._latestPointer.eventTarget,interaction:this},t||{})).phase="move",this._doPhase(t)}},{key:"pointerUp",value:function value(t,e,n,r){var o=this.getPointerIndex(t);-1===o&&(o=this.updatePointer(t,e,n,!1));var i=/cancel$/i.test(e.type)?"cancel":"up";this._scopeFire("interactions:".concat(i),{pointer:t,pointerIndex:o,pointerInfo:this.pointers[o],event:e,eventTarget:n,type:i,curEventTarget:r,interaction:this}),this.simulation||this.end(e),this.removePointer(t,e)}},{key:"documentBlur",value:function value(t){this.end(t),this._scopeFire("interactions:blur",{event:t,type:"blur",interaction:this})}},{key:"end",value:function value(t){var e;this._ending=!0,t=t||this._latestPointer.event,this.interacting()&&(e=this._doPhase({event:t,interaction:this,phase:"end"})),this._ending=!1,!0===e&&this.stop()}},{key:"currentAction",value:function value(){return this._interacting?this.prepared.name:null}},{key:"interacting",value:function value(){return this._interacting}},{key:"stop",value:function value(){this._scopeFire("interactions:stop",{interaction:this}),this.interactable=this.element=null,this._interacting=!1,this._stopped=!0,this.prepared.name=this.prevEvent=null}},{key:"getPointerIndex",value:function value(t){var e=X.getPointerId(t);return"mouse"===this.pointerType||"pen"===this.pointerType?this.pointers.length-1:H.findIndex(this.pointers,(function(t){return t.id===e}))}},{key:"getPointerInfo",value:function value(t){return this.pointers[this.getPointerIndex(t)]}},{key:"updatePointer",value:function value(t,e,n,r){var o=X.getPointerId(t),i=this.getPointerIndex(t),a=this.pointers[i];return r=!1!==r&&(r||/(down|start)$/i.test(e.type)),a?a.pointer=t:(a=new Ye.PointerInfo(o,t,e,null,null),i=this.pointers.length,this.pointers.push(a)),X.setCoords(this.coords.cur,this.pointers.map((function(t){return t.pointer})),this._now()),X.setCoordDeltas(this.coords.delta,this.coords.prev,this.coords.cur),r&&(this.pointerIsDown=!0,a.downTime=this.coords.cur.timeStamp,a.downTarget=n,X.pointerExtend(this.downPointer,t),this.interacting()||(X.copyCoords(this.coords.start,this.coords.cur),X.copyCoords(this.coords.prev,this.coords.cur),this.downEvent=e,this.pointerWasMoved=!1)),this._updateLatestPointer(t,e,n),this._scopeFire("interactions:update-pointer",{pointer:t,event:e,eventTarget:n,down:r,pointerInfo:a,pointerIndex:i,interaction:this}),i}},{key:"removePointer",value:function value(t,e){var n=this.getPointerIndex(t);if(-1!==n){var r=this.pointers[n];this._scopeFire("interactions:remove-pointer",{pointer:t,event:e,eventTarget:null,pointerIndex:n,pointerInfo:r,interaction:this}),this.pointers.splice(n,1),this.pointerIsDown=!1}}},{key:"_updateLatestPointer",value:function value(t,e,n){this._latestPointer.pointer=t,this._latestPointer.event=e,this._latestPointer.eventTarget=n}},{key:"destroy",value:function value(){this._latestPointer.pointer=null,this._latestPointer.event=null,this._latestPointer.eventTarget=null}},{key:"_createPreparedEvent",value:function value(t,e,n,r){return new Ie.InteractEvent(this,t,this.prepared.name,e,this.element,n,r)}},{key:"_fireEvent",value:function value(t){var e;null==(e=this.interactable)||e.fire(t),(!this.prevEvent||t.timeStamp>=this.prevEvent.timeStamp)&&(this.prevEvent=t)}},{key:"_doPhase",value:function value(t){var e=t.event,n=t.phase,r=t.preEnd,o=t.type,i=this.rect;if(i&&"move"===n&&(k.addEdges(this.edges,i,this.coords.delta[this.interactable.options.deltaSource]),i.width=i.right-i.left,i.height=i.bottom-i.top),!1===this._scopeFire("interactions:before-action-".concat(n),t))return!1;var a=t.iEvent=this._createPreparedEvent(e,n,r,o);return this._scopeFire("interactions:action-".concat(n),t),"start"===n&&(this.prevEvent=a),this._fireEvent(a),this._scopeFire("interactions:after-action-".concat(n),t),!0}},{key:"_now",value:function value(){return Date.now()}}],n&&$e(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();Ge.Interaction=Ze;var Je=Ze;Ge.default=Je;var Qe={};function tn(t){t.pointerIsDown&&(on(t.coords.cur,t.offset.total),t.offset.pending.x=0,t.offset.pending.y=0)}function en(t){nn(t.interaction)}function nn(t){if(!function(t){return!(!t.offset.pending.x&&!t.offset.pending.y)}(t))return!1;var e=t.offset.pending;return on(t.coords.cur,e),on(t.coords.delta,e),k.addEdges(t.edges,t.rect,e),e.x=0,e.y=0,!0}function rn(t){var e=t.x,n=t.y;this.offset.pending.x+=e,this.offset.pending.y+=n,this.offset.total.x+=e,this.offset.total.y+=n}function on(t,e){var n=t.page,r=t.client,o=e.x,i=e.y;n.x+=o,n.y+=i,r.x+=o,r.y+=i}Object.defineProperty(Qe,"__esModule",{value:!0}),Qe.addTotal=tn,Qe.applyPending=nn,Qe.default=void 0,Ge._ProxyMethods.offsetBy="";var an={id:"offset",before:["modifiers","pointer-events","actions","inertia"],install:function install(t){t.Interaction.prototype.offsetBy=rn},listeners:{"interactions:new":function interactionsNew(t){t.interaction.offset={total:{x:0,y:0},pending:{x:0,y:0}}},"interactions:update-pointer":function interactionsUpdatePointer(t){return tn(t.interaction)},"interactions:before-action-start":en,"interactions:before-action-move":en,"interactions:before-action-end":function interactionsBeforeActionEnd(t){var e=t.interaction;if(nn(e))return e.move({offset:!0}),e.end(),!1},"interactions:stop":function interactionsStop(t){var e=t.interaction;e.offset.total.x=0,e.offset.total.y=0,e.offset.pending.x=0,e.offset.pending.y=0}}},sn=an;Qe.default=sn;var ln={};function un(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function cn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(ln,"__esModule",{value:!0}),ln.default=ln.InertiaState=void 0;var fn=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),cn(this,"active",!1),cn(this,"isModified",!1),cn(this,"smoothEnd",!1),cn(this,"allowResume",!1),cn(this,"modification",void 0),cn(this,"modifierCount",0),cn(this,"modifierArg",void 0),cn(this,"startCoords",void 0),cn(this,"t0",0),cn(this,"v0",0),cn(this,"te",0),cn(this,"targetOffset",void 0),cn(this,"modifiedOffset",void 0),cn(this,"currentOffset",void 0),cn(this,"lambda_v0",0),cn(this,"one_ve_v0",0),cn(this,"timeout",void 0),cn(this,"interaction",void 0),this.interaction=e}var e,n;return e=t,(n=[{key:"start",value:function value(t){var e=this.interaction,n=dn(e);if(!n||!n.enabled)return!1;var r=e.coords.velocity.client,o=(0,R.default)(r.x,r.y),i=this.modification||(this.modification=new me.default(e));if(i.copyFrom(e.modification),this.t0=e._now(),this.allowResume=n.allowResume,this.v0=o,this.currentOffset={x:0,y:0},this.startCoords=e.coords.cur.page,this.modifierArg=i.fillArg({pageCoords:this.startCoords,preEnd:!0,phase:"inertiastart"}),this.t0-e.coords.cur.timeStamp<50&&o>n.minSpeed&&o>n.endSpeed)this.startInertia();else{if(i.result=i.setAll(this.modifierArg),!i.result.changed)return!1;this.startSmoothEnd()}return e.modification.result.rect=null,e.offsetBy(this.targetOffset),e._doPhase({interaction:e,event:t,phase:"inertiastart"}),e.offsetBy({x:-this.targetOffset.x,y:-this.targetOffset.y}),e.modification.result.rect=null,this.active=!0,e.simulation=this,!0}},{key:"startInertia",value:function value(){var t=this,e=this.interaction.coords.velocity.client,n=dn(this.interaction),r=n.resistance,o=-Math.log(n.endSpeed/this.v0)/r;this.targetOffset={x:(e.x-o)/r,y:(e.y-o)/r},this.te=o,this.lambda_v0=r/this.v0,this.one_ve_v0=1-n.endSpeed/this.v0;var i=this.modification,a=this.modifierArg;a.pageCoords={x:this.startCoords.x+this.targetOffset.x,y:this.startCoords.y+this.targetOffset.y},i.result=i.setAll(a),i.result.changed&&(this.isModified=!0,this.modifiedOffset={x:this.targetOffset.x+i.result.delta.x,y:this.targetOffset.y+i.result.delta.y}),this.onNextFrame((function(){return t.inertiaTick()}))}},{key:"startSmoothEnd",value:function value(){var t=this;this.smoothEnd=!0,this.isModified=!0,this.targetOffset={x:this.modification.result.delta.x,y:this.modification.result.delta.y},this.onNextFrame((function(){return t.smoothEndTick()}))}},{key:"onNextFrame",value:function value(t){var e=this;this.timeout=Tt.default.request((function(){e.active&&t()}))}},{key:"inertiaTick",value:function value(){var t,e,n,r,o,i=this,a=this.interaction,s=dn(a).resistance,l=(a._now()-this.t0)/1e3;if(l<this.te){var u,c=1-(Math.exp(-s*l)-this.lambda_v0)/this.one_ve_v0;this.isModified?(t=this.targetOffset.x,e=this.targetOffset.y,n=this.modifiedOffset.x,r=this.modifiedOffset.y,u={x:vn(o=c,0,t,n),y:vn(o,0,e,r)}):u={x:this.targetOffset.x*c,y:this.targetOffset.y*c};var f={x:u.x-this.currentOffset.x,y:u.y-this.currentOffset.y};this.currentOffset.x+=f.x,this.currentOffset.y+=f.y,a.offsetBy(f),a.move(),this.onNextFrame((function(){return i.inertiaTick()}))}else a.offsetBy({x:this.modifiedOffset.x-this.currentOffset.x,y:this.modifiedOffset.y-this.currentOffset.y}),this.end()}},{key:"smoothEndTick",value:function value(){var t=this,e=this.interaction,n=e._now()-this.t0,r=dn(e).smoothEndDuration;if(n<r){var o={x:hn(n,0,this.targetOffset.x,r),y:hn(n,0,this.targetOffset.y,r)},i={x:o.x-this.currentOffset.x,y:o.y-this.currentOffset.y};this.currentOffset.x+=i.x,this.currentOffset.y+=i.y,e.offsetBy(i),e.move({skipModifiers:this.modifierCount}),this.onNextFrame((function(){return t.smoothEndTick()}))}else e.offsetBy({x:this.targetOffset.x-this.currentOffset.x,y:this.targetOffset.y-this.currentOffset.y}),this.end()}},{key:"resume",value:function value(t){var e=t.pointer,n=t.event,r=t.eventTarget,o=this.interaction;o.offsetBy({x:-this.currentOffset.x,y:-this.currentOffset.y}),o.updatePointer(e,n,r,!0),o._doPhase({interaction:o,event:n,phase:"resume"}),(0,X.copyCoords)(o.coords.prev,o.coords.cur),this.stop()}},{key:"end",value:function value(){this.interaction.move(),this.interaction.end(),this.stop()}},{key:"stop",value:function value(){this.active=this.smoothEnd=!1,this.interaction.simulation=null,Tt.default.cancel(this.timeout)}}])&&un(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function dn(t){var e=t.interactable,n=t.prepared;return e&&e.options&&n.name&&e.options[n.name].inertia}ln.InertiaState=fn;var pn={id:"inertia",before:["modifiers","actions"],install:function install(t){var e=t.defaults;t.usePlugin(Qe.default),t.usePlugin(Se.default),t.actions.phases.inertiastart=!0,t.actions.phases.resume=!0,e.perAction.inertia={enabled:!1,resistance:10,minSpeed:100,endSpeed:10,allowResume:!0,smoothEndDuration:300}},listeners:{"interactions:new":function interactionsNew(t){var e=t.interaction;e.inertia=new fn(e)},"interactions:before-action-end":function interactionsBeforeActionEnd(t){var e=t.interaction,n=t.event;return(!e._interacting||e.simulation||!e.inertia.start(n))&&null},"interactions:down":function interactionsDown(t){var e=t.interaction,n=t.eventTarget,r=e.inertia;if(r.active)for(var o=n;i.default.element(o);){if(o===e.element){r.resume(t);break}o=_.parentNode(o)}},"interactions:stop":function interactionsStop(t){var e=t.interaction.inertia;e.active&&e.stop()},"interactions:before-action-resume":function interactionsBeforeActionResume(t){var e=t.interaction.modification;e.stop(t),e.start(t,t.interaction.coords.cur.page),e.applyToInteraction(t)},"interactions:before-action-inertiastart":function interactionsBeforeActionInertiastart(t){return t.interaction.modification.setAndApply(t)},"interactions:action-resume":Se.addEventModifiers,"interactions:action-inertiastart":Se.addEventModifiers,"interactions:after-action-inertiastart":function interactionsAfterActionInertiastart(t){return t.interaction.modification.restoreInteractionCoords(t)},"interactions:after-action-resume":function interactionsAfterActionResume(t){return t.interaction.modification.restoreInteractionCoords(t)}}};function vn(t,e,n,r){var o=1-t;return o*o*e+2*o*t*n+t*t*r}function hn(t,e,n,r){return-n*(t/=r)*(t-2)+e}var gn=pn;ln.default=gn;var yn={};function mn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function bn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function xn(t,e){for(var n=0;n<e.length;n++){var r=e[n];if(t.immediatePropagationStopped)break;r(t)}}Object.defineProperty(yn,"__esModule",{value:!0}),yn.Eventable=void 0;var wn=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),bn(this,"options",void 0),bn(this,"types",{}),bn(this,"propagationStopped",!1),bn(this,"immediatePropagationStopped",!1),bn(this,"global",void 0),this.options=(0,M.default)({},e||{})}var e,n;return e=t,(n=[{key:"fire",value:function value(t){var e,n=this.global;(e=this.types[t.type])&&xn(t,e),!t.propagationStopped&&n&&(e=n[t.type])&&xn(t,e)}},{key:"on",value:function value(t,e){var n=(0,z.default)(t,e);for(t in n)this.types[t]=H.merge(this.types[t]||[],n[t])}},{key:"off",value:function value(t,e){var n=(0,z.default)(t,e);for(t in n){var r=this.types[t];if(r&&r.length)for(var o=0;o<n[t].length;o++){var i=n[t][o],a=r.indexOf(i);-1!==a&&r.splice(a,1)}}}},{key:"getRect",value:function value(t){return null}}])&&mn(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();yn.Eventable=wn;var _n={};Object.defineProperty(_n,"__esModule",{value:!0}),_n.default=function(t,e){if(e.phaselessTypes[t])return!0;for(var n in e.map)if(0===t.indexOf(n)&&t.substr(n.length)in e.phases)return!0;return!1};var Pn={};Object.defineProperty(Pn,"__esModule",{value:!0}),Pn.createInteractStatic=function(t){var e=function e(n,r){var o=t.interactables.get(n,r);return o||((o=t.interactables.new(n,r)).events.global=e.globalEvents),o};return e.getPointerAverage=X.pointerAverage,e.getTouchBBox=X.touchBBox,e.getTouchDistance=X.touchDistance,e.getTouchAngle=X.touchAngle,e.getElementRect=_.getElementRect,e.getElementClientRect=_.getElementClientRect,e.matchesSelector=_.matchesSelector,e.closest=_.closest,e.globalEvents={},e.version="1.10.17",e.scope=t,e.use=function(t,e){return this.scope.usePlugin(t,e),this},e.isSet=function(t,e){return!!this.scope.interactables.get(t,e&&e.context)},e.on=(0,Xt.warnOnce)((function(t,e,n){if(i.default.string(t)&&-1!==t.search(" ")&&(t=t.trim().split(/ +/)),i.default.array(t)){for(var r=0;r<t.length;r++){var o=t[r];this.on(o,e,n)}return this}if(i.default.object(t)){for(var a in t)this.on(a,t[a],e);return this}return(0,_n.default)(t,this.scope.actions)?this.globalEvents[t]?this.globalEvents[t].push(e):this.globalEvents[t]=[e]:this.scope.events.add(this.scope.document,t,e,{options:n}),this}),"The interact.on() method is being deprecated"),e.off=(0,Xt.warnOnce)((function(t,e,n){if(i.default.string(t)&&-1!==t.search(" ")&&(t=t.trim().split(/ +/)),i.default.array(t)){for(var r=0;r<t.length;r++){var o=t[r];this.off(o,e,n)}return this}if(i.default.object(t)){for(var a in t)this.off(a,t[a],e);return this}var s;return(0,_n.default)(t,this.scope.actions)?t in this.globalEvents&&-1!==(s=this.globalEvents[t].indexOf(e))&&this.globalEvents[t].splice(s,1):this.scope.events.remove(this.scope.document,t,e,n),this}),"The interact.off() method is being deprecated"),e.debug=function(){return this.scope},e.supportsTouch=function(){return b.default.supportsTouch},e.supportsPointerEvent=function(){return b.default.supportsPointerEvent},e.stop=function(){for(var t=0;t<this.scope.interactions.list.length;t++)this.scope.interactions.list[t].stop();return this},e.pointerMoveTolerance=function(t){return i.default.number(t)?(this.scope.interactions.pointerMoveTolerance=t,this):this.scope.interactions.pointerMoveTolerance},e.addDocument=function(t,e){this.scope.addDocument(t,e)},e.removeDocument=function(t){this.scope.removeDocument(t)},e};var On={};function En(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Sn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(On,"__esModule",{value:!0}),On.Interactable=void 0;var Tn=function(){function t(n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Sn(this,"options",void 0),Sn(this,"_actions",void 0),Sn(this,"target",void 0),Sn(this,"events",new yn.Eventable),Sn(this,"_context",void 0),Sn(this,"_win",void 0),Sn(this,"_doc",void 0),Sn(this,"_scopeEvents",void 0),Sn(this,"_rectChecker",void 0),this._actions=r.actions,this.target=n,this._context=r.context||o,this._win=(0,e.getWindow)((0,_.trySelector)(n)?this._context:n),this._doc=this._win.document,this._scopeEvents=i,this.set(r)}var n,r;return n=t,(r=[{key:"_defaults",get:function get(){return{base:{},perAction:{},actions:{}}}},{key:"setOnEvents",value:function value(t,e){return i.default.func(e.onstart)&&this.on("".concat(t,"start"),e.onstart),i.default.func(e.onmove)&&this.on("".concat(t,"move"),e.onmove),i.default.func(e.onend)&&this.on("".concat(t,"end"),e.onend),i.default.func(e.oninertiastart)&&this.on("".concat(t,"inertiastart"),e.oninertiastart),this}},{key:"updatePerActionListeners",value:function value(t,e,n){(i.default.array(e)||i.default.object(e))&&this.off(t,e),(i.default.array(n)||i.default.object(n))&&this.on(t,n)}},{key:"setPerAction",value:function value(t,e){var n=this._defaults;for(var r in e){var o=r,a=this.options[t],s=e[o];"listeners"===o&&this.updatePerActionListeners(t,a.listeners,s),i.default.array(s)?a[o]=H.from(s):i.default.plainObject(s)?(a[o]=(0,M.default)(a[o]||{},(0,ye.default)(s)),i.default.object(n.perAction[o])&&"enabled"in n.perAction[o]&&(a[o].enabled=!1!==s.enabled)):i.default.bool(s)&&i.default.object(n.perAction[o])?a[o].enabled=s:a[o]=s}}},{key:"getRect",value:function value(t){return t=t||(i.default.element(this.target)?this.target:null),i.default.string(this.target)&&(t=t||this._context.querySelector(this.target)),(0,_.getElementRect)(t)}},{key:"rectChecker",value:function value(t){var e=this;return i.default.func(t)?(this._rectChecker=t,this.getRect=function(t){var n=(0,M.default)({},e._rectChecker(t));return"width"in n||(n.width=n.right-n.left,n.height=n.bottom-n.top),n},this):null===t?(delete this.getRect,delete this._rectChecker,this):this.getRect}},{key:"_backCompatOption",value:function value(t,e){if((0,_.trySelector)(e)||i.default.object(e)){for(var n in this.options[t]=e,this._actions.map)this.options[n][t]=e;return this}return this.options[t]}},{key:"origin",value:function value(t){return this._backCompatOption("origin",t)}},{key:"deltaSource",value:function value(t){return"page"===t||"client"===t?(this.options.deltaSource=t,this):this.options.deltaSource}},{key:"context",value:function value(){return this._context}},{key:"inContext",value:function value(t){return this._context===t.ownerDocument||(0,_.nodeContains)(this._context,t)}},{key:"testIgnoreAllow",value:function value(t,e,n){return!this.testIgnore(t.ignoreFrom,e,n)&&this.testAllow(t.allowFrom,e,n)}},{key:"testAllow",value:function value(t,e,n){return!t||!!i.default.element(n)&&(i.default.string(t)?(0,_.matchesUpTo)(n,t,e):!!i.default.element(t)&&(0,_.nodeContains)(t,n))}},{key:"testIgnore",value:function value(t,e,n){return!(!t||!i.default.element(n))&&(i.default.string(t)?(0,_.matchesUpTo)(n,t,e):!!i.default.element(t)&&(0,_.nodeContains)(t,n))}},{key:"fire",value:function value(t){return this.events.fire(t),this}},{key:"_onOff",value:function value(t,e,n,r){i.default.object(e)&&!i.default.array(e)&&(r=n,n=null);var o="on"===t?"add":"remove",a=(0,z.default)(e,n);for(var s in a){"wheel"===s&&(s=b.default.wheelEvent);for(var l=0;l<a[s].length;l++){var u=a[s][l];(0,_n.default)(s,this._actions)?this.events[t](s,u):i.default.string(this.target)?this._scopeEvents["".concat(o,"Delegate")](this.target,this._context,s,u,r):this._scopeEvents[o](this.target,s,u,r)}}return this}},{key:"on",value:function value(t,e,n){return this._onOff("on",t,e,n)}},{key:"off",value:function value(t,e,n){return this._onOff("off",t,e,n)}},{key:"set",value:function value(t){var e=this._defaults;for(var n in i.default.object(t)||(t={}),this.options=(0,ye.default)(e.base),this._actions.methodDict){var r=n,o=this._actions.methodDict[r];this.options[r]={},this.setPerAction(r,(0,M.default)((0,M.default)({},e.perAction),e.actions[r])),this[o](t[r])}for(var a in t)i.default.func(this[a])&&this[a](t[a]);return this}},{key:"unset",value:function value(){if(i.default.string(this.target))for(var t in this._scopeEvents.delegatedEvents)for(var e=this._scopeEvents.delegatedEvents[t],n=e.length-1;n>=0;n--){var r=e[n],o=r.selector,a=r.context,s=r.listeners;o===this.target&&a===this._context&&e.splice(n,1);for(var l=s.length-1;l>=0;l--)this._scopeEvents.removeDelegate(this.target,this._context,t,s[l][0],s[l][1])}else this._scopeEvents.remove(this.target,"all")}}])&&En(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();On.Interactable=Tn;var jn={};function Mn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function kn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(jn,"__esModule",{value:!0}),jn.InteractableSet=void 0;var In=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),kn(this,"list",[]),kn(this,"selectorMap",{}),kn(this,"scope",void 0),this.scope=e,e.addListeners({"interactable:unset":function interactableUnset(t){var e=t.interactable,r=e.target,o=e._context,a=i.default.string(r)?n.selectorMap[r]:r[n.scope.id],s=H.findIndex(a,(function(t){return t.context===o}));a[s]&&(a[s].context=null,a[s].interactable=null),a.splice(s,1)}})}var e,n;return e=t,(n=[{key:"new",value:function value(t,e){e=(0,M.default)(e||{},{actions:this.scope.actions});var n=new this.scope.Interactable(t,e,this.scope.document,this.scope.events),r={context:n._context,interactable:n};return this.scope.addDocument(n._doc),this.list.push(n),i.default.string(t)?(this.selectorMap[t]||(this.selectorMap[t]=[]),this.selectorMap[t].push(r)):(n.target[this.scope.id]||Object.defineProperty(t,this.scope.id,{value:[],configurable:!0}),t[this.scope.id].push(r)),this.scope.fire("interactable:new",{target:t,options:e,interactable:n,win:this.scope._win}),n}},{key:"get",value:function value(t,e){var n=e&&e.context||this.scope.document,r=i.default.string(t),o=r?this.selectorMap[t]:t[this.scope.id];if(!o)return null;var a=H.find(o,(function(e){return e.context===n&&(r||e.interactable.inContext(t))}));return a&&a.interactable}},{key:"forEachMatch",value:function value(t,e){for(var n=0;n<this.list.length;n++){var r=this.list[n],o=void 0;if((i.default.string(r.target)?i.default.element(t)&&_.matchesSelector(t,r.target):t===r.target)&&r.inContext(t)&&(o=e(r)),void 0!==o)return o}}}])&&Mn(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();jn.InteractableSet=In;var Dn={};function An(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function zn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Cn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Rn(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Rn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Rn(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}Object.defineProperty(Dn,"__esModule",{value:!0}),Dn.default=void 0;var Fn=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),zn(this,"currentTarget",void 0),zn(this,"originalEvent",void 0),zn(this,"type",void 0),this.originalEvent=e,(0,F.default)(this,e)}var e,n;return e=t,(n=[{key:"preventOriginalDefault",value:function value(){this.originalEvent.preventDefault()}},{key:"stopPropagation",value:function value(){this.originalEvent.stopPropagation()}},{key:"stopImmediatePropagation",value:function value(){this.originalEvent.stopImmediatePropagation()}}])&&An(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function Xn(t){if(!i.default.object(t))return{capture:!!t,passive:!1};var e=(0,M.default)({},t);return e.capture=!!t.capture,e.passive=!!t.passive,e}var Bn={id:"events",install:function install(t){var e,n=[],r={},o=[],a={add:s,remove:l,addDelegate:function addDelegate(t,e,n,i,a){var l=Xn(a);if(!r[n]){r[n]=[];for(var f=0;f<o.length;f++){var d=o[f];s(d,n,u),s(d,n,c,!0)}}var p=r[n],v=H.find(p,(function(n){return n.selector===t&&n.context===e}));v||(v={selector:t,context:e,listeners:[]},p.push(v)),v.listeners.push([i,l])},removeDelegate:function removeDelegate(t,e,n,o,i){var a,s=Xn(i),f=r[n],d=!1;if(f)for(a=f.length-1;a>=0;a--){var p=f[a];if(p.selector===t&&p.context===e){for(var v=p.listeners,h=v.length-1;h>=0;h--){var g=Cn(v[h],2),y=g[0],m=g[1],b=m.capture,x=m.passive;if(y===o&&b===s.capture&&x===s.passive){v.splice(h,1),v.length||(f.splice(a,1),l(e,n,u),l(e,n,c,!0)),d=!0;break}}if(d)break}}},delegateListener:u,delegateUseCapture:c,delegatedEvents:r,documents:o,targets:n,supportsOptions:!1,supportsPassive:!1};function s(t,e,r,o){var i=Xn(o),s=H.find(n,(function(e){return e.eventTarget===t}));s||(s={eventTarget:t,events:{}},n.push(s)),s.events[e]||(s.events[e]=[]),t.addEventListener&&!H.contains(s.events[e],r)&&(t.addEventListener(e,r,a.supportsOptions?i:i.capture),s.events[e].push(r))}function l(t,e,r,o){var i=Xn(o),s=H.findIndex(n,(function(e){return e.eventTarget===t})),u=n[s];if(u&&u.events)if("all"!==e){var c=!1,f=u.events[e];if(f){if("all"===r){for(var d=f.length-1;d>=0;d--)l(t,e,f[d],i);return}for(var p=0;p<f.length;p++)if(f[p]===r){t.removeEventListener(e,r,a.supportsOptions?i:i.capture),f.splice(p,1),0===f.length&&(delete u.events[e],c=!0);break}}c&&!Object.keys(u.events).length&&n.splice(s,1)}else for(e in u.events)u.events.hasOwnProperty(e)&&l(t,e,"all")}function u(t,e){for(var n=Xn(e),o=new Fn(t),a=r[t.type],s=Cn(X.getEventTargets(t),1)[0],l=s;i.default.element(l);){for(var u=0;u<a.length;u++){var c=a[u],f=c.selector,d=c.context;if(_.matchesSelector(l,f)&&_.nodeContains(d,s)&&_.nodeContains(d,l)){var p=c.listeners;o.currentTarget=l;for(var v=0;v<p.length;v++){var h=Cn(p[v],2),g=h[0],y=h[1],m=y.capture,b=y.passive;m===n.capture&&b===n.passive&&g(o)}}}l=_.parentNode(l)}}function c(t){return u(t,!0)}return null==(e=t.document)||e.createElement("div").addEventListener("test",null,{get capture(){return a.supportsOptions=!0},get passive(){return a.supportsPassive=!0}}),t.events=a,a}};Dn.default=Bn;var Yn={};Object.defineProperty(Yn,"__esModule",{value:!0}),Yn.default=void 0;var Wn={methodOrder:["simulationResume","mouseOrPen","hasPointer","idle"],search:function search(t){for(var e=0;e<Wn.methodOrder.length;e++){var n;n=Wn.methodOrder[e];var r=Wn[n](t);if(r)return r}return null},simulationResume:function simulationResume(t){var e=t.pointerType,n=t.eventType,r=t.eventTarget,o=t.scope;if(!/down|start/i.test(n))return null;for(var i=0;i<o.interactions.list.length;i++){var a=o.interactions.list[i],s=r;if(a.simulation&&a.simulation.allowResume&&a.pointerType===e)for(;s;){if(s===a.element)return a;s=_.parentNode(s)}}return null},mouseOrPen:function mouseOrPen(t){var e,n=t.pointerId,r=t.pointerType,o=t.eventType,i=t.scope;if("mouse"!==r&&"pen"!==r)return null;for(var a=0;a<i.interactions.list.length;a++){var s=i.interactions.list[a];if(s.pointerType===r){if(s.simulation&&!Ln(s,n))continue;if(s.interacting())return s;e||(e=s)}}if(e)return e;for(var l=0;l<i.interactions.list.length;l++){var u=i.interactions.list[l];if(!(u.pointerType!==r||/down/i.test(o)&&u.simulation))return u}return null},hasPointer:function hasPointer(t){for(var e=t.pointerId,n=t.scope,r=0;r<n.interactions.list.length;r++){var o=n.interactions.list[r];if(Ln(o,e))return o}return null},idle:function idle(t){for(var e=t.pointerType,n=t.scope,r=0;r<n.interactions.list.length;r++){var o=n.interactions.list[r];if(1===o.pointers.length){var i=o.interactable;if(i&&(!i.options.gesture||!i.options.gesture.enabled))continue}else if(o.pointers.length>=2)continue;if(!o.interacting()&&e===o.pointerType)return o}return null}};function Ln(t,e){return t.pointers.some((function(t){return t.id===e}))}var Un=Wn;Yn.default=Un;var Vn={};function Nn(t){return Nn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Nn(t)}function qn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Gn(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Gn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Gn(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function $n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Hn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Kn(t,e){return Kn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},Kn(t,e)}function Zn(t,e){if(e&&("object"===Nn(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function Jn(t){return Jn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Jn(t)}Object.defineProperty(Vn,"__esModule",{value:!0}),Vn.default=void 0;var Qn=["pointerDown","pointerMove","pointerUp","updatePointer","removePointer","windowBlur"];function tr(t,e){return function(n){var r=e.interactions.list,o=X.getPointerType(n),i=qn(X.getEventTargets(n),2),a=i[0],s=i[1],l=[];if(/^touch/.test(n.type)){e.prevTouchTime=e.now();for(var u=0;u<n.changedTouches.length;u++){var c=n.changedTouches[u],f={pointer:c,pointerId:X.getPointerId(c),pointerType:o,eventType:n.type,eventTarget:a,curEventTarget:s,scope:e},d=er(f);l.push([f.pointer,f.eventTarget,f.curEventTarget,d])}}else{var p=!1;if(!b.default.supportsPointerEvent&&/mouse/.test(n.type)){for(var v=0;v<r.length&&!p;v++)p="mouse"!==r[v].pointerType&&r[v].pointerIsDown;p=p||e.now()-e.prevTouchTime<500||0===n.timeStamp}if(!p){var h={pointer:n,pointerId:X.getPointerId(n),pointerType:o,eventType:n.type,curEventTarget:s,eventTarget:a,scope:e},g=er(h);l.push([h.pointer,h.eventTarget,h.curEventTarget,g])}}for(var y=0;y<l.length;y++){var m=qn(l[y],4),x=m[0],w=m[1],_=m[2];m[3][t](x,n,w,_)}}}function er(t){var e=t.pointerType,n=t.scope,r={interaction:Yn.default.search(t),searchDetails:t};return n.fire("interactions:find",r),r.interaction||n.interactions.new({pointerType:e})}function nr(t,e){var n=t.doc,r=t.scope,o=t.options,i=r.interactions.docEvents,a=r.events,s=a[e];for(var l in r.browser.isIOS&&!o.events&&(o.events={passive:!1}),a.delegatedEvents)s(n,l,a.delegateListener),s(n,l,a.delegateUseCapture,!0);for(var u=o&&o.events,c=0;c<i.length;c++){var f=i[c];s(n,f.type,f.listener,u)}}var rr={id:"core/interactions",install:function install(t){for(var e={},n=0;n<Qn.length;n++){var r=Qn[n];e[r]=tr(r,t)}var o,i=b.default.pEventTypes;function a(){for(var e=0;e<t.interactions.list.length;e++){var n=t.interactions.list[e];if(n.pointerIsDown&&"touch"===n.pointerType&&!n._interacting)for(var r=function r(){var e=n.pointers[o];t.documents.some((function(t){var n=t.doc;return(0,_.nodeContains)(n,e.downTarget)}))||n.removePointer(e.pointer,e.event)},o=0;o<n.pointers.length;o++)r()}}(o=h.default.PointerEvent?[{type:i.down,listener:a},{type:i.down,listener:e.pointerDown},{type:i.move,listener:e.pointerMove},{type:i.up,listener:e.pointerUp},{type:i.cancel,listener:e.pointerUp}]:[{type:"mousedown",listener:e.pointerDown},{type:"mousemove",listener:e.pointerMove},{type:"mouseup",listener:e.pointerUp},{type:"touchstart",listener:a},{type:"touchstart",listener:e.pointerDown},{type:"touchmove",listener:e.pointerMove},{type:"touchend",listener:e.pointerUp},{type:"touchcancel",listener:e.pointerUp}]).push({type:"blur",listener:function listener(e){for(var n=0;n<t.interactions.list.length;n++)t.interactions.list[n].documentBlur(e)}}),t.prevTouchTime=0,t.Interaction=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&Kn(t,e)}(s,e);var n,r,o,i,a=(o=s,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=Jn(o);if(i){var n=Jn(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return Zn(this,t)});function s(){return $n(this,s),a.apply(this,arguments)}return n=s,(r=[{key:"pointerMoveTolerance",get:function get(){return t.interactions.pointerMoveTolerance},set:function set(e){t.interactions.pointerMoveTolerance=e}},{key:"_now",value:function value(){return t.now()}}])&&Hn(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),s}(Ge.default),t.interactions={list:[],new:function _new(e){e.scopeFire=function(e,n){return t.fire(e,n)};var n=new t.Interaction(e);return t.interactions.list.push(n),n},listeners:e,docEvents:o,pointerMoveTolerance:1},t.usePlugin(le.default)},listeners:{"scope:add-document":function scopeAddDocument(t){return nr(t,"add")},"scope:remove-document":function scopeRemoveDocument(t){return nr(t,"remove")},"interactable:unset":function interactableUnset(t,e){for(var n=t.interactable,r=e.interactions.list.length-1;r>=0;r--){var o=e.interactions.list[r];o.interactable===n&&(o.stop(),e.fire("interactions:destroy",{interaction:o}),o.destroy(),e.interactions.list.length>2&&e.interactions.list.splice(r,1))}}},onDocSignal:nr,doOnInteractions:tr,methodNames:Qn},or=rr;Vn.default=or;var ir={};function ar(t){return ar="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},ar(t)}function sr(){return sr="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=lr(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},sr.apply(this,arguments)}function lr(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=fr(t)););return t}function ur(t,e){return ur=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},ur(t,e)}function cr(t,e){if(e&&("object"===ar(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function fr(t){return fr=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},fr(t)}function dr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function pr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function vr(t,e,n){return e&&pr(t.prototype,e),n&&pr(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function hr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(ir,"__esModule",{value:!0}),ir.Scope=void 0,ir.initScope=yr;var gr=function(){function t(){var e=this;dr(this,t),hr(this,"id","__interact_scope_".concat(Math.floor(100*Math.random()))),hr(this,"isInitialized",!1),hr(this,"listenerMaps",[]),hr(this,"browser",b.default),hr(this,"defaults",(0,ye.default)(ke.defaults)),hr(this,"Eventable",yn.Eventable),hr(this,"actions",{map:{},phases:{start:!0,move:!0,end:!0},methodDict:{},phaselessTypes:{}}),hr(this,"interactStatic",(0,Pn.createInteractStatic)(this)),hr(this,"InteractEvent",Ie.InteractEvent),hr(this,"Interactable",void 0),hr(this,"interactables",new jn.InteractableSet(this)),hr(this,"_win",void 0),hr(this,"document",void 0),hr(this,"window",void 0),hr(this,"documents",[]),hr(this,"_plugins",{list:[],map:{}}),hr(this,"onWindowUnload",(function(t){return e.removeDocument(t.target)}));var n=this;this.Interactable=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&ur(t,e)}(i,t);var e,r,o=(e=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,n=fr(e);if(r){var o=fr(this).constructor;t=Reflect.construct(n,arguments,o)}else t=n.apply(this,arguments);return cr(this,t)});function i(){return dr(this,i),o.apply(this,arguments)}return vr(i,[{key:"_defaults",get:function get(){return n.defaults}},{key:"set",value:function value(t){return sr(fr(i.prototype),"set",this).call(this,t),n.fire("interactable:set",{options:t,interactable:this}),this}},{key:"unset",value:function value(){sr(fr(i.prototype),"unset",this).call(this);var t=n.interactables.list.indexOf(this);t<0||(sr(fr(i.prototype),"unset",this).call(this),n.interactables.list.splice(t,1),n.fire("interactable:unset",{interactable:this}))}}]),i}(On.Interactable)}return vr(t,[{key:"addListeners",value:function value(t,e){this.listenerMaps.push({id:e,map:t})}},{key:"fire",value:function value(t,e){for(var n=0;n<this.listenerMaps.length;n++){var r=this.listenerMaps[n].map[t];if(r&&!1===r(e,this,t))return!1}}},{key:"init",value:function value(t){return this.isInitialized?this:yr(this,t)}},{key:"pluginIsInstalled",value:function value(t){return this._plugins.map[t.id]||-1!==this._plugins.list.indexOf(t)}},{key:"usePlugin",value:function value(t,e){if(!this.isInitialized)return this;if(this.pluginIsInstalled(t))return this;if(t.id&&(this._plugins.map[t.id]=t),this._plugins.list.push(t),t.install&&t.install(this,e),t.listeners&&t.before){for(var n=0,r=this.listenerMaps.length,o=t.before.reduce((function(t,e){return t[e]=!0,t[mr(e)]=!0,t}),{});n<r;n++){var i=this.listenerMaps[n].id;if(o[i]||o[mr(i)])break}this.listenerMaps.splice(n,0,{id:t.id,map:t.listeners})}else t.listeners&&this.listenerMaps.push({id:t.id,map:t.listeners});return this}},{key:"addDocument",value:function value(t,n){if(-1!==this.getDocIndex(t))return!1;var r=e.getWindow(t);n=n?(0,M.default)({},n):{},this.documents.push({doc:t,options:n}),this.events.documents.push(t),t!==this.document&&this.events.add(r,"unload",this.onWindowUnload),this.fire("scope:add-document",{doc:t,window:r,scope:this,options:n})}},{key:"removeDocument",value:function value(t){var n=this.getDocIndex(t),r=e.getWindow(t),o=this.documents[n].options;this.events.remove(r,"unload",this.onWindowUnload),this.documents.splice(n,1),this.events.documents.splice(n,1),this.fire("scope:remove-document",{doc:t,window:r,scope:this,options:o})}},{key:"getDocIndex",value:function value(t){for(var e=0;e<this.documents.length;e++)if(this.documents[e].doc===t)return e;return-1}},{key:"getDocOptions",value:function value(t){var e=this.getDocIndex(t);return-1===e?null:this.documents[e].options}},{key:"now",value:function value(){return(this.window.Date||Date).now()}}]),t}();function yr(t,n){return t.isInitialized=!0,i.default.window(n)&&e.init(n),h.default.init(n),b.default.init(n),Tt.default.init(n),t.window=n,t.document=n.document,t.usePlugin(Vn.default),t.usePlugin(Dn.default),t}function mr(t){return t&&t.replace(/\/.*$/,"")}ir.Scope=gr;var br={};Object.defineProperty(br,"__esModule",{value:!0}),br.default=void 0;var xr=new ir.Scope,wr=xr.interactStatic;br.default=wr;var _r="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0;xr.init(_r);var Pr={};Object.defineProperty(Pr,"__esModule",{value:!0}),Pr.default=void 0,Pr.default=function(){};var Or={};Object.defineProperty(Or,"__esModule",{value:!0}),Or.default=void 0,Or.default=function(){};var Er={};function Sr(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Tr(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Tr(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Tr(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}Object.defineProperty(Er,"__esModule",{value:!0}),Er.default=void 0,Er.default=function(t){var e=[["x","y"],["left","top"],["right","bottom"],["width","height"]].filter((function(e){var n=Sr(e,2),r=n[0],o=n[1];return r in t||o in t})),n=function n(_n3,r){for(var o=t.range,i=t.limits,a=void 0===i?{left:-1/0,right:1/0,top:-1/0,bottom:1/0}:i,s=t.offset,l=void 0===s?{x:0,y:0}:s,u={range:o,grid:t,x:null,y:null},c=0;c<e.length;c++){var f=Sr(e[c],2),d=f[0],p=f[1],v=Math.round((_n3-l.x)/t[d]),h=Math.round((r-l.y)/t[p]);u[d]=Math.max(a.left,Math.min(a.right,v*t[d]+l.x)),u[p]=Math.max(a.top,Math.min(a.bottom,h*t[p]+l.y))}return u};return n.grid=t,n.coordFields=e,n};var jr={};Object.defineProperty(jr,"__esModule",{value:!0}),Object.defineProperty(jr,"edgeTarget",{enumerable:!0,get:function get(){return Pr.default}}),Object.defineProperty(jr,"elements",{enumerable:!0,get:function get(){return Or.default}}),Object.defineProperty(jr,"grid",{enumerable:!0,get:function get(){return Er.default}});var Mr={};Object.defineProperty(Mr,"__esModule",{value:!0}),Mr.default=void 0;var kr={id:"snappers",install:function install(t){var e=t.interactStatic;e.snappers=(0,M.default)(e.snappers||{},jr),e.createSnapGrid=e.snappers.grid}},Ir=kr;Mr.default=Ir;var Dr={};function Ar(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function zr(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Ar(Object(n),!0).forEach((function(e){Cr(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Ar(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Cr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(Dr,"__esModule",{value:!0}),Dr.default=Dr.aspectRatio=void 0;var Rr={start:function start(t){var e=t.state,n=t.rect,r=t.edges,o=t.pageCoords,i=e.options.ratio,a=e.options,s=a.equalDelta,l=a.modifiers;"preserve"===i&&(i=n.width/n.height),e.startCoords=(0,M.default)({},o),e.startRect=(0,M.default)({},n),e.ratio=i,e.equalDelta=s;var u=e.linkedEdges={top:r.top||r.left&&!r.bottom,left:r.left||r.top&&!r.right,bottom:r.bottom||r.right&&!r.top,right:r.right||r.bottom&&!r.left};if(e.xIsPrimaryAxis=!(!r.left&&!r.right),e.equalDelta){var c=(u.left?1:-1)*(u.top?1:-1);e.edgeSign={x:c,y:c}}else e.edgeSign={x:u.left?-1:1,y:u.top?-1:1};if((0,M.default)(t.edges,u),l&&l.length){var f=new me.default(t.interaction);f.copyFrom(t.interaction.modification),f.prepareStates(l),e.subModification=f,f.startAll(zr({},t))}},set:function set(t){var e=t.state,n=t.rect,r=t.coords,o=(0,M.default)({},r),i=e.equalDelta?Fr:Xr;if(i(e,e.xIsPrimaryAxis,r,n),!e.subModification)return null;var a=(0,M.default)({},n);(0,k.addEdges)(e.linkedEdges,a,{x:r.x-o.x,y:r.y-o.y});var s=e.subModification.setAll(zr(zr({},t),{},{rect:a,edges:e.linkedEdges,pageCoords:r,prevCoords:r,prevRect:a})),l=s.delta;return s.changed&&(i(e,Math.abs(l.x)>Math.abs(l.y),s.coords,s.rect),(0,M.default)(r,s.coords)),s.eventProps},defaults:{ratio:"preserve",equalDelta:!1,modifiers:[],enabled:!1}};function Fr(t,e,n){var r=t.startCoords,o=t.edgeSign;e?n.y=r.y+(n.x-r.x)*o.y:n.x=r.x+(n.y-r.y)*o.x}function Xr(t,e,n,r){var o=t.startRect,i=t.startCoords,a=t.ratio,s=t.edgeSign;if(e){var l=r.width/a;n.y=i.y+(l-o.height)*s.y}else{var u=r.height*a;n.x=i.x+(u-o.width)*s.x}}Dr.aspectRatio=Rr;var Br=(0,Se.makeModifier)(Rr,"aspectRatio");Dr.default=Br;var Yr={};Object.defineProperty(Yr,"__esModule",{value:!0}),Yr.default=void 0;var Wr=function Wr(){};Wr._defaults={};var Lr=Wr;Yr.default=Lr;var Ur={};Object.defineProperty(Ur,"__esModule",{value:!0}),Object.defineProperty(Ur,"default",{enumerable:!0,get:function get(){return Yr.default}});var Vr={};function Nr(t,e,n){return i.default.func(t)?k.resolveRectLike(t,e.interactable,e.element,[n.x,n.y,e]):k.resolveRectLike(t,e.interactable,e.element)}Object.defineProperty(Vr,"__esModule",{value:!0}),Vr.default=void 0,Vr.getRestrictionRect=Nr,Vr.restrict=void 0;var qr={start:function start(t){var e=t.rect,n=t.startOffset,r=t.state,o=t.interaction,i=t.pageCoords,a=r.options,s=a.elementRect,l=(0,M.default)({left:0,top:0,right:0,bottom:0},a.offset||{});if(e&&s){var u=Nr(a.restriction,o,i);if(u){var c=u.right-u.left-e.width,f=u.bottom-u.top-e.height;c<0&&(l.left+=c,l.right+=c),f<0&&(l.top+=f,l.bottom+=f)}l.left+=n.left-e.width*s.left,l.top+=n.top-e.height*s.top,l.right+=n.right-e.width*(1-s.right),l.bottom+=n.bottom-e.height*(1-s.bottom)}r.offset=l},set:function set(t){var e=t.coords,n=t.interaction,r=t.state,o=r.options,i=r.offset,a=Nr(o.restriction,n,e);if(a){var s=k.xywhToTlbr(a);e.x=Math.max(Math.min(s.right-i.right,e.x),s.left+i.left),e.y=Math.max(Math.min(s.bottom-i.bottom,e.y),s.top+i.top)}},defaults:{restriction:null,elementRect:null,offset:null,endOnly:!1,enabled:!1}};Vr.restrict=qr;var Gr=(0,Se.makeModifier)(qr,"restrict");Vr.default=Gr;var $r={};Object.defineProperty($r,"__esModule",{value:!0}),$r.restrictEdges=$r.default=void 0;var Hr={top:1/0,left:1/0,bottom:-1/0,right:-1/0},Kr={top:-1/0,left:-1/0,bottom:1/0,right:1/0};function Zr(t,e){for(var n=["top","left","bottom","right"],r=0;r<n.length;r++){var o=n[r];o in t||(t[o]=e[o])}return t}var Jr={noInner:Hr,noOuter:Kr,start:function start(t){var e,n=t.interaction,r=t.startOffset,o=t.state,i=o.options;if(i){var a=(0,Vr.getRestrictionRect)(i.offset,n,n.coords.start.page);e=k.rectToXY(a)}e=e||{x:0,y:0},o.offset={top:e.y+r.top,left:e.x+r.left,bottom:e.y-r.bottom,right:e.x-r.right}},set:function set(t){var e=t.coords,n=t.edges,r=t.interaction,o=t.state,i=o.offset,a=o.options;if(n){var s=(0,M.default)({},e),l=(0,Vr.getRestrictionRect)(a.inner,r,s)||{},u=(0,Vr.getRestrictionRect)(a.outer,r,s)||{};Zr(l,Hr),Zr(u,Kr),n.top?e.y=Math.min(Math.max(u.top+i.top,s.y),l.top+i.top):n.bottom&&(e.y=Math.max(Math.min(u.bottom+i.bottom,s.y),l.bottom+i.bottom)),n.left?e.x=Math.min(Math.max(u.left+i.left,s.x),l.left+i.left):n.right&&(e.x=Math.max(Math.min(u.right+i.right,s.x),l.right+i.right))}},defaults:{inner:null,outer:null,offset:null,endOnly:!1,enabled:!1}};$r.restrictEdges=Jr;var Qr=(0,Se.makeModifier)(Jr,"restrictEdges");$r.default=Qr;var to={};Object.defineProperty(to,"__esModule",{value:!0}),to.restrictRect=to.default=void 0;var eo=(0,M.default)({get elementRect(){return{top:0,left:0,bottom:1,right:1}},set elementRect(t){}},Vr.restrict.defaults),no={start:Vr.restrict.start,set:Vr.restrict.set,defaults:eo};to.restrictRect=no;var ro=(0,Se.makeModifier)(no,"restrictRect");to.default=ro;var oo={};Object.defineProperty(oo,"__esModule",{value:!0}),oo.restrictSize=oo.default=void 0;var io={width:-1/0,height:-1/0},ao={width:1/0,height:1/0},so={start:function start(t){return $r.restrictEdges.start(t)},set:function set(t){var e=t.interaction,n=t.state,r=t.rect,o=t.edges,i=n.options;if(o){var a=k.tlbrToXywh((0,Vr.getRestrictionRect)(i.min,e,t.coords))||io,s=k.tlbrToXywh((0,Vr.getRestrictionRect)(i.max,e,t.coords))||ao;n.options={endOnly:i.endOnly,inner:(0,M.default)({},$r.restrictEdges.noInner),outer:(0,M.default)({},$r.restrictEdges.noOuter)},o.top?(n.options.inner.top=r.bottom-a.height,n.options.outer.top=r.bottom-s.height):o.bottom&&(n.options.inner.bottom=r.top+a.height,n.options.outer.bottom=r.top+s.height),o.left?(n.options.inner.left=r.right-a.width,n.options.outer.left=r.right-s.width):o.right&&(n.options.inner.right=r.left+a.width,n.options.outer.right=r.left+s.width),$r.restrictEdges.set(t),n.options=i}},defaults:{min:null,max:null,endOnly:!1,enabled:!1}};oo.restrictSize=so;var lo=(0,Se.makeModifier)(so,"restrictSize");oo.default=lo;var uo={};Object.defineProperty(uo,"__esModule",{value:!0}),Object.defineProperty(uo,"default",{enumerable:!0,get:function get(){return Yr.default}});var co={};Object.defineProperty(co,"__esModule",{value:!0}),co.snap=co.default=void 0;var fo={start:function start(t){var e,n=t.interaction,r=t.interactable,o=t.element,i=t.rect,a=t.state,s=t.startOffset,l=a.options,u=l.offsetWithOrigin?function(t){var e=t.interaction.element;return(0,k.rectToXY)((0,k.resolveRectLike)(t.state.options.origin,null,null,[e]))||(0,A.default)(t.interactable,e,t.interaction.prepared.name)}(t):{x:0,y:0};if("startCoords"===l.offset)e={x:n.coords.start.page.x,y:n.coords.start.page.y};else{var c=(0,k.resolveRectLike)(l.offset,r,o,[n]);(e=(0,k.rectToXY)(c)||{x:0,y:0}).x+=u.x,e.y+=u.y}var f=l.relativePoints;a.offsets=i&&f&&f.length?f.map((function(t,n){return{index:n,relativePoint:t,x:s.left-i.width*t.x+e.x,y:s.top-i.height*t.y+e.y}})):[{index:0,relativePoint:null,x:e.x,y:e.y}]},set:function set(t){var e=t.interaction,n=t.coords,r=t.state,o=r.options,a=r.offsets,s=(0,A.default)(e.interactable,e.element,e.prepared.name),l=(0,M.default)({},n),u=[];o.offsetWithOrigin||(l.x-=s.x,l.y-=s.y);for(var c=0;c<a.length;c++)for(var f=a[c],d=l.x-f.x,p=l.y-f.y,v=0,h=o.targets.length;v<h;v++){var g,y=o.targets[v];(g=i.default.func(y)?y(d,p,e._proxy,f,v):y)&&u.push({x:(i.default.number(g.x)?g.x:d)+f.x,y:(i.default.number(g.y)?g.y:p)+f.y,range:i.default.number(g.range)?g.range:o.range,source:y,index:v,offset:f})}for(var m={target:null,inRange:!1,distance:0,range:0,delta:{x:0,y:0}},b=0;b<u.length;b++){var x=u[b],w=x.range,_=x.x-l.x,P=x.y-l.y,O=(0,R.default)(_,P),E=O<=w;w===1/0&&m.inRange&&m.range!==1/0&&(E=!1),m.target&&!(E?m.inRange&&w!==1/0?O/w<m.distance/m.range:w===1/0&&m.range!==1/0||O<m.distance:!m.inRange&&O<m.distance)||(m.target=x,m.distance=O,m.range=w,m.inRange=E,m.delta.x=_,m.delta.y=P)}return m.inRange&&(n.x=m.target.x,n.y=m.target.y),r.closest=m,m},defaults:{range:1/0,targets:null,offset:null,offsetWithOrigin:!0,origin:null,relativePoints:null,endOnly:!1,enabled:!1}};co.snap=fo;var po=(0,Se.makeModifier)(fo,"snap");co.default=po;var vo={};function ho(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}Object.defineProperty(vo,"__esModule",{value:!0}),vo.snapSize=vo.default=void 0;var go={start:function start(t){var e=t.state,n=t.edges,r=e.options;if(!n)return null;t.state={options:{targets:null,relativePoints:[{x:n.left?0:1,y:n.top?0:1}],offset:r.offset||"self",origin:{x:0,y:0},range:r.range}},e.targetFields=e.targetFields||[["width","height"],["x","y"]],co.snap.start(t),e.offsets=t.state.offsets,t.state=e},set:function set(t){var e,n,r=t.interaction,o=t.state,a=t.coords,s=o.options,l=o.offsets,u={x:a.x-l[0].x,y:a.y-l[0].y};o.options=(0,M.default)({},s),o.options.targets=[];for(var c=0;c<(s.targets||[]).length;c++){var f=(s.targets||[])[c],d=void 0;if(d=i.default.func(f)?f(u.x,u.y,r):f){for(var p=0;p<o.targetFields.length;p++){var v=(n=2,function(t){if(Array.isArray(t))return t}(e=o.targetFields[p])||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return ho(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ho(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),h=v[0],g=v[1];if(h in d||g in d){d.x=d[h],d.y=d[g];break}}o.options.targets.push(d)}}var y=co.snap.set(t);return o.options=s,y},defaults:{range:1/0,targets:null,offset:null,endOnly:!1,enabled:!1}};vo.snapSize=go;var yo=(0,Se.makeModifier)(go,"snapSize");vo.default=yo;var mo={};Object.defineProperty(mo,"__esModule",{value:!0}),mo.snapEdges=mo.default=void 0;var bo={start:function start(t){var e=t.edges;return e?(t.state.targetFields=t.state.targetFields||[[e.left?"left":"right",e.top?"top":"bottom"]],vo.snapSize.start(t)):null},set:vo.snapSize.set,defaults:(0,M.default)((0,ye.default)(vo.snapSize.defaults),{targets:null,range:null,offset:{x:0,y:0}})};mo.snapEdges=bo;var xo=(0,Se.makeModifier)(bo,"snapEdges");mo.default=xo;var wo={};Object.defineProperty(wo,"__esModule",{value:!0}),Object.defineProperty(wo,"default",{enumerable:!0,get:function get(){return Yr.default}});var _o={};Object.defineProperty(_o,"__esModule",{value:!0}),Object.defineProperty(_o,"default",{enumerable:!0,get:function get(){return Yr.default}});var Po={};Object.defineProperty(Po,"__esModule",{value:!0}),Po.default=void 0;var Oo={aspectRatio:Dr.default,restrictEdges:$r.default,restrict:Vr.default,restrictRect:to.default,restrictSize:oo.default,snapEdges:mo.default,snap:co.default,snapSize:vo.default,spring:wo.default,avoid:Ur.default,transform:_o.default,rubberband:uo.default};Po.default=Oo;var Eo={};Object.defineProperty(Eo,"__esModule",{value:!0}),Eo.default=void 0;var So={id:"modifiers",install:function install(t){var e=t.interactStatic;for(var n in t.usePlugin(Se.default),t.usePlugin(Mr.default),e.modifiers=Po.default,Po.default){var r=Po.default[n],o=r._defaults,i=r._methods;o._methods=i,t.defaults.perAction[n]=o}}},To=So;Eo.default=To;var jo={};function Mo(t){return Mo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Mo(t)}function ko(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Io(t,e){return Io=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},Io(t,e)}function Do(t,e){if(e&&("object"===Mo(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return Ao(t)}function Ao(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function zo(t){return zo=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},zo(t)}Object.defineProperty(jo,"__esModule",{value:!0}),jo.default=jo.PointerEvent=void 0;var Co=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&Io(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=zo(r);if(o){var n=zo(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return Do(this,t)});function a(t,e,n,r,o,s){var l;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),l=i.call(this,o),X.pointerExtend(Ao(l),n),n!==e&&X.pointerExtend(Ao(l),e),l.timeStamp=s,l.originalEvent=n,l.type=t,l.pointerId=X.getPointerId(e),l.pointerType=X.getPointerType(e),l.target=r,l.currentTarget=null,"tap"===t){var u=o.getPointerIndex(e);l.dt=l.timeStamp-o.pointers[u].downTime;var c=l.timeStamp-o.tapTime;l.double=!!o.prevTap&&"doubletap"!==o.prevTap.type&&o.prevTap.target===l.target&&c<500}else"doubletap"===t&&(l.dt=e.timeStamp-o.tapTime,l.double=!0);return l}return e=a,(n=[{key:"_subtractOrigin",value:function value(t){var e=t.x,n=t.y;return this.pageX-=e,this.pageY-=n,this.clientX-=e,this.clientY-=n,this}},{key:"_addOrigin",value:function value(t){var e=t.x,n=t.y;return this.pageX+=e,this.pageY+=n,this.clientX+=e,this.clientY+=n,this}},{key:"preventDefault",value:function value(){this.originalEvent.preventDefault()}}])&&ko(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(N.BaseEvent);jo.PointerEvent=jo.default=Co;var Ro={};Object.defineProperty(Ro,"__esModule",{value:!0}),Ro.default=void 0;var Fo={id:"pointer-events/base",before:["inertia","modifiers","auto-start","actions"],install:function install(t){t.pointerEvents=Fo,t.defaults.actions.pointerEvents=Fo.defaults,(0,M.default)(t.actions.phaselessTypes,Fo.types)},listeners:{"interactions:new":function interactionsNew(t){var e=t.interaction;e.prevTap=null,e.tapTime=0},"interactions:update-pointer":function interactionsUpdatePointer(t){var e=t.down,n=t.pointerInfo;!e&&n.hold||(n.hold={duration:1/0,timeout:null})},"interactions:move":function interactionsMove(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget;t.duplicate||n.pointerIsDown&&!n.pointerWasMoved||(n.pointerIsDown&&Yo(t),Xo({interaction:n,pointer:r,event:o,eventTarget:i,type:"move"},e))},"interactions:down":function interactionsDown(t,e){!function(t,e){for(var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.pointerIndex,s=n.pointers[a].hold,l=_.getPath(i),u={interaction:n,pointer:r,event:o,eventTarget:i,type:"hold",targets:[],path:l,node:null},c=0;c<l.length;c++){var f=l[c];u.node=f,e.fire("pointerEvents:collect-targets",u)}if(u.targets.length){for(var d=1/0,p=0;p<u.targets.length;p++){var v=u.targets[p].eventable.options.holdDuration;v<d&&(d=v)}s.duration=d,s.timeout=setTimeout((function(){Xo({interaction:n,eventTarget:i,pointer:r,event:o,type:"hold"},e)}),d)}}(t,e),Xo(t,e)},"interactions:up":function interactionsUp(t,e){Yo(t),Xo(t,e),function(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget;n.pointerWasMoved||Xo({interaction:n,eventTarget:i,pointer:r,event:o,type:"tap"},e)}(t,e)},"interactions:cancel":function interactionsCancel(t,e){Yo(t),Xo(t,e)}},PointerEvent:jo.PointerEvent,fire:Xo,collectEventTargets:Bo,defaults:{holdDuration:600,ignoreFrom:null,allowFrom:null,origin:{x:0,y:0}},types:{down:!0,move:!0,up:!0,cancel:!0,tap:!0,doubletap:!0,hold:!0}};function Xo(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.type,s=t.targets,l=void 0===s?Bo(t,e):s,u=new jo.PointerEvent(a,r,o,i,n,e.now());e.fire("pointerEvents:new",{pointerEvent:u});for(var c={interaction:n,pointer:r,event:o,eventTarget:i,targets:l,type:a,pointerEvent:u},f=0;f<l.length;f++){var d=l[f];for(var p in d.props||{})u[p]=d.props[p];var v=(0,A.default)(d.eventable,d.node);if(u._subtractOrigin(v),u.eventable=d.eventable,u.currentTarget=d.node,d.eventable.fire(u),u._addOrigin(v),u.immediatePropagationStopped||u.propagationStopped&&f+1<l.length&&l[f+1].node!==u.currentTarget)break}if(e.fire("pointerEvents:fired",c),"tap"===a){var h=u.double?Xo({interaction:n,pointer:r,event:o,eventTarget:i,type:"doubletap"},e):u;n.prevTap=h,n.tapTime=h.timeStamp}return u}function Bo(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.type,s=n.getPointerIndex(r),l=n.pointers[s];if("tap"===a&&(n.pointerWasMoved||!l||l.downTarget!==i))return[];for(var u=_.getPath(i),c={interaction:n,pointer:r,event:o,eventTarget:i,type:a,path:u,targets:[],node:null},f=0;f<u.length;f++){var d=u[f];c.node=d,e.fire("pointerEvents:collect-targets",c)}return"hold"===a&&(c.targets=c.targets.filter((function(t){var e;return t.eventable.options.holdDuration===(null==(e=n.pointers[s])?void 0:e.hold.duration)}))),c.targets}function Yo(t){var e=t.interaction,n=t.pointerIndex,r=e.pointers[n].hold;r&&r.timeout&&(clearTimeout(r.timeout),r.timeout=null)}var Wo=Fo;Ro.default=Wo;var Lo={};function Uo(t){var e=t.interaction;e.holdIntervalHandle&&(clearInterval(e.holdIntervalHandle),e.holdIntervalHandle=null)}Object.defineProperty(Lo,"__esModule",{value:!0}),Lo.default=void 0;var Vo={id:"pointer-events/holdRepeat",install:function install(t){t.usePlugin(Ro.default);var e=t.pointerEvents;e.defaults.holdRepeatInterval=0,e.types.holdrepeat=t.actions.phaselessTypes.holdrepeat=!0},listeners:["move","up","cancel","endall"].reduce((function(t,e){return t["pointerEvents:".concat(e)]=Uo,t}),{"pointerEvents:new":function pointerEventsNew(t){var e=t.pointerEvent;"hold"===e.type&&(e.count=(e.count||0)+1)},"pointerEvents:fired":function pointerEventsFired(t,e){var n=t.interaction,r=t.pointerEvent,o=t.eventTarget,i=t.targets;if("hold"===r.type&&i.length){var a=i[0].eventable.options.holdRepeatInterval;a<=0||(n.holdIntervalHandle=setTimeout((function(){e.pointerEvents.fire({interaction:n,eventTarget:o,type:"hold",pointer:r,event:r},e)}),a))}}})},No=Vo;Lo.default=No;var qo={};function Go(t){return(0,M.default)(this.events.options,t),this}Object.defineProperty(qo,"__esModule",{value:!0}),qo.default=void 0;var $o={id:"pointer-events/interactableTargets",install:function install(t){var e=t.Interactable;e.prototype.pointerEvents=Go;var n=e.prototype._backCompatOption;e.prototype._backCompatOption=function(t,e){var r=n.call(this,t,e);return r===this&&(this.events.options[t]=e),r}},listeners:{"pointerEvents:collect-targets":function pointerEventsCollectTargets(t,e){var n=t.targets,r=t.node,o=t.type,i=t.eventTarget;e.interactables.forEachMatch(r,(function(t){var e=t.events,a=e.options;e.types[o]&&e.types[o].length&&t.testIgnoreAllow(a,r,i)&&n.push({node:r,eventable:e,props:{interactable:t}})}))},"interactable:new":function interactableNew(t){var e=t.interactable;e.events.getRect=function(t){return e.getRect(t)}},"interactable:set":function interactableSet(t,e){var n=t.interactable,r=t.options;(0,M.default)(n.events.options,e.pointerEvents.defaults),(0,M.default)(n.events.options,r.pointerEvents||{})}}},Ho=$o;qo.default=Ho;var Ko={};Object.defineProperty(Ko,"__esModule",{value:!0}),Ko.default=void 0;var Zo={id:"pointer-events",install:function install(t){t.usePlugin(Ro),t.usePlugin(Lo.default),t.usePlugin(qo.default)}},Jo=Zo;Ko.default=Jo;var Qo={};function ti(t){var e=t.Interactable;t.actions.phases.reflow=!0,e.prototype.reflow=function(e){return function(t,e,n){for(var r=i.default.string(t.target)?H.from(t._context.querySelectorAll(t.target)):[t.target],o=n.window.Promise,a=o?[]:null,s=function s(){var i=r[l],s=t.getRect(i);if(!s)return"break";var u=H.find(n.interactions.list,(function(n){return n.interacting()&&n.interactable===t&&n.element===i&&n.prepared.name===e.name})),c=void 0;if(u)u.move(),a&&(c=u._reflowPromise||new o((function(t){u._reflowResolve=t})));else{var f=(0,k.tlbrToXywh)(s),d={page:{x:f.x,y:f.y},client:{x:f.x,y:f.y},timeStamp:n.now()},p=X.coordsToEvent(d);c=function(t,e,n,r,o){var i=t.interactions.new({pointerType:"reflow"}),a={interaction:i,event:o,pointer:o,eventTarget:n,phase:"reflow"};i.interactable=e,i.element=n,i.prevEvent=o,i.updatePointer(o,o,n,!0),X.setZeroCoords(i.coords.delta),(0,Xt.copyAction)(i.prepared,r),i._doPhase(a);var s=t.window.Promise,l=s?new s((function(t){i._reflowResolve=t})):void 0;return i._reflowPromise=l,i.start(r,e,n),i._interacting?(i.move(a),i.end(o)):(i.stop(),i._reflowResolve()),i.removePointer(o,o),l}(n,t,i,e,p)}a&&a.push(c)},l=0;l<r.length&&"break"!==s();l++);return a&&o.all(a).then((function(){return t}))}(this,e,t)}}Object.defineProperty(Qo,"__esModule",{value:!0}),Qo.default=void 0,Qo.install=ti;var ei={id:"reflow",install:ti,listeners:{"interactions:stop":function interactionsStop(t,e){var n=t.interaction;"reflow"===n.pointerType&&(n._reflowResolve&&n._reflowResolve(),H.remove(e.interactions.list,n))}}},ni=ei;Qo.default=ni;var ri={exports:{}};function oi(t){return oi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},oi(t)}Object.defineProperty(ri.exports,"__esModule",{value:!0}),ri.exports.default=void 0,br.default.use(le.default),br.default.use(Qe.default),br.default.use(Ko.default),br.default.use(ln.default),br.default.use(Eo.default),br.default.use(ae.default),br.default.use(Et.default),br.default.use(Dt.default),br.default.use(Qo.default);var ii=br.default;if(ri.exports.default=ii,"object"===oi(ri)&&ri)try{ri.exports=br.default}catch(t){}br.default.default=br.default,ri=ri.exports;var ai={exports:{}};function si(t){return si="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},si(t)}Object.defineProperty(ai.exports,"__esModule",{value:!0}),ai.exports.default=void 0;var li=ri.default;if(ai.exports.default=li,"object"===si(ai)&&ai)try{ai.exports=ri.default}catch(t){}return ri.default.default=ri.default,ai.exports}()})),interact=getDefaultExportFromCjs(interact_min),VerdocsTemplateFields=function(){function VerdocsTemplateFields(hostRef){_classCallCheck(this,VerdocsTemplateFields),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.j)(this,hostRef),this.settingsUpdated=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"settingsUpdated",7),this.cancel=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"cancel",7),this.sdkError=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"sdkError",7),this.endpoint=_VerdocsEndpoint_82f4600d_js__WEBPACK_IMPORTED_MODULE_59__.a.getDefault(),this.templateId=null}var _handleFieldChange,_componentWillLoad;return _createClass(VerdocsTemplateFields,[{key:"componentWillLoad",value:(_componentWillLoad=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(){var _a,_b,_c,_d,_e,_f;return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:if(_context2.prev=0,this.endpoint.loadSession(),this.templateId){_context2.next=5;break}return console.log("[FIELDS] Missing required template ID "+this.templateId),_context2.abrupt("return");case 5:return _context2.prev=5,console.log("[FIELDS] Loading template "+this.templateId),_context2.next=9,Object(_Templates_91922342_js__WEBPACK_IMPORTED_MODULE_64__.a)(this.endpoint,this.templateId);case 9:_context2.next=15;break;case 11:_context2.prev=11,_context2.t0=_context2.catch(5),console.log("[FIELDS] Error loading template",_context2.t0),null===(_a=this.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_60__.a(_context2.t0.message,null===(_b=_context2.t0.response)||void 0===_b?void 0:_b.status,null===(_c=_context2.t0.response)||void 0===_c?void 0:_c.data));case 15:_context2.next=21;break;case 17:_context2.prev=17,_context2.t1=_context2.catch(0),console.log("[FIELDS] Error with preview session",_context2.t1),null===(_d=this.sdkError)||void 0===_d||_d.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_60__.a(_context2.t1.message,null===(_e=_context2.t1.response)||void 0===_e?void 0:_e.status,null===(_f=_context2.t1.response)||void 0===_f?void 0:_f.data));case 21:case"end":return _context2.stop()}}),_callee2,this,[[0,17],[5,11]])}))),function componentWillLoad(){return _componentWillLoad.apply(this,arguments)})},{key:"componentDidRender",value:function componentDidRender(){interact.dynamicDrop(!0),this.toolbarEl.style.width=this.page0El.clientWidth+"px"}},{key:"handleFieldChange",value:(_handleFieldChange=_asyncToGenerator(_regeneratorRuntime().mark((function _callee3(field,e,optionId){return _regeneratorRuntime().wrap((function _callee3$(_context3){for(;;)switch(_context3.prev=_context3.next){case 0:console.log("[FIELDS] handleFieldChange",field,e,optionId);case 1:case"end":return _context3.stop()}}),_callee3)}))),function handleFieldChange(_x2,_x3,_x4){return _handleFieldChange.apply(this,arguments)})},{key:"handlePageRendered",value:function handlePageRendered(e){var _this2=this,pageInfo=e.detail;console.log("[FIELDS] Page rendered",pageInfo);var fields=_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_63__.a.fields.filter((function(field){return field.page_sequence===pageInfo.renderedPage.pageNumber}));console.log("[FIELDS] Fields on page",fields),fields.forEach((function(field){var el=Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_62__.g)(field,pageInfo.renderedPage,Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_62__.a)(_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_63__.a.roleNames,field.role_name),_this2.handleFieldChange,!0,!0,!0);el&&(el.addEventListener("recipientChanged",(function(e){el.setAttribute("roleindex",Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_62__.a)(_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_63__.a.roleNames,e.detail))})),el.setAttribute("xScale",pageInfo.renderedPage.xScale),el.setAttribute("yScale",pageInfo.renderedPage.yScale),interact(el).draggable({listeners:{start:function start(event){console.log("[FIELDS] Drag started",event.type,event.target)},move:function move(event){var oldX=+(event.target.getAttribute("posX")||0),oldY=+(event.target.getAttribute("posY")||0),xScale=+(event.target.getAttribute("xScale")||1),yScale=+(event.target.getAttribute("yScale")||1),newX=event.dx/xScale+oldX,newY=event.dy/yScale+oldY;event.target.setAttribute("posX",newX),event.target.setAttribute("posy",newY),function updateCssTransform(el,key,value){var components=_toConsumableArray(el.style.transform.matchAll(/(\w+)\(([^)]*)\)/gi));el.style.transform=[components.filter((function(component){return component[1]!==key})).map((function(component){return component[0]})),key+"("+value+")"].join(" ")}(event.target,"translate",newX+"px, "+newY+"px")},end:function end(event){console.log("[FIELDS] Drag ended",event)}}}))}))}},{key:"render",value:function render(){var _this3=this;return _templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_63__.a.loading?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.b,null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-loader",null)):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.b,null,_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_63__.a.template?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.a,null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"fields-bar",ref:function ref(el){return _this3.toolbarEl=el}},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"label"},"Add Field:"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-toolbar-icon",{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="M3.425 16.15V13h11.15v3.15Zm0-5.15V7.85h17.15V11Z"/></svg>',text:"Single-line Text Box",onPress:function onPress(){return console.log("single press")}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-toolbar-icon",{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="M3.225 20.725v-3.15h11.55v3.15Zm0-4.775V12.8h17.55v3.15Zm0-4.75V8.05h17.55v3.15Zm0-4.775v-3.15h17.55v3.15Z"/></svg>',text:"Multi-line Text Box",onPress:function onPress(){return console.log("multi press")}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-toolbar-icon",{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="m10.55 16.55 7.275-7.275L16.05 7.5l-5.5 5.45-2.675-2.65L6.1 12.075Zm-5.375 4.925q-1.125 0-1.887-.763-.763-.762-.763-1.887V5.175q0-1.125.763-1.888.762-.762 1.887-.762h13.65q1.125 0 1.888.762.762.763.762 1.888v13.65q0 1.125-.762 1.887-.763.763-1.888.763Zm0-2.65h13.65V5.175H5.175v13.65Zm0-13.65v13.65-13.65Z"/></svg>',text:"Checkbox",onPress:function onPress(){return console.log("check press")}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-toolbar-icon",{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="M12 17q2.075 0 3.538-1.463Q17 14.075 17 12t-1.462-3.538Q14.075 7 12 7 9.925 7 8.463 8.462 7 9.925 7 12q0 2.075 1.463 3.537Q9.925 17 12 17Zm0 5.85q-2.275 0-4.25-.85t-3.438-2.312Q2.85 18.225 2 16.25q-.85-1.975-.85-4.25T2 7.75q.85-1.975 2.312-3.438Q5.775 2.85 7.75 2q1.975-.85 4.25-.85t4.25.85q1.975.85 3.438 2.312Q21.15 5.775 22 7.75q.85 1.975.85 4.25T22 16.25q-.85 1.975-2.312 3.438Q18.225 21.15 16.25 22q-1.975.85-4.25.85Zm0-3.15q3.25 0 5.475-2.225Q19.7 15.25 19.7 12q0-3.25-2.225-5.475Q15.25 4.3 12 4.3q-3.25 0-5.475 2.225Q4.3 8.75 4.3 12q0 3.25 2.225 5.475Q8.75 19.7 12 19.7Zm0-7.7Z"/></svg>',text:"Radio Button",onPress:function onPress(){return console.log("radio press")}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-toolbar-icon",{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="M7.6 13.925q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375Zm4.4 0q-.55 0-.925-.375t-.375-.925q0-.55.375-.937.375-.388.925-.388t.925.388q.375.387.375.937t-.375.925q-.375.375-.925.375ZM5.3 22.85q-1.325 0-2.238-.912-.912-.913-.912-2.238V6.3q0-1.325.912-2.238.913-.912 2.238-.912H6v-2h2.575v2h6.85v-2H18v2h.7q1.325 0 2.238.912.912.913.912 2.238v13.4q0 1.325-.912 2.238-.913.912-2.238.912Zm0-3.15h13.4V10H5.3v9.7ZM5.3 8h13.4V6.3H5.3Zm0 0V6.3 8Z"/></svg>',text:"Date Picker",onPress:function onPress(){return console.log("date press")}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-toolbar-icon",{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="m9.225 21.225 4.65-4.65h8.45v4.65Zm-5.35-2.2H5.05l8.5-8.5-1.175-1.175-8.5 8.5Zm14.25-9.95L13.8 4.8l1.325-1.325q.625-.65 1.525-.663.9-.012 1.6.663l1.225 1.175q.675.675.663 1.562-.013.888-.663 1.513ZM16.7 10.55 6 21.225H1.675V16.9L12.35 6.225Zm-3.725-.625-.6-.575 1.175 1.175Z"/></svg>',text:"Signature",onPress:function onPress(){return console.log("signature press")}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-toolbar-icon",{icon:'<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="M6.225 20.775V7h-5V3.225H15V7h-5v13.775Zm9.775 0v-8h-3V9h9.775v3.775h-3v8Z"/></svg>',text:"Initials",onPress:function onPress(){return console.log("initial press")}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{style:{flex:"1"}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("button",{onClick:function onClick(){return console.log("save")},disabled:!0,class:"operation"},"Save"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("button",{onClick:function onClick(){return console.log("close")},class:"operation"},"Close")),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"page-0",ref:function ref(el){return _this3.page0El=el}},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"user-placed-fields"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"title"},"User-Placed Fields"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-field-signature",{field:{template_id:"",name:"test",role_name:"Recipient 1",type:"textbox",required:!0,setting:{x:0,y:0},page_sequence:0},style:{width:"82px",height:"41px",left:"20px",top:"40px",transform:"scale(1,1)",backgroundColor:Object(_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_61__.a)(0)},moveable:!0,editable:!0}))),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-view",{templateId:this.templateId,endpoint:this.endpoint,onPageRendered:function onPageRendered(e){return _this3.handlePageRendered(e)},pageLayers:[{name:"page",type:"canvas"},{name:"controls",type:"div"}]})):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",null,"Error loading Template. Please try again later."))}}]),VerdocsTemplateFields}();VerdocsTemplateFields.style='verdocs-template-fields{position:relative;font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-template-fields .page-0{padding:65px 15px 0 15px;-webkit-box-sizing:border-box;box-sizing:border-box}verdocs-template-fields .page-0 .user-placed-fields{height:100px;position:relative;background:#ffffff;-webkit-box-shadow:0 0 10px 5px #0000000f;box-shadow:0 0 10px 5px #0000000f}verdocs-template-fields .page-0 .user-placed-fields .title{top:0;left:0;color:#ffffff;font-size:12px;padding:3px 6px;font-weight:bold;position:absolute;background:#46497d}verdocs-template-fields .fields-bar{height:50px;display:-ms-flexbox;display:flex;z-index:10000;position:fixed;padding:5px 20px;line-height:28px;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;background:#46497d}verdocs-template-fields .fields-bar .label{color:#ffffff;font-size:14px;font-weight:bold;margin-right:8px}verdocs-template-fields .fields-bar .icon{margin:0 4px;display:-ms-flexbox;display:flex;-webkit-transform:scale(0.8, 0.8);transform:scale(0.8, 0.8)}verdocs-template-fields .fields-bar .icon svg{fill:#ffffff}verdocs-template-fields .fields-bar .operation{border:none;outline:none;color:#ffffff;cursor:pointer;font-size:16px;margin-left:10px;background:transparent;text-transform:uppercase}verdocs-template-fields .fields-bar .operation:disabled{color:#cccccc;cursor:inherit;pointer-events:none}';var VerdocsTemplateProperties=function(){function VerdocsTemplateProperties(hostRef){_classCallCheck(this,VerdocsTemplateProperties),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.j)(this,hostRef),this.cancel=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"cancel",7),this.settingsUpdated=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"settingsUpdated",7),this.sdkError=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"sdkError",7),this.endpoint=_VerdocsEndpoint_82f4600d_js__WEBPACK_IMPORTED_MODULE_59__.a.getDefault(),this.templateId="",this.template=null,this.name="",this.visibility="",this.sendReminders=!1,this.firstReminderDays="1",this.reminderDays="1"}var _componentWillLoad2;return _createClass(VerdocsTemplateProperties,[{key:"componentWillLoad",value:(_componentWillLoad2=_asyncToGenerator(_regeneratorRuntime().mark((function _callee4(){var _a,_b,_c,template;return _regeneratorRuntime().wrap((function _callee4$(_context4){for(;;)switch(_context4.prev=_context4.next){case 0:return _context4.prev=0,this.endpoint.loadSession(),console.log("[PROPERTIES] Loading template "+this.templateId),_context4.next=5,Object(_Templates_f7c590c0_js__WEBPACK_IMPORTED_MODULE_56__.c)(this.endpoint,this.templateId);case 5:if(template=_context4.sent){_context4.next=9;break}return console.log("[PREVIEW] Unable to load template"),_context4.abrupt("return");case 9:console.log("[PROPERTIES] Got template",template),this.template=template,_templateStore_3b26e38d_js__WEBPACK_IMPORTED_MODULE_63__.a.template=template,this.name=template.name,this.sendReminders=null!==template.reminder_id,_context4.next=20;break;case 16:_context4.prev=16,_context4.t0=_context4.catch(0),console.log("[PROPERTIES] Error loading template",_context4.t0),null===(_a=this.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_60__.a(_context4.t0.message,null===(_b=_context4.t0.response)||void 0===_b?void 0:_b.status,null===(_c=_context4.t0.response)||void 0===_c?void 0:_c.data));case 20:case"end":return _context4.stop()}}),_callee4,this,[[0,16]])}))),function componentWillLoad(){return _componentWillLoad2.apply(this,arguments)})},{key:"handleMessageChange",value:function handleMessageChange(e){console.log(e)}},{key:"handleCancel",value:function handleCancel(e){var _a;e.stopPropagation(),null===(_a=this.cancel)||void 0===_a||_a.emit()}},{key:"handleSubmit",value:function handleSubmit(e){var _a;e.stopPropagation(),console.log("new",{name:this.name,visibility:this.visibility,firstReminderDays:+this.firstReminderDays,reminderDays:+this.reminderDays,sendReminders:this.sendReminders}),null===(_a=this.settingsUpdated)||void 0===_a||_a.emit({name:this.name,firstReminderDays:+this.firstReminderDays,reminderDays:+this.reminderDays,sendReminders:this.sendReminders})}},{key:"render",value:function render(){var _this4=this;return console.log("vals",{firstReminderDays:this.firstReminderDays,reminderDays:this.reminderDays,name:this.name}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("form",{onSubmit:function onSubmit(e){return e.preventDefault()},onClick:function onClick(e){return e.stopPropagation()},autocomplete:"off"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("h5",null,"Template Name"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("fieldset",null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-text-input",{value:this.name,autocomplete:"off",onInput:function onInput(e){_this4.name=e.target.value}})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("h5",null,"Reminders"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("fieldset",null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"input-row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("label",null,"Send Automatic Reminders"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-checkbox",{name:"automatic-reminders",checked:this.sendReminders,value:"on",onSelected:function onSelected(e){return _this4.sendReminders="on"===e.detail.value}})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"input-row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("label",null,"Days Before First Reminder"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-text-input",{value:this.firstReminderDays,onInput:function onInput(e){_this4.firstReminderDays=e.target.value}})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"input-row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("label",null,"Days Between Reminders"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-text-input",{value:this.reminderDays,onInput:function onInput(e){_this4.firstReminderDays=e.target.value}}))),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("h5",null,"Template Visibility"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("fieldset",null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"radio-row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-radio-button",{name:"visibility",checked:!0,value:"private"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("label",{htmlFor:"verdocs-radio-button-visibility-private"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"title"},"Private"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"description"},"Only you can share and use this template"))),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"radio-row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-radio-button",{name:"visibility",checked:!0,value:"shared"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("label",{htmlFor:"verdocs-radio-button-visibility-shared"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"title"},"Shared to your organization"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"description"},"Give access to your organization to share and use this template"))),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"radio-row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-radio-button",{name:"visibility",checked:!0,value:"shared_public"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("label",{htmlFor:"verdocs-radio-button-visibility-shared_public"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"title"},"Shared to your organization and Public"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"description"},"Give access to your organization to share this template, and anyone on the Web can find and use this template"))),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"radio-row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-radio-button",{name:"visibility",checked:!0,value:"public"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("label",{htmlFor:"verdocs-radio-button-visibility-public"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"title"},"Public"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"description"},"Anyone on the Web can find and use this template")))),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"buttons"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"flex-fill"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-button",{variant:"outline",label:"Cancel",size:"small",onClick:function onClick(e){return _this4.handleCancel(e)}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-button",{label:"OK",size:"small",onClick:function onClick(e){return _this4.handleSubmit(e)}})))}}]),VerdocsTemplateProperties}();VerdocsTemplateProperties.style='verdocs-template-properties{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-template-properties form{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}verdocs-template-properties form h5{font-size:14px;font-weight:400;margin:0 0 6px 0}verdocs-template-properties form .row{display:-ms-flexbox;display:flex;position:relative;margin:0 0 20px 0;-ms-flex-direction:column;flex-direction:column}verdocs-template-properties form fieldset{width:440px;border:none;max-width:100%;margin:0 0 20px 0;-webkit-box-sizing:border-box;box-sizing:border-box;padding:20px 20px 10px 20px;background-color:#ffffff;-webkit-box-shadow:0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.12), 0 0 2px 0 rgba(0, 0, 0, 0.14);box-shadow:0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.12), 0 0 2px 0 rgba(0, 0, 0, 0.14)}verdocs-template-properties form label{display:block;font-size:14px;font-weight:500;margin:0 0 4px 0;color:#5c6575}verdocs-template-properties form input{border:none;font-size:18px;padding:3px 6px 3px 0;background:transparent;border-bottom:1px solid #33364b}verdocs-template-properties form input:focus{outline:none}verdocs-template-properties form .input-row{display:-ms-flexbox;display:flex;margin:0 0 10px 0;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row}verdocs-template-properties form .input-row label{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex}verdocs-template-properties form .input-row verdocs-text-input{margin:0;display:-ms-flexbox;display:flex;-ms-flex:0 0 40px;flex:0 0 40px}verdocs-template-properties form .input-row verdocs-text-input input{text-align:center}verdocs-template-properties form .input-row verdocs-checkbox{display:-ms-flexbox;display:flex;-ms-flex:0 0 40px;flex:0 0 40px;-ms-flex-pack:center;justify-content:center}verdocs-template-properties form .radio-row{display:-ms-flexbox;display:flex;position:relative;margin:0 0 10px 0;-ms-flex-direction:row;flex-direction:row}verdocs-template-properties form .radio-row verdocs-radio-button{display:-ms-flexbox;display:flex;-ms-flex:0 0 30px;flex:0 0 30px}verdocs-template-properties form .radio-row label{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}verdocs-template-properties form .radio-row label .title{font-size:16px;font-weight:500}verdocs-template-properties form .radio-row label .description{font-size:14px;font-weight:400}verdocs-template-properties .buttons{display:-ms-flexbox;display:flex;-webkit-column-gap:8px;-moz-column-gap:8px;column-gap:8px;margin-top:16px;-ms-flex-direction:row;flex-direction:row}verdocs-template-properties .buttons .flex-fill{-ms-flex:1;flex:1}verdocs-template-properties ::-webkit-input-placeholder{color:#aaaaaa}verdocs-template-properties ::-moz-placeholder{color:#aaaaaa}verdocs-template-properties :-ms-input-placeholder{color:#aaaaaa}verdocs-template-properties ::-ms-input-placeholder{color:#aaaaaa}verdocs-template-properties ::placeholder{color:#aaaaaa}';var senderLabels=((_senderLabels={})[_Types_ab9f6af8_js__WEBPACK_IMPORTED_MODULE_58__.a.EVERYONE]="Everyone",_senderLabels[_Types_ab9f6af8_js__WEBPACK_IMPORTED_MODULE_58__.a.EVERYONE_AS_CREATOR]="Everyone as Me",_senderLabels[_Types_ab9f6af8_js__WEBPACK_IMPORTED_MODULE_58__.a.ORGANIZATION_MEMBER]="Organization member",_senderLabels[_Types_ab9f6af8_js__WEBPACK_IMPORTED_MODULE_58__.a.ORGANIZATION_MEMBER_AS_CREATOR]="Organization Member as Me",_senderLabels[_Types_ab9f6af8_js__WEBPACK_IMPORTED_MODULE_58__.a.CREATOR]="Me",_senderLabels),settingsIcon='<svg xmlns="http://www.w3.org/2000/svg" height="20" width="20"><path d="m8.021 17.917-.313-2.5q-.27-.125-.625-.334-.354-.208-.625-.395l-2.312.979-1.979-3.438 1.979-1.5q-.021-.167-.031-.364-.011-.198-.011-.365 0-.146.011-.344.01-.198.031-.385l-1.979-1.5 1.979-3.417 2.312.958q.271-.187.615-.385t.635-.344l.313-2.5h3.958l.313 2.5q.312.167.625.344.312.177.604.385l2.333-.958 1.979 3.417-1.979 1.521q.021.187.021.364V10q0 .146-.01.333-.011.188-.011.396l1.958 1.5-1.979 3.438-2.312-.979q-.292.208-.615.395-.323.188-.614.334l-.313 2.5Zm1.937-5.355q1.063 0 1.813-.75t.75-1.812q0-1.062-.75-1.812t-1.813-.75q-1.041 0-1.802.75-.76.75-.76 1.812t.76 1.812q.761.75 1.802.75Zm0-1.333q-.5 0-.864-.364-.365-.365-.365-.865t.365-.865q.364-.364.864-.364t.865.364q.365.365.365.865t-.365.865q-.365.364-.865.364ZM10.021 10Zm-.854 6.583h1.666l.25-2.187q.605-.167 1.136-.49.531-.323 1.031-.802l2.021.875.854-1.375-1.792-1.354q.105-.333.136-.635.031-.303.031-.615 0-.292-.031-.573-.031-.281-.115-.635l1.792-1.396-.834-1.375-2.062.875q-.438-.438-1.021-.781-.583-.344-1.125-.49l-.271-2.208H9.167l-.271 2.208q-.584.146-1.125.458-.542.313-1.042.792l-2.021-.854-.833 1.375 1.75 1.354q-.083.333-.125.646-.042.312-.042.604t.042.594q.042.302.125.635l-1.75 1.375.833 1.375 2.021-.854q.479.458 1.021.771.542.312 1.146.479Z"/></svg>',VerdocsTemplateRecipients=function(){function VerdocsTemplateRecipients(hostRef){_classCallCheck(this,VerdocsTemplateRecipients),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.j)(this,hostRef),this.searchContacts=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"searchContacts",7),this.cancel=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"cancel",7),this.settingsUpdated=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"settingsUpdated",7),this.contactSelected=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.e)(this,"contactSelected",7),this.sequences=[],this.rolesAtSequence={},this.endpoint=_VerdocsEndpoint_82f4600d_js__WEBPACK_IMPORTED_MODULE_59__.a.getDefault(),this.templateRole=null,this.contactSuggestions=[],this.name=void 0,this.email=void 0,this.phone=void 0,this.message=void 0,this.showSuggestions=!1,this.showMessage=!1,this.delegator=!1,this.sender=_Types_ab9f6af8_js__WEBPACK_IMPORTED_MODULE_58__.a.CREATOR,this.showingSenderDialog=!1,this.orderedRoles=[]}return _createClass(VerdocsTemplateRecipients,[{key:"componentWillLoad",value:function componentWillLoad(){this.templateRole&&(this.name=this.templateRole.full_name||"",this.email=this.templateRole.email||"",this.phone=this.templateRole.phone||"",this.delegator=this.templateRole.delegator||!1,this.message=this.templateRole.message||"",this.showMessage=""!==this.message),this.orderedRoles=[{order:0,template_id:"951016b0-c5ef-450d-b628-9a0c5b84b163",name:"Seller 1",full_name:"",email:"",type:"signer",sequence:1,fields:[],delegator:!1,phone:""},{order:1,template_id:"951016b0-c5ef-450d-b628-9a0c5b84b163",name:"Seller 2",full_name:"",email:"",type:"signer",sequence:1,fields:[],delegator:!1,phone:""},{order:2,template_id:"951016b0-c5ef-450d-b628-9a0c5b84b163",name:"Buyer 1",full_name:"",email:"",type:"signer",sequence:2,fields:[],delegator:!1,phone:""},{order:3,template_id:"951016b0-c5ef-450d-b628-9a0c5b84b163",name:"Buyer 2",full_name:"",email:"",type:"signer",sequence:2,fields:[],delegator:!1,phone:""}],this.computeRolesBySequence()}},{key:"componentDidRender",value:function componentDidRender(){var _this5=this;interact.dynamicDrop(!0),interact(".recipient").draggable({listeners:{start:function start(event){console.log("drag start",event.type,event.target)},move:function move(event){var oldX=+(event.target.getAttribute("posX")||0),oldY=+(event.target.getAttribute("posY")||0),newX=event.dx+oldX,newY=event.dy+oldY;event.target.setAttribute("posX",newX),event.target.setAttribute("posy",newY),event.target.style.transform="translate("+newX+"px, "+newY+"px)"},end:function end(event){console.log("end",event),event.target.setAttribute("posX",0),event.target.setAttribute("posy",0),event.target.style.transform="translate(0px, 0px)"}}}),interact(".dropzone").dropzone({overlap:.05,ondrop:function ondrop(event){event.target.classList.remove("active"),console.log(event.relatedTarget.id+" was dropped into "+event.target.id);var roleName=event.relatedTarget.dataset.rolename,targetOrder=+event.target.dataset.order,targetSequence=+event.target.dataset.sequence,roleIndex=_this5.orderedRoles.findIndex((function(role){return role.name===roleName}));-1!==roleIndex&&(console.log("Will move",{roleName:roleName,targetOrder:targetOrder,targetSequence:targetSequence,roleIndex:roleIndex}),_this5.orderedRoles[roleIndex].sequence=targetSequence,console.log("before",JSON.parse(JSON.stringify(_this5.orderedRoles))),_this5.orderedRoles=function arrayMove(arr,fromIndex,toIndex){var newArr=_toConsumableArray(arr);return newArr.splice(toIndex,0,newArr.splice(fromIndex,1)[0]),newArr}(_this5.orderedRoles,roleIndex,targetOrder),_this5.orderedRoles.forEach((function(role,index){role.order=index})),console.log("after",JSON.parse(JSON.stringify(_this5.orderedRoles))),_this5.computeRolesBySequence())},ondropactivate:function ondropactivate(e){e.target.classList.add("visible")},ondropdeactivate:function ondropdeactivate(e){e.target.classList.remove("visible")},ondragenter:function ondragenter(e){e.target.classList.add("active")},ondragleave:function ondragleave(e){e.target.classList.remove("active")}})}},{key:"computeRolesBySequence",value:function computeRolesBySequence(){var rolesAtSequence={};this.orderedRoles.forEach((function(role){var _a;rolesAtSequence[_a=role.sequence]||(rolesAtSequence[_a]=[]),rolesAtSequence[role.sequence].push(role)})),this.rolesAtSequence=rolesAtSequence,console.log("ras",this.rolesAtSequence),this.sequences=Object.keys(rolesAtSequence).map((function(levelStr){return+levelStr})),this.sequences.sort((function(a,b){return a-b}))}},{key:"handleCancel",value:function handleCancel(e){var _a;e.stopPropagation(),this.showSuggestions=!1,null===(_a=this.cancel)||void 0===_a||_a.emit()}},{key:"handleSubmit",value:function handleSubmit(e){var _a,_b;e.stopPropagation(),this.showSuggestions=!1,null===(_a=this.contactSelected)||void 0===_a||_a.emit({full_name:this.name,email:this.email,phone:this.phone,message:this.message,delegator:this.delegator}),null===(_b=this.settingsUpdated)||void 0===_b||_b.emit({})}},{key:"render",value:function render(){var _this6=this;console.log("ordered roles",JSON.parse(JSON.stringify(this.orderedRoles)));var roleNames=this.orderedRoles.map((function(role){return role.name}))||[],beforeOrder=0;return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("form",{onSubmit:function onSubmit(e){return e.preventDefault()},onClick:function onClick(e){return e.stopPropagation()},autocomplete:"off"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("h5",null,"Participant Order"),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"participants"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"left-line"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"icon",innerHTML:'<svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" tabindex="-1"><path d="M2 12C2 6.48 6.48 2 12 2s10 4.48 10 10-4.48 10-10 10S2 17.52 2 12zm10 6c3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6 2.69 6 6 6z"></path></svg>'}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"sender"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("span",{class:"label"},"Sender:")," ",senderLabels[this.sender]," ",Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"settings-button",innerHTML:settingsIcon,onClick:function onClick(){return _this6.showingSenderDialog=!0},"aria-role":"button"}))),this.sequences.map((function(sequence){return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"icon",innerHTML:'<svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" tabindex="-1"><path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"></path></svg>'}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"dropzone","data-order":beforeOrder,"data-sequence":sequence}),_this6.rolesAtSequence[sequence].map((function(role){return beforeOrder=role.order,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.a,null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"recipient",style:{backgroundColor:Object(_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_61__.a)(Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_62__.a)(roleNames,role.name))},"data-rolename":role.name},role.name," ",Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"settings-button",innerHTML:settingsIcon,onClick:function onClick(){return _this6.showingSenderDialog=!0},"aria-role":"button"})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"dropzone","data-order":beforeOrder,"data-sequence":sequence}))})))})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"row"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"icon",innerHTML:'<svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" tabindex="-1"><path d="m18 7-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41 6 19l1.41-1.41L1.83 12 .41 13.41z"></path></svg>'}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"complete"},"Document Complete"))),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"buttons"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("div",{class:"flex-fill"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-button",{variant:"outline",label:"Cancel",size:"small",onClick:function onClick(e){return _this6.handleCancel(e)}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-button",{label:"OK",size:"small",onClick:function onClick(e){return _this6.handleSubmit(e)}})),this.showingSenderDialog&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_55__.h)("verdocs-template-sender-dialog",{open:!0,value:this.sender,onCancel:function onCancel(){return _this6.showingSenderDialog=!1},onDone:function onDone(e){_this6.showingSenderDialog=!1,_this6.sender=e.detail.sender}}))}}]),VerdocsTemplateRecipients}();VerdocsTemplateRecipients.style='verdocs-template-recipients{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-template-recipients form{background-color:#ffffff;padding:12px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}verdocs-template-recipients form h5{font-size:16px;font-weight:bold;color:#4c56cb;margin:0 0 10px 0}verdocs-template-recipients form .participants{position:relative}verdocs-template-recipients form .left-line{top:32px;left:20px;z-index:1;width:12px;bottom:30px;position:absolute;background:#ffffff;border-left:3px dotted #9b9b9b}verdocs-template-recipients form .row{display:-ms-flexbox;display:flex;-webkit-column-gap:0;-moz-column-gap:0;column-gap:0;margin-left:50px;position:relative;-ms-flex-direction:row;flex-direction:row;padding:6px 0 4px 0}verdocs-template-recipients form .row .icon{top:14px;z-index:2;left:-40px;width:24px;height:24px;position:absolute;background:#ffffff}verdocs-template-recipients form .row .icon svg{fill:#00000089}verdocs-template-recipients form .row .sender{height:30px;display:-ms-flexbox;display:flex;font-size:14px;padding:0 5px 0 15px;line-height:30px;-ms-flex-direction:row;flex-direction:row;border-radius:30px;margin:0 0 0 14px;background-color:#f5f5fa;border:1px solid #aeb4bf}verdocs-template-recipients form .row .complete{height:30px;display:-ms-flexbox;display:flex;font-size:14px;padding:0 15px;line-height:30px;-ms-flex-direction:row;flex-direction:row;border-radius:30px;margin:0 0 0 14px;background-color:#f5f5fa;border:1px solid #aeb4bf}verdocs-template-recipients form .row .label{font-weight:bold;margin-right:6px;color:#33364b}verdocs-template-recipients form .row .settings-button{margin:4px 0 0 9px;cursor:pointer}verdocs-template-recipients form .row .recipient{height:30px;display:-ms-flexbox;display:flex;font-size:14px;line-height:30px;border-radius:30px;-ms-flex-direction:row;flex-direction:row;padding:0 5px 0 15px;border:1px solid #aeb4bf}verdocs-template-recipients form .row .dropzone{width:14px;height:30px}verdocs-template-recipients form .row .dropzone svg{fill:#cccccc}verdocs-template-recipients form .row .dropzone.visible{margin:0 7px}verdocs-template-recipients form .row .dropzone.active{width:100px;border-radius:30px;background:#654dcb7f;border:1px dashed #654dcb}verdocs-template-recipients form label{display:block;font-size:14px;font-weight:500;margin:0 0 4px 0;color:#5c6575}verdocs-template-recipients form input{border:none;font-size:18px;padding:3px 6px 3px 0;background:transparent;border-bottom:1px solid #33364b}verdocs-template-recipients form input:focus{outline:none}verdocs-template-recipients .buttons{display:-ms-flexbox;display:flex;-webkit-column-gap:8px;-moz-column-gap:8px;column-gap:8px;margin-top:16px;-ms-flex-direction:row;flex-direction:row}verdocs-template-recipients .buttons .flex-fill{-ms-flex:1;flex:1}verdocs-template-recipients ::-webkit-input-placeholder{color:#aaaaaa}verdocs-template-recipients ::-moz-placeholder{color:#aaaaaa}verdocs-template-recipients :-ms-input-placeholder{color:#aaaaaa}verdocs-template-recipients ::-ms-input-placeholder{color:#aaaaaa}verdocs-template-recipients ::placeholder{color:#aaaaaa}'},"./node_modules/core-js/internals/number-parse-int.js":function(module,exports,__webpack_require__){var global=__webpack_require__("./node_modules/core-js/internals/global.js"),fails=__webpack_require__("./node_modules/core-js/internals/fails.js"),uncurryThis=__webpack_require__("./node_modules/core-js/internals/function-uncurry-this.js"),toString=__webpack_require__("./node_modules/core-js/internals/to-string.js"),trim=__webpack_require__("./node_modules/core-js/internals/string-trim.js").trim,whitespaces=__webpack_require__("./node_modules/core-js/internals/whitespaces.js"),$parseInt=global.parseInt,Symbol=global.Symbol,ITERATOR=Symbol&&Symbol.iterator,hex=/^[+-]?0x/i,exec=uncurryThis(hex.exec),FORCED=8!==$parseInt(whitespaces+"08")||22!==$parseInt(whitespaces+"0x16")||ITERATOR&&!fails((function(){$parseInt(Object(ITERATOR))}));module.exports=FORCED?function parseInt(string,radix){var S=trim(toString(string));return $parseInt(S,radix>>>0||(exec(hex,S)?16:10))}:$parseInt},"./node_modules/core-js/modules/es.parse-int.js":function(module,exports,__webpack_require__){var $=__webpack_require__("./node_modules/core-js/internals/export.js"),$parseInt=__webpack_require__("./node_modules/core-js/internals/number-parse-int.js");$({global:!0,forced:parseInt!=$parseInt},{parseInt:$parseInt})},"./node_modules/core-js/modules/es.string.match-all.js":function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__("./node_modules/core-js/internals/export.js"),call=__webpack_require__("./node_modules/core-js/internals/function-call.js"),uncurryThis=__webpack_require__("./node_modules/core-js/internals/function-uncurry-this-clause.js"),createIteratorConstructor=__webpack_require__("./node_modules/core-js/internals/iterator-create-constructor.js"),createIterResultObject=__webpack_require__("./node_modules/core-js/internals/create-iter-result-object.js"),requireObjectCoercible=__webpack_require__("./node_modules/core-js/internals/require-object-coercible.js"),toLength=__webpack_require__("./node_modules/core-js/internals/to-length.js"),toString=__webpack_require__("./node_modules/core-js/internals/to-string.js"),anObject=__webpack_require__("./node_modules/core-js/internals/an-object.js"),isNullOrUndefined=__webpack_require__("./node_modules/core-js/internals/is-null-or-undefined.js"),classof=__webpack_require__("./node_modules/core-js/internals/classof-raw.js"),isRegExp=__webpack_require__("./node_modules/core-js/internals/is-regexp.js"),getRegExpFlags=__webpack_require__("./node_modules/core-js/internals/regexp-get-flags.js"),getMethod=__webpack_require__("./node_modules/core-js/internals/get-method.js"),defineBuiltIn=__webpack_require__("./node_modules/core-js/internals/define-built-in.js"),fails=__webpack_require__("./node_modules/core-js/internals/fails.js"),wellKnownSymbol=__webpack_require__("./node_modules/core-js/internals/well-known-symbol.js"),speciesConstructor=__webpack_require__("./node_modules/core-js/internals/species-constructor.js"),advanceStringIndex=__webpack_require__("./node_modules/core-js/internals/advance-string-index.js"),regExpExec=__webpack_require__("./node_modules/core-js/internals/regexp-exec-abstract.js"),InternalStateModule=__webpack_require__("./node_modules/core-js/internals/internal-state.js"),IS_PURE=__webpack_require__("./node_modules/core-js/internals/is-pure.js"),MATCH_ALL=wellKnownSymbol("matchAll"),setInternalState=InternalStateModule.set,getInternalState=InternalStateModule.getterFor("RegExp String Iterator"),RegExpPrototype=RegExp.prototype,$TypeError=TypeError,stringIndexOf=uncurryThis("".indexOf),nativeMatchAll=uncurryThis("".matchAll),WORKS_WITH_NON_GLOBAL_REGEX=!!nativeMatchAll&&!fails((function(){nativeMatchAll("a",/./)})),$RegExpStringIterator=createIteratorConstructor((function RegExpStringIterator(regexp,string,$global,fullUnicode){setInternalState(this,{type:"RegExp String Iterator",regexp:regexp,string:string,global:$global,unicode:fullUnicode,done:!1})}),"RegExp String",(function next(){var state=getInternalState(this);if(state.done)return createIterResultObject(void 0,!0);var R=state.regexp,S=state.string,match=regExpExec(R,S);return null===match?(state.done=!0,createIterResultObject(void 0,!0)):state.global?(""===toString(match[0])&&(R.lastIndex=advanceStringIndex(S,toLength(R.lastIndex),state.unicode)),createIterResultObject(match,!1)):(state.done=!0,createIterResultObject(match,!1))})),$matchAll=function(string){var matcher,$global,fullUnicode,R=anObject(this),S=toString(string),C=speciesConstructor(R,RegExp),flags=toString(getRegExpFlags(R));return matcher=new C(C===RegExp?R.source:R,flags),$global=!!~stringIndexOf(flags,"g"),fullUnicode=!!~stringIndexOf(flags,"u"),matcher.lastIndex=toLength(R.lastIndex),new $RegExpStringIterator(matcher,S,$global,fullUnicode)};$({target:"String",proto:!0,forced:WORKS_WITH_NON_GLOBAL_REGEX},{matchAll:function matchAll(regexp){var flags,S,matcher,rx,O=requireObjectCoercible(this);if(isNullOrUndefined(regexp)){if(WORKS_WITH_NON_GLOBAL_REGEX)return nativeMatchAll(O,regexp)}else{if(isRegExp(regexp)&&(flags=toString(requireObjectCoercible(getRegExpFlags(regexp))),!~stringIndexOf(flags,"g")))throw $TypeError("`.matchAll` does not allow non-global regexes");if(WORKS_WITH_NON_GLOBAL_REGEX)return nativeMatchAll(O,regexp);if(void 0===(matcher=getMethod(regexp,MATCH_ALL))&&IS_PURE&&"RegExp"==classof(regexp)&&(matcher=$matchAll),matcher)return call(matcher,regexp,O)}return S=toString(O),rx=new RegExp(regexp,"g"),IS_PURE?call($matchAll,rx,S):rx[MATCH_ALL](S)}}),IS_PURE||MATCH_ALL in RegExpPrototype||defineBuiltIn(RegExpPrototype,MATCH_ALL,$matchAll)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0B2ZXJkb2NzL2pzLXNkay9VdGlscy9Db2xvcnMuanMiLCJ3ZWJwYWNrOi8vL25vZGVfbW9kdWxlcy9AdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzL1RlbXBsYXRlRG9jdW1lbnRzLmpzIiwid2VicGFjazovLy9zcmMvdXRpbHMvVGVtcGxhdGVzLnRzIiwid2VicGFjazovLy9ub2RlX21vZHVsZXMvQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9UZW1wbGF0ZXMuanMiLCJ3ZWJwYWNrOi8vL3NyYy91dGlscy9lcnJvcnMudHMiLCJ3ZWJwYWNrOi8vL25vZGVfbW9kdWxlcy9AdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzL1BhZ2VzLmpzIiwid2VicGFjazovLy9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXRlbXBsYXRlLWNyZWF0ZS92ZXJkb2NzLXRlbXBsYXRlLWNyZWF0ZS50c3giLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtdGVtcGxhdGUtY3JlYXRlL3ZlcmRvY3MtdGVtcGxhdGUtY3JlYXRlLnNjc3MiLCJ3ZWJwYWNrOi8vL25vZGVfbW9kdWxlcy9pbnRlcmFjdGpzL2Rpc3QvaW50ZXJhY3QubWluLmpzIiwid2VicGFjazovLy9zcmMvY29tcG9uZW50cy9lbGVtZW50cy92ZXJkb2NzLXRlbXBsYXRlLWZpZWxkcy92ZXJkb2NzLXRlbXBsYXRlLWZpZWxkcy50c3giLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtdGVtcGxhdGUtZmllbGRzL3ZlcmRvY3MtdGVtcGxhdGUtZmllbGRzLnNjc3MiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtdGVtcGxhdGUtcHJvcGVydGllcy92ZXJkb2NzLXRlbXBsYXRlLXByb3BlcnRpZXMuc2NzcyIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1wcm9wZXJ0aWVzL3ZlcmRvY3MtdGVtcGxhdGUtcHJvcGVydGllcy50c3giLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2VsZW1lbnRzL3ZlcmRvY3MtdGVtcGxhdGUtcmVjaXBpZW50cy92ZXJkb2NzLXRlbXBsYXRlLXJlY2lwaWVudHMuc2NzcyIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvZWxlbWVudHMvdmVyZG9jcy10ZW1wbGF0ZS1yZWNpcGllbnRzL3ZlcmRvY3MtdGVtcGxhdGUtcmVjaXBpZW50cy50c3giLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL251bWJlci1wYXJzZS1pbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wYXJzZS1pbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2gtYWxsLmpzIl0sIm5hbWVzIjpbImdldFJHQkEiLCJyb2xlSW5kZXgiLCJnZXRUZW1wbGF0ZURvY3VtZW50IiwiZW5kcG9pbnQiLCJ0ZW1wbGF0ZUlkIiwiZG9jdW1lbnRJZCIsImFwaSIsImdldCIsImNvbmNhdCIsInRoZW4iLCJyIiwiZGF0YSIsImNyZWF0ZVRlbXBsYXRlRG9jdW1lbnQiLCJmaWxlIiwib25VcGxvYWRQcm9ncmVzcyIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJuYW1lIiwicG9zdCIsInRpbWVvdXQiLCJldmVudCIsIk1hdGgiLCJmbG9vciIsImxvYWRlZCIsInRvdGFsIiwibG9hZFRlbXBsYXRlIiwiVGVtcGxhdGVTdG9yZSIsInRlbXBsYXRlIiwiY29uc29sZSIsImxvZyIsImxvYWRpbmciLCJnZXRUZW1wbGF0ZSIsImdldFRlbXBsYXRlcyIsInBhcmFtcyIsImNyZWF0ZVRlbXBsYXRlIiwiU0RLRXJyb3IiLCJtZXNzYWdlIiwic3RhdHVzQ29kZSIsInJlc3BvbnNlIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJFcnJvciIsImNyZWF0ZVBhZ2UiLCJWZXJkb2NzVGVtcGxhdGVDcmVhdGUiLCJWZXJkb2NzRW5kcG9pbnQiLCJnZXREZWZhdWx0IiwiY29tcG9uZW50V2lsbExvYWQiLCJoYW5kbGVGaWxlQ2hhbmdlZCIsImUiLCJ0YXJnZXQiLCJmaWxlcyIsInRoaXMiLCJoYW5kbGVVcGxvYWQiLCJzdG9wUHJvcGFnYXRpb24iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY2xpY2siLCJoYW5kbGVDYW5jZWwiLCJjYW5jZWwiLCJlbWl0IiwiaWQiLCJ0ZW1wbGF0ZV9kb2N1bWVudCIsIkFycmF5IiwiZnJvbSIsInBhZ2VfbnVtYmVycyIsImtleXMiLCJuIiwicGFnZU51bWJlciIsInNlcXVlbmNlIiwicGFnZV9udW1iZXIiLCJkb2N1bWVudF9pZCIsInBhZ2UiLCJ0ZW1wbGF0ZUNyZWF0ZWQiLCJzZGtFcnJvciIsInN0YXR1cyIsInJlbmRlciIsImgiLCJvblN1Ym1pdCIsInByZXZlbnREZWZhdWx0Iiwib25DbGljayIsImF1dG9jb21wbGV0ZSIsInR5cGUiLCJtdWx0aXBsZSIsImFjY2VwdCIsInN0eWxlIiwiZGlzcGxheSIsIm9uQ2hhbmdlIiwiY2xhc3MiLCJpbm5lckhUTUwiLCJtYXJnaW5Ub3AiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJtYXJnaW5Cb3R0b20iLCJsYWJlbCIsInNpemUiLCJ2YXJpYW50IiwiaGFuZGxlU3VibWl0IiwiZGlzYWJsZWQiLCJtb2R1bGUiLCJ0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsIldpbmRvdyIsImdldFdpbmRvdyIsIm93bmVyRG9jdW1lbnQiLCJkZWZhdWx0VmlldyIsIndpbmRvdyIsImluaXQiLCJvIiwicmVhbFdpbmRvdyIsImNyZWF0ZVRleHROb2RlIiwid3JhcCIsImkiLCJhIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInMiLCJsIiwidSIsImRvY0ZyYWciLCJub2RlVHlwZSIsIm9iamVjdCIsImZ1bmMiLCJudW1iZXIiLCJib29sIiwic3RyaW5nIiwiZWxlbWVudCIsInRlc3QiLCJFbGVtZW50Iiwibm9kZU5hbWUiLCJwbGFpbk9iamVjdCIsInRvU3RyaW5nIiwiYXJyYXkiLCJsZW5ndGgiLCJzcGxpY2UiLCJjIiwiZiIsImludGVyYWN0aW9uIiwicHJlcGFyZWQiLCJheGlzIiwiY29vcmRzIiwiY3VyIiwieSIsInN0YXJ0IiwiY2xpZW50IiwidmVsb2NpdHkiLCJ4IiwiZCIsImlFdmVudCIsImRlbHRhIiwicCIsImluc3RhbGwiLCJhY3Rpb25zIiwiSW50ZXJhY3RhYmxlIiwiZGVmYXVsdHMiLCJkcmFnZ2FibGUiLCJtYXAiLCJkcmFnIiwibWV0aG9kRGljdCIsImxpc3RlbmVycyIsImludGVyYWN0YWJsZSIsImJ1dHRvbnMiLCJvcHRpb25zIiwiZW5hYmxlZCIsInBvaW50ZXJJc0Rvd24iLCJwb2ludGVyVHlwZSIsIm1vdXNlQnV0dG9ucyIsImFjdGlvbiIsImxvY2tBeGlzIiwic3RhcnRBeGlzIiwic2V0UGVyQWN0aW9uIiwic2V0T25FdmVudHMiLCJiZWZvcmVNb3ZlIiwibW92ZSIsImdldEN1cnNvciIsInYiLCJnIiwiRG9jdW1lbnRGcmFnbWVudCIsIlNWR0VsZW1lbnQiLCJTVkdTVkdFbGVtZW50IiwiU1ZHRWxlbWVudEluc3RhbmNlIiwiSFRNTEVsZW1lbnQiLCJFdmVudCIsIlRvdWNoIiwiUG9pbnRlckV2ZW50IiwiTVNQb2ludGVyRXZlbnQiLCJtIiwiYiIsIm5hdmlnYXRvciIsInN1cHBvcnRzVG91Y2giLCJEb2N1bWVudFRvdWNoIiwic3VwcG9ydHNQb2ludGVyRXZlbnQiLCJwb2ludGVyRW5hYmxlZCIsImlzSU9TIiwicGxhdGZvcm0iLCJpc0lPUzciLCJhcHBWZXJzaW9uIiwiaXNJZTkiLCJ1c2VyQWdlbnQiLCJpc09wZXJhTW9iaWxlIiwiYXBwTmFtZSIsInByZWZpeGVkTWF0Y2hlc1NlbGVjdG9yIiwicEV2ZW50VHlwZXMiLCJ1cCIsImRvd24iLCJvdmVyIiwib3V0Iiwid2hlZWxFdmVudCIsInciLCJfIiwiUCIsInBhcmVudE5vZGUiLCJob3N0IiwiTyIsInJlcGxhY2UiLCJjbG9zZXN0IiwiZ2V0QWN0dWFsRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwiZ2V0RWxlbWVudENsaWVudFJlY3QiLCJqIiwiZ2V0RWxlbWVudFJlY3QiLCJUIiwibGVmdCIsInJpZ2h0IiwidG9wIiwiYm90dG9tIiwiZ2V0UGF0aCIsInB1c2giLCJnZXRTY3JvbGxYWSIsImluZGV4T2ZEZWVwZXN0RWxlbWVudCIsIkUiLCJTIiwib3duZXJTVkdFbGVtZW50IiwibGFzdENoaWxkIiwicHJldmlvdXNTaWJsaW5nIiwicGFyc2VJbnQiLCJnZXRDb21wdXRlZFN0eWxlIiwiekluZGV4IiwibWF0Y2hlc1NlbGVjdG9yIiwibWF0Y2hlc1VwVG8iLCJub2RlQ29udGFpbnMiLCJjb250YWlucyIsInRyeVNlbGVjdG9yIiwicXVlcnlTZWxlY3RvciIsInVuc2hpZnQiLCJzY3JvbGxYIiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsTGVmdCIsInNjcm9sbFkiLCJzY3JvbGxUb3AiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJnZXRDbGllbnRSZWN0cyIsIndpZHRoIiwiaGVpZ2h0IiwiTSIsImsiLCJJIiwiRCIsImdldFJlY3QiLCJhZGRFZGdlcyIsImdldFN0cmluZ09wdGlvblJlc3VsdCIsInJlY3RUb1hZIiwicmVzb2x2ZVJlY3RMaWtlIiwiYXBwbHkiLCJpc0FycmF5IiwiY2FsbCIsInNsaWNlIiwiVHlwZUVycm9yIiwidGxiclRvWHl3aCIsInh5d2hUb1RsYnIiLCJBIiwib3JpZ2luIiwieiIsIkMiLCJ0cmltIiwic3BsaXQiLCJzZWFyY2giLCJyZWR1Y2UiLCJSIiwic3FydCIsIkYiLCJfX3NldCIsInNldCIsImNvbmZpZ3VyYWJsZSIsIlgiLCJCIiwiWSIsIlciLCJMIiwiVSIsInRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIlYiLCJwYWdlWCIsInBhZ2VZIiwiY2xpZW50WCIsImNsaWVudFkiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNvb3Jkc1RvRXZlbnQiLCJ0aW1lU3RhbXAiLCJwb2ludGVySWQiLCJjb3B5Q29vcmRzIiwiZ2V0Q2xpZW50WFkiLCJnZXRFdmVudFRhcmdldHMiLCJjb21wb3NlZFBhdGgiLCJwYXRoIiwiY3VycmVudFRhcmdldCIsImdldFBhZ2VYWSIsImdldFBvaW50ZXJJZCIsImlkZW50aWZpZXIiLCJnZXRQb2ludGVyVHlwZSIsImdldFRvdWNoUGFpciIsImdldFhZIiwiaXNOYXRpdmVQb2ludGVyIiwibmV3Q29vcmRzIiwicG9pbnRlckF2ZXJhZ2UiLCJlbnVtZXJhYmxlIiwic2V0Q29vcmREZWx0YXMiLCJzZXRDb29yZFZlbG9jaXR5IiwibWF4Iiwic2V0Q29vcmRzIiwic2V0WmVyb0Nvb3JkcyIsInRvdWNoQW5nbGUiLCJhdGFuMiIsIlBJIiwidG91Y2hCQm94IiwibWluIiwidG91Y2hEaXN0YW5jZSIsIk4iLCJxIiwid3JpdGFibGUiLCJrZXkiLCJHIiwiQmFzZUV2ZW50IiwiJCIsIl9pbnRlcmFjdGlvbiIsInByb3BhZ2F0aW9uU3RvcHBlZCIsImltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCIsIl9wcm94eSIsIkgiLCJyZW1vdmUiLCJtZXJnZSIsImZpbmRJbmRleCIsImZpbmQiLCJpbmRleE9mIiwiSyIsIloiLCJKIiwiUSIsInR0IiwiZXQiLCJiaW5kIiwiX19wcm90b19fIiwibnQiLCJydCIsIlJlZmVyZW5jZUVycm9yIiwib3QiLCJnZXRQcm90b3R5cGVPZiIsIml0IiwiRHJvcEV2ZW50IiwiYXQiLCJjcmVhdGUiLCJSZWZsZWN0IiwiY29uc3RydWN0Iiwic2hhbSIsIlByb3h5IiwiQm9vbGVhbiIsInZhbHVlT2YiLCJhcmd1bWVudHMiLCJwcmV2IiwiZHJvcHpvbmUiLCJkcmFnRXZlbnQiLCJyZWxhdGVkVGFyZ2V0IiwiZHJvcFN0YXRlIiwicmVqZWN0ZWQiLCJldmVudHMiLCJlbnRlciIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsImFjdGl2ZURyb3BzIiwiZmlyZSIsInN0IiwibHQiLCJ1dCIsImludGVyYWN0YWJsZXMiLCJsaXN0IiwiZHJvcCIsImRyYWdnYWJsZUVsZW1lbnQiLCJfY29udGV4dCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJyZWN0IiwiY3QiLCJkcm9wQ2hlY2siLCJmdCIsImxlYXZlIiwiYWN0aXZhdGUiLCJkZWFjdGl2YXRlIiwiZHJhZ0xlYXZlIiwicHJldkRyb3B6b25lIiwiZHJhZ0VudGVyIiwiZHJhZ21vdmUiLCJkdCIsInB0IiwiZHluYW1pY0Ryb3AiLCJ2dCIsImludGVyYWN0U3RhdGljIiwidXNlUGx1Z2luIiwib2ZmIiwib24iLCJvbmRyb3AiLCJvbmRyb3BhY3RpdmF0ZSIsIm9uZHJvcGRlYWN0aXZhdGUiLCJvbmRyYWdlbnRlciIsIm9uZHJhZ2xlYXZlIiwib25kcm9wbW92ZSIsIm92ZXJsYXAiLCJjaGVja2VyIiwicGhhc2VsZXNzVHlwZXMiLCJkcmFnZW50ZXIiLCJkcmFnbGVhdmUiLCJkcm9wYWN0aXZhdGUiLCJkcm9wZGVhY3RpdmF0ZSIsImRyb3Btb3ZlIiwiZ2V0QWN0aXZlRHJvcHMiLCJnZXREcm9wIiwiZ2V0RHJvcEV2ZW50cyIsImZpcmVEcm9wRXZlbnRzIiwiaHQiLCJndCIsInl0IiwicGhhc2UiLCJwb2ludGVycyIsInBvaW50ZXIiLCJkZWx0YVNvdXJjZSIsImRpc3RhbmNlIiwiYm94Iiwic2NhbGUiLCJkcyIsImFuZ2xlIiwiZGEiLCJnZXN0dXJlIiwic3RhcnREaXN0YW5jZSIsInN0YXJ0QW5nbGUiLCJwcmV2RXZlbnQiLCJpc05hTiIsIm10IiwiYmVmb3JlIiwiZ2VzdHVyYWJsZSIsImJ0IiwieHQiLCJ3dCIsImFicyIsIl90IiwicmVzaXplQXhlcyIsInJlc2l6ZSIsInNxdWFyZSIsImF4ZXMiLCJQdCIsImJyb3dzZXIiLCJjdXJzb3JzIiwieHkiLCJ0b3BsZWZ0IiwiYm90dG9tcmlnaHQiLCJ0b3ByaWdodCIsImJvdHRvbWxlZnQiLCJkZWZhdWx0TWFyZ2luIiwicmVzaXphYmxlIiwicHJlc2VydmVBc3BlY3RSYXRpbyIsImVkZ2VzIiwiX3JlY3RzIiwiY29ycmVjdGVkIiwicHJldmlvdXMiLCJkZWx0YVJlY3QiLCJpbnZlcnQiLCJfbGF0ZXN0UG9pbnRlciIsImV2ZW50VGFyZ2V0IiwibWFyZ2luIiwiTmFOIiwiT3QiLCJFdCIsIlN0IiwiVHQiLCJqdCIsIk10Iiwia3QiLCJJdCIsInJlcXVlc3QiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsIkRhdGUiLCJub3ciLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwiRHQiLCJnZXRDb250YWluZXIiLCJ6dCIsImdldFNjcm9sbCIsIkN0IiwiZ2V0U2Nyb2xsU2l6ZSIsImJvZHkiLCJzY3JvbGxXaWR0aCIsInNjcm9sbEhlaWdodCIsImdldFNjcm9sbFNpemVEZWx0YSIsImF1dG9TY3JvbGwiLCJjb250YWluZXIiLCJBdCIsInNwZWVkIiwiaXNTY3JvbGxpbmciLCJwcmV2VGltZSIsInNjcm9sbCIsInN0b3AiLCJzY3JvbGxCeSIsImNoZWNrIiwib25JbnRlcmFjdGlvbk1vdmUiLCJpbnRlcmFjdGluZyIsInNpbXVsYXRpb24iLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJSdCIsImF1dG9zY3JvbGwiLCJwZXJBY3Rpb24iLCJGdCIsIlh0IiwiY29weUFjdGlvbiIsInNpZ24iLCJ3YXJuT25jZSIsIndhcm4iLCJCdCIsIll0Iiwic3R5bGVDdXJzb3IiLCJXdCIsImFjdGlvbkNoZWNrZXIiLCJMdCIsImdldEFjdGlvbiIsImJ1dHRvbiIsImlnbm9yZUZyb20iLCJfYmFja0NvbXBhdE9wdGlvbiIsImFsbG93RnJvbSIsIlV0IiwiVnQiLCJ0ZXN0SWdub3JlQWxsb3ciLCIkdCIsIk50IiwicXQiLCJmb3JFYWNoTWF0Y2giLCJtYW51YWxTdGFydCIsIkd0IiwiWnQiLCJtYXhQZXJFbGVtZW50IiwiYXV0b1N0YXJ0IiwibWF4SW50ZXJhY3Rpb25zIiwiaW50ZXJhY3Rpb25zIiwiSHQiLCJLdCIsImN1cnNvckVsZW1lbnQiLCJjdXJzb3IiLCJjdXJzb3JDaGVja2VyIiwiX2ludGVyYWN0aW5nIiwiSnQiLCJiYXNlIiwid2l0aGluSW50ZXJhY3Rpb25MaW1pdCIsInBvaW50ZXJXYXNNb3ZlZCIsInZhbGlkYXRlQWN0aW9uIiwiUXQiLCJ0ZSIsImVlIiwiZHgiLCJkeSIsImRvd25Qb2ludGVyIiwiZG93bkV2ZW50IiwibmUiLCJyZSIsImhvbGQiLCJkZWxheSIsIm9lIiwiYXV0b1N0YXJ0SG9sZFRpbWVyIiwiZHVwbGljYXRlIiwiZ2V0SG9sZER1cmF0aW9uIiwiaWUiLCJhZSIsInNlIiwibGUiLCJ1ZSIsImNlIiwiY2hlY2tBbmRQcmV2ZW50RGVmYXVsdCIsImZlIiwic3VwcG9ydHNQYXNzaXZlIiwiZ2V0RG9jT3B0aW9ucyIsInBhc3NpdmUiLCJkb2NFdmVudHMiLCJsaXN0ZW5lciIsImRlIiwicGUiLCJ2ZSIsImhlIiwidG91Y2hBY3Rpb24iLCJib3hTaXppbmciLCJub0xpc3RlbmVycyIsImdlIiwieWUiLCJtZSIsImJlIiwibmV4dCIsImRvbmUiLCJ4ZSIsIndlIiwiX2UiLCJnZXRSZWN0T2Zmc2V0IiwiRWUiLCJQZSIsInJlc3VsdCIsIk9lIiwibW9kaWZpZXJzIiwibWV0aG9kcyIsIl9tZXRob2RzIiwiZmlsdGVyIiwicHJlcGFyZVN0YXRlcyIsInN0YXJ0T2Zmc2V0Iiwic3RhcnREZWx0YSIsImZpbGxBcmciLCJwYWdlQ29vcmRzIiwicHJlRW5kIiwic3RhcnRBbGwiLCJzZXRBbGwiLCJzdGF0ZXMiLCJzdGF0ZSIsInNraXBNb2RpZmllcnMiLCJzaG91bGREbyIsImV2ZW50UHJvcHMiLCJyZWN0RGVsdGEiLCJjaGFuZ2VkIiwibW9kaWZpZWRDb29yZHMiLCJhcHBseVRvSW50ZXJhY3Rpb24iLCJiZWZvcmVFbmQiLCJlbmRSZXN1bHQiLCJpbmRleCIsIm1vZGlmaWNhdGlvbiIsImVuZE9ubHkiLCJzZXRTdGFydCIsIlNlIiwiVGUiLCJhZGRFdmVudE1vZGlmaWVycyIsIm1ha2VNb2RpZmllciIsImVuYWJsZSIsImRpc2FibGUiLCJfZGVmYXVsdHMiLCJqZSIsInNldEFuZEFwcGx5IiwicmVzdG9yZUludGVyYWN0aW9uQ29vcmRzIiwiTWUiLCJrZSIsIkllIiwiRGUiLCJBZSIsInplIiwiQ2UiLCJSZSIsIkZlIiwiWGUiLCJJbnRlcmFjdEV2ZW50IiwiQmUiLCJjdHJsS2V5IiwiYWx0S2V5Iiwic2hpZnRLZXkiLCJtZXRhS2V5IiwidDAiLCJkb3duVGltZSIsIngwIiwieTAiLCJjbGllbnRYMCIsImNsaWVudFkwIiwiZHVyYXRpb24iLCJzd2lwZSIsImdldFN3aXBlIiwidmVsb2NpdHlZIiwidmVsb2NpdHlYIiwiZGVmaW5lUHJvcGVydGllcyIsIlllIiwiV2UiLCJMZSIsIlVlIiwiUG9pbnRlckluZm8iLCJWZSIsImRvd25UYXJnZXQiLCJOZSIsInFlIiwiR2UiLCIkZSIsIkhlIiwiSW50ZXJhY3Rpb24iLCJfUHJveHlWYWx1ZXMiLCJfUHJveHlNZXRob2RzIiwiZW5kIiwiS2UiLCJaZSIsInNjb3BlRmlyZSIsIl9zY29wZUZpcmUiLCJ1cGRhdGVQb2ludGVyIiwicG9pbnRlckluZGV4IiwicG9pbnRlckluZm8iLCJfc3RvcHBlZCIsIl9kb1BoYXNlIiwicG9pbnRlck1vdmVUb2xlcmFuY2UiLCJnZXRQb2ludGVySW5kZXgiLCJjdXJFdmVudFRhcmdldCIsInJlbW92ZVBvaW50ZXIiLCJfZW5kaW5nIiwiX25vdyIsInBvaW50ZXJFeHRlbmQiLCJfdXBkYXRlTGF0ZXN0UG9pbnRlciIsIl9jcmVhdGVQcmVwYXJlZEV2ZW50IiwiX2ZpcmVFdmVudCIsIkplIiwiUWUiLCJ0biIsIm9mZnNldCIsInBlbmRpbmciLCJlbiIsIm5uIiwicm4iLCJhZGRUb3RhbCIsImFwcGx5UGVuZGluZyIsIm9mZnNldEJ5IiwiYW4iLCJzbiIsImxuIiwidW4iLCJjbiIsIkluZXJ0aWFTdGF0ZSIsImZuIiwiZG4iLCJjb3B5RnJvbSIsImFsbG93UmVzdW1lIiwidjAiLCJjdXJyZW50T2Zmc2V0Iiwic3RhcnRDb29yZHMiLCJtb2RpZmllckFyZyIsIm1pblNwZWVkIiwiZW5kU3BlZWQiLCJzdGFydEluZXJ0aWEiLCJzdGFydFNtb290aEVuZCIsInRhcmdldE9mZnNldCIsImFjdGl2ZSIsInJlc2lzdGFuY2UiLCJsYW1iZGFfdjAiLCJvbmVfdmVfdjAiLCJpc01vZGlmaWVkIiwibW9kaWZpZWRPZmZzZXQiLCJvbk5leHRGcmFtZSIsImluZXJ0aWFUaWNrIiwic21vb3RoRW5kIiwic21vb3RoRW5kVGljayIsImV4cCIsInZuIiwic21vb3RoRW5kRHVyYXRpb24iLCJobiIsIm1vZGlmaWVyQ291bnQiLCJpbmVydGlhIiwicG4iLCJwaGFzZXMiLCJpbmVydGlhc3RhcnQiLCJyZXN1bWUiLCJnbiIsInluIiwibW4iLCJibiIsInhuIiwiRXZlbnRhYmxlIiwid24iLCJnbG9iYWwiLCJ0eXBlcyIsIl9uIiwic3Vic3RyIiwiUG4iLCJjcmVhdGVJbnRlcmFjdFN0YXRpYyIsImdsb2JhbEV2ZW50cyIsImdldFBvaW50ZXJBdmVyYWdlIiwiZ2V0VG91Y2hCQm94IiwiZ2V0VG91Y2hEaXN0YW5jZSIsImdldFRvdWNoQW5nbGUiLCJ2ZXJzaW9uIiwic2NvcGUiLCJ1c2UiLCJpc1NldCIsImNvbnRleHQiLCJhZGQiLCJkZWJ1ZyIsImFkZERvY3VtZW50IiwicmVtb3ZlRG9jdW1lbnQiLCJPbiIsIkVuIiwiU24iLCJUbiIsIl9hY3Rpb25zIiwiX3dpbiIsIl9kb2MiLCJfc2NvcGVFdmVudHMiLCJvbnN0YXJ0Iiwib25tb3ZlIiwib25lbmQiLCJvbmluZXJ0aWFzdGFydCIsInVwZGF0ZVBlckFjdGlvbkxpc3RlbmVycyIsIl9yZWN0Q2hlY2tlciIsInRlc3RJZ25vcmUiLCJ0ZXN0QWxsb3ciLCJfb25PZmYiLCJkZWxlZ2F0ZWRFdmVudHMiLCJzZWxlY3RvciIsInJlbW92ZURlbGVnYXRlIiwiam4iLCJNbiIsImtuIiwiSW50ZXJhY3RhYmxlU2V0IiwiSW4iLCJhZGRMaXN0ZW5lcnMiLCJzZWxlY3Rvck1hcCIsIndpbiIsImluQ29udGV4dCIsIkRuIiwiQW4iLCJ6biIsIkNuIiwiUm4iLCJGbiIsIm9yaWdpbmFsRXZlbnQiLCJYbiIsImNhcHR1cmUiLCJCbiIsImFkZERlbGVnYXRlIiwiZGVsZWdhdGVMaXN0ZW5lciIsImRlbGVnYXRlVXNlQ2FwdHVyZSIsImRvY3VtZW50cyIsInRhcmdldHMiLCJzdXBwb3J0c09wdGlvbnMiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImhhc093blByb3BlcnR5IiwiY3JlYXRlRWxlbWVudCIsIlluIiwiV24iLCJtZXRob2RPcmRlciIsInNpbXVsYXRpb25SZXN1bWUiLCJldmVudFR5cGUiLCJtb3VzZU9yUGVuIiwiTG4iLCJoYXNQb2ludGVyIiwiaWRsZSIsInNvbWUiLCJVbiIsIlZuIiwiTm4iLCJxbiIsIkduIiwiJG4iLCJIbiIsIktuIiwiWm4iLCJKbiIsIlFuIiwidHIiLCJwcmV2VG91Y2hUaW1lIiwiZXIiLCJzZWFyY2hEZXRhaWxzIiwibnIiLCJkb2MiLCJyciIsInBvaW50ZXJEb3duIiwicG9pbnRlck1vdmUiLCJwb2ludGVyVXAiLCJkb2N1bWVudEJsdXIiLCJuZXciLCJkZXN0cm95Iiwib25Eb2NTaWduYWwiLCJkb09uSW50ZXJhY3Rpb25zIiwibWV0aG9kTmFtZXMiLCJvciIsImlyIiwiYXIiLCJzciIsImxyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZnIiLCJ1ciIsImNyIiwiZHIiLCJwciIsInZyIiwiaHIiLCJTY29wZSIsImluaXRTY29wZSIsInlyIiwiZ3IiLCJyYW5kb20iLCJsaXN0ZW5lck1hcHMiLCJpc0luaXRpYWxpemVkIiwiX3BsdWdpbnMiLCJwbHVnaW5Jc0luc3RhbGxlZCIsIm1yIiwiZ2V0RG9jSW5kZXgiLCJvbldpbmRvd1VubG9hZCIsImJyIiwieHIiLCJ3ciIsIl9yIiwiZ2xvYmFsVGhpcyIsIlByIiwiT3IiLCJFciIsIlNyIiwiVHIiLCJyYW5nZSIsImxpbWl0cyIsImdyaWQiLCJyb3VuZCIsImNvb3JkRmllbGRzIiwianIiLCJNciIsImtyIiwic25hcHBlcnMiLCJjcmVhdGVTbmFwR3JpZCIsIklyIiwiRHIiLCJBciIsImdldE93blByb3BlcnR5U3ltYm9scyIsInpyIiwiZm9yRWFjaCIsIkNyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImFzcGVjdFJhdGlvIiwiUnIiLCJyYXRpbyIsImVxdWFsRGVsdGEiLCJzdGFydFJlY3QiLCJsaW5rZWRFZGdlcyIsInhJc1ByaW1hcnlBeGlzIiwiZWRnZVNpZ24iLCJzdWJNb2RpZmljYXRpb24iLCJGciIsIlhyIiwicHJldkNvb3JkcyIsInByZXZSZWN0IiwiQnIiLCJZciIsIldyIiwiTHIiLCJVciIsIlZyIiwiTnIiLCJnZXRSZXN0cmljdGlvblJlY3QiLCJyZXN0cmljdCIsInFyIiwiZWxlbWVudFJlY3QiLCJyZXN0cmljdGlvbiIsIkdyIiwiJHIiLCJyZXN0cmljdEVkZ2VzIiwiSHIiLCJLciIsIlpyIiwiSnIiLCJub0lubmVyIiwibm9PdXRlciIsImlubmVyIiwib3V0ZXIiLCJRciIsInRvIiwicmVzdHJpY3RSZWN0IiwiZW8iLCJubyIsInJvIiwib28iLCJyZXN0cmljdFNpemUiLCJpbyIsImFvIiwic28iLCJsbyIsInVvIiwiY28iLCJzbmFwIiwiZm8iLCJvZmZzZXRXaXRoT3JpZ2luIiwicmVsYXRpdmVQb2ludHMiLCJvZmZzZXRzIiwicmVsYXRpdmVQb2ludCIsInNvdXJjZSIsImluUmFuZ2UiLCJwbyIsInZvIiwiaG8iLCJzbmFwU2l6ZSIsImdvIiwidGFyZ2V0RmllbGRzIiwieW8iLCJtbyIsInNuYXBFZGdlcyIsImJvIiwieG8iLCJ3byIsIl9vIiwiUG8iLCJPbyIsInNwcmluZyIsImF2b2lkIiwidHJhbnNmb3JtIiwicnViYmVyYmFuZCIsIkVvIiwiU28iLCJUbyIsImpvIiwiTW8iLCJrbyIsIklvIiwiRG8iLCJBbyIsInpvIiwiQ28iLCJ0YXBUaW1lIiwicHJldlRhcCIsIlJvIiwiRm8iLCJwb2ludGVyRXZlbnRzIiwiWW8iLCJYbyIsIm5vZGUiLCJldmVudGFibGUiLCJob2xkRHVyYXRpb24iLCJjb2xsZWN0RXZlbnRUYXJnZXRzIiwiQm8iLCJ0YXAiLCJkb3VibGV0YXAiLCJwb2ludGVyRXZlbnQiLCJwcm9wcyIsIl9zdWJ0cmFjdE9yaWdpbiIsIl9hZGRPcmlnaW4iLCJXbyIsIkxvIiwiVW8iLCJob2xkSW50ZXJ2YWxIYW5kbGUiLCJjbGVhckludGVydmFsIiwiVm8iLCJob2xkUmVwZWF0SW50ZXJ2YWwiLCJob2xkcmVwZWF0IiwiY291bnQiLCJObyIsInFvIiwiR28iLCIkbyIsIkhvIiwiS28iLCJabyIsIkpvIiwiUW8iLCJ0aSIsInJlZmxvdyIsIlByb21pc2UiLCJfcmVmbG93UHJvbWlzZSIsIl9yZWZsb3dSZXNvbHZlIiwiYWxsIiwiZWkiLCJuaSIsInJpIiwiZXhwb3J0cyIsIm9pIiwiaWkiLCJhaSIsInNpIiwibGkiLCJWZXJkb2NzVGVtcGxhdGVGaWVsZHMiLCJsb2FkU2Vzc2lvbiIsImNvbXBvbmVudERpZFJlbmRlciIsImludGVyYWN0IiwidG9vbGJhckVsIiwicGFnZTBFbCIsImNsaWVudFdpZHRoIiwiZmllbGQiLCJvcHRpb25JZCIsImhhbmRsZVBhZ2VSZW5kZXJlZCIsInBhZ2VJbmZvIiwiZGV0YWlsIiwiZmllbGRzIiwicGFnZV9zZXF1ZW5jZSIsInJlbmRlcmVkUGFnZSIsImVsIiwicmVuZGVyRG9jdW1lbnRGaWVsZCIsImdldFJvbGVJbmRleCIsInJvbGVOYW1lcyIsInJvbGVfbmFtZSIsImhhbmRsZUZpZWxkQ2hhbmdlIiwic2V0QXR0cmlidXRlIiwieFNjYWxlIiwieVNjYWxlIiwib2xkWCIsImdldEF0dHJpYnV0ZSIsIm9sZFkiLCJuZXdYIiwibmV3WSIsInVwZGF0ZUNzc1RyYW5zZm9ybSIsImNvbXBvbmVudHMiLCJtYXRjaEFsbCIsImNvbXBvbmVudCIsImpvaW4iLCJIb3N0IiwiRnJhZ21lbnQiLCJyZWYiLCJpY29uIiwidGV4dCIsIm9uUHJlc3MiLCJmbGV4IiwidGVtcGxhdGVfaWQiLCJyZXF1aXJlZCIsInNldHRpbmciLCJiYWNrZ3JvdW5kQ29sb3IiLCJtb3ZlYWJsZSIsImVkaXRhYmxlIiwib25QYWdlUmVuZGVyZWQiLCJwYWdlTGF5ZXJzIiwiVmVyZG9jc1RlbXBsYXRlUHJvcGVydGllcyIsInNlbmRSZW1pbmRlcnMiLCJyZW1pbmRlcl9pZCIsImhhbmRsZU1lc3NhZ2VDaGFuZ2UiLCJ2aXNpYmlsaXR5IiwiZmlyc3RSZW1pbmRlckRheXMiLCJyZW1pbmRlckRheXMiLCJzZXR0aW5nc1VwZGF0ZWQiLCJvbklucHV0IiwiY2hlY2tlZCIsIm9uU2VsZWN0ZWQiLCJodG1sRm9yIiwic2VuZGVyTGFiZWxzIiwiVGVtcGxhdGVTZW5kZXJUeXBlcyIsIkVWRVJZT05FIiwiRVZFUllPTkVfQVNfQ1JFQVRPUiIsIk9SR0FOSVpBVElPTl9NRU1CRVIiLCJPUkdBTklaQVRJT05fTUVNQkVSX0FTX0NSRUFUT1IiLCJDUkVBVE9SIiwic2V0dGluZ3NJY29uIiwiVmVyZG9jc1RlbXBsYXRlUmVjaXBpZW50cyIsInNlcXVlbmNlcyIsInJvbGVzQXRTZXF1ZW5jZSIsInRlbXBsYXRlUm9sZSIsImZ1bGxfbmFtZSIsImVtYWlsIiwicGhvbmUiLCJkZWxlZ2F0b3IiLCJzaG93TWVzc2FnZSIsIm9yZGVyZWRSb2xlcyIsIm9yZGVyIiwiY29tcHV0ZVJvbGVzQnlTZXF1ZW5jZSIsImNsYXNzTGlzdCIsInJvbGVOYW1lIiwiZGF0YXNldCIsInJvbGVuYW1lIiwidGFyZ2V0T3JkZXIiLCJ0YXJnZXRTZXF1ZW5jZSIsInJvbGUiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJhcnJheU1vdmUiLCJhcnIiLCJmcm9tSW5kZXgiLCJ0b0luZGV4IiwibmV3QXJyIiwibGV2ZWxTdHIiLCJzb3J0Iiwic2hvd1N1Z2dlc3Rpb25zIiwiY29udGFjdFNlbGVjdGVkIiwiYmVmb3JlT3JkZXIiLCJzZW5kZXIiLCJzaG93aW5nU2VuZGVyRGlhbG9nIiwib3BlbiIsIm9uQ2FuY2VsIiwib25Eb25lIiwiZmFpbHMiLCJ1bmN1cnJ5VGhpcyIsIndoaXRlc3BhY2VzIiwiJHBhcnNlSW50IiwiSVRFUkFUT1IiLCJoZXgiLCJleGVjIiwiRk9SQ0VEIiwicmFkaXgiLCJmb3JjZWQiLCJjcmVhdGVJdGVyYXRvckNvbnN0cnVjdG9yIiwiY3JlYXRlSXRlclJlc3VsdE9iamVjdCIsInJlcXVpcmVPYmplY3RDb2VyY2libGUiLCJ0b0xlbmd0aCIsImFuT2JqZWN0IiwiaXNOdWxsT3JVbmRlZmluZWQiLCJjbGFzc29mIiwiaXNSZWdFeHAiLCJnZXRSZWdFeHBGbGFncyIsImdldE1ldGhvZCIsImRlZmluZUJ1aWx0SW4iLCJ3ZWxsS25vd25TeW1ib2wiLCJzcGVjaWVzQ29uc3RydWN0b3IiLCJhZHZhbmNlU3RyaW5nSW5kZXgiLCJyZWdFeHBFeGVjIiwiSW50ZXJuYWxTdGF0ZU1vZHVsZSIsIklTX1BVUkUiLCJNQVRDSF9BTEwiLCJzZXRJbnRlcm5hbFN0YXRlIiwiZ2V0SW50ZXJuYWxTdGF0ZSIsImdldHRlckZvciIsIlJFR0VYUF9TVFJJTkciLCJSZWdFeHBQcm90b3R5cGUiLCJSZWdFeHAiLCIkVHlwZUVycm9yIiwic3RyaW5nSW5kZXhPZiIsIm5hdGl2ZU1hdGNoQWxsIiwiV09SS1NfV0lUSF9OT05fR0xPQkFMX1JFR0VYIiwiJFJlZ0V4cFN0cmluZ0l0ZXJhdG9yIiwiUmVnRXhwU3RyaW5nSXRlcmF0b3IiLCJyZWdleHAiLCIkZ2xvYmFsIiwiZnVsbFVuaWNvZGUiLCJ1bmljb2RlIiwidW5kZWZpbmVkIiwibWF0Y2giLCJsYXN0SW5kZXgiLCIkbWF0Y2hBbGwiLCJtYXRjaGVyIiwiZmxhZ3MiLCJwcm90byIsInJ4Il0sIm1hcHBpbmdzIjoiO2dLQThCTyxTQUFTQSxRQUFRQyxXQUNwQixPQUFRQSxVQUFZLElBQ2hCLEtBQUssRUFDRCxPQUFxQixJQUFkQSxVQUFrQix5QkFBMkIsMkJBQ3hELEtBQUssRUFDRCxNQUFPLHlCQUNYLEtBQUssRUFDRCxNQUFPLHlCQUNYLEtBQUssRUFDRCxNQUFPLDJCQUNYLEtBQUssRUFDRCxNQUFPLDJCQUNY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NkJBQStCLENBQ3hFaEgsU0FBVSxTQUFTQSxTQUFTbUgsUUFDMUIsSUFDSVMsTUFBTy85QixFQUFHODlCLFFBQVNHLEdBRG5Cbi9CLEVBQUk0OEIsdUJBQXVCL21DLE1BRS9CLEdBQUtrbkMsa0JBQWtCeUIsU0FTaEIsR0FBSUgsNEJBQTZCLE9BQU9ELGVBQWVwK0IsRUFBR3crQixZQVRqQyxDQUM5QixHQUFJdkIsU0FBU3VCLFVBQ1hTLE1BQVFua0MsU0FBUzhoQyx1QkFBdUJNLGVBQWVzQixZQUNqREwsY0FBY2MsTUFBTyxNQUFNLE1BQU1mLFdBQVcsaURBRXBELEdBQUlHLDRCQUE2QixPQUFPRCxlQUFlcCtCLEVBQUd3K0IsUUFHMUQsUUFEZ0JJLEtBRGhCSSxRQUFVN0IsVUFBVXFCLE9BQVFiLGFBQ0NELFNBQThCLFVBQW5CVixRQUFRd0IsVUFBcUJRLFFBQVVELFdBQzNFQyxRQUFTLE9BQU81N0IsS0FBSzQ3QixRQUFTUixPQUFReCtCLEVBQzVDLENBR0EsT0FGQWtCLEVBQUlwRyxTQUFTa0YsR0FDYm0vQixHQUFLLElBQUlsQixPQUFPTyxPQUFRLEtBQ2pCZCxRQUFVdDZCLEtBQUsyN0IsVUFBV0ksR0FBSWorQixHQUFLaStCLEdBQUd4QixXQUFXejhCLEVBQzFELElBR0Z3OEIsU0FBV0MsYUFBYUssaUJBQW1CWixjQUFjWSxnQkFBaUJMLFVBQVdvQixVIiwiZmlsZSI6IjE1LmY2NWFiYzI2LmlmcmFtZS5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGEgYHJnYmEocixnLGIsYSlgIHN0cmluZyB2YWx1ZSwgcmV0dXJucyB0aGUgaGV4IGVxdWl2YWxlbnQsIGRyb3BwaW5nIHRoZSBhbHBoYSBjaGFubmVsLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UkdCKHJnYmEpIHtcbiAgICB2YXIgcmdiTnVtYmVycyA9IHJnYmEucmVwbGFjZSgncmdiYSgnLCAnJykucmVwbGFjZSgnKScsICcnKS5zcGxpdCgnLCcpO1xuICAgIHZhciByZ2JPYmplY3QgPSB7XG4gICAgICAgIHJlZDogK3JnYk51bWJlcnNbMF0sXG4gICAgICAgIGdyZWVuOiArcmdiTnVtYmVyc1sxXSxcbiAgICAgICAgYmx1ZTogK3JnYk51bWJlcnNbMl0sXG4gICAgICAgIGFscGhhOiArcmdiTnVtYmVyc1szXSxcbiAgICB9O1xuICAgIHZhciBhbHBoYSA9IDEgLSByZ2JPYmplY3QuYWxwaGE7XG4gICAgdmFyIHJlZCA9IE1hdGgucm91bmQoKHJnYk9iamVjdC5hbHBoYSAqIChyZ2JPYmplY3QucmVkIC8gMjU1KSArIGFscGhhKSAqIDI1NSk7XG4gICAgdmFyIGdyZWVuID0gTWF0aC5yb3VuZCgocmdiT2JqZWN0LmFscGhhICogKHJnYk9iamVjdC5ncmVlbiAvIDI1NSkgKyBhbHBoYSkgKiAyNTUpO1xuICAgIHZhciBibHVlID0gTWF0aC5yb3VuZCgocmdiT2JqZWN0LmFscGhhICogKHJnYk9iamVjdC5ibHVlIC8gMjU1KSArIGFscGhhKSAqIDI1NSk7XG4gICAgcmV0dXJuICcjJyArIHJnYlRvSGV4KHJlZCkgKyByZ2JUb0hleChncmVlbikgKyByZ2JUb0hleChibHVlKTtcbn1cbi8qKlxuICogR2l2ZW4gYW4gUkdCIHN0cmluZyB2YWx1ZSwgcmV0dXJucyB0aGUgaGV4IGVxdWl2YWxlbnQuXG4gKi9cbmZ1bmN0aW9uIHJnYlRvSGV4KHJnYikge1xuICAgIHZhciBoZXggPSByZ2IudG9TdHJpbmcoMTYpO1xuICAgIGlmIChoZXgubGVuZ3RoIDwgMikge1xuICAgICAgICByZXR1cm4gJzAnICsgaGV4O1xuICAgIH1cbiAgICByZXR1cm4gaGV4O1xufVxuLyoqXG4gKiBHaXZlbiBhIHNpZ25lciByb2xlIGluZGV4LCByZXR1cm4gdGhlIGNvbG9yIGNvZGUgZm9yIHRoYXQgc2lnbmVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UkdCQShyb2xlSW5kZXgpIHtcbiAgICBzd2l0Y2ggKHJvbGVJbmRleCAlIDEwKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIHJldHVybiByb2xlSW5kZXggPT09IDAgPyAncmdiYSgyNTUsIDE5MywgNywgMC40KScgOiAncmdiYSgxMzQsIDEzNCwgMTM0LCAwLjMpJzsgLy8gI0ZGRTY5Q1xuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoMTU2LCAzOSwgMTc2LCAuNCknOyAvLyAnI0UzQzNFOSdcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDMzLCAxNTAsIDI0MywgLjQpJzsgLy8gJyNDMUUxRkInXG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSgyMjAsIDIzMSwgMTE3LCAwLjMpJztcbiAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDEyMSwgMTM0LCAyMDMsIDAuMyknO1xuICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoNzcsIDE4MiwgMTcyLCAwLjMpJztcbiAgICAgICAgY2FzZSA2OlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDI1NSwgMjAyLCAxNjUsIDAuMyknO1xuICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoMiwgMjQ3LCAxOTAsIDAuMyknO1xuICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoMjU1LCAxMzgsIDEwMSwgMC4zKSc7XG4gICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSg4MiwgMjU1LCA3OSwgMC4zKSc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoMjI5LCAxMTUsIDE1NSwgMC4zKSc7XG4gICAgfVxufVxuLyoqXG4gKiBHaXZlbiBhIHJvbGUgbmFtZSwgcmV0dXJuIGEgY29sb3IgY29kZSBmb3IgaXQuIFRoaXMgd29ya3MgYnkgY29tcHV0aW5nIGEgaGFzaCBjb2RlIHNvIHRoZSBzcGVjaWZpYyBjb2xvciByZXR1cm5lZFxuICogaXMgbm90IHNwZWNpZmllZCBleHBsaWNpdGx5LCBidXQgd2lsbCBiZSB0aGUgc2FtZSBmb3IgZXZlcnkgY2FsbCB3aXRoIHRoZSBzYW1lIGlucHV0IHZhbHVlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbmFtZVRvUkdCQShzdHIpIHtcbiAgICBpZiAoISFzdHIpIHtcbiAgICAgICAgdmFyIHZhbGlkTnVtID0gcGFyc2VJbnQoc3RyLnNsaWNlKC0xKSwgMTApO1xuICAgICAgICBpZiAoIWlzTmFOKHZhbGlkTnVtKSkge1xuICAgICAgICAgICAgc3RyICs9ICh2YWxpZE51bSAqIDk5KS50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBoYXNoID0gMDtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGhhc2ggPSBzdHIuY2hhckNvZGVBdChpKSArICgoaGFzaCA8PCA1KSAtIGhhc2gpO1xuICAgICAgICB9XG4gICAgICAgIGhhc2ggPSBNYXRoLnJvdW5kKGhhc2ggLyAxLjMpO1xuICAgICAgICB2YXIgYyA9IChoYXNoICYgMHgwMGZmZmYwOCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgIHZhciBoZXggPSAnIycgKyAnMDAwMDAnLnN1YnN0cmluZygwLCA2IC0gYy5sZW5ndGgpICsgYztcbiAgICAgICAgdmFyIHJlc3VsdCA9IC9eIz8oW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkkL2kuZXhlYyhoZXgpO1xuICAgICAgICB2YXIgY29sb3IgPSB7XG4gICAgICAgICAgICByOiBwYXJzZUludChyZXN1bHRbMV0sIDE2KSxcbiAgICAgICAgICAgIGc6IHBhcnNlSW50KHJlc3VsdFsyXSwgMTYpLFxuICAgICAgICAgICAgYjogcGFyc2VJbnQocmVzdWx0WzNdLCAxNiksXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBcInJnYmEoXCIuY29uY2F0KGNvbG9yLnIsIFwiLCBcIikuY29uY2F0KGNvbG9yLmcsIFwiLCBcIikuY29uY2F0KGNvbG9yLmIsIFwiLCAwLjIpXCIpO1xuICAgIH1cbn1cbi8qKlxuICogSGVscGVyIGZ1bmN0aW9uIHRvIG9idGFpbiBhIGNvbG9yIGNvZGUgZ2l2ZW4gYSByb2xlIG5hbWUgZ2l2ZW4gdmFyaW91cyBwb3NzaWJsZSBpbnB1dHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRSb2xlQ29sb3IobmFtZSwgcm9sZXMsIGluZGV4KSB7XG4gICAgaWYgKGluZGV4KSB7XG4gICAgICAgIHJldHVybiBnZXRSR0JBKGluZGV4KTtcbiAgICB9XG4gICAgZWxzZSBpZiAocm9sZXMgJiYgcm9sZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgcm9sZUluZGV4ID0gcm9sZXMuZmluZEluZGV4KGZ1bmN0aW9uIChyb2xlKSB7IHJldHVybiByb2xlLm5hbWUgPT09IG5hbWU7IH0pO1xuICAgICAgICBpZiAocm9sZUluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIHJldHVybiByb2xlc1tyb2xlSW5kZXhdLnJnYmEgfHwgZ2V0UkdCQShyb2xlSW5kZXgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG5hbWVUb1JHQkEobmFtZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBuYW1lVG9SR0JBKG5hbWUpO1xuICAgIH1cbn1cbiIsIi8qKlxuICogQSBUZW1wbGF0ZURvY3VtZW50IHJlcHJlc2VudHMgYSBQREYgb3Igb3RoZXIgYXR0YWNobWVudCBpbiBhIFRlbXBsYXRlLlxuICpcbiAqIEBtb2R1bGVcbiAqL1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XG4gICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksIFwidGhyb3dcIjogdmVyYigxKSwgXCJyZXR1cm5cIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFtvcFswXSAmIDIsIHQudmFsdWVdO1xuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XG4gICAgfVxufTtcbi8qKlxuICogR2V0IGFsbCB0aGUgVGVtcGxhdGUgRG9jdW1lbnRzIGFzc29jaWF0ZWQgdG8gYSBwYXJ0aWN1bGFyIFRlbXBsYXRlLlxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7VGVtcGxhdGVEb2N1bWVudH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcyc7XG4gKlxuICogYXdhaXQgVGVtcGxhdGVEb2N1bWVudC5nZVRlbXBsYXRlRG9jdW1lbnRzKChWZXJkb2NzRW5kcG9pbnQuZ2V0RGVmYXVsdCgpLCB0ZW1wbGF0ZUlkKTtcbiAqIGBgYFxuICovXG5leHBvcnQgdmFyIGdldFRlbXBsYXRlRG9jdW1lbnRzID0gZnVuY3Rpb24gKGVuZHBvaW50LCB0ZW1wbGF0ZUlkKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZ2V0KFwiL3RlbXBsYXRlcy9cIi5jb25jYXQodGVtcGxhdGVJZCwgXCIvZG9jdW1lbnRzL1wiKSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xuLyoqXG4gKiBHZXQgYSBzcGVjaWZpYyBEb2N1bWVudC5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQge1RlbXBsYXRlRG9jdW1lbnR9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9UZW1wbGF0ZXMnO1xuICpcbiAqIGF3YWl0IFRlbXBsYXRlRG9jdW1lbnQuZ2VUZW1wbGF0ZURvY3VtZW50KChWZXJkb2NzRW5kcG9pbnQuZ2V0RGVmYXVsdCgpLCB0ZW1wbGF0ZUlkLGRvY3VtZW50SWQpO1xuICogYGBgXG4gKi9cbmV4cG9ydCB2YXIgZ2V0VGVtcGxhdGVEb2N1bWVudCA9IGZ1bmN0aW9uIChlbmRwb2ludCwgdGVtcGxhdGVJZCwgZG9jdW1lbnRJZCkge1xuICAgIHJldHVybiBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgLmdldChcIi90ZW1wbGF0ZXMvXCIuY29uY2F0KHRlbXBsYXRlSWQsIFwiL2RvY3VtZW50cy9cIikuY29uY2F0KGRvY3VtZW50SWQpKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KTtcbn07XG4vKipcbiAqIENyZWF0ZSBhIERvY3VtZW50IGZvciBhIHBhcnRpY3VsYXIgVGVtcGxhdGUuXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHtUZW1wbGF0ZURvY3VtZW50fSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzJztcbiAqXG4gKiBhd2FpdCBUZW1wbGF0ZURvY3VtZW50LmNyZWF0ZURvY3VtZW50KChWZXJkb2NzRW5kcG9pbnQuZ2V0RGVmYXVsdCgpLCB0ZW1wbGF0ZUlELCBwYXJhbXMpO1xuICogYGBgXG4gKi9cbmV4cG9ydCB2YXIgY3JlYXRlVGVtcGxhdGVEb2N1bWVudCA9IGZ1bmN0aW9uIChlbmRwb2ludCwgdGVtcGxhdGVJZCwgZmlsZSwgb25VcGxvYWRQcm9ncmVzcykge1xuICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgIGZvcm1EYXRhLmFwcGVuZCgnZG9jdW1lbnQnLCBmaWxlLCBmaWxlLm5hbWUpO1xuICAgIHJldHVybiBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgLnBvc3QoXCIvdGVtcGxhdGVzL1wiLmNvbmNhdCh0ZW1wbGF0ZUlkLCBcIi9kb2N1bWVudHNcIiksIGZvcm1EYXRhLCB7XG4gICAgICAgIHRpbWVvdXQ6IDEwMDAwLFxuICAgICAgICBvblVwbG9hZFByb2dyZXNzOiBmdW5jdGlvbiAoZXZlbnQpIHsgcmV0dXJuIG9uVXBsb2FkUHJvZ3Jlc3MgPT09IG51bGwgfHwgb25VcGxvYWRQcm9ncmVzcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25VcGxvYWRQcm9ncmVzcyhNYXRoLmZsb29yKChldmVudC5sb2FkZWQgKiAxMDApIC8gZXZlbnQudG90YWwpLCBldmVudC5sb2FkZWQsIGV2ZW50LnRvdGFsKTsgfSxcbiAgICB9KVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KTtcbn07XG4vKipcbiAqIERlbGV0ZSBhIHNwZWNpZmljIERvY3VtZW50LlxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7VGVtcGxhdGVEb2N1bWVudH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcyc7XG4gKlxuICogYXdhaXQgVGVtcGxhdGVEb2N1bWVudC5kZWxldGVEb2N1bWVudCgoVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKSwgdGVtcGxhdGVJRCwgZG9jdW1lbnRJRCk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IHZhciBkZWxldGVUZW1wbGF0ZURvY3VtZW50ID0gZnVuY3Rpb24gKGVuZHBvaW50LCB0ZW1wbGF0ZUlkLCBkb2N1bWVudElkKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZGVsZXRlKFwiL3RlbXBsYXRlcy9cIi5jb25jYXQodGVtcGxhdGVJZCwgXCIvZG9jdW1lbnRzL1wiKS5jb25jYXQoZG9jdW1lbnRJZCkpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pO1xufTtcbi8qKlxuICogR2V0IChiaW5hcnkgZG93bmxvYWQpIGEgZmlsZSBhdHRhY2hlZCB0byBhIFRlbXBsYXRlLiBJdCBpcyBpbXBvcnRhbnQgdG8gdXNlIHRoaXMgbWV0aG9kXG4gKiByYXRoZXIgdGhhbiBhIGRpcmVjdCBBIEhSRUYgb3Igc2ltaWxhciBsaW5rIHRvIHNldCB0aGUgYXV0aG9yaXphdGlvbiBoZWFkZXJzIGZvciB0aGVcbiAqIHJlcXVlc3QuXG4gKi9cbmV4cG9ydCB2YXIgZ2V0VGVtcGxhdGVEb2N1bWVudEZpbGUgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIHRlbXBsYXRlSWQsIGRvY3VtZW50SWQpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgICAgICAgICAgLmdldChcIi90ZW1wbGF0ZXMvXCIuY29uY2F0KHRlbXBsYXRlSWQsIFwiL2RvY3VtZW50cy9cIikuY29uY2F0KGRvY3VtZW50SWQsIFwiP2ZpbGU9dHJ1ZVwiKSwge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlVHlwZTogJ2FycmF5YnVmZmVyJyxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIEJ1ZmZlci5mcm9tKHIuZGF0YSwgJ2JpbmFyeScpLnRvU3RyaW5nKCdiYXNlNjQnKTsgfSldO1xuICAgIH0pO1xufSk7IH07XG4vKipcbiAqIEdldCAoYmluYXJ5IGRvd25sb2FkKSBhIGZpbGUgYXR0YWNoZWQgdG8gYSBUZW1wbGF0ZS4gSXQgaXMgaW1wb3J0YW50IHRvIHVzZSB0aGlzIG1ldGhvZFxuICogcmF0aGVyIHRoYW4gYSBkaXJlY3QgQSBIUkVGIG9yIHNpbWlsYXIgbGluayB0byBzZXQgdGhlIGF1dGhvcml6YXRpb24gaGVhZGVycyBmb3IgdGhlXG4gKiByZXF1ZXN0LlxuICovXG5leHBvcnQgdmFyIGdldFRlbXBsYXRlRG9jdW1lbnRUaHVtYm5haWwgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIHRlbXBsYXRlSWQsIGRvY3VtZW50SWQpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgICAgICAgICAgLmdldChcIi90ZW1wbGF0ZXMvXCIuY29uY2F0KHRlbXBsYXRlSWQsIFwiL2RvY3VtZW50cy9cIikuY29uY2F0KGRvY3VtZW50SWQsIFwiP3RodW1ibmFpbD10cnVlXCIpLCB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnYXJyYXlidWZmZXInLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gQnVmZmVyLmZyb20oci5kYXRhLCAnYmluYXJ5JykudG9TdHJpbmcoJ2Jhc2U2NCcpOyB9KV07XG4gICAgfSk7XG59KTsgfTtcbiIsImltcG9ydCB7VmVyZG9jc0VuZHBvaW50fSBmcm9tICdAdmVyZG9jcy9qcy1zZGsnO1xuaW1wb3J0IHtnZXRUZW1wbGF0ZX0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9UZW1wbGF0ZXMnO1xuaW1wb3J0IFRlbXBsYXRlU3RvcmUgZnJvbSAnLi90ZW1wbGF0ZVN0b3JlJztcblxuZXhwb3J0IGNvbnN0IGxvYWRUZW1wbGF0ZSA9IGFzeW5jIChlbmRwb2ludDogVmVyZG9jc0VuZHBvaW50LCB0ZW1wbGF0ZUlkOiBzdHJpbmcpID0+IHtcbiAgVGVtcGxhdGVTdG9yZS50ZW1wbGF0ZSA9IG51bGw7XG5cbiAgaWYgKCF0ZW1wbGF0ZUlkKSB7XG4gICAgY29uc29sZS5sb2coYFtURU1QTEFURVNdIE1pc3NpbmcgcmVxdWlyZWQgdGVtcGxhdGUgSURgKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBUZW1wbGF0ZVN0b3JlLmxvYWRpbmcgPSB0cnVlO1xuXG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coYFtURU1QTEFURVNdIExvYWRpbmcgdGVtcGxhdGUgJHt0ZW1wbGF0ZUlkfWApO1xuICAgIGNvbnN0IHRlbXBsYXRlID0gYXdhaXQgZ2V0VGVtcGxhdGUoZW5kcG9pbnQsIHRlbXBsYXRlSWQpO1xuICAgIGlmICghdGVtcGxhdGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbVEVNUExBVEVTXSBVbmFibGUgdG8gbG9hZCB0ZW1wbGF0ZScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIFRlbXBsYXRlU3RvcmUudGVtcGxhdGUgPSB0ZW1wbGF0ZTtcbiAgICBUZW1wbGF0ZVN0b3JlLmxvYWRpbmcgPSBmYWxzZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUubG9nKCdbVEVNUExBVEVTXSBFcnJvciBsb2FkaW5nIHRlbXBsYXRlJywgZSk7XG4gICAgdGhyb3cgZTtcbiAgfVxufTtcbiIsIi8qKlxuICogQSBUZW1wbGF0ZSBkZWZpbmVzIGhvdyBhIFZlcmRvY3Mgc2lnbmluZyBmbG93IHdpbGwgYmUgcGVyZm9ybWVkLCBpbmNsdWRpbmcgYXR0YWNobWVudHMsIHNpZ25pbmcgZmllbGRzLCBhbmRcbiAqIHJlY2lwaWVudHMuXG4gKlxuICogQG1vZHVsZVxuICovXG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuLyoqXG4gKiBHZXQgYWxsIHRlbXBsYXRlcyBhY2Nlc3NpYmxlIGJ5IHRoZSBjYWxsZXIsIHdpdGggb3B0aW9uYWwgZmlsdGVycy5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQge1RlbXBsYXRlc30gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcyc7XG4gKlxuICogYXdhaXQgVGVtcGxhdGVzLmdldFRlbXBsYXRlcygoVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKSk7XG4gKiBhd2FpdCBUZW1wbGF0ZXMuZ2V0VGVtcGxhdGVzKChWZXJkb2NzRW5kcG9pbnQuZ2V0RGVmYXVsdCgpLCB7IGlzX3N0YXJyZWQ6IHRydWUgfSk7XG4gKiBhd2FpdCBUZW1wbGF0ZXMuZ2V0VGVtcGxhdGVzKChWZXJkb2NzRW5kcG9pbnQuZ2V0RGVmYXVsdCgpLCB7IGlzX2NyZWF0b3I6IHRydWUgfSk7XG4gKiBhd2FpdCBUZW1wbGF0ZXMuZ2V0VGVtcGxhdGVzKChWZXJkb2NzRW5kcG9pbnQuZ2V0RGVmYXVsdCgpLCB7IGlzX29yZ2FuaXphdGlvbjogdHJ1ZSB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgdmFyIGdldFRlbXBsYXRlcyA9IGZ1bmN0aW9uIChlbmRwb2ludCwgcGFyYW1zKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAucG9zdCgnL3RlbXBsYXRlcycsIHsgcGFyYW1zOiBwYXJhbXMgfSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xuLyoqXG4gKiBHZXQgb25lIHRlbXBsYXRlIGJ5IGl0cyBJRC5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQge1RlbXBsYXRlc30gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcyc7XG4gKlxuICogY29uc3QgdGVtcGxhdGUgPSBhd2FpdCBUZW1wbGF0ZXMuZ2V0VGVtcGxhdGUoKFZlcmRvY3NFbmRwb2ludC5nZXREZWZhdWx0KCksICc4M2RhM2Q3MC03ODU3LTQzOTItYjg3Ni1jNDU5MmEzMDRiYzknKTtcbiAqIGBgYFxuICovXG5leHBvcnQgdmFyIGdldFRlbXBsYXRlID0gZnVuY3Rpb24gKGVuZHBvaW50LCB0ZW1wbGF0ZUlkKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZ2V0KFwiL3RlbXBsYXRlcy9cIi5jb25jYXQodGVtcGxhdGVJZCkpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pO1xufTtcbi8qKlxuICogR2V0IG93bmVyIGluZm9ybWF0aW9uIGZvciBhIHRlbXBsYXRlLlxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7VGVtcGxhdGVzfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzJztcbiAqXG4gKiBjb25zdCB0ZW1wbGF0ZSA9IGF3YWl0IFRlbXBsYXRlcy5nZXRUZW1wbGF0ZU93bmVySW5mbygoVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKSwgJzgzZGEzZDcwLTc4NTctNDM5Mi1iODc2LWM0NTkyYTMwNGJjOScpO1xuICogYGBgXG4gKi9cbmV4cG9ydCB2YXIgZ2V0VGVtcGxhdGVPd25lckluZm8gPSBmdW5jdGlvbiAoZW5kcG9pbnQsIHRlbXBsYXRlSWQpIHtcbiAgICByZXR1cm4gZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgIC5nZXQoXCIvdGVtcGxhdGVzL1wiLmNvbmNhdCh0ZW1wbGF0ZUlkKSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xuLyoqXG4gKiBDcmVhdGUgYSB0ZW1wbGF0ZS5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQge1RlbXBsYXRlc30gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcyc7XG4gKlxuICogY29uc3QgbmV3VGVtcGxhdGUgPSBhd2FpdCBUZW1wbGF0ZXMuY3JlYXRlVGVtcGxhdGUoKFZlcmRvY3NFbmRwb2ludC5nZXREZWZhdWx0KCksIHsuLi59KTtcbiAqIGBgYFxuICovXG5leHBvcnQgdmFyIGNyZWF0ZVRlbXBsYXRlID0gZnVuY3Rpb24gKGVuZHBvaW50LCBwYXJhbXMpIHtcbiAgICByZXR1cm4gZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgIC5wb3N0KCcvdGVtcGxhdGVzLycsIHBhcmFtcylcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xuLyoqXG4gKiBVcGRhdGUgYSB0ZW1wbGF0ZS5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQge1RlbXBsYXRlc30gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcyc7XG4gKlxuICogY29uc3QgdXBkYXRlZFRlbXBsYXRlID0gYXdhaXQgVGVtcGxhdGVzLnVwZGF0ZVRlbXBsYXRlKChWZXJkb2NzRW5kcG9pbnQuZ2V0RGVmYXVsdCgpLCAnODNkYTNkNzAtNzg1Ny00MzkyLWI4NzYtYzQ1OTJhMzA0YmM5JywgeyBuYW1lOiAnTmV3IE5hbWUnIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCB2YXIgdXBkYXRlVGVtcGxhdGUgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIHRlbXBsYXRlSWQsIHBhcmFtcykge1xuICAgIHJldHVybiBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgLnB1dChcIi90ZW1wbGF0ZXMvXCIuY29uY2F0KHRlbXBsYXRlSWQpLCBwYXJhbXMpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pO1xufTtcbi8qKlxuICogRGVsZXRlIGEgdGVtcGxhdGUuXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHtUZW1wbGF0ZXN9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9UZW1wbGF0ZXMnO1xuICpcbiAqIGF3YWl0IFRlbXBsYXRlcy5kZWxldGVUZW1wbGF0ZSgoVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKSwgJzgzZGEzZDcwLTc4NTctNDM5Mi1iODc2LWM0NTkyYTMwNGJjOScpO1xuICogYGBgXG4gKi9cbmV4cG9ydCB2YXIgZGVsZXRlVGVtcGxhdGUgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIHRlbXBsYXRlSWQpIHtcbiAgICByZXR1cm4gZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgIC5kZWxldGUoXCIvdGVtcGxhdGVzL1wiLmNvbmNhdCh0ZW1wbGF0ZUlkKSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xuLyoqXG4gKiBTZWFyY2ggZm9yIHRlbXBsYXRlcyBtYXRjaGluZyB2YXJpb3VzIGNyaXRlcmlhLlxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7VGVtcGxhdGVzfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzJztcbiAqXG4gKiBjb25zdCB7cmVzdWx0LCBwYWdlLCB0b3RhbH0gPSBhd2FpdCBUZW1wbGF0ZXMuc2VhcmNoKChWZXJkb2NzRW5kcG9pbnQuZ2V0RGVmYXVsdCgpLCB7IC4uLiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgdmFyIHNlYXJjaFRlbXBsYXRlcyA9IGZ1bmN0aW9uIChlbmRwb2ludCwgcGFyYW1zKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAgICAgICAgIC5wb3N0KCcvdGVtcGxhdGVzL3NlYXJjaCcsIHBhcmFtcylcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KV07XG4gICAgfSk7XG59KTsgfTtcbi8qKlxuICogR2V0IGEgc3VtbWFyeSBvZiB0ZW1wbGF0ZSBkYXRhLCB0eXBpY2FsbHkgdXNlZCB0byBwb3B1bGF0ZSBhZG1pbiBwYW5lbCBkYXNoYm9hcmQgcGFnZXMuXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHtUZW1wbGF0ZXN9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9UZW1wbGF0ZXMnO1xuICpcbiAqIGNvbnN0IHN1bW1hcnkgPSBhd2FpdCBUZW1wbGF0ZXMuZ2V0U3VtbWFyeSgoVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKSwgMCk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IHZhciBnZXRTdW1tYXJ5ID0gZnVuY3Rpb24gKGVuZHBvaW50LCBwYXJhbXMpIHtcbiAgICBpZiAocGFyYW1zID09PSB2b2lkIDApIHsgcGFyYW1zID0ge307IH1cbiAgICByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAgICAgICAgICAgICAucG9zdCgnL3RlbXBsYXRlcy9zdW1tYXJ5JywgcGFyYW1zKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KV07XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcbiIsIi8qKlxuICogUGFzc2VkIHRvIHBhcmVudCBjb21wb25lbnRzIGluIGNlcnRhaW4gY2FsbGJhY2tzIHdpdGggdGhlIGxvd2VyLWxldmVsIEpTLVNESyBlbWl0cyBhbiBlcnJvclxuICovXG5leHBvcnQgY2xhc3MgU0RLRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvZGU7XG4gIHN0YXR1c0NvZGU7XG4gIHJlc3BvbnNlO1xuXG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZywgc3RhdHVzQ29kZTogbnVtYmVyLCByZXNwb25zZTogYW55KSB7XG4gICAgc3VwZXIobWVzc2FnZSB8fCAnU0RLIEVycm9yJyk7XG4gICAgdGhpcy5yZXNwb25zZSA9IHJlc3BvbnNlO1xuICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIG5ldy50YXJnZXQucHJvdG90eXBlKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBBZGQgYSBwYWdlIHRvIGEgdGVtcGxhdGUuXG4gKi9cbmV4cG9ydCB2YXIgY3JlYXRlUGFnZSA9IGZ1bmN0aW9uIChlbmRwb2ludCwgdGVtcGxhdGVJZCwgcGFyYW1zKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAucG9zdChcIi90ZW1wbGF0ZXMvXCIuY29uY2F0KHRlbXBsYXRlSWQsIFwiL3BhZ2VzXCIpLCBwYXJhbXMpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pO1xufTtcbi8qKlxuICogVXBkYXRlIGEgdGVtcGxhdGUgcGFnZS5cbiAqL1xuZXhwb3J0IHZhciBlZGl0UGFnZSA9IGZ1bmN0aW9uIChlbmRwb2ludCwgdGVtcGxhdGVJZCwgc2VxdWVuY2UpIHtcbiAgICByZXR1cm4gZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgIC5wdXQoXCIvdGVtcGxhdGVzL1wiLmNvbmNhdCh0ZW1wbGF0ZUlkLCBcIi9wYWdlcy9cIikuY29uY2F0KHNlcXVlbmNlKSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xuLyoqXG4gKiBHZXQgYSBwYWdlIGZyb20gYSB0ZW1wbGF0ZS5cbiAqL1xuZXhwb3J0IHZhciBnZXRQYWdlID0gZnVuY3Rpb24gKGVuZHBvaW50LCB0ZW1wbGF0ZUlkLCBzZXF1ZW5jZSwgdGh1bWJuYWlsKSB7XG4gICAgaWYgKHRodW1ibmFpbCA9PT0gdm9pZCAwKSB7IHRodW1ibmFpbCA9IGZhbHNlOyB9XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZ2V0KFwiL3RlbXBsYXRlcy9cIi5jb25jYXQodGVtcGxhdGVJZCwgXCIvcGFnZXMvXCIpLmNvbmNhdChzZXF1ZW5jZSkuY29uY2F0KHRodW1ibmFpbCA/ICc/dGh1bWJuYWlsPXRydWUnIDogJycpKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KTtcbn07XG4vKipcbiAqIEdldCBhIHBhZ2UgaW1hZ2UgKFBORyBmb3JtYXQpIGZyb20gYSB0ZW1wbGF0ZS5cbiAqL1xuZXhwb3J0IHZhciBnZXRQYWdlSW1hZ2UgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIHRlbXBsYXRlSWQsIHNlcXVlbmNlKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZ2V0KFwiL3RlbXBsYXRlcy9cIi5jb25jYXQodGVtcGxhdGVJZCwgXCIvcGFnZXMvXCIpLmNvbmNhdChzZXF1ZW5jZSwgXCIvaW1hZ2VcIikpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pO1xufTtcbi8qKlxuICogRGVsZXRlIGEgcGFnZSBmcm9tIGEgdGVtcGxhdGVcbiAqL1xuZXhwb3J0IHZhciBkZWxldGVQYWdlID0gZnVuY3Rpb24gKGVuZHBvaW50LCB0ZW1wbGF0ZUlkLCBzZXF1ZW5jZSkge1xuICAgIHJldHVybiBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgLmRlbGV0ZShcIi90ZW1wbGF0ZXMvXCIuY29uY2F0KHRlbXBsYXRlSWQsIFwiL3BhZ2VzL1wiKS5jb25jYXQoc2VxdWVuY2UpKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KTtcbn07XG4iLCJpbXBvcnQge1ZlcmRvY3NFbmRwb2ludH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrJztcbmltcG9ydCB7Q29tcG9uZW50LCBoLCBFdmVudCwgRXZlbnRFbWl0dGVyLCBQcm9wLCBTdGF0ZX0gZnJvbSAnQHN0ZW5jaWwvY29yZSc7XG5pbXBvcnQge2NyZWF0ZVRlbXBsYXRlfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzL1RlbXBsYXRlcyc7XG5pbXBvcnQge1NES0Vycm9yfSBmcm9tICcuLi8uLi8uLi91dGlscy9lcnJvcnMnO1xuaW1wb3J0IHtJVGVtcGxhdGUsIElUZW1wbGF0ZURvY3VtZW50fSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzL1R5cGVzJztcbmltcG9ydCB7Y3JlYXRlVGVtcGxhdGVEb2N1bWVudH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9UZW1wbGF0ZURvY3VtZW50cyc7XG5pbXBvcnQge2NyZWF0ZVBhZ2V9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9UZW1wbGF0ZXMvUGFnZXMnO1xuXG5jb25zdCBGaWxlSWNvbiA9XG4gICc8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPjxwYXRoIGQ9XCJNNiAyYy0xLjEgMC0xLjk5LjktMS45OSAyTDQgMjBjMCAxLjEuODkgMiAxLjk5IDJIMThjMS4xIDAgMi0uOSAyLTJWOGwtNi02SDZ6bTcgN1YzLjVMMTguNSA5SDEzelwiPjwvcGF0aD48L3N2Zz4nO1xuXG4vKipcbiAqIERpc3BsYXlzIGEgZmlsZSB1cGxvYWQgbWVjaGFuaXNtIHN1aXRhYmxlIGZvciB0aGUgZmlyc3Qgc3RlcCBvZiBjcmVhdGluZyBhIHRlbXBsYXRlLlxuICovXG5AQ29tcG9uZW50KHtcbiAgdGFnOiAndmVyZG9jcy10ZW1wbGF0ZS1jcmVhdGUnLFxuICBzdHlsZVVybDogJ3ZlcmRvY3MtdGVtcGxhdGUtY3JlYXRlLnNjc3MnLFxuICBzaGFkb3c6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBWZXJkb2NzVGVtcGxhdGVDcmVhdGUge1xuICAvKipcbiAgICogVGhlIGVuZHBvaW50IHRvIHVzZSB0byBjb21tdW5pY2F0ZSB3aXRoIFZlcmRvY3MuIElmIG5vdCBzZXQsIHRoZSBkZWZhdWx0IGVuZHBvaW50IHdpbGwgYmUgdXNlZC5cbiAgICovXG4gIEBQcm9wKCkgZW5kcG9pbnQ6IFZlcmRvY3NFbmRwb2ludCA9IFZlcmRvY3NFbmRwb2ludC5nZXREZWZhdWx0KCk7XG5cbiAgLyoqXG4gICAqIEV2ZW50IGZpcmVkIHdoZW4gdGhlIHVzZXIgY2FuY2VscyB0aGUgZGlhbG9nLlxuICAgKi9cbiAgQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIGNhbmNlbDogRXZlbnRFbWl0dGVyO1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSB1c2VyIGNoYW5nZXMgdGhlIHR5cGUuXG4gICAqL1xuICBARXZlbnQoe2NvbXBvc2VkOiB0cnVlfSkgdGVtcGxhdGVDcmVhdGVkOiBFdmVudEVtaXR0ZXI8e3RlbXBsYXRlOiBJVGVtcGxhdGU7IHRlbXBsYXRlX2RvY3VtZW50OiBJVGVtcGxhdGVEb2N1bWVudH0+O1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCBpZiBhbiBlcnJvciBvY2N1cnMuIFRoZSBldmVudCBkZXRhaWxzIHdpbGwgY29udGFpbiBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZXJyb3IuIE1vc3QgZXJyb3JzIHdpbGxcbiAgICogdGVybWluYXRlIHRoZSBwcm9jZXNzLCBhbmQgdGhlIGNhbGxpbmcgYXBwbGljYXRpb24gc2hvdWxkIGNvcnJlY3QgdGhlIGNvbmRpdGlvbiBhbmQgcmUtcmVuZGVyIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBARXZlbnQoe2NvbXBvc2VkOiB0cnVlfSkgc2RrRXJyb3I6IEV2ZW50RW1pdHRlcjxTREtFcnJvcj47XG5cbiAgQFN0YXRlKCkgZmlsZTogRmlsZSB8IG51bGw7XG5cbiAgY29tcG9uZW50V2lsbExvYWQoKSB7fVxuXG4gIGhhbmRsZUZpbGVDaGFuZ2VkKGU6IGFueSkge1xuICAgIGNvbnNvbGUubG9nKCdmaWxlcycsIGUudGFyZ2V0LmZpbGVzKTtcbiAgICB0aGlzLmZpbGUgPSBlLnRhcmdldC5maWxlcz8uWzBdIHx8IG51bGw7XG4gICAgY29uc29sZS5sb2coJ1NlbGVjdGVkIGZpbGUnLCB0aGlzLmZpbGUpO1xuICAgIC8vIHRoaXMuZmlsZVBhdGggPSBlLnRhcmdldC5maWxlcz8uWzBdPy5uYW1lO1xuICB9XG5cbiAgaGFuZGxlVXBsb2FkKGUpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGNvbnN0IGZpbGVFbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZlcmRvY3MtdGVtcGxhdGUtY3JlYXRlLWZpbGUnKTtcbiAgICBmaWxlRWxlbS5jbGljaygpO1xuICB9XG5cbiAgaGFuZGxlQ2FuY2VsKGUpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHRoaXMuY2FuY2VsPy5lbWl0KCk7XG4gIH1cblxuICBhc3luYyBoYW5kbGVTdWJtaXQoZSkge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAvLyBTaG91bGQgYmUgdHJ1ZSBpZiB3ZSdyZSBoZXJlIGJlY2F1c2Ugb25DbGljayBpcyBvbmx5IGVuYWJsZWQgdGhlbi4gV2UncmUganVzdCBndWFyZGluZyB0aGlzIGZvciBUeXBlc2NyaXB0LlxuICAgIGlmICghdGhpcy5maWxlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHRlbXBsYXRlID0gYXdhaXQgY3JlYXRlVGVtcGxhdGUodGhpcy5lbmRwb2ludCwge25hbWU6IHRoaXMuZmlsZS5uYW1lfSk7XG4gICAgICBjb25zb2xlLmxvZygnY3JlYXRlZCB0ZW1wbGF0ZScsIHRlbXBsYXRlKTtcblxuICAgICAgY29uc3QgdGVtcGxhdGVfZG9jdW1lbnQgPSBhd2FpdCBjcmVhdGVUZW1wbGF0ZURvY3VtZW50KHRoaXMuZW5kcG9pbnQsIHRlbXBsYXRlLmlkLCB0aGlzLmZpbGUpO1xuICAgICAgY29uc29sZS5sb2coJ2NyZWF0ZWQgZG9jdW1lbnQnLCB0ZW1wbGF0ZV9kb2N1bWVudCk7XG5cbiAgICAgIGZvciBhd2FpdCAobGV0IHBhZ2VOdW1iZXIgb2YgQXJyYXkuZnJvbShBcnJheSh0ZW1wbGF0ZV9kb2N1bWVudC5wYWdlX251bWJlcnMpLmtleXMoKSwgbiA9PiBuICsgMSkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1VwZGF0aW5nIHBhZ2UnLCBwYWdlTnVtYmVyKTtcbiAgICAgICAgY29uc3QgcGFnZSA9IGF3YWl0IGNyZWF0ZVBhZ2UodGhpcy5lbmRwb2ludCwgdGVtcGxhdGUuaWQsIHtzZXF1ZW5jZTogcGFnZU51bWJlciwgcGFnZV9udW1iZXI6IHBhZ2VOdW1iZXIsIGRvY3VtZW50X2lkOiB0ZW1wbGF0ZV9kb2N1bWVudC5pZH0pO1xuICAgICAgICBjb25zb2xlLmxvZygnQ3JlYXRlZCBwYWdlJywgcGFnZSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudGVtcGxhdGVDcmVhdGVkPy5lbWl0KHt0ZW1wbGF0ZSwgdGVtcGxhdGVfZG9jdW1lbnR9KTtcbiAgICAgIC8vIHRoaXMuZmlsZVVwbG9hZGVkPy5lbWl0KHtmaWxlUGF0aDogdGhpcy5maWxlUGF0aH0pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbVEVNUExBVEUtQ1JFQVRFXSBFcnJvciBjcmVhdGluZyB0ZW1wbGF0ZScsIGUpO1xuICAgICAgdGhpcy5zZGtFcnJvcj8uZW1pdChuZXcgU0RLRXJyb3IoZS5tZXNzYWdlLCBlLnJlc3BvbnNlPy5zdGF0dXMsIGUucmVzcG9uc2U/LmRhdGEpKTtcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxmb3JtIG9uU3VibWl0PXtlID0+IGUucHJldmVudERlZmF1bHQoKX0gb25DbGljaz17ZSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpfSBhdXRvY29tcGxldGU9XCJvZmZcIj5cbiAgICAgICAgPGlucHV0IHR5cGU9XCJmaWxlXCIgaWQ9XCJ2ZXJkb2NzLXRlbXBsYXRlLWNyZWF0ZS1maWxlXCIgbXVsdGlwbGUgYWNjZXB0PVwiYXBwbGljYXRpb24vcGRmXCIgc3R5bGU9e3tkaXNwbGF5OiAnbm9uZSd9fSBvbkNoYW5nZT17ZSA9PiB0aGlzLmhhbmRsZUZpbGVDaGFuZ2VkKGUpfSAvPlxuXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ1cGxvYWQtYm94XCI+XG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxzcGFuIGlubmVySFRNTD17RmlsZUljb259IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBzdHlsZT17e21hcmdpblRvcDogJzIwcHgnLCBmb250U2l6ZTogJzIwcHgnLCBmb250V2VpZ2h0OiAnYm9sZCd9fT5EcmFnIGEgZmlsZSBoZXJlPC9kaXY+XG4gICAgICAgICAgPGRpdiBzdHlsZT17e21hcmdpblRvcDogJzIwcHgnLCBtYXJnaW5Cb3R0b206ICcyMHB4JywgZm9udFNpemU6ICcxNnB4J319Pk9yLCBpZiB5b3UgcHJlZmVyLi4uPC9kaXY+XG4gICAgICAgICAgPHZlcmRvY3MtYnV0dG9uIGxhYmVsPVwiU2VsZWN0IGEgZmlsZSBmcm9tIHlvdXIgY29tcHV0ZXJcIiBzaXplPVwic21hbGxcIiBvbkNsaWNrPXtlID0+IHRoaXMuaGFuZGxlVXBsb2FkKGUpfSAvPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uc1wiPlxuICAgICAgICAgIDx2ZXJkb2NzLWJ1dHRvbiB2YXJpYW50PVwib3V0bGluZVwiIGxhYmVsPVwiQ2FuY2VsXCIgc2l6ZT1cInNtYWxsXCIgb25DbGljaz17ZSA9PiB0aGlzLmhhbmRsZUNhbmNlbChlKX0gLz5cbiAgICAgICAgICA8dmVyZG9jcy1idXR0b24gbGFiZWw9XCJOZXh0XCIgc2l6ZT1cInNtYWxsXCIgb25DbGljaz17ZSA9PiB0aGlzLmhhbmRsZVN1Ym1pdChlKX0gZGlzYWJsZWQ9eyF0aGlzLmZpbGV9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9mb3JtPlxuICAgICk7XG4gIH1cbn1cbiIsIkBpbXBvcnQgJy4uLy4uLy4uL3RoZW1lLnNjc3MnO1xuXG52ZXJkb2NzLXRlbXBsYXRlLWNyZWF0ZSB7XG4gIGZvbnQtZmFtaWx5OiAkdmVyZG9jcy1wcmltYXJ5LWZvbnQ7XG5cbiAgZm9ybSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHZlcmRvY3MtZ3JleS00O1xuICAgIHBhZGRpbmc6IDEycHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgLnVwbG9hZC1ib3gge1xuICAgICAgbWF4LXdpZHRoOiAzMjBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6IDQ0cHggMThweCA2NnB4O1xuICAgICAgYm9yZGVyOiAycHggZGFzaGVkICM5Nzk3OTc7XG4gICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTtcblxuICAgICAgc3ZnIHtcbiAgICAgICAgd2lkdGg6IDY0cHg7XG4gICAgICAgIGZpbGw6ICM1YzY1NzU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmJ1dHRvbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgY29sdW1uLWdhcDogOHB4O1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG5cbiAgICAuZmxleC1maWxsIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgfVxuICB9XG5cbiAgOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICR2ZXJkb2NzLWJnLTI7XG4gIH1cbn1cbiIsIi8qIGludGVyYWN0LmpzIDEuMTAuMTcgfCBodHRwczovL2ludGVyYWN0anMuaW8vbGljZW5zZSAqL1xuIWZ1bmN0aW9uKHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLHQpOihcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzpcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMpLmludGVyYWN0PXQoKX0oKGZ1bmN0aW9uKCl7dmFyIHQ9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5kZWZhdWx0PXZvaWQgMCx0LmRlZmF1bHQ9ZnVuY3Rpb24odCl7cmV0dXJuISghdHx8IXQuV2luZG93KSYmdCBpbnN0YW5jZW9mIHQuV2luZG93fTt2YXIgZT17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxlLmdldFdpbmRvdz1mdW5jdGlvbihlKXtyZXR1cm4oMCx0LmRlZmF1bHQpKGUpP2U6KGUub3duZXJEb2N1bWVudHx8ZSkuZGVmYXVsdFZpZXd8fHIud2luZG93fSxlLmluaXQ9byxlLndpbmRvdz1lLnJlYWxXaW5kb3c9dm9pZCAwO3ZhciBuPXZvaWQgMDtlLnJlYWxXaW5kb3c9bjt2YXIgcj12b2lkIDA7ZnVuY3Rpb24gbyh0KXtlLnJlYWxXaW5kb3c9bj10O3ZhciBvPXQuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIik7by5vd25lckRvY3VtZW50IT09dC5kb2N1bWVudCYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC53cmFwJiZ0LndyYXAobyk9PT1vJiYodD10LndyYXAodCkpLGUud2luZG93PXI9dH1lLndpbmRvdz1yLFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdyYmbyh3aW5kb3cpO3ZhciBpPXt9O2Z1bmN0aW9uIGEodCl7cmV0dXJuIGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0sYSh0KX1PYmplY3QuZGVmaW5lUHJvcGVydHkoaSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxpLmRlZmF1bHQ9dm9pZCAwO3ZhciBzPWZ1bmN0aW9uKHQpe3JldHVybiEhdCYmXCJvYmplY3RcIj09PWEodCl9LGw9ZnVuY3Rpb24odCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdH0sdT17d2luZG93OmZ1bmN0aW9uKG4pe3JldHVybiBuPT09ZS53aW5kb3d8fCgwLHQuZGVmYXVsdCkobil9LGRvY0ZyYWc6ZnVuY3Rpb24odCl7cmV0dXJuIHModCkmJjExPT09dC5ub2RlVHlwZX0sb2JqZWN0OnMsZnVuYzpsLG51bWJlcjpmdW5jdGlvbih0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdH0sYm9vbDpmdW5jdGlvbih0KXtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIHR9LHN0cmluZzpmdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdH0sZWxlbWVudDpmdW5jdGlvbih0KXtpZighdHx8XCJvYmplY3RcIiE9PWEodCkpcmV0dXJuITE7dmFyIG49ZS5nZXRXaW5kb3codCl8fGUud2luZG93O3JldHVybi9vYmplY3R8ZnVuY3Rpb24vLnRlc3QoXCJ1bmRlZmluZWRcIj09dHlwZW9mIEVsZW1lbnQ/XCJ1bmRlZmluZWRcIjphKEVsZW1lbnQpKT90IGluc3RhbmNlb2YgRWxlbWVudHx8dCBpbnN0YW5jZW9mIG4uRWxlbWVudDoxPT09dC5ub2RlVHlwZSYmXCJzdHJpbmdcIj09dHlwZW9mIHQubm9kZU5hbWV9LHBsYWluT2JqZWN0OmZ1bmN0aW9uKHQpe3JldHVybiBzKHQpJiYhIXQuY29uc3RydWN0b3ImJi9mdW5jdGlvbiBPYmplY3RcXGIvLnRlc3QodC5jb25zdHJ1Y3Rvci50b1N0cmluZygpKX0sYXJyYXk6ZnVuY3Rpb24odCl7cmV0dXJuIHModCkmJnZvaWQgMCE9PXQubGVuZ3RoJiZsKHQuc3BsaWNlKX19O2kuZGVmYXVsdD11O3ZhciBjPXt9O2Z1bmN0aW9uIGYodCl7dmFyIGU9dC5pbnRlcmFjdGlvbjtpZihcImRyYWdcIj09PWUucHJlcGFyZWQubmFtZSl7dmFyIG49ZS5wcmVwYXJlZC5heGlzO1wieFwiPT09bj8oZS5jb29yZHMuY3VyLnBhZ2UueT1lLmNvb3Jkcy5zdGFydC5wYWdlLnksZS5jb29yZHMuY3VyLmNsaWVudC55PWUuY29vcmRzLnN0YXJ0LmNsaWVudC55LGUuY29vcmRzLnZlbG9jaXR5LmNsaWVudC55PTAsZS5jb29yZHMudmVsb2NpdHkucGFnZS55PTApOlwieVwiPT09biYmKGUuY29vcmRzLmN1ci5wYWdlLng9ZS5jb29yZHMuc3RhcnQucGFnZS54LGUuY29vcmRzLmN1ci5jbGllbnQueD1lLmNvb3Jkcy5zdGFydC5jbGllbnQueCxlLmNvb3Jkcy52ZWxvY2l0eS5jbGllbnQueD0wLGUuY29vcmRzLnZlbG9jaXR5LnBhZ2UueD0wKX19ZnVuY3Rpb24gZCh0KXt2YXIgZT10LmlFdmVudCxuPXQuaW50ZXJhY3Rpb247aWYoXCJkcmFnXCI9PT1uLnByZXBhcmVkLm5hbWUpe3ZhciByPW4ucHJlcGFyZWQuYXhpcztpZihcInhcIj09PXJ8fFwieVwiPT09cil7dmFyIG89XCJ4XCI9PT1yP1wieVwiOlwieFwiO2UucGFnZVtvXT1uLmNvb3Jkcy5zdGFydC5wYWdlW29dLGUuY2xpZW50W29dPW4uY29vcmRzLnN0YXJ0LmNsaWVudFtvXSxlLmRlbHRhW29dPTB9fX1PYmplY3QuZGVmaW5lUHJvcGVydHkoYyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxjLmRlZmF1bHQ9dm9pZCAwO3ZhciBwPXtpZDpcImFjdGlvbnMvZHJhZ1wiLGluc3RhbGw6ZnVuY3Rpb24odCl7dmFyIGU9dC5hY3Rpb25zLG49dC5JbnRlcmFjdGFibGUscj10LmRlZmF1bHRzO24ucHJvdG90eXBlLmRyYWdnYWJsZT1wLmRyYWdnYWJsZSxlLm1hcC5kcmFnPXAsZS5tZXRob2REaWN0LmRyYWc9XCJkcmFnZ2FibGVcIixyLmFjdGlvbnMuZHJhZz1wLmRlZmF1bHRzfSxsaXN0ZW5lcnM6e1wiaW50ZXJhY3Rpb25zOmJlZm9yZS1hY3Rpb24tbW92ZVwiOmYsXCJpbnRlcmFjdGlvbnM6YWN0aW9uLXJlc3VtZVwiOmYsXCJpbnRlcmFjdGlvbnM6YWN0aW9uLW1vdmVcIjpkLFwiYXV0by1zdGFydDpjaGVja1wiOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW50ZXJhY3Rpb24sbj10LmludGVyYWN0YWJsZSxyPXQuYnV0dG9ucyxvPW4ub3B0aW9ucy5kcmFnO2lmKG8mJm8uZW5hYmxlZCYmKCFlLnBvaW50ZXJJc0Rvd258fCEvbW91c2V8cG9pbnRlci8udGVzdChlLnBvaW50ZXJUeXBlKXx8MCE9KHImbi5vcHRpb25zLmRyYWcubW91c2VCdXR0b25zKSkpcmV0dXJuIHQuYWN0aW9uPXtuYW1lOlwiZHJhZ1wiLGF4aXM6XCJzdGFydFwiPT09by5sb2NrQXhpcz9vLnN0YXJ0QXhpczpvLmxvY2tBeGlzfSwhMX19LGRyYWdnYWJsZTpmdW5jdGlvbih0KXtyZXR1cm4gaS5kZWZhdWx0Lm9iamVjdCh0KT8odGhpcy5vcHRpb25zLmRyYWcuZW5hYmxlZD0hMSE9PXQuZW5hYmxlZCx0aGlzLnNldFBlckFjdGlvbihcImRyYWdcIix0KSx0aGlzLnNldE9uRXZlbnRzKFwiZHJhZ1wiLHQpLC9eKHh5fHh8eXxzdGFydCkkLy50ZXN0KHQubG9ja0F4aXMpJiYodGhpcy5vcHRpb25zLmRyYWcubG9ja0F4aXM9dC5sb2NrQXhpcyksL14oeHl8eHx5KSQvLnRlc3QodC5zdGFydEF4aXMpJiYodGhpcy5vcHRpb25zLmRyYWcuc3RhcnRBeGlzPXQuc3RhcnRBeGlzKSx0aGlzKTppLmRlZmF1bHQuYm9vbCh0KT8odGhpcy5vcHRpb25zLmRyYWcuZW5hYmxlZD10LHRoaXMpOnRoaXMub3B0aW9ucy5kcmFnfSxiZWZvcmVNb3ZlOmYsbW92ZTpkLGRlZmF1bHRzOntzdGFydEF4aXM6XCJ4eVwiLGxvY2tBeGlzOlwieHlcIn0sZ2V0Q3Vyc29yOmZ1bmN0aW9uKCl7cmV0dXJuXCJtb3ZlXCJ9fSx2PXA7Yy5kZWZhdWx0PXY7dmFyIGg9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KGgsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksaC5kZWZhdWx0PXZvaWQgMDt2YXIgZz17aW5pdDpmdW5jdGlvbih0KXt2YXIgZT10O2cuZG9jdW1lbnQ9ZS5kb2N1bWVudCxnLkRvY3VtZW50RnJhZ21lbnQ9ZS5Eb2N1bWVudEZyYWdtZW50fHx5LGcuU1ZHRWxlbWVudD1lLlNWR0VsZW1lbnR8fHksZy5TVkdTVkdFbGVtZW50PWUuU1ZHU1ZHRWxlbWVudHx8eSxnLlNWR0VsZW1lbnRJbnN0YW5jZT1lLlNWR0VsZW1lbnRJbnN0YW5jZXx8eSxnLkVsZW1lbnQ9ZS5FbGVtZW50fHx5LGcuSFRNTEVsZW1lbnQ9ZS5IVE1MRWxlbWVudHx8Zy5FbGVtZW50LGcuRXZlbnQ9ZS5FdmVudCxnLlRvdWNoPWUuVG91Y2h8fHksZy5Qb2ludGVyRXZlbnQ9ZS5Qb2ludGVyRXZlbnR8fGUuTVNQb2ludGVyRXZlbnR9LGRvY3VtZW50Om51bGwsRG9jdW1lbnRGcmFnbWVudDpudWxsLFNWR0VsZW1lbnQ6bnVsbCxTVkdTVkdFbGVtZW50Om51bGwsU1ZHRWxlbWVudEluc3RhbmNlOm51bGwsRWxlbWVudDpudWxsLEhUTUxFbGVtZW50Om51bGwsRXZlbnQ6bnVsbCxUb3VjaDpudWxsLFBvaW50ZXJFdmVudDpudWxsfTtmdW5jdGlvbiB5KCl7fXZhciBtPWc7aC5kZWZhdWx0PW07dmFyIGI9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KGIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksYi5kZWZhdWx0PXZvaWQgMDt2YXIgeD17aW5pdDpmdW5jdGlvbih0KXt2YXIgZT1oLmRlZmF1bHQuRWxlbWVudCxuPXQubmF2aWdhdG9yfHx7fTt4LnN1cHBvcnRzVG91Y2g9XCJvbnRvdWNoc3RhcnRcImluIHR8fGkuZGVmYXVsdC5mdW5jKHQuRG9jdW1lbnRUb3VjaCkmJmguZGVmYXVsdC5kb2N1bWVudCBpbnN0YW5jZW9mIHQuRG9jdW1lbnRUb3VjaCx4LnN1cHBvcnRzUG9pbnRlckV2ZW50PSExIT09bi5wb2ludGVyRW5hYmxlZCYmISFoLmRlZmF1bHQuUG9pbnRlckV2ZW50LHguaXNJT1M9L2lQKGhvbmV8b2R8YWQpLy50ZXN0KG4ucGxhdGZvcm0pLHguaXNJT1M3PS9pUChob25lfG9kfGFkKS8udGVzdChuLnBsYXRmb3JtKSYmL09TIDdbXlxcZF0vLnRlc3Qobi5hcHBWZXJzaW9uKSx4LmlzSWU5PS9NU0lFIDkvLnRlc3Qobi51c2VyQWdlbnQpLHguaXNPcGVyYU1vYmlsZT1cIk9wZXJhXCI9PT1uLmFwcE5hbWUmJnguc3VwcG9ydHNUb3VjaCYmL1ByZXN0by8udGVzdChuLnVzZXJBZ2VudCkseC5wcmVmaXhlZE1hdGNoZXNTZWxlY3Rvcj1cIm1hdGNoZXNcImluIGUucHJvdG90eXBlP1wibWF0Y2hlc1wiOlwid2Via2l0TWF0Y2hlc1NlbGVjdG9yXCJpbiBlLnByb3RvdHlwZT9cIndlYmtpdE1hdGNoZXNTZWxlY3RvclwiOlwibW96TWF0Y2hlc1NlbGVjdG9yXCJpbiBlLnByb3RvdHlwZT9cIm1vek1hdGNoZXNTZWxlY3RvclwiOlwib01hdGNoZXNTZWxlY3RvclwiaW4gZS5wcm90b3R5cGU/XCJvTWF0Y2hlc1NlbGVjdG9yXCI6XCJtc01hdGNoZXNTZWxlY3RvclwiLHgucEV2ZW50VHlwZXM9eC5zdXBwb3J0c1BvaW50ZXJFdmVudD9oLmRlZmF1bHQuUG9pbnRlckV2ZW50PT09dC5NU1BvaW50ZXJFdmVudD97dXA6XCJNU1BvaW50ZXJVcFwiLGRvd246XCJNU1BvaW50ZXJEb3duXCIsb3ZlcjpcIm1vdXNlb3ZlclwiLG91dDpcIm1vdXNlb3V0XCIsbW92ZTpcIk1TUG9pbnRlck1vdmVcIixjYW5jZWw6XCJNU1BvaW50ZXJDYW5jZWxcIn06e3VwOlwicG9pbnRlcnVwXCIsZG93bjpcInBvaW50ZXJkb3duXCIsb3ZlcjpcInBvaW50ZXJvdmVyXCIsb3V0OlwicG9pbnRlcm91dFwiLG1vdmU6XCJwb2ludGVybW92ZVwiLGNhbmNlbDpcInBvaW50ZXJjYW5jZWxcIn06bnVsbCx4LndoZWVsRXZlbnQ9aC5kZWZhdWx0LmRvY3VtZW50JiZcIm9ubW91c2V3aGVlbFwiaW4gaC5kZWZhdWx0LmRvY3VtZW50P1wibW91c2V3aGVlbFwiOlwid2hlZWxcIn0sc3VwcG9ydHNUb3VjaDpudWxsLHN1cHBvcnRzUG9pbnRlckV2ZW50Om51bGwsaXNJT1M3Om51bGwsaXNJT1M6bnVsbCxpc0llOTpudWxsLGlzT3BlcmFNb2JpbGU6bnVsbCxwcmVmaXhlZE1hdGNoZXNTZWxlY3RvcjpudWxsLHBFdmVudFR5cGVzOm51bGwsd2hlZWxFdmVudDpudWxsfSx3PXg7Yi5kZWZhdWx0PXc7dmFyIF89e307ZnVuY3Rpb24gUCh0KXt2YXIgZT10LnBhcmVudE5vZGU7aWYoaS5kZWZhdWx0LmRvY0ZyYWcoZSkpe2Zvcig7KGU9ZS5ob3N0KSYmaS5kZWZhdWx0LmRvY0ZyYWcoZSk7KTtyZXR1cm4gZX1yZXR1cm4gZX1mdW5jdGlvbiBPKHQsbil7cmV0dXJuIGUud2luZG93IT09ZS5yZWFsV2luZG93JiYobj1uLnJlcGxhY2UoL1xcL2RlZXBcXC8vZyxcIiBcIikpLHRbYi5kZWZhdWx0LnByZWZpeGVkTWF0Y2hlc1NlbGVjdG9yXShuKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoXyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxfLmNsb3Nlc3Q9ZnVuY3Rpb24odCxlKXtmb3IoO2kuZGVmYXVsdC5lbGVtZW50KHQpOyl7aWYoTyh0LGUpKXJldHVybiB0O3Q9UCh0KX1yZXR1cm4gbnVsbH0sXy5nZXRBY3R1YWxFbGVtZW50PWZ1bmN0aW9uKHQpe3JldHVybiB0LmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50fHx0fSxfLmdldEVsZW1lbnRDbGllbnRSZWN0PWosXy5nZXRFbGVtZW50UmVjdD1mdW5jdGlvbih0KXt2YXIgbj1qKHQpO2lmKCFiLmRlZmF1bHQuaXNJT1M3JiZuKXt2YXIgcj1UKGUuZ2V0V2luZG93KHQpKTtuLmxlZnQrPXIueCxuLnJpZ2h0Kz1yLngsbi50b3ArPXIueSxuLmJvdHRvbSs9ci55fXJldHVybiBufSxfLmdldFBhdGg9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdO3Q7KWUucHVzaCh0KSx0PVAodCk7cmV0dXJuIGV9LF8uZ2V0U2Nyb2xsWFk9VCxfLmluZGV4T2ZEZWVwZXN0RWxlbWVudD1mdW5jdGlvbih0KXtmb3IodmFyIG4scj1bXSxvPTA7bzx0Lmxlbmd0aDtvKyspe3ZhciBpPXRbb10sYT10W25dO2lmKGkmJm8hPT1uKWlmKGEpe3ZhciBzPUUoaSksbD1FKGEpO2lmKHMhPT1pLm93bmVyRG9jdW1lbnQpaWYobCE9PWkub3duZXJEb2N1bWVudClpZihzIT09bCl7cj1yLmxlbmd0aD9yOlMoYSk7dmFyIHU9dm9pZCAwO2lmKGEgaW5zdGFuY2VvZiBoLmRlZmF1bHQuSFRNTEVsZW1lbnQmJmkgaW5zdGFuY2VvZiBoLmRlZmF1bHQuU1ZHRWxlbWVudCYmIShpIGluc3RhbmNlb2YgaC5kZWZhdWx0LlNWR1NWR0VsZW1lbnQpKXtpZihpPT09bCljb250aW51ZTt1PWkub3duZXJTVkdFbGVtZW50fWVsc2UgdT1pO2Zvcih2YXIgYz1TKHUsYS5vd25lckRvY3VtZW50KSxmPTA7Y1tmXSYmY1tmXT09PXJbZl07KWYrKzt2YXIgZD1bY1tmLTFdLGNbZl0scltmXV07aWYoZFswXSlmb3IodmFyIHA9ZFswXS5sYXN0Q2hpbGQ7cDspe2lmKHA9PT1kWzFdKXtuPW8scj1jO2JyZWFrfWlmKHA9PT1kWzJdKWJyZWFrO3A9cC5wcmV2aW91c1NpYmxpbmd9fWVsc2Ugdj1pLGc9YSx2b2lkIDAsdm9pZCAwLChwYXJzZUludChlLmdldFdpbmRvdyh2KS5nZXRDb21wdXRlZFN0eWxlKHYpLnpJbmRleCwxMCl8fDApPj0ocGFyc2VJbnQoZS5nZXRXaW5kb3coZykuZ2V0Q29tcHV0ZWRTdHlsZShnKS56SW5kZXgsMTApfHwwKSYmKG49byk7ZWxzZSBuPW99ZWxzZSBuPW99dmFyIHYsZztyZXR1cm4gbn0sXy5tYXRjaGVzU2VsZWN0b3I9TyxfLm1hdGNoZXNVcFRvPWZ1bmN0aW9uKHQsZSxuKXtmb3IoO2kuZGVmYXVsdC5lbGVtZW50KHQpOyl7aWYoTyh0LGUpKXJldHVybiEwO2lmKCh0PVAodCkpPT09bilyZXR1cm4gTyh0LGUpfXJldHVybiExfSxfLm5vZGVDb250YWlucz1mdW5jdGlvbih0LGUpe2lmKHQuY29udGFpbnMpcmV0dXJuIHQuY29udGFpbnMoZSk7Zm9yKDtlOyl7aWYoZT09PXQpcmV0dXJuITA7ZT1lLnBhcmVudE5vZGV9cmV0dXJuITF9LF8ucGFyZW50Tm9kZT1QLF8udHJ5U2VsZWN0b3I9ZnVuY3Rpb24odCl7cmV0dXJuISFpLmRlZmF1bHQuc3RyaW5nKHQpJiYoaC5kZWZhdWx0LmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCksITApfTt2YXIgRT1mdW5jdGlvbih0KXtyZXR1cm4gdC5wYXJlbnROb2RlfHx0Lmhvc3R9O2Z1bmN0aW9uIFModCxlKXtmb3IodmFyIG4scj1bXSxvPXQ7KG49RShvKSkmJm8hPT1lJiZuIT09by5vd25lckRvY3VtZW50OylyLnVuc2hpZnQobyksbz1uO3JldHVybiByfWZ1bmN0aW9uIFQodCl7cmV0dXJue3g6KHQ9dHx8ZS53aW5kb3cpLnNjcm9sbFh8fHQuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQseTp0LnNjcm9sbFl8fHQuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcH19ZnVuY3Rpb24gaih0KXt2YXIgZT10IGluc3RhbmNlb2YgaC5kZWZhdWx0LlNWR0VsZW1lbnQ/dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTp0LmdldENsaWVudFJlY3RzKClbMF07cmV0dXJuIGUmJntsZWZ0OmUubGVmdCxyaWdodDplLnJpZ2h0LHRvcDplLnRvcCxib3R0b206ZS5ib3R0b20sd2lkdGg6ZS53aWR0aHx8ZS5yaWdodC1lLmxlZnQsaGVpZ2h0OmUuaGVpZ2h0fHxlLmJvdHRvbS1lLnRvcH19dmFyIE09e307T2JqZWN0LmRlZmluZVByb3BlcnR5KE0sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksTS5kZWZhdWx0PWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpdFtuXT1lW25dO3JldHVybiB0fTt2YXIgaz17fTtmdW5jdGlvbiBJKHQsZSl7KG51bGw9PWV8fGU+dC5sZW5ndGgpJiYoZT10Lmxlbmd0aCk7Zm9yKHZhciBuPTAscj1BcnJheShlKTtuPGU7bisrKXJbbl09dFtuXTtyZXR1cm4gcn1mdW5jdGlvbiBEKHQsZSxuKXtyZXR1cm5cInBhcmVudFwiPT09dD8oMCxfLnBhcmVudE5vZGUpKG4pOlwic2VsZlwiPT09dD9lLmdldFJlY3Qobik6KDAsXy5jbG9zZXN0KShuLHQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShrLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGsuYWRkRWRnZXM9ZnVuY3Rpb24odCxlLG4pe3QubGVmdCYmKGUubGVmdCs9bi54KSx0LnJpZ2h0JiYoZS5yaWdodCs9bi54KSx0LnRvcCYmKGUudG9wKz1uLnkpLHQuYm90dG9tJiYoZS5ib3R0b20rPW4ueSksZS53aWR0aD1lLnJpZ2h0LWUubGVmdCxlLmhlaWdodD1lLmJvdHRvbS1lLnRvcH0say5nZXRTdHJpbmdPcHRpb25SZXN1bHQ9RCxrLnJlY3RUb1hZPWZ1bmN0aW9uKHQpe3JldHVybiB0JiZ7eDpcInhcImluIHQ/dC54OnQubGVmdCx5OlwieVwiaW4gdD90Lnk6dC50b3B9fSxrLnJlc29sdmVSZWN0TGlrZT1mdW5jdGlvbih0LGUsbixyKXt2YXIgbyxhPXQ7cmV0dXJuIGkuZGVmYXVsdC5zdHJpbmcoYSk/YT1EKGEsZSxuKTppLmRlZmF1bHQuZnVuYyhhKSYmKGE9YS5hcHBseSh2b2lkIDAsZnVuY3Rpb24odCl7aWYoQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4gSSh0KX0obz1yKXx8ZnVuY3Rpb24odCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmbnVsbCE9dFtTeW1ib2wuaXRlcmF0b3JdfHxudWxsIT10W1wiQEBpdGVyYXRvclwiXSlyZXR1cm4gQXJyYXkuZnJvbSh0KX0obyl8fGZ1bmN0aW9uKHQsZSl7aWYodCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpcmV0dXJuIEkodCxlKTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PW4mJnQuY29uc3RydWN0b3ImJihuPXQuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uP0FycmF5LmZyb20odCk6XCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pP0kodCxlKTp2b2lkIDB9fShvKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKSkpLGkuZGVmYXVsdC5lbGVtZW50KGEpJiYoYT0oMCxfLmdldEVsZW1lbnRSZWN0KShhKSksYX0say50bGJyVG9YeXdoPWZ1bmN0aW9uKHQpe3JldHVybiF0fHxcInhcImluIHQmJlwieVwiaW4gdHx8KCh0PSgwLE0uZGVmYXVsdCkoe30sdCkpLng9dC5sZWZ0fHwwLHQueT10LnRvcHx8MCx0LndpZHRoPXQud2lkdGh8fCh0LnJpZ2h0fHwwKS10LngsdC5oZWlnaHQ9dC5oZWlnaHR8fCh0LmJvdHRvbXx8MCktdC55KSx0fSxrLnh5d2hUb1RsYnI9ZnVuY3Rpb24odCl7cmV0dXJuIXR8fFwibGVmdFwiaW4gdCYmXCJ0b3BcImluIHR8fCgodD0oMCxNLmRlZmF1bHQpKHt9LHQpKS5sZWZ0PXQueHx8MCx0LnRvcD10Lnl8fDAsdC5yaWdodD10LnJpZ2h0fHx0LmxlZnQrdC53aWR0aCx0LmJvdHRvbT10LmJvdHRvbXx8dC50b3ArdC5oZWlnaHQpLHR9O3ZhciBBPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShBLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLEEuZGVmYXVsdD1mdW5jdGlvbih0LGUsbil7dmFyIHI9dC5vcHRpb25zW25dLG89ciYmci5vcmlnaW58fHQub3B0aW9ucy5vcmlnaW4saT0oMCxrLnJlc29sdmVSZWN0TGlrZSkobyx0LGUsW3QmJmVdKTtyZXR1cm4oMCxrLnJlY3RUb1hZKShpKXx8e3g6MCx5OjB9fTt2YXIgej17fTtmdW5jdGlvbiBDKHQpe3JldHVybiB0LnRyaW0oKS5zcGxpdCgvICsvKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoeixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx6LmRlZmF1bHQ9ZnVuY3Rpb24gdChlLG4scil7aWYocj1yfHx7fSxpLmRlZmF1bHQuc3RyaW5nKGUpJiYtMSE9PWUuc2VhcmNoKFwiIFwiKSYmKGU9QyhlKSksaS5kZWZhdWx0LmFycmF5KGUpKXJldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSxvKXtyZXR1cm4oMCxNLmRlZmF1bHQpKGUsdChvLG4scikpfSkscik7aWYoaS5kZWZhdWx0Lm9iamVjdChlKSYmKG49ZSxlPVwiXCIpLGkuZGVmYXVsdC5mdW5jKG4pKXJbZV09cltlXXx8W10scltlXS5wdXNoKG4pO2Vsc2UgaWYoaS5kZWZhdWx0LmFycmF5KG4pKWZvcih2YXIgbz0wO288bi5sZW5ndGg7bysrKXt2YXIgYTthPW5bb10sdChlLGEscil9ZWxzZSBpZihpLmRlZmF1bHQub2JqZWN0KG4pKWZvcih2YXIgcyBpbiBuKXt2YXIgbD1DKHMpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuXCJcIi5jb25jYXQoZSkuY29uY2F0KHQpfSkpO3QobCxuW3NdLHIpfXJldHVybiByfTt2YXIgUj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxSLmRlZmF1bHQ9dm9pZCAwLFIuZGVmYXVsdD1mdW5jdGlvbih0LGUpe3JldHVybiBNYXRoLnNxcnQodCp0K2UqZSl9O3ZhciBGPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShGLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLEYuZGVmYXVsdD1mdW5jdGlvbih0LGUpe3QuX19zZXR8fCh0Ll9fc2V0PXt9KTt2YXIgbj1mdW5jdGlvbihuKXtcImZ1bmN0aW9uXCIhPXR5cGVvZiB0W25dJiZcIl9fc2V0XCIhPT1uJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbiBpbiB0Ll9fc2V0P3QuX19zZXRbbl06dC5fX3NldFtuXT1lW25dfSxzZXQ6ZnVuY3Rpb24oZSl7dC5fX3NldFtuXT1lfSxjb25maWd1cmFibGU6ITB9KX07Zm9yKHZhciByIGluIGUpbihyKTtyZXR1cm4gdH07dmFyIFg9e307ZnVuY3Rpb24gQih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGguZGVmYXVsdC5FdmVudHx8dCBpbnN0YW5jZW9mIGguZGVmYXVsdC5Ub3VjaH1mdW5jdGlvbiBZKHQsZSxuKXtyZXR1cm4gdD10fHxcInBhZ2VcIiwobj1ufHx7fSkueD1lW3QrXCJYXCJdLG4ueT1lW3QrXCJZXCJdLG59ZnVuY3Rpb24gVyh0LGUpe3JldHVybiBlPWV8fHt4OjAseTowfSxiLmRlZmF1bHQuaXNPcGVyYU1vYmlsZSYmQih0KT8oWShcInNjcmVlblwiLHQsZSksZS54Kz13aW5kb3cuc2Nyb2xsWCxlLnkrPXdpbmRvdy5zY3JvbGxZKTpZKFwicGFnZVwiLHQsZSksZX1mdW5jdGlvbiBMKHQsZSl7cmV0dXJuIGU9ZXx8e30sYi5kZWZhdWx0LmlzT3BlcmFNb2JpbGUmJkIodCk/WShcInNjcmVlblwiLHQsZSk6WShcImNsaWVudFwiLHQsZSksZX1mdW5jdGlvbiBVKHQpe3ZhciBlPVtdO3JldHVybiBpLmRlZmF1bHQuYXJyYXkodCk/KGVbMF09dFswXSxlWzFdPXRbMV0pOlwidG91Y2hlbmRcIj09PXQudHlwZT8xPT09dC50b3VjaGVzLmxlbmd0aD8oZVswXT10LnRvdWNoZXNbMF0sZVsxXT10LmNoYW5nZWRUb3VjaGVzWzBdKTowPT09dC50b3VjaGVzLmxlbmd0aCYmKGVbMF09dC5jaGFuZ2VkVG91Y2hlc1swXSxlWzFdPXQuY2hhbmdlZFRvdWNoZXNbMV0pOihlWzBdPXQudG91Y2hlc1swXSxlWzFdPXQudG91Y2hlc1sxXSksZX1mdW5jdGlvbiBWKHQpe2Zvcih2YXIgZT17cGFnZVg6MCxwYWdlWTowLGNsaWVudFg6MCxjbGllbnRZOjAsc2NyZWVuWDowLHNjcmVlblk6MH0sbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO2Zvcih2YXIgbyBpbiBlKWVbb10rPXJbb119Zm9yKHZhciBpIGluIGUpZVtpXS89dC5sZW5ndGg7cmV0dXJuIGV9T2JqZWN0LmRlZmluZVByb3BlcnR5KFgsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksWC5jb29yZHNUb0V2ZW50PWZ1bmN0aW9uKHQpe3JldHVybntjb29yZHM6dCxnZXQgcGFnZSgpe3JldHVybiB0aGlzLmNvb3Jkcy5wYWdlfSxnZXQgY2xpZW50KCl7cmV0dXJuIHRoaXMuY29vcmRzLmNsaWVudH0sZ2V0IHRpbWVTdGFtcCgpe3JldHVybiB0aGlzLmNvb3Jkcy50aW1lU3RhbXB9LGdldCBwYWdlWCgpe3JldHVybiB0aGlzLmNvb3Jkcy5wYWdlLnh9LGdldCBwYWdlWSgpe3JldHVybiB0aGlzLmNvb3Jkcy5wYWdlLnl9LGdldCBjbGllbnRYKCl7cmV0dXJuIHRoaXMuY29vcmRzLmNsaWVudC54fSxnZXQgY2xpZW50WSgpe3JldHVybiB0aGlzLmNvb3Jkcy5jbGllbnQueX0sZ2V0IHBvaW50ZXJJZCgpe3JldHVybiB0aGlzLmNvb3Jkcy5wb2ludGVySWR9LGdldCB0YXJnZXQoKXtyZXR1cm4gdGhpcy5jb29yZHMudGFyZ2V0fSxnZXQgdHlwZSgpe3JldHVybiB0aGlzLmNvb3Jkcy50eXBlfSxnZXQgcG9pbnRlclR5cGUoKXtyZXR1cm4gdGhpcy5jb29yZHMucG9pbnRlclR5cGV9LGdldCBidXR0b25zKCl7cmV0dXJuIHRoaXMuY29vcmRzLmJ1dHRvbnN9LHByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7fX19LFguY29weUNvb3Jkcz1mdW5jdGlvbih0LGUpe3QucGFnZT10LnBhZ2V8fHt9LHQucGFnZS54PWUucGFnZS54LHQucGFnZS55PWUucGFnZS55LHQuY2xpZW50PXQuY2xpZW50fHx7fSx0LmNsaWVudC54PWUuY2xpZW50LngsdC5jbGllbnQueT1lLmNsaWVudC55LHQudGltZVN0YW1wPWUudGltZVN0YW1wfSxYLmdldENsaWVudFhZPUwsWC5nZXRFdmVudFRhcmdldHM9ZnVuY3Rpb24odCl7dmFyIGU9aS5kZWZhdWx0LmZ1bmModC5jb21wb3NlZFBhdGgpP3QuY29tcG9zZWRQYXRoKCk6dC5wYXRoO3JldHVybltfLmdldEFjdHVhbEVsZW1lbnQoZT9lWzBdOnQudGFyZ2V0KSxfLmdldEFjdHVhbEVsZW1lbnQodC5jdXJyZW50VGFyZ2V0KV19LFguZ2V0UGFnZVhZPVcsWC5nZXRQb2ludGVySWQ9ZnVuY3Rpb24odCl7cmV0dXJuIGkuZGVmYXVsdC5udW1iZXIodC5wb2ludGVySWQpP3QucG9pbnRlcklkOnQuaWRlbnRpZmllcn0sWC5nZXRQb2ludGVyVHlwZT1mdW5jdGlvbih0KXtyZXR1cm4gaS5kZWZhdWx0LnN0cmluZyh0LnBvaW50ZXJUeXBlKT90LnBvaW50ZXJUeXBlOmkuZGVmYXVsdC5udW1iZXIodC5wb2ludGVyVHlwZSk/W3ZvaWQgMCx2b2lkIDAsXCJ0b3VjaFwiLFwicGVuXCIsXCJtb3VzZVwiXVt0LnBvaW50ZXJUeXBlXTovdG91Y2gvLnRlc3QodC50eXBlfHxcIlwiKXx8dCBpbnN0YW5jZW9mIGguZGVmYXVsdC5Ub3VjaD9cInRvdWNoXCI6XCJtb3VzZVwifSxYLmdldFRvdWNoUGFpcj1VLFguZ2V0WFk9WSxYLmlzTmF0aXZlUG9pbnRlcj1CLFgubmV3Q29vcmRzPWZ1bmN0aW9uKCl7cmV0dXJue3BhZ2U6e3g6MCx5OjB9LGNsaWVudDp7eDowLHk6MH0sdGltZVN0YW1wOjB9fSxYLnBvaW50ZXJBdmVyYWdlPVYsT2JqZWN0LmRlZmluZVByb3BlcnR5KFgsXCJwb2ludGVyRXh0ZW5kXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEYuZGVmYXVsdH19KSxYLnNldENvb3JkRGVsdGFzPWZ1bmN0aW9uKHQsZSxuKXt0LnBhZ2UueD1uLnBhZ2UueC1lLnBhZ2UueCx0LnBhZ2UueT1uLnBhZ2UueS1lLnBhZ2UueSx0LmNsaWVudC54PW4uY2xpZW50LngtZS5jbGllbnQueCx0LmNsaWVudC55PW4uY2xpZW50LnktZS5jbGllbnQueSx0LnRpbWVTdGFtcD1uLnRpbWVTdGFtcC1lLnRpbWVTdGFtcH0sWC5zZXRDb29yZFZlbG9jaXR5PWZ1bmN0aW9uKHQsZSl7dmFyIG49TWF0aC5tYXgoZS50aW1lU3RhbXAvMWUzLC4wMDEpO3QucGFnZS54PWUucGFnZS54L24sdC5wYWdlLnk9ZS5wYWdlLnkvbix0LmNsaWVudC54PWUuY2xpZW50Lngvbix0LmNsaWVudC55PWUuY2xpZW50Lnkvbix0LnRpbWVTdGFtcD1ufSxYLnNldENvb3Jkcz1mdW5jdGlvbih0LGUsbil7dmFyIHI9ZS5sZW5ndGg+MT9WKGUpOmVbMF07VyhyLHQucGFnZSksTChyLHQuY2xpZW50KSx0LnRpbWVTdGFtcD1ufSxYLnNldFplcm9Db29yZHM9ZnVuY3Rpb24odCl7dC5wYWdlLng9MCx0LnBhZ2UueT0wLHQuY2xpZW50Lng9MCx0LmNsaWVudC55PTB9LFgudG91Y2hBbmdsZT1mdW5jdGlvbih0LGUpe3ZhciBuPWUrXCJYXCIscj1lK1wiWVwiLG89VSh0KSxpPW9bMV1bbl0tb1swXVtuXSxhPW9bMV1bcl0tb1swXVtyXTtyZXR1cm4gMTgwKk1hdGguYXRhbjIoYSxpKS9NYXRoLlBJfSxYLnRvdWNoQkJveD1mdW5jdGlvbih0KXtpZighdC5sZW5ndGgpcmV0dXJuIG51bGw7dmFyIGU9VSh0KSxuPU1hdGgubWluKGVbMF0ucGFnZVgsZVsxXS5wYWdlWCkscj1NYXRoLm1pbihlWzBdLnBhZ2VZLGVbMV0ucGFnZVkpLG89TWF0aC5tYXgoZVswXS5wYWdlWCxlWzFdLnBhZ2VYKSxpPU1hdGgubWF4KGVbMF0ucGFnZVksZVsxXS5wYWdlWSk7cmV0dXJue3g6bix5OnIsbGVmdDpuLHRvcDpyLHJpZ2h0Om8sYm90dG9tOmksd2lkdGg6by1uLGhlaWdodDppLXJ9fSxYLnRvdWNoRGlzdGFuY2U9ZnVuY3Rpb24odCxlKXt2YXIgbj1lK1wiWFwiLHI9ZStcIllcIixvPVUodCksaT1vWzBdW25dLW9bMV1bbl0sYT1vWzBdW3JdLW9bMV1bcl07cmV0dXJuKDAsUi5kZWZhdWx0KShpLGEpfTt2YXIgTj17fTtmdW5jdGlvbiBxKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LHIua2V5LHIpfX1mdW5jdGlvbiBHKHQsZSxuKXtyZXR1cm4gZSBpbiB0P09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3ZhbHVlOm4sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTp0W2VdPW4sdH1PYmplY3QuZGVmaW5lUHJvcGVydHkoTixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxOLkJhc2VFdmVudD12b2lkIDA7dmFyICQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksRyh0aGlzLFwiaW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkXCIsITEpLEcodGhpcyxcInByb3BhZ2F0aW9uU3RvcHBlZFwiLCExKSx0aGlzLl9pbnRlcmFjdGlvbj1lfXZhciBlLG47cmV0dXJuIGU9dCwobj1be2tleTpcInByZXZlbnREZWZhdWx0XCIsdmFsdWU6ZnVuY3Rpb24oKXt9fSx7a2V5Olwic3RvcFByb3BhZ2F0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnByb3BhZ2F0aW9uU3RvcHBlZD0hMH19LHtrZXk6XCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb25cIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMucHJvcGFnYXRpb25TdG9wcGVkPSEwfX1dKSYmcShlLnByb3RvdHlwZSxuKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLHR9KCk7Ti5CYXNlRXZlbnQ9JCxPYmplY3QuZGVmaW5lUHJvcGVydHkoJC5wcm90b3R5cGUsXCJpbnRlcmFjdGlvblwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW50ZXJhY3Rpb24uX3Byb3h5fSxzZXQ6ZnVuY3Rpb24oKXt9fSk7dmFyIEg9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KEgsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksSC5yZW1vdmU9SC5tZXJnZT1ILmZyb209SC5maW5kSW5kZXg9SC5maW5kPUguY29udGFpbnM9dm9pZCAwLEguY29udGFpbnM9ZnVuY3Rpb24odCxlKXtyZXR1cm4tMSE9PXQuaW5kZXhPZihlKX0sSC5yZW1vdmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5zcGxpY2UodC5pbmRleE9mKGUpLDEpfTt2YXIgSz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1lW25dO3QucHVzaChyKX1yZXR1cm4gdH07SC5tZXJnZT1LLEguZnJvbT1mdW5jdGlvbih0KXtyZXR1cm4gSyhbXSx0KX07dmFyIFo9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKylpZihlKHRbbl0sbix0KSlyZXR1cm4gbjtyZXR1cm4tMX07SC5maW5kSW5kZXg9WixILmZpbmQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdFtaKHQsZSldfTt2YXIgSj17fTtmdW5jdGlvbiBRKHQpe3JldHVybiBRPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9LFEodCl9ZnVuY3Rpb24gdHQodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsci5rZXkscil9fWZ1bmN0aW9uIGV0KHQsZSl7cmV0dXJuIGV0PU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0sZXQodCxlKX1mdW5jdGlvbiBudCh0LGUpe2lmKGUmJihcIm9iamVjdFwiPT09UShlKXx8XCJmdW5jdGlvblwiPT10eXBlb2YgZSkpcmV0dXJuIGU7aWYodm9pZCAwIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7cmV0dXJuIHJ0KHQpfWZ1bmN0aW9uIHJ0KHQpe2lmKHZvaWQgMD09PXQpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiB0fWZ1bmN0aW9uIG90KHQpe3JldHVybiBvdD1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKTpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0sb3QodCl9ZnVuY3Rpb24gaXQodCxlLG4pe3JldHVybiBlIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbZV09bix0fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShKLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLEouRHJvcEV2ZW50PXZvaWQgMDt2YXIgYXQ9ZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLGUmJmV0KHQsZSl9KGEsdCk7dmFyIGUsbixyLG8saT0ocj1hLG89ZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUmVmbGVjdHx8IVJlZmxlY3QuY29uc3RydWN0KXJldHVybiExO2lmKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgUHJveHkpcmV0dXJuITA7dHJ5e3JldHVybiBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbixbXSwoZnVuY3Rpb24oKXt9KSkpLCEwfWNhdGNoKHQpe3JldHVybiExfX0oKSxmdW5jdGlvbigpe3ZhciB0LGU9b3Qocik7aWYobyl7dmFyIG49b3QodGhpcykuY29uc3RydWN0b3I7dD1SZWZsZWN0LmNvbnN0cnVjdChlLGFyZ3VtZW50cyxuKX1lbHNlIHQ9ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIG50KHRoaXMsdCl9KTtmdW5jdGlvbiBhKHQsZSxuKXt2YXIgcjshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLGEpLGl0KHJ0KHI9aS5jYWxsKHRoaXMsZS5faW50ZXJhY3Rpb24pKSxcImRyb3B6b25lXCIsdm9pZCAwKSxpdChydChyKSxcImRyYWdFdmVudFwiLHZvaWQgMCksaXQocnQociksXCJyZWxhdGVkVGFyZ2V0XCIsdm9pZCAwKSxpdChydChyKSxcImRyYWdnYWJsZVwiLHZvaWQgMCksaXQocnQociksXCJwcm9wYWdhdGlvblN0b3BwZWRcIiwhMSksaXQocnQociksXCJpbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWRcIiwhMSk7dmFyIG89XCJkcmFnbGVhdmVcIj09PW4/dC5wcmV2OnQuY3VyLHM9by5lbGVtZW50LGw9by5kcm9wem9uZTtyZXR1cm4gci50eXBlPW4sci50YXJnZXQ9cyxyLmN1cnJlbnRUYXJnZXQ9cyxyLmRyb3B6b25lPWwsci5kcmFnRXZlbnQ9ZSxyLnJlbGF0ZWRUYXJnZXQ9ZS50YXJnZXQsci5kcmFnZ2FibGU9ZS5pbnRlcmFjdGFibGUsci50aW1lU3RhbXA9ZS50aW1lU3RhbXAscn1yZXR1cm4gZT1hLChuPVt7a2V5OlwicmVqZWN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5faW50ZXJhY3Rpb24uZHJvcFN0YXRlO2lmKFwiZHJvcGFjdGl2YXRlXCI9PT10aGlzLnR5cGV8fHRoaXMuZHJvcHpvbmUmJmUuY3VyLmRyb3B6b25lPT09dGhpcy5kcm9wem9uZSYmZS5jdXIuZWxlbWVudD09PXRoaXMudGFyZ2V0KWlmKGUucHJldi5kcm9wem9uZT10aGlzLmRyb3B6b25lLGUucHJldi5lbGVtZW50PXRoaXMudGFyZ2V0LGUucmVqZWN0ZWQ9ITAsZS5ldmVudHMuZW50ZXI9bnVsbCx0aGlzLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLFwiZHJvcGFjdGl2YXRlXCI9PT10aGlzLnR5cGUpe3ZhciBuPWUuYWN0aXZlRHJvcHMscj1ILmZpbmRJbmRleChuLChmdW5jdGlvbihlKXt2YXIgbj1lLmRyb3B6b25lLHI9ZS5lbGVtZW50O3JldHVybiBuPT09dC5kcm9wem9uZSYmcj09PXQudGFyZ2V0fSkpO2UuYWN0aXZlRHJvcHMuc3BsaWNlKHIsMSk7dmFyIG89bmV3IGEoZSx0aGlzLmRyYWdFdmVudCxcImRyb3BkZWFjdGl2YXRlXCIpO28uZHJvcHpvbmU9dGhpcy5kcm9wem9uZSxvLnRhcmdldD10aGlzLnRhcmdldCx0aGlzLmRyb3B6b25lLmZpcmUobyl9ZWxzZSB0aGlzLmRyb3B6b25lLmZpcmUobmV3IGEoZSx0aGlzLmRyYWdFdmVudCxcImRyYWdsZWF2ZVwiKSl9fSx7a2V5OlwicHJldmVudERlZmF1bHRcIix2YWx1ZTpmdW5jdGlvbigpe319LHtrZXk6XCJzdG9wUHJvcGFnYXRpb25cIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMucHJvcGFnYXRpb25TdG9wcGVkPSEwfX0se2tleTpcInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvblwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5pbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5wcm9wYWdhdGlvblN0b3BwZWQ9ITB9fV0pJiZ0dChlLnByb3RvdHlwZSxuKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLGF9KE4uQmFzZUV2ZW50KTtKLkRyb3BFdmVudD1hdDt2YXIgc3Q9e307ZnVuY3Rpb24gbHQodCxlKXtmb3IodmFyIG49MDtuPHQuc2xpY2UoKS5sZW5ndGg7bisrKXt2YXIgcj10LnNsaWNlKClbbl0sbz1yLmRyb3B6b25lLGk9ci5lbGVtZW50O2UuZHJvcHpvbmU9byxlLnRhcmdldD1pLG8uZmlyZShlKSxlLnByb3BhZ2F0aW9uU3RvcHBlZD1lLmltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZD0hMX19ZnVuY3Rpb24gdXQodCxlKXtmb3IodmFyIG49ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dC5pbnRlcmFjdGFibGVzLHI9W10sbz0wO288bi5saXN0Lmxlbmd0aDtvKyspe3ZhciBhPW4ubGlzdFtvXTtpZihhLm9wdGlvbnMuZHJvcC5lbmFibGVkKXt2YXIgcz1hLm9wdGlvbnMuZHJvcC5hY2NlcHQ7aWYoIShpLmRlZmF1bHQuZWxlbWVudChzKSYmcyE9PWV8fGkuZGVmYXVsdC5zdHJpbmcocykmJiFfLm1hdGNoZXNTZWxlY3RvcihlLHMpfHxpLmRlZmF1bHQuZnVuYyhzKSYmIXMoe2Ryb3B6b25lOmEsZHJhZ2dhYmxlRWxlbWVudDplfSkpKWZvcih2YXIgbD1pLmRlZmF1bHQuc3RyaW5nKGEudGFyZ2V0KT9hLl9jb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoYS50YXJnZXQpOmkuZGVmYXVsdC5hcnJheShhLnRhcmdldCk/YS50YXJnZXQ6W2EudGFyZ2V0XSx1PTA7dTxsLmxlbmd0aDt1Kyspe3ZhciBjPWxbdV07YyE9PWUmJnIucHVzaCh7ZHJvcHpvbmU6YSxlbGVtZW50OmMscmVjdDphLmdldFJlY3QoYyl9KX19fXJldHVybiByfSh0LGUpLHI9MDtyPG4ubGVuZ3RoO3IrKyl7dmFyIG89bltyXTtvLnJlY3Q9by5kcm9wem9uZS5nZXRSZWN0KG8uZWxlbWVudCl9cmV0dXJuIG59ZnVuY3Rpb24gY3QodCxlLG4pe2Zvcih2YXIgcj10LmRyb3BTdGF0ZSxvPXQuaW50ZXJhY3RhYmxlLGk9dC5lbGVtZW50LGE9W10scz0wO3M8ci5hY3RpdmVEcm9wcy5sZW5ndGg7cysrKXt2YXIgbD1yLmFjdGl2ZURyb3BzW3NdLHU9bC5kcm9wem9uZSxjPWwuZWxlbWVudCxmPWwucmVjdDthLnB1c2godS5kcm9wQ2hlY2soZSxuLG8saSxjLGYpP2M6bnVsbCl9dmFyIGQ9Xy5pbmRleE9mRGVlcGVzdEVsZW1lbnQoYSk7cmV0dXJuIHIuYWN0aXZlRHJvcHNbZF18fG51bGx9ZnVuY3Rpb24gZnQodCxlLG4pe3ZhciByPXQuZHJvcFN0YXRlLG89e2VudGVyOm51bGwsbGVhdmU6bnVsbCxhY3RpdmF0ZTpudWxsLGRlYWN0aXZhdGU6bnVsbCxtb3ZlOm51bGwsZHJvcDpudWxsfTtyZXR1cm5cImRyYWdzdGFydFwiPT09bi50eXBlJiYoby5hY3RpdmF0ZT1uZXcgSi5Ecm9wRXZlbnQocixuLFwiZHJvcGFjdGl2YXRlXCIpLG8uYWN0aXZhdGUudGFyZ2V0PW51bGwsby5hY3RpdmF0ZS5kcm9wem9uZT1udWxsKSxcImRyYWdlbmRcIj09PW4udHlwZSYmKG8uZGVhY3RpdmF0ZT1uZXcgSi5Ecm9wRXZlbnQocixuLFwiZHJvcGRlYWN0aXZhdGVcIiksby5kZWFjdGl2YXRlLnRhcmdldD1udWxsLG8uZGVhY3RpdmF0ZS5kcm9wem9uZT1udWxsKSxyLnJlamVjdGVkfHwoci5jdXIuZWxlbWVudCE9PXIucHJldi5lbGVtZW50JiYoci5wcmV2LmRyb3B6b25lJiYoby5sZWF2ZT1uZXcgSi5Ecm9wRXZlbnQocixuLFwiZHJhZ2xlYXZlXCIpLG4uZHJhZ0xlYXZlPW8ubGVhdmUudGFyZ2V0PXIucHJldi5lbGVtZW50LG4ucHJldkRyb3B6b25lPW8ubGVhdmUuZHJvcHpvbmU9ci5wcmV2LmRyb3B6b25lKSxyLmN1ci5kcm9wem9uZSYmKG8uZW50ZXI9bmV3IEouRHJvcEV2ZW50KHIsbixcImRyYWdlbnRlclwiKSxuLmRyYWdFbnRlcj1yLmN1ci5lbGVtZW50LG4uZHJvcHpvbmU9ci5jdXIuZHJvcHpvbmUpKSxcImRyYWdlbmRcIj09PW4udHlwZSYmci5jdXIuZHJvcHpvbmUmJihvLmRyb3A9bmV3IEouRHJvcEV2ZW50KHIsbixcImRyb3BcIiksbi5kcm9wem9uZT1yLmN1ci5kcm9wem9uZSxuLnJlbGF0ZWRUYXJnZXQ9ci5jdXIuZWxlbWVudCksXCJkcmFnbW92ZVwiPT09bi50eXBlJiZyLmN1ci5kcm9wem9uZSYmKG8ubW92ZT1uZXcgSi5Ecm9wRXZlbnQocixuLFwiZHJvcG1vdmVcIiksby5tb3ZlLmRyYWdtb3ZlPW4sbi5kcm9wem9uZT1yLmN1ci5kcm9wem9uZSkpLG99ZnVuY3Rpb24gZHQodCxlKXt2YXIgbj10LmRyb3BTdGF0ZSxyPW4uYWN0aXZlRHJvcHMsbz1uLmN1cixpPW4ucHJldjtlLmxlYXZlJiZpLmRyb3B6b25lLmZpcmUoZS5sZWF2ZSksZS5lbnRlciYmby5kcm9wem9uZS5maXJlKGUuZW50ZXIpLGUubW92ZSYmby5kcm9wem9uZS5maXJlKGUubW92ZSksZS5kcm9wJiZvLmRyb3B6b25lLmZpcmUoZS5kcm9wKSxlLmRlYWN0aXZhdGUmJmx0KHIsZS5kZWFjdGl2YXRlKSxuLnByZXYuZHJvcHpvbmU9by5kcm9wem9uZSxuLnByZXYuZWxlbWVudD1vLmVsZW1lbnR9ZnVuY3Rpb24gcHQodCxlKXt2YXIgbj10LmludGVyYWN0aW9uLHI9dC5pRXZlbnQsbz10LmV2ZW50O2lmKFwiZHJhZ21vdmVcIj09PXIudHlwZXx8XCJkcmFnZW5kXCI9PT1yLnR5cGUpe3ZhciBpPW4uZHJvcFN0YXRlO2UuZHluYW1pY0Ryb3AmJihpLmFjdGl2ZURyb3BzPXV0KGUsbi5lbGVtZW50KSk7dmFyIGE9cixzPWN0KG4sYSxvKTtpLnJlamVjdGVkPWkucmVqZWN0ZWQmJiEhcyYmcy5kcm9wem9uZT09PWkuY3VyLmRyb3B6b25lJiZzLmVsZW1lbnQ9PT1pLmN1ci5lbGVtZW50LGkuY3VyLmRyb3B6b25lPXMmJnMuZHJvcHpvbmUsaS5jdXIuZWxlbWVudD1zJiZzLmVsZW1lbnQsaS5ldmVudHM9ZnQobiwwLGEpfX1PYmplY3QuZGVmaW5lUHJvcGVydHkoc3QsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksc3QuZGVmYXVsdD12b2lkIDA7dmFyIHZ0PXtpZDpcImFjdGlvbnMvZHJvcFwiLGluc3RhbGw6ZnVuY3Rpb24odCl7dmFyIGU9dC5hY3Rpb25zLG49dC5pbnRlcmFjdFN0YXRpYyxyPXQuSW50ZXJhY3RhYmxlLG89dC5kZWZhdWx0czt0LnVzZVBsdWdpbihjLmRlZmF1bHQpLHIucHJvdG90eXBlLmRyb3B6b25lPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbih0LGUpe2lmKGkuZGVmYXVsdC5vYmplY3QoZSkpe2lmKHQub3B0aW9ucy5kcm9wLmVuYWJsZWQ9ITEhPT1lLmVuYWJsZWQsZS5saXN0ZW5lcnMpe3ZhciBuPSgwLHouZGVmYXVsdCkoZS5saXN0ZW5lcnMpLHI9T2JqZWN0LmtleXMobikucmVkdWNlKChmdW5jdGlvbih0LGUpe3JldHVybiB0Wy9eKGVudGVyfGxlYXZlKS8udGVzdChlKT9cImRyYWdcIi5jb25jYXQoZSk6L14oYWN0aXZhdGV8ZGVhY3RpdmF0ZXxtb3ZlKS8udGVzdChlKT9cImRyb3BcIi5jb25jYXQoZSk6ZV09bltlXSx0fSkse30pO3Qub2ZmKHQub3B0aW9ucy5kcm9wLmxpc3RlbmVycyksdC5vbihyKSx0Lm9wdGlvbnMuZHJvcC5saXN0ZW5lcnM9cn1yZXR1cm4gaS5kZWZhdWx0LmZ1bmMoZS5vbmRyb3ApJiZ0Lm9uKFwiZHJvcFwiLGUub25kcm9wKSxpLmRlZmF1bHQuZnVuYyhlLm9uZHJvcGFjdGl2YXRlKSYmdC5vbihcImRyb3BhY3RpdmF0ZVwiLGUub25kcm9wYWN0aXZhdGUpLGkuZGVmYXVsdC5mdW5jKGUub25kcm9wZGVhY3RpdmF0ZSkmJnQub24oXCJkcm9wZGVhY3RpdmF0ZVwiLGUub25kcm9wZGVhY3RpdmF0ZSksaS5kZWZhdWx0LmZ1bmMoZS5vbmRyYWdlbnRlcikmJnQub24oXCJkcmFnZW50ZXJcIixlLm9uZHJhZ2VudGVyKSxpLmRlZmF1bHQuZnVuYyhlLm9uZHJhZ2xlYXZlKSYmdC5vbihcImRyYWdsZWF2ZVwiLGUub25kcmFnbGVhdmUpLGkuZGVmYXVsdC5mdW5jKGUub25kcm9wbW92ZSkmJnQub24oXCJkcm9wbW92ZVwiLGUub25kcm9wbW92ZSksL14ocG9pbnRlcnxjZW50ZXIpJC8udGVzdChlLm92ZXJsYXApP3Qub3B0aW9ucy5kcm9wLm92ZXJsYXA9ZS5vdmVybGFwOmkuZGVmYXVsdC5udW1iZXIoZS5vdmVybGFwKSYmKHQub3B0aW9ucy5kcm9wLm92ZXJsYXA9TWF0aC5tYXgoTWF0aC5taW4oMSxlLm92ZXJsYXApLDApKSxcImFjY2VwdFwiaW4gZSYmKHQub3B0aW9ucy5kcm9wLmFjY2VwdD1lLmFjY2VwdCksXCJjaGVja2VyXCJpbiBlJiYodC5vcHRpb25zLmRyb3AuY2hlY2tlcj1lLmNoZWNrZXIpLHR9cmV0dXJuIGkuZGVmYXVsdC5ib29sKGUpPyh0Lm9wdGlvbnMuZHJvcC5lbmFibGVkPWUsdCk6dC5vcHRpb25zLmRyb3B9KHRoaXMsdCl9LHIucHJvdG90eXBlLmRyb3BDaGVjaz1mdW5jdGlvbih0LGUsbixyLG8sYSl7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLHIsbyxhLHMpe3ZhciBsPSExO2lmKCEocz1zfHx0LmdldFJlY3QoYSkpKXJldHVybiEhdC5vcHRpb25zLmRyb3AuY2hlY2tlciYmdC5vcHRpb25zLmRyb3AuY2hlY2tlcihlLG4sbCx0LGEscixvKTt2YXIgdT10Lm9wdGlvbnMuZHJvcC5vdmVybGFwO2lmKFwicG9pbnRlclwiPT09dSl7dmFyIGM9KDAsQS5kZWZhdWx0KShyLG8sXCJkcmFnXCIpLGY9WC5nZXRQYWdlWFkoZSk7Zi54Kz1jLngsZi55Kz1jLnk7dmFyIGQ9Zi54PnMubGVmdCYmZi54PHMucmlnaHQscD1mLnk+cy50b3AmJmYueTxzLmJvdHRvbTtsPWQmJnB9dmFyIHY9ci5nZXRSZWN0KG8pO2lmKHYmJlwiY2VudGVyXCI9PT11KXt2YXIgaD12LmxlZnQrdi53aWR0aC8yLGc9di50b3Ardi5oZWlnaHQvMjtsPWg+PXMubGVmdCYmaDw9cy5yaWdodCYmZz49cy50b3AmJmc8PXMuYm90dG9tfXJldHVybiB2JiZpLmRlZmF1bHQubnVtYmVyKHUpJiYobD1NYXRoLm1heCgwLE1hdGgubWluKHMucmlnaHQsdi5yaWdodCktTWF0aC5tYXgocy5sZWZ0LHYubGVmdCkpKk1hdGgubWF4KDAsTWF0aC5taW4ocy5ib3R0b20sdi5ib3R0b20pLU1hdGgubWF4KHMudG9wLHYudG9wKSkvKHYud2lkdGgqdi5oZWlnaHQpPj11KSx0Lm9wdGlvbnMuZHJvcC5jaGVja2VyJiYobD10Lm9wdGlvbnMuZHJvcC5jaGVja2VyKGUsbixsLHQsYSxyLG8pKSxsfSh0aGlzLHQsZSxuLHIsbyxhKX0sbi5keW5hbWljRHJvcD1mdW5jdGlvbihlKXtyZXR1cm4gaS5kZWZhdWx0LmJvb2woZSk/KHQuZHluYW1pY0Ryb3A9ZSxuKTp0LmR5bmFtaWNEcm9wfSwoMCxNLmRlZmF1bHQpKGUucGhhc2VsZXNzVHlwZXMse2RyYWdlbnRlcjohMCxkcmFnbGVhdmU6ITAsZHJvcGFjdGl2YXRlOiEwLGRyb3BkZWFjdGl2YXRlOiEwLGRyb3Btb3ZlOiEwLGRyb3A6ITB9KSxlLm1ldGhvZERpY3QuZHJvcD1cImRyb3B6b25lXCIsdC5keW5hbWljRHJvcD0hMSxvLmFjdGlvbnMuZHJvcD12dC5kZWZhdWx0c30sbGlzdGVuZXJzOntcImludGVyYWN0aW9uczpiZWZvcmUtYWN0aW9uLXN0YXJ0XCI6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbjtcImRyYWdcIj09PWUucHJlcGFyZWQubmFtZSYmKGUuZHJvcFN0YXRlPXtjdXI6e2Ryb3B6b25lOm51bGwsZWxlbWVudDpudWxsfSxwcmV2Ontkcm9wem9uZTpudWxsLGVsZW1lbnQ6bnVsbH0scmVqZWN0ZWQ6bnVsbCxldmVudHM6bnVsbCxhY3RpdmVEcm9wczpbXX0pfSxcImludGVyYWN0aW9uczphZnRlci1hY3Rpb24tc3RhcnRcIjpmdW5jdGlvbih0LGUpe3ZhciBuPXQuaW50ZXJhY3Rpb24scj0odC5ldmVudCx0LmlFdmVudCk7aWYoXCJkcmFnXCI9PT1uLnByZXBhcmVkLm5hbWUpe3ZhciBvPW4uZHJvcFN0YXRlO28uYWN0aXZlRHJvcHM9bnVsbCxvLmV2ZW50cz1udWxsLG8uYWN0aXZlRHJvcHM9dXQoZSxuLmVsZW1lbnQpLG8uZXZlbnRzPWZ0KG4sMCxyKSxvLmV2ZW50cy5hY3RpdmF0ZSYmKGx0KG8uYWN0aXZlRHJvcHMsby5ldmVudHMuYWN0aXZhdGUpLGUuZmlyZShcImFjdGlvbnMvZHJvcDpzdGFydFwiLHtpbnRlcmFjdGlvbjpuLGRyYWdFdmVudDpyfSkpfX0sXCJpbnRlcmFjdGlvbnM6YWN0aW9uLW1vdmVcIjpwdCxcImludGVyYWN0aW9uczphZnRlci1hY3Rpb24tbW92ZVwiOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5pbnRlcmFjdGlvbixyPXQuaUV2ZW50O1wiZHJhZ1wiPT09bi5wcmVwYXJlZC5uYW1lJiYoZHQobixuLmRyb3BTdGF0ZS5ldmVudHMpLGUuZmlyZShcImFjdGlvbnMvZHJvcDptb3ZlXCIse2ludGVyYWN0aW9uOm4sZHJhZ0V2ZW50OnJ9KSxuLmRyb3BTdGF0ZS5ldmVudHM9e30pfSxcImludGVyYWN0aW9uczphY3Rpb24tZW5kXCI6ZnVuY3Rpb24odCxlKXtpZihcImRyYWdcIj09PXQuaW50ZXJhY3Rpb24ucHJlcGFyZWQubmFtZSl7dmFyIG49dC5pbnRlcmFjdGlvbixyPXQuaUV2ZW50O3B0KHQsZSksZHQobixuLmRyb3BTdGF0ZS5ldmVudHMpLGUuZmlyZShcImFjdGlvbnMvZHJvcDplbmRcIix7aW50ZXJhY3Rpb246bixkcmFnRXZlbnQ6cn0pfX0sXCJpbnRlcmFjdGlvbnM6c3RvcFwiOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW50ZXJhY3Rpb247aWYoXCJkcmFnXCI9PT1lLnByZXBhcmVkLm5hbWUpe3ZhciBuPWUuZHJvcFN0YXRlO24mJihuLmFjdGl2ZURyb3BzPW51bGwsbi5ldmVudHM9bnVsbCxuLmN1ci5kcm9wem9uZT1udWxsLG4uY3VyLmVsZW1lbnQ9bnVsbCxuLnByZXYuZHJvcHpvbmU9bnVsbCxuLnByZXYuZWxlbWVudD1udWxsLG4ucmVqZWN0ZWQ9ITEpfX19LGdldEFjdGl2ZURyb3BzOnV0LGdldERyb3A6Y3QsZ2V0RHJvcEV2ZW50czpmdCxmaXJlRHJvcEV2ZW50czpkdCxkZWZhdWx0czp7ZW5hYmxlZDohMSxhY2NlcHQ6bnVsbCxvdmVybGFwOlwicG9pbnRlclwifX0saHQ9dnQ7c3QuZGVmYXVsdD1odDt2YXIgZ3Q9e307ZnVuY3Rpb24geXQodCl7dmFyIGU9dC5pbnRlcmFjdGlvbixuPXQuaUV2ZW50LHI9dC5waGFzZTtpZihcImdlc3R1cmVcIj09PWUucHJlcGFyZWQubmFtZSl7dmFyIG89ZS5wb2ludGVycy5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LnBvaW50ZXJ9KSksYT1cInN0YXJ0XCI9PT1yLHM9XCJlbmRcIj09PXIsbD1lLmludGVyYWN0YWJsZS5vcHRpb25zLmRlbHRhU291cmNlO2lmKG4udG91Y2hlcz1bb1swXSxvWzFdXSxhKW4uZGlzdGFuY2U9WC50b3VjaERpc3RhbmNlKG8sbCksbi5ib3g9WC50b3VjaEJCb3gobyksbi5zY2FsZT0xLG4uZHM9MCxuLmFuZ2xlPVgudG91Y2hBbmdsZShvLGwpLG4uZGE9MCxlLmdlc3R1cmUuc3RhcnREaXN0YW5jZT1uLmRpc3RhbmNlLGUuZ2VzdHVyZS5zdGFydEFuZ2xlPW4uYW5nbGU7ZWxzZSBpZihzKXt2YXIgdT1lLnByZXZFdmVudDtuLmRpc3RhbmNlPXUuZGlzdGFuY2Usbi5ib3g9dS5ib3gsbi5zY2FsZT11LnNjYWxlLG4uZHM9MCxuLmFuZ2xlPXUuYW5nbGUsbi5kYT0wfWVsc2Ugbi5kaXN0YW5jZT1YLnRvdWNoRGlzdGFuY2UobyxsKSxuLmJveD1YLnRvdWNoQkJveChvKSxuLnNjYWxlPW4uZGlzdGFuY2UvZS5nZXN0dXJlLnN0YXJ0RGlzdGFuY2Usbi5hbmdsZT1YLnRvdWNoQW5nbGUobyxsKSxuLmRzPW4uc2NhbGUtZS5nZXN0dXJlLnNjYWxlLG4uZGE9bi5hbmdsZS1lLmdlc3R1cmUuYW5nbGU7ZS5nZXN0dXJlLmRpc3RhbmNlPW4uZGlzdGFuY2UsZS5nZXN0dXJlLmFuZ2xlPW4uYW5nbGUsaS5kZWZhdWx0Lm51bWJlcihuLnNjYWxlKSYmbi5zY2FsZSE9PTEvMCYmIWlzTmFOKG4uc2NhbGUpJiYoZS5nZXN0dXJlLnNjYWxlPW4uc2NhbGUpfX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZ3QsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZ3QuZGVmYXVsdD12b2lkIDA7dmFyIG10PXtpZDpcImFjdGlvbnMvZ2VzdHVyZVwiLGJlZm9yZTpbXCJhY3Rpb25zL2RyYWdcIixcImFjdGlvbnMvcmVzaXplXCJdLGluc3RhbGw6ZnVuY3Rpb24odCl7dmFyIGU9dC5hY3Rpb25zLG49dC5JbnRlcmFjdGFibGUscj10LmRlZmF1bHRzO24ucHJvdG90eXBlLmdlc3R1cmFibGU9ZnVuY3Rpb24odCl7cmV0dXJuIGkuZGVmYXVsdC5vYmplY3QodCk/KHRoaXMub3B0aW9ucy5nZXN0dXJlLmVuYWJsZWQ9ITEhPT10LmVuYWJsZWQsdGhpcy5zZXRQZXJBY3Rpb24oXCJnZXN0dXJlXCIsdCksdGhpcy5zZXRPbkV2ZW50cyhcImdlc3R1cmVcIix0KSx0aGlzKTppLmRlZmF1bHQuYm9vbCh0KT8odGhpcy5vcHRpb25zLmdlc3R1cmUuZW5hYmxlZD10LHRoaXMpOnRoaXMub3B0aW9ucy5nZXN0dXJlfSxlLm1hcC5nZXN0dXJlPW10LGUubWV0aG9kRGljdC5nZXN0dXJlPVwiZ2VzdHVyYWJsZVwiLHIuYWN0aW9ucy5nZXN0dXJlPW10LmRlZmF1bHRzfSxsaXN0ZW5lcnM6e1wiaW50ZXJhY3Rpb25zOmFjdGlvbi1zdGFydFwiOnl0LFwiaW50ZXJhY3Rpb25zOmFjdGlvbi1tb3ZlXCI6eXQsXCJpbnRlcmFjdGlvbnM6YWN0aW9uLWVuZFwiOnl0LFwiaW50ZXJhY3Rpb25zOm5ld1wiOmZ1bmN0aW9uKHQpe3QuaW50ZXJhY3Rpb24uZ2VzdHVyZT17YW5nbGU6MCxkaXN0YW5jZTowLHNjYWxlOjEsc3RhcnRBbmdsZTowLHN0YXJ0RGlzdGFuY2U6MH19LFwiYXV0by1zdGFydDpjaGVja1wiOmZ1bmN0aW9uKHQpe2lmKCEodC5pbnRlcmFjdGlvbi5wb2ludGVycy5sZW5ndGg8Mikpe3ZhciBlPXQuaW50ZXJhY3RhYmxlLm9wdGlvbnMuZ2VzdHVyZTtpZihlJiZlLmVuYWJsZWQpcmV0dXJuIHQuYWN0aW9uPXtuYW1lOlwiZ2VzdHVyZVwifSwhMX19fSxkZWZhdWx0czp7fSxnZXRDdXJzb3I6ZnVuY3Rpb24oKXtyZXR1cm5cIlwifX0sYnQ9bXQ7Z3QuZGVmYXVsdD1idDt2YXIgeHQ9e307ZnVuY3Rpb24gd3QodCxlLG4scixvLGEscyl7aWYoIWUpcmV0dXJuITE7aWYoITA9PT1lKXt2YXIgbD1pLmRlZmF1bHQubnVtYmVyKGEud2lkdGgpP2Eud2lkdGg6YS5yaWdodC1hLmxlZnQsdT1pLmRlZmF1bHQubnVtYmVyKGEuaGVpZ2h0KT9hLmhlaWdodDphLmJvdHRvbS1hLnRvcDtpZihzPU1hdGgubWluKHMsTWF0aC5hYnMoKFwibGVmdFwiPT09dHx8XCJyaWdodFwiPT09dD9sOnUpLzIpKSxsPDAmJihcImxlZnRcIj09PXQ/dD1cInJpZ2h0XCI6XCJyaWdodFwiPT09dCYmKHQ9XCJsZWZ0XCIpKSx1PDAmJihcInRvcFwiPT09dD90PVwiYm90dG9tXCI6XCJib3R0b21cIj09PXQmJih0PVwidG9wXCIpKSxcImxlZnRcIj09PXQpe3ZhciBjPWw+PTA/YS5sZWZ0OmEucmlnaHQ7cmV0dXJuIG4ueDxjK3N9aWYoXCJ0b3BcIj09PXQpe3ZhciBmPXU+PTA/YS50b3A6YS5ib3R0b207cmV0dXJuIG4ueTxmK3N9aWYoXCJyaWdodFwiPT09dClyZXR1cm4gbi54PihsPj0wP2EucmlnaHQ6YS5sZWZ0KS1zO2lmKFwiYm90dG9tXCI9PT10KXJldHVybiBuLnk+KHU+PTA/YS5ib3R0b206YS50b3ApLXN9cmV0dXJuISFpLmRlZmF1bHQuZWxlbWVudChyKSYmKGkuZGVmYXVsdC5lbGVtZW50KGUpP2U9PT1yOl8ubWF0Y2hlc1VwVG8ocixlLG8pKX1mdW5jdGlvbiBfdCh0KXt2YXIgZT10LmlFdmVudCxuPXQuaW50ZXJhY3Rpb247aWYoXCJyZXNpemVcIj09PW4ucHJlcGFyZWQubmFtZSYmbi5yZXNpemVBeGVzKXt2YXIgcj1lO24uaW50ZXJhY3RhYmxlLm9wdGlvbnMucmVzaXplLnNxdWFyZT8oXCJ5XCI9PT1uLnJlc2l6ZUF4ZXM/ci5kZWx0YS54PXIuZGVsdGEueTpyLmRlbHRhLnk9ci5kZWx0YS54LHIuYXhlcz1cInh5XCIpOihyLmF4ZXM9bi5yZXNpemVBeGVzLFwieFwiPT09bi5yZXNpemVBeGVzP3IuZGVsdGEueT0wOlwieVwiPT09bi5yZXNpemVBeGVzJiYoci5kZWx0YS54PTApKX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHh0LmRlZmF1bHQ9dm9pZCAwO3ZhciBQdD17aWQ6XCJhY3Rpb25zL3Jlc2l6ZVwiLGJlZm9yZTpbXCJhY3Rpb25zL2RyYWdcIl0saW5zdGFsbDpmdW5jdGlvbih0KXt2YXIgZT10LmFjdGlvbnMsbj10LmJyb3dzZXIscj10LkludGVyYWN0YWJsZSxvPXQuZGVmYXVsdHM7UHQuY3Vyc29ycz1mdW5jdGlvbih0KXtyZXR1cm4gdC5pc0llOT97eDpcImUtcmVzaXplXCIseTpcInMtcmVzaXplXCIseHk6XCJzZS1yZXNpemVcIix0b3A6XCJuLXJlc2l6ZVwiLGxlZnQ6XCJ3LXJlc2l6ZVwiLGJvdHRvbTpcInMtcmVzaXplXCIscmlnaHQ6XCJlLXJlc2l6ZVwiLHRvcGxlZnQ6XCJzZS1yZXNpemVcIixib3R0b21yaWdodDpcInNlLXJlc2l6ZVwiLHRvcHJpZ2h0OlwibmUtcmVzaXplXCIsYm90dG9tbGVmdDpcIm5lLXJlc2l6ZVwifTp7eDpcImV3LXJlc2l6ZVwiLHk6XCJucy1yZXNpemVcIix4eTpcIm53c2UtcmVzaXplXCIsdG9wOlwibnMtcmVzaXplXCIsbGVmdDpcImV3LXJlc2l6ZVwiLGJvdHRvbTpcIm5zLXJlc2l6ZVwiLHJpZ2h0OlwiZXctcmVzaXplXCIsdG9wbGVmdDpcIm53c2UtcmVzaXplXCIsYm90dG9tcmlnaHQ6XCJud3NlLXJlc2l6ZVwiLHRvcHJpZ2h0OlwibmVzdy1yZXNpemVcIixib3R0b21sZWZ0OlwibmVzdy1yZXNpemVcIn19KG4pLFB0LmRlZmF1bHRNYXJnaW49bi5zdXBwb3J0c1RvdWNofHxuLnN1cHBvcnRzUG9pbnRlckV2ZW50PzIwOjEwLHIucHJvdG90eXBlLnJlc2l6YWJsZT1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe3JldHVybiBpLmRlZmF1bHQub2JqZWN0KGUpPyh0Lm9wdGlvbnMucmVzaXplLmVuYWJsZWQ9ITEhPT1lLmVuYWJsZWQsdC5zZXRQZXJBY3Rpb24oXCJyZXNpemVcIixlKSx0LnNldE9uRXZlbnRzKFwicmVzaXplXCIsZSksaS5kZWZhdWx0LnN0cmluZyhlLmF4aXMpJiYvXngkfF55JHxeeHkkLy50ZXN0KGUuYXhpcyk/dC5vcHRpb25zLnJlc2l6ZS5heGlzPWUuYXhpczpudWxsPT09ZS5heGlzJiYodC5vcHRpb25zLnJlc2l6ZS5heGlzPW4uZGVmYXVsdHMuYWN0aW9ucy5yZXNpemUuYXhpcyksaS5kZWZhdWx0LmJvb2woZS5wcmVzZXJ2ZUFzcGVjdFJhdGlvKT90Lm9wdGlvbnMucmVzaXplLnByZXNlcnZlQXNwZWN0UmF0aW89ZS5wcmVzZXJ2ZUFzcGVjdFJhdGlvOmkuZGVmYXVsdC5ib29sKGUuc3F1YXJlKSYmKHQub3B0aW9ucy5yZXNpemUuc3F1YXJlPWUuc3F1YXJlKSx0KTppLmRlZmF1bHQuYm9vbChlKT8odC5vcHRpb25zLnJlc2l6ZS5lbmFibGVkPWUsdCk6dC5vcHRpb25zLnJlc2l6ZX0odGhpcyxlLHQpfSxlLm1hcC5yZXNpemU9UHQsZS5tZXRob2REaWN0LnJlc2l6ZT1cInJlc2l6YWJsZVwiLG8uYWN0aW9ucy5yZXNpemU9UHQuZGVmYXVsdHN9LGxpc3RlbmVyczp7XCJpbnRlcmFjdGlvbnM6bmV3XCI6ZnVuY3Rpb24odCl7dC5pbnRlcmFjdGlvbi5yZXNpemVBeGVzPVwieHlcIn0sXCJpbnRlcmFjdGlvbnM6YWN0aW9uLXN0YXJ0XCI6ZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQpe3ZhciBlPXQuaUV2ZW50LG49dC5pbnRlcmFjdGlvbjtpZihcInJlc2l6ZVwiPT09bi5wcmVwYXJlZC5uYW1lJiZuLnByZXBhcmVkLmVkZ2VzKXt2YXIgcj1lLG89bi5yZWN0O24uX3JlY3RzPXtzdGFydDooMCxNLmRlZmF1bHQpKHt9LG8pLGNvcnJlY3RlZDooMCxNLmRlZmF1bHQpKHt9LG8pLHByZXZpb3VzOigwLE0uZGVmYXVsdCkoe30sbyksZGVsdGE6e2xlZnQ6MCxyaWdodDowLHdpZHRoOjAsdG9wOjAsYm90dG9tOjAsaGVpZ2h0OjB9fSxyLmVkZ2VzPW4ucHJlcGFyZWQuZWRnZXMsci5yZWN0PW4uX3JlY3RzLmNvcnJlY3RlZCxyLmRlbHRhUmVjdD1uLl9yZWN0cy5kZWx0YX19KHQpLF90KHQpfSxcImludGVyYWN0aW9uczphY3Rpb24tbW92ZVwiOmZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0KXt2YXIgZT10LmlFdmVudCxuPXQuaW50ZXJhY3Rpb247aWYoXCJyZXNpemVcIj09PW4ucHJlcGFyZWQubmFtZSYmbi5wcmVwYXJlZC5lZGdlcyl7dmFyIHI9ZSxvPW4uaW50ZXJhY3RhYmxlLm9wdGlvbnMucmVzaXplLmludmVydCxpPVwicmVwb3NpdGlvblwiPT09b3x8XCJuZWdhdGVcIj09PW8sYT1uLnJlY3Qscz1uLl9yZWN0cyxsPXMuc3RhcnQsdT1zLmNvcnJlY3RlZCxjPXMuZGVsdGEsZj1zLnByZXZpb3VzO2lmKCgwLE0uZGVmYXVsdCkoZix1KSxpKXtpZigoMCxNLmRlZmF1bHQpKHUsYSksXCJyZXBvc2l0aW9uXCI9PT1vKXtpZih1LnRvcD51LmJvdHRvbSl7dmFyIGQ9dS50b3A7dS50b3A9dS5ib3R0b20sdS5ib3R0b209ZH1pZih1LmxlZnQ+dS5yaWdodCl7dmFyIHA9dS5sZWZ0O3UubGVmdD11LnJpZ2h0LHUucmlnaHQ9cH19fWVsc2UgdS50b3A9TWF0aC5taW4oYS50b3AsbC5ib3R0b20pLHUuYm90dG9tPU1hdGgubWF4KGEuYm90dG9tLGwudG9wKSx1LmxlZnQ9TWF0aC5taW4oYS5sZWZ0LGwucmlnaHQpLHUucmlnaHQ9TWF0aC5tYXgoYS5yaWdodCxsLmxlZnQpO2Zvcih2YXIgdiBpbiB1LndpZHRoPXUucmlnaHQtdS5sZWZ0LHUuaGVpZ2h0PXUuYm90dG9tLXUudG9wLHUpY1t2XT11W3ZdLWZbdl07ci5lZGdlcz1uLnByZXBhcmVkLmVkZ2VzLHIucmVjdD11LHIuZGVsdGFSZWN0PWN9fSh0KSxfdCh0KX0sXCJpbnRlcmFjdGlvbnM6YWN0aW9uLWVuZFwiOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaUV2ZW50LG49dC5pbnRlcmFjdGlvbjtpZihcInJlc2l6ZVwiPT09bi5wcmVwYXJlZC5uYW1lJiZuLnByZXBhcmVkLmVkZ2VzKXt2YXIgcj1lO3IuZWRnZXM9bi5wcmVwYXJlZC5lZGdlcyxyLnJlY3Q9bi5fcmVjdHMuY29ycmVjdGVkLHIuZGVsdGFSZWN0PW4uX3JlY3RzLmRlbHRhfX0sXCJhdXRvLXN0YXJ0OmNoZWNrXCI6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbixuPXQuaW50ZXJhY3RhYmxlLHI9dC5lbGVtZW50LG89dC5yZWN0LGE9dC5idXR0b25zO2lmKG8pe3ZhciBzPSgwLE0uZGVmYXVsdCkoe30sZS5jb29yZHMuY3VyLnBhZ2UpLGw9bi5vcHRpb25zLnJlc2l6ZTtpZihsJiZsLmVuYWJsZWQmJighZS5wb2ludGVySXNEb3dufHwhL21vdXNlfHBvaW50ZXIvLnRlc3QoZS5wb2ludGVyVHlwZSl8fDAhPShhJmwubW91c2VCdXR0b25zKSkpe2lmKGkuZGVmYXVsdC5vYmplY3QobC5lZGdlcykpe3ZhciB1PXtsZWZ0OiExLHJpZ2h0OiExLHRvcDohMSxib3R0b206ITF9O2Zvcih2YXIgYyBpbiB1KXVbY109d3QoYyxsLmVkZ2VzW2NdLHMsZS5fbGF0ZXN0UG9pbnRlci5ldmVudFRhcmdldCxyLG8sbC5tYXJnaW58fFB0LmRlZmF1bHRNYXJnaW4pO3UubGVmdD11LmxlZnQmJiF1LnJpZ2h0LHUudG9wPXUudG9wJiYhdS5ib3R0b20sKHUubGVmdHx8dS5yaWdodHx8dS50b3B8fHUuYm90dG9tKSYmKHQuYWN0aW9uPXtuYW1lOlwicmVzaXplXCIsZWRnZXM6dX0pfWVsc2V7dmFyIGY9XCJ5XCIhPT1sLmF4aXMmJnMueD5vLnJpZ2h0LVB0LmRlZmF1bHRNYXJnaW4sZD1cInhcIiE9PWwuYXhpcyYmcy55Pm8uYm90dG9tLVB0LmRlZmF1bHRNYXJnaW47KGZ8fGQpJiYodC5hY3Rpb249e25hbWU6XCJyZXNpemVcIixheGVzOihmP1wieFwiOlwiXCIpKyhkP1wieVwiOlwiXCIpfSl9cmV0dXJuIXQuYWN0aW9uJiZ2b2lkIDB9fX19LGRlZmF1bHRzOntzcXVhcmU6ITEscHJlc2VydmVBc3BlY3RSYXRpbzohMSxheGlzOlwieHlcIixtYXJnaW46TmFOLGVkZ2VzOm51bGwsaW52ZXJ0Olwibm9uZVwifSxjdXJzb3JzOm51bGwsZ2V0Q3Vyc29yOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZWRnZXMsbj10LmF4aXMscj10Lm5hbWUsbz1QdC5jdXJzb3JzLGk9bnVsbDtpZihuKWk9b1tyK25dO2Vsc2UgaWYoZSl7Zm9yKHZhciBhPVwiXCIscz1bXCJ0b3BcIixcImJvdHRvbVwiLFwibGVmdFwiLFwicmlnaHRcIl0sbD0wO2w8cy5sZW5ndGg7bCsrKXt2YXIgdT1zW2xdO2VbdV0mJihhKz11KX1pPW9bYV19cmV0dXJuIGl9LGRlZmF1bHRNYXJnaW46bnVsbH0sT3Q9UHQ7eHQuZGVmYXVsdD1PdDt2YXIgRXQ9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KEV0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLEV0LmRlZmF1bHQ9dm9pZCAwO3ZhciBTdD17aWQ6XCJhY3Rpb25zXCIsaW5zdGFsbDpmdW5jdGlvbih0KXt0LnVzZVBsdWdpbihndC5kZWZhdWx0KSx0LnVzZVBsdWdpbih4dC5kZWZhdWx0KSx0LnVzZVBsdWdpbihjLmRlZmF1bHQpLHQudXNlUGx1Z2luKHN0LmRlZmF1bHQpfX07RXQuZGVmYXVsdD1TdDt2YXIgVHQ9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KFR0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLFR0LmRlZmF1bHQ9dm9pZCAwO3ZhciBqdCxNdCxrdD0wLEl0PXtyZXF1ZXN0OmZ1bmN0aW9uKHQpe3JldHVybiBqdCh0KX0sY2FuY2VsOmZ1bmN0aW9uKHQpe3JldHVybiBNdCh0KX0saW5pdDpmdW5jdGlvbih0KXtpZihqdD10LnJlcXVlc3RBbmltYXRpb25GcmFtZSxNdD10LmNhbmNlbEFuaW1hdGlvbkZyYW1lLCFqdClmb3IodmFyIGU9W1wibXNcIixcIm1velwiLFwid2Via2l0XCIsXCJvXCJdLG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXTtqdD10W1wiXCIuY29uY2F0KHIsXCJSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcIildLE10PXRbXCJcIi5jb25jYXQocixcIkNhbmNlbEFuaW1hdGlvbkZyYW1lXCIpXXx8dFtcIlwiLmNvbmNhdChyLFwiQ2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lXCIpXX1qdD1qdCYmanQuYmluZCh0KSxNdD1NdCYmTXQuYmluZCh0KSxqdHx8KGp0PWZ1bmN0aW9uKGUpe3ZhciBuPURhdGUubm93KCkscj1NYXRoLm1heCgwLDE2LShuLWt0KSksbz10LnNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7ZShuK3IpfSkscik7cmV0dXJuIGt0PW4rcixvfSxNdD1mdW5jdGlvbih0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KHQpfSl9fTtUdC5kZWZhdWx0PUl0O3ZhciBEdD17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoRHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksRHQuZGVmYXVsdD12b2lkIDAsRHQuZ2V0Q29udGFpbmVyPXp0LER0LmdldFNjcm9sbD1DdCxEdC5nZXRTY3JvbGxTaXplPWZ1bmN0aW9uKHQpe3JldHVybiBpLmRlZmF1bHQud2luZG93KHQpJiYodD13aW5kb3cuZG9jdW1lbnQuYm9keSkse3g6dC5zY3JvbGxXaWR0aCx5OnQuc2Nyb2xsSGVpZ2h0fX0sRHQuZ2V0U2Nyb2xsU2l6ZURlbHRhPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5pbnRlcmFjdGlvbixyPXQuZWxlbWVudCxvPW4mJm4uaW50ZXJhY3RhYmxlLm9wdGlvbnNbbi5wcmVwYXJlZC5uYW1lXS5hdXRvU2Nyb2xsO2lmKCFvfHwhby5lbmFibGVkKXJldHVybiBlKCkse3g6MCx5OjB9O3ZhciBpPXp0KG8uY29udGFpbmVyLG4uaW50ZXJhY3RhYmxlLHIpLGE9Q3QoaSk7ZSgpO3ZhciBzPUN0KGkpO3JldHVybnt4OnMueC1hLngseTpzLnktYS55fX07dmFyIEF0PXtkZWZhdWx0czp7ZW5hYmxlZDohMSxtYXJnaW46NjAsY29udGFpbmVyOm51bGwsc3BlZWQ6MzAwfSxub3c6RGF0ZS5ub3csaW50ZXJhY3Rpb246bnVsbCxpOjAseDowLHk6MCxpc1Njcm9sbGluZzohMSxwcmV2VGltZTowLG1hcmdpbjowLHNwZWVkOjAsc3RhcnQ6ZnVuY3Rpb24odCl7QXQuaXNTY3JvbGxpbmc9ITAsVHQuZGVmYXVsdC5jYW5jZWwoQXQuaSksdC5hdXRvU2Nyb2xsPUF0LEF0LmludGVyYWN0aW9uPXQsQXQucHJldlRpbWU9QXQubm93KCksQXQuaT1UdC5kZWZhdWx0LnJlcXVlc3QoQXQuc2Nyb2xsKX0sc3RvcDpmdW5jdGlvbigpe0F0LmlzU2Nyb2xsaW5nPSExLEF0LmludGVyYWN0aW9uJiYoQXQuaW50ZXJhY3Rpb24uYXV0b1Njcm9sbD1udWxsKSxUdC5kZWZhdWx0LmNhbmNlbChBdC5pKX0sc2Nyb2xsOmZ1bmN0aW9uKCl7dmFyIHQ9QXQuaW50ZXJhY3Rpb24sZT10LmludGVyYWN0YWJsZSxuPXQuZWxlbWVudCxyPXQucHJlcGFyZWQubmFtZSxvPWUub3B0aW9uc1tyXS5hdXRvU2Nyb2xsLGE9enQoby5jb250YWluZXIsZSxuKSxzPUF0Lm5vdygpLGw9KHMtQXQucHJldlRpbWUpLzFlMyx1PW8uc3BlZWQqbDtpZih1Pj0xKXt2YXIgYz17eDpBdC54KnUseTpBdC55KnV9O2lmKGMueHx8Yy55KXt2YXIgZj1DdChhKTtpLmRlZmF1bHQud2luZG93KGEpP2Euc2Nyb2xsQnkoYy54LGMueSk6YSYmKGEuc2Nyb2xsTGVmdCs9Yy54LGEuc2Nyb2xsVG9wKz1jLnkpO3ZhciBkPUN0KGEpLHA9e3g6ZC54LWYueCx5OmQueS1mLnl9OyhwLnh8fHAueSkmJmUuZmlyZSh7dHlwZTpcImF1dG9zY3JvbGxcIix0YXJnZXQ6bixpbnRlcmFjdGFibGU6ZSxkZWx0YTpwLGludGVyYWN0aW9uOnQsY29udGFpbmVyOmF9KX1BdC5wcmV2VGltZT1zfUF0LmlzU2Nyb2xsaW5nJiYoVHQuZGVmYXVsdC5jYW5jZWwoQXQuaSksQXQuaT1UdC5kZWZhdWx0LnJlcXVlc3QoQXQuc2Nyb2xsKSl9LGNoZWNrOmZ1bmN0aW9uKHQsZSl7dmFyIG47cmV0dXJuIG51bGw9PShuPXQub3B0aW9uc1tlXS5hdXRvU2Nyb2xsKT92b2lkIDA6bi5lbmFibGVkfSxvbkludGVyYWN0aW9uTW92ZTpmdW5jdGlvbih0KXt2YXIgZT10LmludGVyYWN0aW9uLG49dC5wb2ludGVyO2lmKGUuaW50ZXJhY3RpbmcoKSYmQXQuY2hlY2soZS5pbnRlcmFjdGFibGUsZS5wcmVwYXJlZC5uYW1lKSlpZihlLnNpbXVsYXRpb24pQXQueD1BdC55PTA7ZWxzZXt2YXIgcixvLGEscyxsPWUuaW50ZXJhY3RhYmxlLHU9ZS5lbGVtZW50LGM9ZS5wcmVwYXJlZC5uYW1lLGY9bC5vcHRpb25zW2NdLmF1dG9TY3JvbGwsZD16dChmLmNvbnRhaW5lcixsLHUpO2lmKGkuZGVmYXVsdC53aW5kb3coZCkpcz1uLmNsaWVudFg8QXQubWFyZ2luLHI9bi5jbGllbnRZPEF0Lm1hcmdpbixvPW4uY2xpZW50WD5kLmlubmVyV2lkdGgtQXQubWFyZ2luLGE9bi5jbGllbnRZPmQuaW5uZXJIZWlnaHQtQXQubWFyZ2luO2Vsc2V7dmFyIHA9Xy5nZXRFbGVtZW50Q2xpZW50UmVjdChkKTtzPW4uY2xpZW50WDxwLmxlZnQrQXQubWFyZ2luLHI9bi5jbGllbnRZPHAudG9wK0F0Lm1hcmdpbixvPW4uY2xpZW50WD5wLnJpZ2h0LUF0Lm1hcmdpbixhPW4uY2xpZW50WT5wLmJvdHRvbS1BdC5tYXJnaW59QXQueD1vPzE6cz8tMTowLEF0Lnk9YT8xOnI/LTE6MCxBdC5pc1Njcm9sbGluZ3x8KEF0Lm1hcmdpbj1mLm1hcmdpbixBdC5zcGVlZD1mLnNwZWVkLEF0LnN0YXJ0KGUpKX19fTtmdW5jdGlvbiB6dCh0LG4scil7cmV0dXJuKGkuZGVmYXVsdC5zdHJpbmcodCk/KDAsay5nZXRTdHJpbmdPcHRpb25SZXN1bHQpKHQsbixyKTp0KXx8KDAsZS5nZXRXaW5kb3cpKHIpfWZ1bmN0aW9uIEN0KHQpe3JldHVybiBpLmRlZmF1bHQud2luZG93KHQpJiYodD13aW5kb3cuZG9jdW1lbnQuYm9keSkse3g6dC5zY3JvbGxMZWZ0LHk6dC5zY3JvbGxUb3B9fXZhciBSdD17aWQ6XCJhdXRvLXNjcm9sbFwiLGluc3RhbGw6ZnVuY3Rpb24odCl7dmFyIGU9dC5kZWZhdWx0cyxuPXQuYWN0aW9uczt0LmF1dG9TY3JvbGw9QXQsQXQubm93PWZ1bmN0aW9uKCl7cmV0dXJuIHQubm93KCl9LG4ucGhhc2VsZXNzVHlwZXMuYXV0b3Njcm9sbD0hMCxlLnBlckFjdGlvbi5hdXRvU2Nyb2xsPUF0LmRlZmF1bHRzfSxsaXN0ZW5lcnM6e1wiaW50ZXJhY3Rpb25zOm5ld1wiOmZ1bmN0aW9uKHQpe3QuaW50ZXJhY3Rpb24uYXV0b1Njcm9sbD1udWxsfSxcImludGVyYWN0aW9uczpkZXN0cm95XCI6ZnVuY3Rpb24odCl7dC5pbnRlcmFjdGlvbi5hdXRvU2Nyb2xsPW51bGwsQXQuc3RvcCgpLEF0LmludGVyYWN0aW9uJiYoQXQuaW50ZXJhY3Rpb249bnVsbCl9LFwiaW50ZXJhY3Rpb25zOnN0b3BcIjpBdC5zdG9wLFwiaW50ZXJhY3Rpb25zOmFjdGlvbi1tb3ZlXCI6ZnVuY3Rpb24odCl7cmV0dXJuIEF0Lm9uSW50ZXJhY3Rpb25Nb3ZlKHQpfX19LEZ0PVJ0O0R0LmRlZmF1bHQ9RnQ7dmFyIFh0PXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShYdCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxYdC5jb3B5QWN0aW9uPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQubmFtZT1lLm5hbWUsdC5heGlzPWUuYXhpcyx0LmVkZ2VzPWUuZWRnZXMsdH0sWHQuc2lnbj12b2lkIDAsWHQud2Fybk9uY2U9ZnVuY3Rpb24odCxuKXt2YXIgcj0hMTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gcnx8KGUud2luZG93LmNvbnNvbGUud2FybihuKSxyPSEwKSx0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX19LFh0LnNpZ249ZnVuY3Rpb24odCl7cmV0dXJuIHQ+PTA/MTotMX07dmFyIEJ0PXt9O2Z1bmN0aW9uIFl0KHQpe3JldHVybiBpLmRlZmF1bHQuYm9vbCh0KT8odGhpcy5vcHRpb25zLnN0eWxlQ3Vyc29yPXQsdGhpcyk6bnVsbD09PXQ/KGRlbGV0ZSB0aGlzLm9wdGlvbnMuc3R5bGVDdXJzb3IsdGhpcyk6dGhpcy5vcHRpb25zLnN0eWxlQ3Vyc29yfWZ1bmN0aW9uIFd0KHQpe3JldHVybiBpLmRlZmF1bHQuZnVuYyh0KT8odGhpcy5vcHRpb25zLmFjdGlvbkNoZWNrZXI9dCx0aGlzKTpudWxsPT09dD8oZGVsZXRlIHRoaXMub3B0aW9ucy5hY3Rpb25DaGVja2VyLHRoaXMpOnRoaXMub3B0aW9ucy5hY3Rpb25DaGVja2VyfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShCdCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxCdC5kZWZhdWx0PXZvaWQgMDt2YXIgTHQ9e2lkOlwiYXV0by1zdGFydC9pbnRlcmFjdGFibGVNZXRob2RzXCIsaW5zdGFsbDpmdW5jdGlvbih0KXt2YXIgZT10LkludGVyYWN0YWJsZTtlLnByb3RvdHlwZS5nZXRBY3Rpb249ZnVuY3Rpb24oZSxuLHIsbyl7dmFyIGk9ZnVuY3Rpb24odCxlLG4scixvKXt2YXIgaT10LmdldFJlY3QociksYT17YWN0aW9uOm51bGwsaW50ZXJhY3RhYmxlOnQsaW50ZXJhY3Rpb246bixlbGVtZW50OnIscmVjdDppLGJ1dHRvbnM6ZS5idXR0b25zfHx7MDoxLDE6NCwzOjgsNDoxNn1bZS5idXR0b25dfTtyZXR1cm4gby5maXJlKFwiYXV0by1zdGFydDpjaGVja1wiLGEpLGEuYWN0aW9ufSh0aGlzLG4scixvLHQpO3JldHVybiB0aGlzLm9wdGlvbnMuYWN0aW9uQ2hlY2tlcj90aGlzLm9wdGlvbnMuYWN0aW9uQ2hlY2tlcihlLG4saSx0aGlzLG8scik6aX0sZS5wcm90b3R5cGUuaWdub3JlRnJvbT0oMCxYdC53YXJuT25jZSkoKGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9iYWNrQ29tcGF0T3B0aW9uKFwiaWdub3JlRnJvbVwiLHQpfSksXCJJbnRlcmFjdGFibGUuaWdub3JlRnJvbSgpIGhhcyBiZWVuIGRlcHJlY2F0ZWQuIFVzZSBJbnRlcmFjdGJsZS5kcmFnZ2FibGUoe2lnbm9yZUZyb206IG5ld1ZhbHVlfSkuXCIpLGUucHJvdG90eXBlLmFsbG93RnJvbT0oMCxYdC53YXJuT25jZSkoKGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9iYWNrQ29tcGF0T3B0aW9uKFwiYWxsb3dGcm9tXCIsdCl9KSxcIkludGVyYWN0YWJsZS5hbGxvd0Zyb20oKSBoYXMgYmVlbiBkZXByZWNhdGVkLiBVc2UgSW50ZXJhY3RibGUuZHJhZ2dhYmxlKHthbGxvd0Zyb206IG5ld1ZhbHVlfSkuXCIpLGUucHJvdG90eXBlLmFjdGlvbkNoZWNrZXI9V3QsZS5wcm90b3R5cGUuc3R5bGVDdXJzb3I9WXR9fTtCdC5kZWZhdWx0PUx0O3ZhciBVdD17fTtmdW5jdGlvbiBWdCh0LGUsbixyLG8pe3JldHVybiBlLnRlc3RJZ25vcmVBbGxvdyhlLm9wdGlvbnNbdC5uYW1lXSxuLHIpJiZlLm9wdGlvbnNbdC5uYW1lXS5lbmFibGVkJiYkdChlLG4sdCxvKT90Om51bGx9ZnVuY3Rpb24gTnQodCxlLG4scixvLGksYSl7Zm9yKHZhciBzPTAsbD1yLmxlbmd0aDtzPGw7cysrKXt2YXIgdT1yW3NdLGM9b1tzXSxmPXUuZ2V0QWN0aW9uKGUsbix0LGMpO2lmKGYpe3ZhciBkPVZ0KGYsdSxjLGksYSk7aWYoZClyZXR1cm57YWN0aW9uOmQsaW50ZXJhY3RhYmxlOnUsZWxlbWVudDpjfX19cmV0dXJue2FjdGlvbjpudWxsLGludGVyYWN0YWJsZTpudWxsLGVsZW1lbnQ6bnVsbH19ZnVuY3Rpb24gcXQodCxlLG4scixvKXt2YXIgYT1bXSxzPVtdLGw9cjtmdW5jdGlvbiB1KHQpe2EucHVzaCh0KSxzLnB1c2gobCl9Zm9yKDtpLmRlZmF1bHQuZWxlbWVudChsKTspe2E9W10scz1bXSxvLmludGVyYWN0YWJsZXMuZm9yRWFjaE1hdGNoKGwsdSk7dmFyIGM9TnQodCxlLG4sYSxzLHIsbyk7aWYoYy5hY3Rpb24mJiFjLmludGVyYWN0YWJsZS5vcHRpb25zW2MuYWN0aW9uLm5hbWVdLm1hbnVhbFN0YXJ0KXJldHVybiBjO2w9Xy5wYXJlbnROb2RlKGwpfXJldHVybnthY3Rpb246bnVsbCxpbnRlcmFjdGFibGU6bnVsbCxlbGVtZW50Om51bGx9fWZ1bmN0aW9uIEd0KHQsZSxuKXt2YXIgcj1lLmFjdGlvbixvPWUuaW50ZXJhY3RhYmxlLGk9ZS5lbGVtZW50O3I9cnx8e25hbWU6bnVsbH0sdC5pbnRlcmFjdGFibGU9byx0LmVsZW1lbnQ9aSwoMCxYdC5jb3B5QWN0aW9uKSh0LnByZXBhcmVkLHIpLHQucmVjdD1vJiZyLm5hbWU/by5nZXRSZWN0KGkpOm51bGwsWnQodCxuKSxuLmZpcmUoXCJhdXRvU3RhcnQ6cHJlcGFyZWRcIix7aW50ZXJhY3Rpb246dH0pfWZ1bmN0aW9uICR0KHQsZSxuLHIpe3ZhciBvPXQub3B0aW9ucyxpPW9bbi5uYW1lXS5tYXgsYT1vW24ubmFtZV0ubWF4UGVyRWxlbWVudCxzPXIuYXV0b1N0YXJ0Lm1heEludGVyYWN0aW9ucyxsPTAsdT0wLGM9MDtpZighKGkmJmEmJnMpKXJldHVybiExO2Zvcih2YXIgZj0wO2Y8ci5pbnRlcmFjdGlvbnMubGlzdC5sZW5ndGg7ZisrKXt2YXIgZD1yLmludGVyYWN0aW9ucy5saXN0W2ZdLHA9ZC5wcmVwYXJlZC5uYW1lO2lmKGQuaW50ZXJhY3RpbmcoKSl7aWYoKytsPj1zKXJldHVybiExO2lmKGQuaW50ZXJhY3RhYmxlPT09dCl7aWYoKHUrPXA9PT1uLm5hbWU/MTowKT49aSlyZXR1cm4hMTtpZihkLmVsZW1lbnQ9PT1lJiYoYysrLHA9PT1uLm5hbWUmJmM+PWEpKXJldHVybiExfX19cmV0dXJuIHM+MH1mdW5jdGlvbiBIdCh0LGUpe3JldHVybiBpLmRlZmF1bHQubnVtYmVyKHQpPyhlLmF1dG9TdGFydC5tYXhJbnRlcmFjdGlvbnM9dCx0aGlzKTplLmF1dG9TdGFydC5tYXhJbnRlcmFjdGlvbnN9ZnVuY3Rpb24gS3QodCxlLG4pe3ZhciByPW4uYXV0b1N0YXJ0LmN1cnNvckVsZW1lbnQ7ciYmciE9PXQmJihyLnN0eWxlLmN1cnNvcj1cIlwiKSx0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLmN1cnNvcj1lLHQuc3R5bGUuY3Vyc29yPWUsbi5hdXRvU3RhcnQuY3Vyc29yRWxlbWVudD1lP3Q6bnVsbH1mdW5jdGlvbiBadCh0LGUpe3ZhciBuPXQuaW50ZXJhY3RhYmxlLHI9dC5lbGVtZW50LG89dC5wcmVwYXJlZDtpZihcIm1vdXNlXCI9PT10LnBvaW50ZXJUeXBlJiZuJiZuLm9wdGlvbnMuc3R5bGVDdXJzb3Ipe3ZhciBhPVwiXCI7aWYoby5uYW1lKXt2YXIgcz1uLm9wdGlvbnNbby5uYW1lXS5jdXJzb3JDaGVja2VyO2E9aS5kZWZhdWx0LmZ1bmMocyk/cyhvLG4scix0Ll9pbnRlcmFjdGluZyk6ZS5hY3Rpb25zLm1hcFtvLm5hbWVdLmdldEN1cnNvcihvKX1LdCh0LmVsZW1lbnQsYXx8XCJcIixlKX1lbHNlIGUuYXV0b1N0YXJ0LmN1cnNvckVsZW1lbnQmJkt0KGUuYXV0b1N0YXJ0LmN1cnNvckVsZW1lbnQsXCJcIixlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoVXQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksVXQuZGVmYXVsdD12b2lkIDA7dmFyIEp0PXtpZDpcImF1dG8tc3RhcnQvYmFzZVwiLGJlZm9yZTpbXCJhY3Rpb25zXCJdLGluc3RhbGw6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdFN0YXRpYyxuPXQuZGVmYXVsdHM7dC51c2VQbHVnaW4oQnQuZGVmYXVsdCksbi5iYXNlLmFjdGlvbkNoZWNrZXI9bnVsbCxuLmJhc2Uuc3R5bGVDdXJzb3I9ITAsKDAsTS5kZWZhdWx0KShuLnBlckFjdGlvbix7bWFudWFsU3RhcnQ6ITEsbWF4OjEvMCxtYXhQZXJFbGVtZW50OjEsYWxsb3dGcm9tOm51bGwsaWdub3JlRnJvbTpudWxsLG1vdXNlQnV0dG9uczoxfSksZS5tYXhJbnRlcmFjdGlvbnM9ZnVuY3Rpb24oZSl7cmV0dXJuIEh0KGUsdCl9LHQuYXV0b1N0YXJ0PXttYXhJbnRlcmFjdGlvbnM6MS8wLHdpdGhpbkludGVyYWN0aW9uTGltaXQ6JHQsY3Vyc29yRWxlbWVudDpudWxsfX0sbGlzdGVuZXJzOntcImludGVyYWN0aW9uczpkb3duXCI6ZnVuY3Rpb24odCxlKXt2YXIgbj10LmludGVyYWN0aW9uLHI9dC5wb2ludGVyLG89dC5ldmVudCxpPXQuZXZlbnRUYXJnZXQ7bi5pbnRlcmFjdGluZygpfHxHdChuLHF0KG4scixvLGksZSksZSl9LFwiaW50ZXJhY3Rpb25zOm1vdmVcIjpmdW5jdGlvbih0LGUpeyFmdW5jdGlvbih0LGUpe3ZhciBuPXQuaW50ZXJhY3Rpb24scj10LnBvaW50ZXIsbz10LmV2ZW50LGk9dC5ldmVudFRhcmdldDtcIm1vdXNlXCIhPT1uLnBvaW50ZXJUeXBlfHxuLnBvaW50ZXJJc0Rvd258fG4uaW50ZXJhY3RpbmcoKXx8R3QobixxdChuLHIsbyxpLGUpLGUpfSh0LGUpLGZ1bmN0aW9uKHQsZSl7dmFyIG49dC5pbnRlcmFjdGlvbjtpZihuLnBvaW50ZXJJc0Rvd24mJiFuLmludGVyYWN0aW5nKCkmJm4ucG9pbnRlcldhc01vdmVkJiZuLnByZXBhcmVkLm5hbWUpe2UuZmlyZShcImF1dG9TdGFydDpiZWZvcmUtc3RhcnRcIix0KTt2YXIgcj1uLmludGVyYWN0YWJsZSxvPW4ucHJlcGFyZWQubmFtZTtvJiZyJiYoci5vcHRpb25zW29dLm1hbnVhbFN0YXJ0fHwhJHQocixuLmVsZW1lbnQsbi5wcmVwYXJlZCxlKT9uLnN0b3AoKToobi5zdGFydChuLnByZXBhcmVkLHIsbi5lbGVtZW50KSxadChuLGUpKSl9fSh0LGUpfSxcImludGVyYWN0aW9uczpzdG9wXCI6ZnVuY3Rpb24odCxlKXt2YXIgbj10LmludGVyYWN0aW9uLHI9bi5pbnRlcmFjdGFibGU7ciYmci5vcHRpb25zLnN0eWxlQ3Vyc29yJiZLdChuLmVsZW1lbnQsXCJcIixlKX19LG1heEludGVyYWN0aW9uczpIdCx3aXRoaW5JbnRlcmFjdGlvbkxpbWl0OiR0LHZhbGlkYXRlQWN0aW9uOlZ0fSxRdD1KdDtVdC5kZWZhdWx0PVF0O3ZhciB0ZT17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkodGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdGUuZGVmYXVsdD12b2lkIDA7dmFyIGVlPXtpZDpcImF1dG8tc3RhcnQvZHJhZ0F4aXNcIixsaXN0ZW5lcnM6e1wiYXV0b1N0YXJ0OmJlZm9yZS1zdGFydFwiOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5pbnRlcmFjdGlvbixyPXQuZXZlbnRUYXJnZXQsbz10LmR4LGE9dC5keTtpZihcImRyYWdcIj09PW4ucHJlcGFyZWQubmFtZSl7dmFyIHM9TWF0aC5hYnMobyksbD1NYXRoLmFicyhhKSx1PW4uaW50ZXJhY3RhYmxlLm9wdGlvbnMuZHJhZyxjPXUuc3RhcnRBeGlzLGY9cz5sP1wieFwiOnM8bD9cInlcIjpcInh5XCI7aWYobi5wcmVwYXJlZC5heGlzPVwic3RhcnRcIj09PXUubG9ja0F4aXM/ZlswXTp1LmxvY2tBeGlzLFwieHlcIiE9PWYmJlwieHlcIiE9PWMmJmMhPT1mKXtuLnByZXBhcmVkLm5hbWU9bnVsbDtmb3IodmFyIGQ9cixwPWZ1bmN0aW9uKHQpe2lmKHQhPT1uLmludGVyYWN0YWJsZSl7dmFyIG89bi5pbnRlcmFjdGFibGUub3B0aW9ucy5kcmFnO2lmKCFvLm1hbnVhbFN0YXJ0JiZ0LnRlc3RJZ25vcmVBbGxvdyhvLGQscikpe3ZhciBpPXQuZ2V0QWN0aW9uKG4uZG93blBvaW50ZXIsbi5kb3duRXZlbnQsbixkKTtpZihpJiZcImRyYWdcIj09PWkubmFtZSYmZnVuY3Rpb24odCxlKXtpZighZSlyZXR1cm4hMTt2YXIgbj1lLm9wdGlvbnMuZHJhZy5zdGFydEF4aXM7cmV0dXJuXCJ4eVwiPT09dHx8XCJ4eVwiPT09bnx8bj09PXR9KGYsdCkmJlV0LmRlZmF1bHQudmFsaWRhdGVBY3Rpb24oaSx0LGQscixlKSlyZXR1cm4gdH19fTtpLmRlZmF1bHQuZWxlbWVudChkKTspe3ZhciB2PWUuaW50ZXJhY3RhYmxlcy5mb3JFYWNoTWF0Y2goZCxwKTtpZih2KXtuLnByZXBhcmVkLm5hbWU9XCJkcmFnXCIsbi5pbnRlcmFjdGFibGU9dixuLmVsZW1lbnQ9ZDticmVha31kPSgwLF8ucGFyZW50Tm9kZSkoZCl9fX19fX07dGUuZGVmYXVsdD1lZTt2YXIgbmU9e307ZnVuY3Rpb24gcmUodCl7dmFyIGU9dC5wcmVwYXJlZCYmdC5wcmVwYXJlZC5uYW1lO2lmKCFlKXJldHVybiBudWxsO3ZhciBuPXQuaW50ZXJhY3RhYmxlLm9wdGlvbnM7cmV0dXJuIG5bZV0uaG9sZHx8bltlXS5kZWxheX1PYmplY3QuZGVmaW5lUHJvcGVydHkobmUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksbmUuZGVmYXVsdD12b2lkIDA7dmFyIG9lPXtpZDpcImF1dG8tc3RhcnQvaG9sZFwiLGluc3RhbGw6ZnVuY3Rpb24odCl7dmFyIGU9dC5kZWZhdWx0czt0LnVzZVBsdWdpbihVdC5kZWZhdWx0KSxlLnBlckFjdGlvbi5ob2xkPTAsZS5wZXJBY3Rpb24uZGVsYXk9MH0sbGlzdGVuZXJzOntcImludGVyYWN0aW9uczpuZXdcIjpmdW5jdGlvbih0KXt0LmludGVyYWN0aW9uLmF1dG9TdGFydEhvbGRUaW1lcj1udWxsfSxcImF1dG9TdGFydDpwcmVwYXJlZFwiOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW50ZXJhY3Rpb24sbj1yZShlKTtuPjAmJihlLmF1dG9TdGFydEhvbGRUaW1lcj1zZXRUaW1lb3V0KChmdW5jdGlvbigpe2Uuc3RhcnQoZS5wcmVwYXJlZCxlLmludGVyYWN0YWJsZSxlLmVsZW1lbnQpfSksbikpfSxcImludGVyYWN0aW9uczptb3ZlXCI6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbixuPXQuZHVwbGljYXRlO2UuYXV0b1N0YXJ0SG9sZFRpbWVyJiZlLnBvaW50ZXJXYXNNb3ZlZCYmIW4mJihjbGVhclRpbWVvdXQoZS5hdXRvU3RhcnRIb2xkVGltZXIpLGUuYXV0b1N0YXJ0SG9sZFRpbWVyPW51bGwpfSxcImF1dG9TdGFydDpiZWZvcmUtc3RhcnRcIjpmdW5jdGlvbih0KXt2YXIgZT10LmludGVyYWN0aW9uO3JlKGUpPjAmJihlLnByZXBhcmVkLm5hbWU9bnVsbCl9fSxnZXRIb2xkRHVyYXRpb246cmV9LGllPW9lO25lLmRlZmF1bHQ9aWU7dmFyIGFlPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxhZS5kZWZhdWx0PXZvaWQgMDt2YXIgc2U9e2lkOlwiYXV0by1zdGFydFwiLGluc3RhbGw6ZnVuY3Rpb24odCl7dC51c2VQbHVnaW4oVXQuZGVmYXVsdCksdC51c2VQbHVnaW4obmUuZGVmYXVsdCksdC51c2VQbHVnaW4odGUuZGVmYXVsdCl9fTthZS5kZWZhdWx0PXNlO3ZhciBsZT17fTtmdW5jdGlvbiB1ZSh0KXtyZXR1cm4vXihhbHdheXN8bmV2ZXJ8YXV0bykkLy50ZXN0KHQpPyh0aGlzLm9wdGlvbnMucHJldmVudERlZmF1bHQ9dCx0aGlzKTppLmRlZmF1bHQuYm9vbCh0KT8odGhpcy5vcHRpb25zLnByZXZlbnREZWZhdWx0PXQ/XCJhbHdheXNcIjpcIm5ldmVyXCIsdGhpcyk6dGhpcy5vcHRpb25zLnByZXZlbnREZWZhdWx0fWZ1bmN0aW9uIGNlKHQpe3ZhciBlPXQuaW50ZXJhY3Rpb24sbj10LmV2ZW50O2UuaW50ZXJhY3RhYmxlJiZlLmludGVyYWN0YWJsZS5jaGVja0FuZFByZXZlbnREZWZhdWx0KG4pfWZ1bmN0aW9uIGZlKHQpe3ZhciBuPXQuSW50ZXJhY3RhYmxlO24ucHJvdG90eXBlLnByZXZlbnREZWZhdWx0PXVlLG4ucHJvdG90eXBlLmNoZWNrQW5kUHJldmVudERlZmF1bHQ9ZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXt2YXIgbz10Lm9wdGlvbnMucHJldmVudERlZmF1bHQ7aWYoXCJuZXZlclwiIT09bylpZihcImFsd2F5c1wiIT09byl7aWYobi5ldmVudHMuc3VwcG9ydHNQYXNzaXZlJiYvXnRvdWNoKHN0YXJ0fG1vdmUpJC8udGVzdChyLnR5cGUpKXt2YXIgYT0oMCxlLmdldFdpbmRvdykoci50YXJnZXQpLmRvY3VtZW50LHM9bi5nZXREb2NPcHRpb25zKGEpO2lmKCFzfHwhcy5ldmVudHN8fCExIT09cy5ldmVudHMucGFzc2l2ZSlyZXR1cm59L14obW91c2V8cG9pbnRlcnx0b3VjaCkqKGRvd258c3RhcnQpL2kudGVzdChyLnR5cGUpfHxpLmRlZmF1bHQuZWxlbWVudChyLnRhcmdldCkmJigwLF8ubWF0Y2hlc1NlbGVjdG9yKShyLnRhcmdldCxcImlucHV0LHNlbGVjdCx0ZXh0YXJlYSxbY29udGVudGVkaXRhYmxlPXRydWVdLFtjb250ZW50ZWRpdGFibGU9dHJ1ZV0gKlwiKXx8ci5wcmV2ZW50RGVmYXVsdCgpfWVsc2Ugci5wcmV2ZW50RGVmYXVsdCgpfSh0aGlzLHQsbil9LHQuaW50ZXJhY3Rpb25zLmRvY0V2ZW50cy5wdXNoKHt0eXBlOlwiZHJhZ3N0YXJ0XCIsbGlzdGVuZXI6ZnVuY3Rpb24oZSl7Zm9yKHZhciBuPTA7bjx0LmludGVyYWN0aW9ucy5saXN0Lmxlbmd0aDtuKyspe3ZhciByPXQuaW50ZXJhY3Rpb25zLmxpc3Rbbl07aWYoci5lbGVtZW50JiYoci5lbGVtZW50PT09ZS50YXJnZXR8fCgwLF8ubm9kZUNvbnRhaW5zKShyLmVsZW1lbnQsZS50YXJnZXQpKSlyZXR1cm4gdm9pZCByLmludGVyYWN0YWJsZS5jaGVja0FuZFByZXZlbnREZWZhdWx0KGUpfX19KX1PYmplY3QuZGVmaW5lUHJvcGVydHkobGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksbGUuZGVmYXVsdD12b2lkIDAsbGUuaW5zdGFsbD1mZTt2YXIgZGU9e2lkOlwiY29yZS9pbnRlcmFjdGFibGVQcmV2ZW50RGVmYXVsdFwiLGluc3RhbGw6ZmUsbGlzdGVuZXJzOltcImRvd25cIixcIm1vdmVcIixcInVwXCIsXCJjYW5jZWxcIl0ucmVkdWNlKChmdW5jdGlvbih0LGUpe3JldHVybiB0W1wiaW50ZXJhY3Rpb25zOlwiLmNvbmNhdChlKV09Y2UsdH0pLHt9KX07bGUuZGVmYXVsdD1kZTt2YXIgcGU9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KHBlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHBlLmRlZmF1bHQ9dm9pZCAwLHBlLmRlZmF1bHQ9e307dmFyIHZlLGhlPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxoZS5kZWZhdWx0PXZvaWQgMCxmdW5jdGlvbih0KXt0LnRvdWNoQWN0aW9uPVwidG91Y2hBY3Rpb25cIix0LmJveFNpemluZz1cImJveFNpemluZ1wiLHQubm9MaXN0ZW5lcnM9XCJub0xpc3RlbmVyc1wifSh2ZXx8KHZlPXt9KSk7dmUudG91Y2hBY3Rpb24sdmUuYm94U2l6aW5nLHZlLm5vTGlzdGVuZXJzO3ZhciBnZT17aWQ6XCJkZXYtdG9vbHNcIixpbnN0YWxsOmZ1bmN0aW9uKCl7fX07aGUuZGVmYXVsdD1nZTt2YXIgeWU9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KHllLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHllLmRlZmF1bHQ9ZnVuY3Rpb24gdChlKXt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSl7dmFyIG89ZVtyXTtpLmRlZmF1bHQucGxhaW5PYmplY3Qobyk/bltyXT10KG8pOmkuZGVmYXVsdC5hcnJheShvKT9uW3JdPUguZnJvbShvKTpuW3JdPW99cmV0dXJuIG59O3ZhciBtZT17fTtmdW5jdGlvbiBiZSh0LGUpe3JldHVybiBmdW5jdGlvbih0KXtpZihBcnJheS5pc0FycmF5KHQpKXJldHVybiB0fSh0KXx8ZnVuY3Rpb24odCxlKXt2YXIgbj1udWxsPT10P251bGw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmdFtTeW1ib2wuaXRlcmF0b3JdfHx0W1wiQEBpdGVyYXRvclwiXTtpZihudWxsIT1uKXt2YXIgcixvLGk9W10sYT0hMCxzPSExO3RyeXtmb3Iobj1uLmNhbGwodCk7IShhPShyPW4ubmV4dCgpKS5kb25lKSYmKGkucHVzaChyLnZhbHVlKSwhZXx8aS5sZW5ndGghPT1lKTthPSEwKTt9Y2F0Y2godCl7cz0hMCxvPXR9ZmluYWxseXt0cnl7YXx8bnVsbD09bi5yZXR1cm58fG4ucmV0dXJuKCl9ZmluYWxseXtpZihzKXRocm93IG99fXJldHVybiBpfX0odCxlKXx8ZnVuY3Rpb24odCxlKXtpZih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm4geGUodCxlKTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PW4mJnQuY29uc3RydWN0b3ImJihuPXQuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uP0FycmF5LmZyb20odCk6XCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pP3hlKHQsZSk6dm9pZCAwfX0odCxlKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpfWZ1bmN0aW9uIHhlKHQsZSl7KG51bGw9PWV8fGU+dC5sZW5ndGgpJiYoZT10Lmxlbmd0aCk7Zm9yKHZhciBuPTAscj1BcnJheShlKTtuPGU7bisrKXJbbl09dFtuXTtyZXR1cm4gcn1mdW5jdGlvbiB3ZSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1lW25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxyLmtleSxyKX19ZnVuY3Rpb24gX2UodCxlLG4pe3JldHVybiBlIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbZV09bix0fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShtZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxtZS5kZWZhdWx0PXZvaWQgMCxtZS5nZXRSZWN0T2Zmc2V0PUVlO3ZhciBQZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSl7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSxfZSh0aGlzLFwic3RhdGVzXCIsW10pLF9lKHRoaXMsXCJzdGFydE9mZnNldFwiLHtsZWZ0OjAscmlnaHQ6MCx0b3A6MCxib3R0b206MH0pLF9lKHRoaXMsXCJzdGFydERlbHRhXCIsdm9pZCAwKSxfZSh0aGlzLFwicmVzdWx0XCIsdm9pZCAwKSxfZSh0aGlzLFwiZW5kUmVzdWx0XCIsdm9pZCAwKSxfZSh0aGlzLFwiZWRnZXNcIix2b2lkIDApLF9lKHRoaXMsXCJpbnRlcmFjdGlvblwiLHZvaWQgMCksdGhpcy5pbnRlcmFjdGlvbj1lLHRoaXMucmVzdWx0PU9lKCl9dmFyIGUsbjtyZXR1cm4gZT10LChuPVt7a2V5Olwic3RhcnRcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXQucGhhc2Uscj10aGlzLmludGVyYWN0aW9uLG89ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGFibGUub3B0aW9uc1t0LnByZXBhcmVkLm5hbWVdLG49ZS5tb2RpZmllcnM7cmV0dXJuIG4mJm4ubGVuZ3RoP246W1wic25hcFwiLFwic25hcFNpemVcIixcInNuYXBFZGdlc1wiLFwicmVzdHJpY3RcIixcInJlc3RyaWN0RWRnZXNcIixcInJlc3RyaWN0U2l6ZVwiXS5tYXAoKGZ1bmN0aW9uKHQpe3ZhciBuPWVbdF07cmV0dXJuIG4mJm4uZW5hYmxlZCYme29wdGlvbnM6bixtZXRob2RzOm4uX21ldGhvZHN9fSkpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuISF0fSkpfShyKTt0aGlzLnByZXBhcmVTdGF0ZXMobyksdGhpcy5lZGdlcz0oMCxNLmRlZmF1bHQpKHt9LHIuZWRnZXMpLHRoaXMuc3RhcnRPZmZzZXQ9RWUoci5yZWN0LGUpLHRoaXMuc3RhcnREZWx0YT17eDowLHk6MH07dmFyIGk9dGhpcy5maWxsQXJnKHtwaGFzZTpuLHBhZ2VDb29yZHM6ZSxwcmVFbmQ6ITF9KTtyZXR1cm4gdGhpcy5yZXN1bHQ9T2UoKSx0aGlzLnN0YXJ0QWxsKGkpLHRoaXMucmVzdWx0PXRoaXMuc2V0QWxsKGkpfX0se2tleTpcImZpbGxBcmdcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmludGVyYWN0aW9uO3JldHVybiB0LmludGVyYWN0aW9uPWUsdC5pbnRlcmFjdGFibGU9ZS5pbnRlcmFjdGFibGUsdC5lbGVtZW50PWUuZWxlbWVudCx0LnJlY3Q9dC5yZWN0fHxlLnJlY3QsdC5lZGdlcz10aGlzLmVkZ2VzLHQuc3RhcnRPZmZzZXQ9dGhpcy5zdGFydE9mZnNldCx0fX0se2tleTpcInN0YXJ0QWxsXCIsdmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0aGlzLnN0YXRlcy5sZW5ndGg7ZSsrKXt2YXIgbj10aGlzLnN0YXRlc1tlXTtuLm1ldGhvZHMuc3RhcnQmJih0LnN0YXRlPW4sbi5tZXRob2RzLnN0YXJ0KHQpKX19fSx7a2V5Olwic2V0QWxsXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dC5waGFzZSxuPXQucHJlRW5kLHI9dC5za2lwTW9kaWZpZXJzLG89dC5yZWN0O3QuY29vcmRzPSgwLE0uZGVmYXVsdCkoe30sdC5wYWdlQ29vcmRzKSx0LnJlY3Q9KDAsTS5kZWZhdWx0KSh7fSxvKTtmb3IodmFyIGk9cj90aGlzLnN0YXRlcy5zbGljZShyKTp0aGlzLnN0YXRlcyxhPU9lKHQuY29vcmRzLHQucmVjdCkscz0wO3M8aS5sZW5ndGg7cysrKXt2YXIgbCx1PWlbc10sYz11Lm9wdGlvbnMsZj0oMCxNLmRlZmF1bHQpKHt9LHQuY29vcmRzKSxkPW51bGw7bnVsbCE9KGw9dS5tZXRob2RzKSYmbC5zZXQmJnRoaXMuc2hvdWxkRG8oYyxuLGUpJiYodC5zdGF0ZT11LGQ9dS5tZXRob2RzLnNldCh0KSxrLmFkZEVkZ2VzKHRoaXMuaW50ZXJhY3Rpb24uZWRnZXMsdC5yZWN0LHt4OnQuY29vcmRzLngtZi54LHk6dC5jb29yZHMueS1mLnl9KSksYS5ldmVudFByb3BzLnB1c2goZCl9YS5kZWx0YS54PXQuY29vcmRzLngtdC5wYWdlQ29vcmRzLngsYS5kZWx0YS55PXQuY29vcmRzLnktdC5wYWdlQ29vcmRzLnksYS5yZWN0RGVsdGEubGVmdD10LnJlY3QubGVmdC1vLmxlZnQsYS5yZWN0RGVsdGEucmlnaHQ9dC5yZWN0LnJpZ2h0LW8ucmlnaHQsYS5yZWN0RGVsdGEudG9wPXQucmVjdC50b3Atby50b3AsYS5yZWN0RGVsdGEuYm90dG9tPXQucmVjdC5ib3R0b20tby5ib3R0b207dmFyIHA9dGhpcy5yZXN1bHQuY29vcmRzLHY9dGhpcy5yZXN1bHQucmVjdDtpZihwJiZ2KXt2YXIgaD1hLnJlY3QubGVmdCE9PXYubGVmdHx8YS5yZWN0LnJpZ2h0IT09di5yaWdodHx8YS5yZWN0LnRvcCE9PXYudG9wfHxhLnJlY3QuYm90dG9tIT09di5ib3R0b207YS5jaGFuZ2VkPWh8fHAueCE9PWEuY29vcmRzLnh8fHAueSE9PWEuY29vcmRzLnl9cmV0dXJuIGF9fSx7a2V5OlwiYXBwbHlUb0ludGVyYWN0aW9uXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pbnRlcmFjdGlvbixuPXQucGhhc2Uscj1lLmNvb3Jkcy5jdXIsbz1lLmNvb3Jkcy5zdGFydCxpPXRoaXMucmVzdWx0LGE9dGhpcy5zdGFydERlbHRhLHM9aS5kZWx0YTtcInN0YXJ0XCI9PT1uJiYoMCxNLmRlZmF1bHQpKHRoaXMuc3RhcnREZWx0YSxpLmRlbHRhKTtmb3IodmFyIGw9MDtsPFtbbyxhXSxbcixzXV0ubGVuZ3RoO2wrKyl7dmFyIHU9YmUoW1tvLGFdLFtyLHNdXVtsXSwyKSxjPXVbMF0sZj11WzFdO2MucGFnZS54Kz1mLngsYy5wYWdlLnkrPWYueSxjLmNsaWVudC54Kz1mLngsYy5jbGllbnQueSs9Zi55fXZhciBkPXRoaXMucmVzdWx0LnJlY3REZWx0YSxwPXQucmVjdHx8ZS5yZWN0O3AubGVmdCs9ZC5sZWZ0LHAucmlnaHQrPWQucmlnaHQscC50b3ArPWQudG9wLHAuYm90dG9tKz1kLmJvdHRvbSxwLndpZHRoPXAucmlnaHQtcC5sZWZ0LHAuaGVpZ2h0PXAuYm90dG9tLXAudG9wfX0se2tleTpcInNldEFuZEFwcGx5XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pbnRlcmFjdGlvbixuPXQucGhhc2Uscj10LnByZUVuZCxvPXQuc2tpcE1vZGlmaWVycyxpPXRoaXMuc2V0QWxsKHRoaXMuZmlsbEFyZyh7cHJlRW5kOnIscGhhc2U6bixwYWdlQ29vcmRzOnQubW9kaWZpZWRDb29yZHN8fGUuY29vcmRzLmN1ci5wYWdlfSkpO2lmKHRoaXMucmVzdWx0PWksIWkuY2hhbmdlZCYmKCFvfHxvPHRoaXMuc3RhdGVzLmxlbmd0aCkmJmUuaW50ZXJhY3RpbmcoKSlyZXR1cm4hMTtpZih0Lm1vZGlmaWVkQ29vcmRzKXt2YXIgYT1lLmNvb3Jkcy5jdXIucGFnZSxzPXt4OnQubW9kaWZpZWRDb29yZHMueC1hLngseTp0Lm1vZGlmaWVkQ29vcmRzLnktYS55fTtpLmNvb3Jkcy54Kz1zLngsaS5jb29yZHMueSs9cy55LGkuZGVsdGEueCs9cy54LGkuZGVsdGEueSs9cy55fXRoaXMuYXBwbHlUb0ludGVyYWN0aW9uKHQpfX0se2tleTpcImJlZm9yZUVuZFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW50ZXJhY3Rpb24sbj10LmV2ZW50LHI9dGhpcy5zdGF0ZXM7aWYociYmci5sZW5ndGgpe2Zvcih2YXIgbz0hMSxpPTA7aTxyLmxlbmd0aDtpKyspe3ZhciBhPXJbaV07dC5zdGF0ZT1hO3ZhciBzPWEub3B0aW9ucyxsPWEubWV0aG9kcyx1PWwuYmVmb3JlRW5kJiZsLmJlZm9yZUVuZCh0KTtpZih1KXJldHVybiB0aGlzLmVuZFJlc3VsdD11LCExO289b3x8IW8mJnRoaXMuc2hvdWxkRG8ocywhMCx0LnBoYXNlLCEwKX1vJiZlLm1vdmUoe2V2ZW50Om4scHJlRW5kOiEwfSl9fX0se2tleTpcInN0b3BcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10LmludGVyYWN0aW9uO2lmKHRoaXMuc3RhdGVzJiZ0aGlzLnN0YXRlcy5sZW5ndGgpe3ZhciBuPSgwLE0uZGVmYXVsdCkoe3N0YXRlczp0aGlzLnN0YXRlcyxpbnRlcmFjdGFibGU6ZS5pbnRlcmFjdGFibGUsZWxlbWVudDplLmVsZW1lbnQscmVjdDpudWxsfSx0KTt0aGlzLmZpbGxBcmcobik7Zm9yKHZhciByPTA7cjx0aGlzLnN0YXRlcy5sZW5ndGg7cisrKXt2YXIgbz10aGlzLnN0YXRlc1tyXTtuLnN0YXRlPW8sby5tZXRob2RzLnN0b3AmJm8ubWV0aG9kcy5zdG9wKG4pfXRoaXMuc3RhdGVzPW51bGwsdGhpcy5lbmRSZXN1bHQ9bnVsbH19fSx7a2V5OlwicHJlcGFyZVN0YXRlc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMuc3RhdGVzPVtdO2Zvcih2YXIgZT0wO2U8dC5sZW5ndGg7ZSsrKXt2YXIgbj10W2VdLHI9bi5vcHRpb25zLG89bi5tZXRob2RzLGk9bi5uYW1lO3RoaXMuc3RhdGVzLnB1c2goe29wdGlvbnM6cixtZXRob2RzOm8saW5kZXg6ZSxuYW1lOml9KX1yZXR1cm4gdGhpcy5zdGF0ZXN9fSx7a2V5OlwicmVzdG9yZUludGVyYWN0aW9uQ29vcmRzXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbixuPWUuY29vcmRzLHI9ZS5yZWN0LG89ZS5tb2RpZmljYXRpb247aWYoby5yZXN1bHQpe2Zvcih2YXIgaT1vLnN0YXJ0RGVsdGEsYT1vLnJlc3VsdCxzPWEuZGVsdGEsbD1hLnJlY3REZWx0YSx1PVtbbi5zdGFydCxpXSxbbi5jdXIsc11dLGM9MDtjPHUubGVuZ3RoO2MrKyl7dmFyIGY9YmUodVtjXSwyKSxkPWZbMF0scD1mWzFdO2QucGFnZS54LT1wLngsZC5wYWdlLnktPXAueSxkLmNsaWVudC54LT1wLngsZC5jbGllbnQueS09cC55fXIubGVmdC09bC5sZWZ0LHIucmlnaHQtPWwucmlnaHQsci50b3AtPWwudG9wLHIuYm90dG9tLT1sLmJvdHRvbX19fSx7a2V5Olwic2hvdWxkRG9cIix2YWx1ZTpmdW5jdGlvbih0LGUsbixyKXtyZXR1cm4hKCF0fHwhMT09PXQuZW5hYmxlZHx8ciYmIXQuZW5kT25seXx8dC5lbmRPbmx5JiYhZXx8XCJzdGFydFwiPT09biYmIXQuc2V0U3RhcnQpfX0se2tleTpcImNvcHlGcm9tXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5zdGFydE9mZnNldD10LnN0YXJ0T2Zmc2V0LHRoaXMuc3RhcnREZWx0YT10LnN0YXJ0RGVsdGEsdGhpcy5lZGdlcz10LmVkZ2VzLHRoaXMuc3RhdGVzPXQuc3RhdGVzLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuKDAseWUuZGVmYXVsdCkodCl9KSksdGhpcy5yZXN1bHQ9T2UoKDAsTS5kZWZhdWx0KSh7fSx0LnJlc3VsdC5jb29yZHMpLCgwLE0uZGVmYXVsdCkoe30sdC5yZXN1bHQucmVjdCkpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe2Zvcih2YXIgdCBpbiB0aGlzKXRoaXNbdF09bnVsbH19XSkmJndlKGUucHJvdG90eXBlLG4pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksdH0oKTtmdW5jdGlvbiBPZSh0LGUpe3JldHVybntyZWN0OmUsY29vcmRzOnQsZGVsdGE6e3g6MCx5OjB9LHJlY3REZWx0YTp7bGVmdDowLHJpZ2h0OjAsdG9wOjAsYm90dG9tOjB9LGV2ZW50UHJvcHM6W10sY2hhbmdlZDohMH19ZnVuY3Rpb24gRWUodCxlKXtyZXR1cm4gdD97bGVmdDplLngtdC5sZWZ0LHRvcDplLnktdC50b3AscmlnaHQ6dC5yaWdodC1lLngsYm90dG9tOnQuYm90dG9tLWUueX06e2xlZnQ6MCx0b3A6MCxyaWdodDowLGJvdHRvbTowfX1tZS5kZWZhdWx0PVBlO3ZhciBTZT17fTtmdW5jdGlvbiBUZSh0KXt2YXIgZT10LmlFdmVudCxuPXQuaW50ZXJhY3Rpb24ubW9kaWZpY2F0aW9uLnJlc3VsdDtuJiYoZS5tb2RpZmllcnM9bi5ldmVudFByb3BzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoU2UsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksU2UuYWRkRXZlbnRNb2RpZmllcnM9VGUsU2UuZGVmYXVsdD12b2lkIDAsU2UubWFrZU1vZGlmaWVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5kZWZhdWx0cyxyPXtzdGFydDp0LnN0YXJ0LHNldDp0LnNldCxiZWZvcmVFbmQ6dC5iZWZvcmVFbmQsc3RvcDp0LnN0b3B9LG89ZnVuY3Rpb24odCl7dmFyIG89dHx8e307Zm9yKHZhciBpIGluIG8uZW5hYmxlZD0hMSE9PW8uZW5hYmxlZCxuKWkgaW4gb3x8KG9baV09bltpXSk7dmFyIGE9e29wdGlvbnM6byxtZXRob2RzOnIsbmFtZTplLGVuYWJsZTpmdW5jdGlvbigpe3JldHVybiBvLmVuYWJsZWQ9ITAsYX0sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiBvLmVuYWJsZWQ9ITEsYX19O3JldHVybiBhfTtyZXR1cm4gZSYmXCJzdHJpbmdcIj09dHlwZW9mIGUmJihvLl9kZWZhdWx0cz1uLG8uX21ldGhvZHM9ciksb307dmFyIGplPXtpZDpcIm1vZGlmaWVycy9iYXNlXCIsYmVmb3JlOltcImFjdGlvbnNcIl0saW5zdGFsbDpmdW5jdGlvbih0KXt0LmRlZmF1bHRzLnBlckFjdGlvbi5tb2RpZmllcnM9W119LGxpc3RlbmVyczp7XCJpbnRlcmFjdGlvbnM6bmV3XCI6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbjtlLm1vZGlmaWNhdGlvbj1uZXcgbWUuZGVmYXVsdChlKX0sXCJpbnRlcmFjdGlvbnM6YmVmb3JlLWFjdGlvbi1zdGFydFwiOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW50ZXJhY3Rpb24ubW9kaWZpY2F0aW9uO2Uuc3RhcnQodCx0LmludGVyYWN0aW9uLmNvb3Jkcy5zdGFydC5wYWdlKSx0LmludGVyYWN0aW9uLmVkZ2VzPWUuZWRnZXMsZS5hcHBseVRvSW50ZXJhY3Rpb24odCl9LFwiaW50ZXJhY3Rpb25zOmJlZm9yZS1hY3Rpb24tbW92ZVwiOmZ1bmN0aW9uKHQpe3JldHVybiB0LmludGVyYWN0aW9uLm1vZGlmaWNhdGlvbi5zZXRBbmRBcHBseSh0KX0sXCJpbnRlcmFjdGlvbnM6YmVmb3JlLWFjdGlvbi1lbmRcIjpmdW5jdGlvbih0KXtyZXR1cm4gdC5pbnRlcmFjdGlvbi5tb2RpZmljYXRpb24uYmVmb3JlRW5kKHQpfSxcImludGVyYWN0aW9uczphY3Rpb24tc3RhcnRcIjpUZSxcImludGVyYWN0aW9uczphY3Rpb24tbW92ZVwiOlRlLFwiaW50ZXJhY3Rpb25zOmFjdGlvbi1lbmRcIjpUZSxcImludGVyYWN0aW9uczphZnRlci1hY3Rpb24tc3RhcnRcIjpmdW5jdGlvbih0KXtyZXR1cm4gdC5pbnRlcmFjdGlvbi5tb2RpZmljYXRpb24ucmVzdG9yZUludGVyYWN0aW9uQ29vcmRzKHQpfSxcImludGVyYWN0aW9uczphZnRlci1hY3Rpb24tbW92ZVwiOmZ1bmN0aW9uKHQpe3JldHVybiB0LmludGVyYWN0aW9uLm1vZGlmaWNhdGlvbi5yZXN0b3JlSW50ZXJhY3Rpb25Db29yZHModCl9LFwiaW50ZXJhY3Rpb25zOnN0b3BcIjpmdW5jdGlvbih0KXtyZXR1cm4gdC5pbnRlcmFjdGlvbi5tb2RpZmljYXRpb24uc3RvcCh0KX19fSxNZT1qZTtTZS5kZWZhdWx0PU1lO3ZhciBrZT17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoa2UsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksa2UuZGVmYXVsdHM9dm9pZCAwLGtlLmRlZmF1bHRzPXtiYXNlOntwcmV2ZW50RGVmYXVsdDpcImF1dG9cIixkZWx0YVNvdXJjZTpcInBhZ2VcIn0scGVyQWN0aW9uOntlbmFibGVkOiExLG9yaWdpbjp7eDowLHk6MH19LGFjdGlvbnM6e319O3ZhciBJZT17fTtmdW5jdGlvbiBEZSh0KXtyZXR1cm4gRGU9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0sRGUodCl9ZnVuY3Rpb24gQWUodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsci5rZXkscil9fWZ1bmN0aW9uIHplKHQsZSl7cmV0dXJuIHplPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0semUodCxlKX1mdW5jdGlvbiBDZSh0LGUpe2lmKGUmJihcIm9iamVjdFwiPT09RGUoZSl8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGUpKXJldHVybiBlO2lmKHZvaWQgMCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpO3JldHVybiBSZSh0KX1mdW5jdGlvbiBSZSh0KXtpZih2b2lkIDA9PT10KXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4gdH1mdW5jdGlvbiBGZSh0KXtyZXR1cm4gRmU9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCk6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9LEZlKHQpfWZ1bmN0aW9uIFhlKHQsZSxuKXtyZXR1cm4gZSBpbiB0P09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3ZhbHVlOm4sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTp0W2VdPW4sdH1PYmplY3QuZGVmaW5lUHJvcGVydHkoSWUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksSWUuSW50ZXJhY3RFdmVudD12b2lkIDA7dmFyIEJlPWZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSxlJiZ6ZSh0LGUpfShhLHQpO3ZhciBlLG4scixvLGk9KHI9YSxvPWZ1bmN0aW9uKCl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIFJlZmxlY3R8fCFSZWZsZWN0LmNvbnN0cnVjdClyZXR1cm4hMTtpZihSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKXJldHVybiExO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIFByb3h5KXJldHVybiEwO3RyeXtyZXR1cm4gQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sW10sKGZ1bmN0aW9uKCl7fSkpKSwhMH1jYXRjaCh0KXtyZXR1cm4hMX19KCksZnVuY3Rpb24oKXt2YXIgdCxlPUZlKHIpO2lmKG8pe3ZhciBuPUZlKHRoaXMpLmNvbnN0cnVjdG9yO3Q9UmVmbGVjdC5jb25zdHJ1Y3QoZSxhcmd1bWVudHMsbil9ZWxzZSB0PWUuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBDZSh0aGlzLHQpfSk7ZnVuY3Rpb24gYSh0LGUsbixyLG8scyxsKXt2YXIgdTshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLGEpLFhlKFJlKHU9aS5jYWxsKHRoaXMsdCkpLFwicmVsYXRlZFRhcmdldFwiLG51bGwpLFhlKFJlKHUpLFwic2NyZWVuWFwiLHZvaWQgMCksWGUoUmUodSksXCJzY3JlZW5ZXCIsdm9pZCAwKSxYZShSZSh1KSxcImJ1dHRvblwiLHZvaWQgMCksWGUoUmUodSksXCJidXR0b25zXCIsdm9pZCAwKSxYZShSZSh1KSxcImN0cmxLZXlcIix2b2lkIDApLFhlKFJlKHUpLFwic2hpZnRLZXlcIix2b2lkIDApLFhlKFJlKHUpLFwiYWx0S2V5XCIsdm9pZCAwKSxYZShSZSh1KSxcIm1ldGFLZXlcIix2b2lkIDApLFhlKFJlKHUpLFwicGFnZVwiLHZvaWQgMCksWGUoUmUodSksXCJjbGllbnRcIix2b2lkIDApLFhlKFJlKHUpLFwiZGVsdGFcIix2b2lkIDApLFhlKFJlKHUpLFwicmVjdFwiLHZvaWQgMCksWGUoUmUodSksXCJ4MFwiLHZvaWQgMCksWGUoUmUodSksXCJ5MFwiLHZvaWQgMCksWGUoUmUodSksXCJ0MFwiLHZvaWQgMCksWGUoUmUodSksXCJkdFwiLHZvaWQgMCksWGUoUmUodSksXCJkdXJhdGlvblwiLHZvaWQgMCksWGUoUmUodSksXCJjbGllbnRYMFwiLHZvaWQgMCksWGUoUmUodSksXCJjbGllbnRZMFwiLHZvaWQgMCksWGUoUmUodSksXCJ2ZWxvY2l0eVwiLHZvaWQgMCksWGUoUmUodSksXCJzcGVlZFwiLHZvaWQgMCksWGUoUmUodSksXCJzd2lwZVwiLHZvaWQgMCksWGUoUmUodSksXCJheGVzXCIsdm9pZCAwKSxYZShSZSh1KSxcInByZUVuZFwiLHZvaWQgMCksbz1vfHx0LmVsZW1lbnQ7dmFyIGM9dC5pbnRlcmFjdGFibGUsZj0oYyYmYy5vcHRpb25zfHxrZS5kZWZhdWx0cykuZGVsdGFTb3VyY2UsZD0oMCxBLmRlZmF1bHQpKGMsbyxuKSxwPVwic3RhcnRcIj09PXIsdj1cImVuZFwiPT09cixoPXA/UmUodSk6dC5wcmV2RXZlbnQsZz1wP3QuY29vcmRzLnN0YXJ0OnY/e3BhZ2U6aC5wYWdlLGNsaWVudDpoLmNsaWVudCx0aW1lU3RhbXA6dC5jb29yZHMuY3VyLnRpbWVTdGFtcH06dC5jb29yZHMuY3VyO3JldHVybiB1LnBhZ2U9KDAsTS5kZWZhdWx0KSh7fSxnLnBhZ2UpLHUuY2xpZW50PSgwLE0uZGVmYXVsdCkoe30sZy5jbGllbnQpLHUucmVjdD0oMCxNLmRlZmF1bHQpKHt9LHQucmVjdCksdS50aW1lU3RhbXA9Zy50aW1lU3RhbXAsdnx8KHUucGFnZS54LT1kLngsdS5wYWdlLnktPWQueSx1LmNsaWVudC54LT1kLngsdS5jbGllbnQueS09ZC55KSx1LmN0cmxLZXk9ZS5jdHJsS2V5LHUuYWx0S2V5PWUuYWx0S2V5LHUuc2hpZnRLZXk9ZS5zaGlmdEtleSx1Lm1ldGFLZXk9ZS5tZXRhS2V5LHUuYnV0dG9uPWUuYnV0dG9uLHUuYnV0dG9ucz1lLmJ1dHRvbnMsdS50YXJnZXQ9byx1LmN1cnJlbnRUYXJnZXQ9byx1LnByZUVuZD1zLHUudHlwZT1sfHxuKyhyfHxcIlwiKSx1LmludGVyYWN0YWJsZT1jLHUudDA9cD90LnBvaW50ZXJzW3QucG9pbnRlcnMubGVuZ3RoLTFdLmRvd25UaW1lOmgudDAsdS54MD10LmNvb3Jkcy5zdGFydC5wYWdlLngtZC54LHUueTA9dC5jb29yZHMuc3RhcnQucGFnZS55LWQueSx1LmNsaWVudFgwPXQuY29vcmRzLnN0YXJ0LmNsaWVudC54LWQueCx1LmNsaWVudFkwPXQuY29vcmRzLnN0YXJ0LmNsaWVudC55LWQueSx1LmRlbHRhPXB8fHY/e3g6MCx5OjB9Ont4OnVbZl0ueC1oW2ZdLngseTp1W2ZdLnktaFtmXS55fSx1LmR0PXQuY29vcmRzLmRlbHRhLnRpbWVTdGFtcCx1LmR1cmF0aW9uPXUudGltZVN0YW1wLXUudDAsdS52ZWxvY2l0eT0oMCxNLmRlZmF1bHQpKHt9LHQuY29vcmRzLnZlbG9jaXR5W2ZdKSx1LnNwZWVkPSgwLFIuZGVmYXVsdCkodS52ZWxvY2l0eS54LHUudmVsb2NpdHkueSksdS5zd2lwZT12fHxcImluZXJ0aWFzdGFydFwiPT09cj91LmdldFN3aXBlKCk6bnVsbCx1fXJldHVybiBlPWEsKG49W3trZXk6XCJnZXRTd2lwZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5faW50ZXJhY3Rpb247aWYodC5wcmV2RXZlbnQuc3BlZWQ8NjAwfHx0aGlzLnRpbWVTdGFtcC10LnByZXZFdmVudC50aW1lU3RhbXA+MTUwKXJldHVybiBudWxsO3ZhciBlPTE4MCpNYXRoLmF0YW4yKHQucHJldkV2ZW50LnZlbG9jaXR5WSx0LnByZXZFdmVudC52ZWxvY2l0eVgpL01hdGguUEk7ZTwwJiYoZSs9MzYwKTt2YXIgbj0xMTIuNTw9ZSYmZTwyNDcuNSxyPTIwMi41PD1lJiZlPDMzNy41O3JldHVybnt1cDpyLGRvd246IXImJjIyLjU8PWUmJmU8MTU3LjUsbGVmdDpuLHJpZ2h0OiFuJiYoMjkyLjU8PWV8fGU8NjcuNSksYW5nbGU6ZSxzcGVlZDp0LnByZXZFdmVudC5zcGVlZCx2ZWxvY2l0eTp7eDp0LnByZXZFdmVudC52ZWxvY2l0eVgseTp0LnByZXZFdmVudC52ZWxvY2l0eVl9fX19LHtrZXk6XCJwcmV2ZW50RGVmYXVsdFwiLHZhbHVlOmZ1bmN0aW9uKCl7fX0se2tleTpcInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvblwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5pbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5wcm9wYWdhdGlvblN0b3BwZWQ9ITB9fSx7a2V5Olwic3RvcFByb3BhZ2F0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnByb3BhZ2F0aW9uU3RvcHBlZD0hMH19XSkmJkFlKGUucHJvdG90eXBlLG4pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksYX0oTi5CYXNlRXZlbnQpO0llLkludGVyYWN0RXZlbnQ9QmUsT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoQmUucHJvdG90eXBlLHtwYWdlWDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFnZS54fSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5wYWdlLng9dH19LHBhZ2VZOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYWdlLnl9LHNldDpmdW5jdGlvbih0KXt0aGlzLnBhZ2UueT10fX0sY2xpZW50WDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2xpZW50Lnh9LHNldDpmdW5jdGlvbih0KXt0aGlzLmNsaWVudC54PXR9fSxjbGllbnRZOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jbGllbnQueX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuY2xpZW50Lnk9dH19LGR4OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kZWx0YS54fSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5kZWx0YS54PXR9fSxkeTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGVsdGEueX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuZGVsdGEueT10fX0sdmVsb2NpdHlYOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52ZWxvY2l0eS54fSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy52ZWxvY2l0eS54PXR9fSx2ZWxvY2l0eVk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnZlbG9jaXR5Lnl9LHNldDpmdW5jdGlvbih0KXt0aGlzLnZlbG9jaXR5Lnk9dH19fSk7dmFyIFllPXt9O2Z1bmN0aW9uIFdlKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LHIua2V5LHIpfX1mdW5jdGlvbiBMZSh0LGUsbil7cmV0dXJuIGUmJldlKHQucHJvdG90eXBlLGUpLG4mJldlKHQsbiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fWZ1bmN0aW9uIFVlKHQsZSxuKXtyZXR1cm4gZSBpbiB0P09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3ZhbHVlOm4sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTp0W2VdPW4sdH1PYmplY3QuZGVmaW5lUHJvcGVydHkoWWUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksWWUuUG9pbnRlckluZm89dm9pZCAwO3ZhciBWZT1MZSgoZnVuY3Rpb24gdChlLG4scixvLGkpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksVWUodGhpcyxcImlkXCIsdm9pZCAwKSxVZSh0aGlzLFwicG9pbnRlclwiLHZvaWQgMCksVWUodGhpcyxcImV2ZW50XCIsdm9pZCAwKSxVZSh0aGlzLFwiZG93blRpbWVcIix2b2lkIDApLFVlKHRoaXMsXCJkb3duVGFyZ2V0XCIsdm9pZCAwKSx0aGlzLmlkPWUsdGhpcy5wb2ludGVyPW4sdGhpcy5ldmVudD1yLHRoaXMuZG93blRpbWU9byx0aGlzLmRvd25UYXJnZXQ9aX0pKTtZZS5Qb2ludGVySW5mbz1WZTt2YXIgTmUscWUsR2U9e307ZnVuY3Rpb24gJGUodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsci5rZXkscil9fWZ1bmN0aW9uIEhlKHQsZSxuKXtyZXR1cm4gZSBpbiB0P09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3ZhbHVlOm4sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTp0W2VdPW4sdH1PYmplY3QuZGVmaW5lUHJvcGVydHkoR2UsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksR2UuSW50ZXJhY3Rpb249dm9pZCAwLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShHZSxcIlBvaW50ZXJJbmZvXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFllLlBvaW50ZXJJbmZvfX0pLEdlLmRlZmF1bHQ9R2UuX1Byb3h5VmFsdWVzPUdlLl9Qcm94eU1ldGhvZHM9dm9pZCAwLEdlLl9Qcm94eVZhbHVlcz1OZSxmdW5jdGlvbih0KXt0LmludGVyYWN0YWJsZT1cIlwiLHQuZWxlbWVudD1cIlwiLHQucHJlcGFyZWQ9XCJcIix0LnBvaW50ZXJJc0Rvd249XCJcIix0LnBvaW50ZXJXYXNNb3ZlZD1cIlwiLHQuX3Byb3h5PVwiXCJ9KE5lfHwoR2UuX1Byb3h5VmFsdWVzPU5lPXt9KSksR2UuX1Byb3h5TWV0aG9kcz1xZSxmdW5jdGlvbih0KXt0LnN0YXJ0PVwiXCIsdC5tb3ZlPVwiXCIsdC5lbmQ9XCJcIix0LnN0b3A9XCJcIix0LmludGVyYWN0aW5nPVwiXCJ9KHFlfHwoR2UuX1Byb3h5TWV0aG9kcz1xZT17fSkpO3ZhciBLZT0wLFplPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlKXt2YXIgbj10aGlzLHI9ZS5wb2ludGVyVHlwZSxvPWUuc2NvcGVGaXJlOyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksSGUodGhpcyxcImludGVyYWN0YWJsZVwiLG51bGwpLEhlKHRoaXMsXCJlbGVtZW50XCIsbnVsbCksSGUodGhpcyxcInJlY3RcIixudWxsKSxIZSh0aGlzLFwiX3JlY3RzXCIsdm9pZCAwKSxIZSh0aGlzLFwiZWRnZXNcIixudWxsKSxIZSh0aGlzLFwiX3Njb3BlRmlyZVwiLHZvaWQgMCksSGUodGhpcyxcInByZXBhcmVkXCIse25hbWU6bnVsbCxheGlzOm51bGwsZWRnZXM6bnVsbH0pLEhlKHRoaXMsXCJwb2ludGVyVHlwZVwiLHZvaWQgMCksSGUodGhpcyxcInBvaW50ZXJzXCIsW10pLEhlKHRoaXMsXCJkb3duRXZlbnRcIixudWxsKSxIZSh0aGlzLFwiZG93blBvaW50ZXJcIix7fSksSGUodGhpcyxcIl9sYXRlc3RQb2ludGVyXCIse3BvaW50ZXI6bnVsbCxldmVudDpudWxsLGV2ZW50VGFyZ2V0Om51bGx9KSxIZSh0aGlzLFwicHJldkV2ZW50XCIsbnVsbCksSGUodGhpcyxcInBvaW50ZXJJc0Rvd25cIiwhMSksSGUodGhpcyxcInBvaW50ZXJXYXNNb3ZlZFwiLCExKSxIZSh0aGlzLFwiX2ludGVyYWN0aW5nXCIsITEpLEhlKHRoaXMsXCJfZW5kaW5nXCIsITEpLEhlKHRoaXMsXCJfc3RvcHBlZFwiLCEwKSxIZSh0aGlzLFwiX3Byb3h5XCIsbnVsbCksSGUodGhpcyxcInNpbXVsYXRpb25cIixudWxsKSxIZSh0aGlzLFwiZG9Nb3ZlXCIsKDAsWHQud2Fybk9uY2UpKChmdW5jdGlvbih0KXt0aGlzLm1vdmUodCl9KSxcIlRoZSBpbnRlcmFjdGlvbi5kb01vdmUoKSBtZXRob2QgaGFzIGJlZW4gcmVuYW1lZCB0byBpbnRlcmFjdGlvbi5tb3ZlKClcIikpLEhlKHRoaXMsXCJjb29yZHNcIix7c3RhcnQ6WC5uZXdDb29yZHMoKSxwcmV2OlgubmV3Q29vcmRzKCksY3VyOlgubmV3Q29vcmRzKCksZGVsdGE6WC5uZXdDb29yZHMoKSx2ZWxvY2l0eTpYLm5ld0Nvb3JkcygpfSksSGUodGhpcyxcIl9pZFwiLEtlKyspLHRoaXMuX3Njb3BlRmlyZT1vLHRoaXMucG9pbnRlclR5cGU9cjt2YXIgaT10aGlzO3RoaXMuX3Byb3h5PXt9O3ZhciBhPWZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShuLl9wcm94eSx0LHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaVt0XX19KX07Zm9yKHZhciBzIGluIE5lKWEocyk7dmFyIGw9ZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KG4uX3Byb3h5LHQse3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGlbdF0uYXBwbHkoaSxhcmd1bWVudHMpfX0pfTtmb3IodmFyIHUgaW4gcWUpbCh1KTt0aGlzLl9zY29wZUZpcmUoXCJpbnRlcmFjdGlvbnM6bmV3XCIse2ludGVyYWN0aW9uOnRoaXN9KX12YXIgZSxuO3JldHVybiBlPXQsbj1be2tleTpcInBvaW50ZXJNb3ZlVG9sZXJhbmNlXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDF9fSx7a2V5OlwicG9pbnRlckRvd25cIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7dmFyIHI9dGhpcy51cGRhdGVQb2ludGVyKHQsZSxuLCEwKSxvPXRoaXMucG9pbnRlcnNbcl07dGhpcy5fc2NvcGVGaXJlKFwiaW50ZXJhY3Rpb25zOmRvd25cIix7cG9pbnRlcjp0LGV2ZW50OmUsZXZlbnRUYXJnZXQ6bixwb2ludGVySW5kZXg6cixwb2ludGVySW5mbzpvLHR5cGU6XCJkb3duXCIsaW50ZXJhY3Rpb246dGhpc30pfX0se2tleTpcInN0YXJ0XCIsdmFsdWU6ZnVuY3Rpb24odCxlLG4pe3JldHVybiEodGhpcy5pbnRlcmFjdGluZygpfHwhdGhpcy5wb2ludGVySXNEb3dufHx0aGlzLnBvaW50ZXJzLmxlbmd0aDwoXCJnZXN0dXJlXCI9PT10Lm5hbWU/MjoxKXx8IWUub3B0aW9uc1t0Lm5hbWVdLmVuYWJsZWQpJiYoKDAsWHQuY29weUFjdGlvbikodGhpcy5wcmVwYXJlZCx0KSx0aGlzLmludGVyYWN0YWJsZT1lLHRoaXMuZWxlbWVudD1uLHRoaXMucmVjdD1lLmdldFJlY3QobiksdGhpcy5lZGdlcz10aGlzLnByZXBhcmVkLmVkZ2VzPygwLE0uZGVmYXVsdCkoe30sdGhpcy5wcmVwYXJlZC5lZGdlcyk6e2xlZnQ6ITAscmlnaHQ6ITAsdG9wOiEwLGJvdHRvbTohMH0sdGhpcy5fc3RvcHBlZD0hMSx0aGlzLl9pbnRlcmFjdGluZz10aGlzLl9kb1BoYXNlKHtpbnRlcmFjdGlvbjp0aGlzLGV2ZW50OnRoaXMuZG93bkV2ZW50LHBoYXNlOlwic3RhcnRcIn0pJiYhdGhpcy5fc3RvcHBlZCx0aGlzLl9pbnRlcmFjdGluZyl9fSx7a2V5OlwicG9pbnRlck1vdmVcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7dGhpcy5zaW11bGF0aW9ufHx0aGlzLm1vZGlmaWNhdGlvbiYmdGhpcy5tb2RpZmljYXRpb24uZW5kUmVzdWx0fHx0aGlzLnVwZGF0ZVBvaW50ZXIodCxlLG4sITEpO3ZhciByLG8saT10aGlzLmNvb3Jkcy5jdXIucGFnZS54PT09dGhpcy5jb29yZHMucHJldi5wYWdlLngmJnRoaXMuY29vcmRzLmN1ci5wYWdlLnk9PT10aGlzLmNvb3Jkcy5wcmV2LnBhZ2UueSYmdGhpcy5jb29yZHMuY3VyLmNsaWVudC54PT09dGhpcy5jb29yZHMucHJldi5jbGllbnQueCYmdGhpcy5jb29yZHMuY3VyLmNsaWVudC55PT09dGhpcy5jb29yZHMucHJldi5jbGllbnQueTt0aGlzLnBvaW50ZXJJc0Rvd24mJiF0aGlzLnBvaW50ZXJXYXNNb3ZlZCYmKHI9dGhpcy5jb29yZHMuY3VyLmNsaWVudC54LXRoaXMuY29vcmRzLnN0YXJ0LmNsaWVudC54LG89dGhpcy5jb29yZHMuY3VyLmNsaWVudC55LXRoaXMuY29vcmRzLnN0YXJ0LmNsaWVudC55LHRoaXMucG9pbnRlcldhc01vdmVkPSgwLFIuZGVmYXVsdCkocixvKT50aGlzLnBvaW50ZXJNb3ZlVG9sZXJhbmNlKTt2YXIgYT10aGlzLmdldFBvaW50ZXJJbmRleCh0KSxzPXtwb2ludGVyOnQscG9pbnRlckluZGV4OmEscG9pbnRlckluZm86dGhpcy5wb2ludGVyc1thXSxldmVudDplLHR5cGU6XCJtb3ZlXCIsZXZlbnRUYXJnZXQ6bixkeDpyLGR5Om8sZHVwbGljYXRlOmksaW50ZXJhY3Rpb246dGhpc307aXx8WC5zZXRDb29yZFZlbG9jaXR5KHRoaXMuY29vcmRzLnZlbG9jaXR5LHRoaXMuY29vcmRzLmRlbHRhKSx0aGlzLl9zY29wZUZpcmUoXCJpbnRlcmFjdGlvbnM6bW92ZVwiLHMpLGl8fHRoaXMuc2ltdWxhdGlvbnx8KHRoaXMuaW50ZXJhY3RpbmcoKSYmKHMudHlwZT1udWxsLHRoaXMubW92ZShzKSksdGhpcy5wb2ludGVyV2FzTW92ZWQmJlguY29weUNvb3Jkcyh0aGlzLmNvb3Jkcy5wcmV2LHRoaXMuY29vcmRzLmN1cikpfX0se2tleTpcIm1vdmVcIix2YWx1ZTpmdW5jdGlvbih0KXt0JiZ0LmV2ZW50fHxYLnNldFplcm9Db29yZHModGhpcy5jb29yZHMuZGVsdGEpLCh0PSgwLE0uZGVmYXVsdCkoe3BvaW50ZXI6dGhpcy5fbGF0ZXN0UG9pbnRlci5wb2ludGVyLGV2ZW50OnRoaXMuX2xhdGVzdFBvaW50ZXIuZXZlbnQsZXZlbnRUYXJnZXQ6dGhpcy5fbGF0ZXN0UG9pbnRlci5ldmVudFRhcmdldCxpbnRlcmFjdGlvbjp0aGlzfSx0fHx7fSkpLnBoYXNlPVwibW92ZVwiLHRoaXMuX2RvUGhhc2UodCl9fSx7a2V5OlwicG9pbnRlclVwXCIsdmFsdWU6ZnVuY3Rpb24odCxlLG4scil7dmFyIG89dGhpcy5nZXRQb2ludGVySW5kZXgodCk7LTE9PT1vJiYobz10aGlzLnVwZGF0ZVBvaW50ZXIodCxlLG4sITEpKTt2YXIgaT0vY2FuY2VsJC9pLnRlc3QoZS50eXBlKT9cImNhbmNlbFwiOlwidXBcIjt0aGlzLl9zY29wZUZpcmUoXCJpbnRlcmFjdGlvbnM6XCIuY29uY2F0KGkpLHtwb2ludGVyOnQscG9pbnRlckluZGV4Om8scG9pbnRlckluZm86dGhpcy5wb2ludGVyc1tvXSxldmVudDplLGV2ZW50VGFyZ2V0Om4sdHlwZTppLGN1ckV2ZW50VGFyZ2V0OnIsaW50ZXJhY3Rpb246dGhpc30pLHRoaXMuc2ltdWxhdGlvbnx8dGhpcy5lbmQoZSksdGhpcy5yZW1vdmVQb2ludGVyKHQsZSl9fSx7a2V5OlwiZG9jdW1lbnRCbHVyXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5lbmQodCksdGhpcy5fc2NvcGVGaXJlKFwiaW50ZXJhY3Rpb25zOmJsdXJcIix7ZXZlbnQ6dCx0eXBlOlwiYmx1clwiLGludGVyYWN0aW9uOnRoaXN9KX19LHtrZXk6XCJlbmRcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZTt0aGlzLl9lbmRpbmc9ITAsdD10fHx0aGlzLl9sYXRlc3RQb2ludGVyLmV2ZW50LHRoaXMuaW50ZXJhY3RpbmcoKSYmKGU9dGhpcy5fZG9QaGFzZSh7ZXZlbnQ6dCxpbnRlcmFjdGlvbjp0aGlzLHBoYXNlOlwiZW5kXCJ9KSksdGhpcy5fZW5kaW5nPSExLCEwPT09ZSYmdGhpcy5zdG9wKCl9fSx7a2V5OlwiY3VycmVudEFjdGlvblwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ludGVyYWN0aW5nP3RoaXMucHJlcGFyZWQubmFtZTpudWxsfX0se2tleTpcImludGVyYWN0aW5nXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW50ZXJhY3Rpbmd9fSx7a2V5Olwic3RvcFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fc2NvcGVGaXJlKFwiaW50ZXJhY3Rpb25zOnN0b3BcIix7aW50ZXJhY3Rpb246dGhpc30pLHRoaXMuaW50ZXJhY3RhYmxlPXRoaXMuZWxlbWVudD1udWxsLHRoaXMuX2ludGVyYWN0aW5nPSExLHRoaXMuX3N0b3BwZWQ9ITAsdGhpcy5wcmVwYXJlZC5uYW1lPXRoaXMucHJldkV2ZW50PW51bGx9fSx7a2V5OlwiZ2V0UG9pbnRlckluZGV4XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9WC5nZXRQb2ludGVySWQodCk7cmV0dXJuXCJtb3VzZVwiPT09dGhpcy5wb2ludGVyVHlwZXx8XCJwZW5cIj09PXRoaXMucG9pbnRlclR5cGU/dGhpcy5wb2ludGVycy5sZW5ndGgtMTpILmZpbmRJbmRleCh0aGlzLnBvaW50ZXJzLChmdW5jdGlvbih0KXtyZXR1cm4gdC5pZD09PWV9KSl9fSx7a2V5OlwiZ2V0UG9pbnRlckluZm9cIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5wb2ludGVyc1t0aGlzLmdldFBvaW50ZXJJbmRleCh0KV19fSx7a2V5OlwidXBkYXRlUG9pbnRlclwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBvPVguZ2V0UG9pbnRlcklkKHQpLGk9dGhpcy5nZXRQb2ludGVySW5kZXgodCksYT10aGlzLnBvaW50ZXJzW2ldO3JldHVybiByPSExIT09ciYmKHJ8fC8oZG93bnxzdGFydCkkL2kudGVzdChlLnR5cGUpKSxhP2EucG9pbnRlcj10OihhPW5ldyBZZS5Qb2ludGVySW5mbyhvLHQsZSxudWxsLG51bGwpLGk9dGhpcy5wb2ludGVycy5sZW5ndGgsdGhpcy5wb2ludGVycy5wdXNoKGEpKSxYLnNldENvb3Jkcyh0aGlzLmNvb3Jkcy5jdXIsdGhpcy5wb2ludGVycy5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LnBvaW50ZXJ9KSksdGhpcy5fbm93KCkpLFguc2V0Q29vcmREZWx0YXModGhpcy5jb29yZHMuZGVsdGEsdGhpcy5jb29yZHMucHJldix0aGlzLmNvb3Jkcy5jdXIpLHImJih0aGlzLnBvaW50ZXJJc0Rvd249ITAsYS5kb3duVGltZT10aGlzLmNvb3Jkcy5jdXIudGltZVN0YW1wLGEuZG93blRhcmdldD1uLFgucG9pbnRlckV4dGVuZCh0aGlzLmRvd25Qb2ludGVyLHQpLHRoaXMuaW50ZXJhY3RpbmcoKXx8KFguY29weUNvb3Jkcyh0aGlzLmNvb3Jkcy5zdGFydCx0aGlzLmNvb3Jkcy5jdXIpLFguY29weUNvb3Jkcyh0aGlzLmNvb3Jkcy5wcmV2LHRoaXMuY29vcmRzLmN1ciksdGhpcy5kb3duRXZlbnQ9ZSx0aGlzLnBvaW50ZXJXYXNNb3ZlZD0hMSkpLHRoaXMuX3VwZGF0ZUxhdGVzdFBvaW50ZXIodCxlLG4pLHRoaXMuX3Njb3BlRmlyZShcImludGVyYWN0aW9uczp1cGRhdGUtcG9pbnRlclwiLHtwb2ludGVyOnQsZXZlbnQ6ZSxldmVudFRhcmdldDpuLGRvd246cixwb2ludGVySW5mbzphLHBvaW50ZXJJbmRleDppLGludGVyYWN0aW9uOnRoaXN9KSxpfX0se2tleTpcInJlbW92ZVBvaW50ZXJcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0UG9pbnRlckluZGV4KHQpO2lmKC0xIT09bil7dmFyIHI9dGhpcy5wb2ludGVyc1tuXTt0aGlzLl9zY29wZUZpcmUoXCJpbnRlcmFjdGlvbnM6cmVtb3ZlLXBvaW50ZXJcIix7cG9pbnRlcjp0LGV2ZW50OmUsZXZlbnRUYXJnZXQ6bnVsbCxwb2ludGVySW5kZXg6bixwb2ludGVySW5mbzpyLGludGVyYWN0aW9uOnRoaXN9KSx0aGlzLnBvaW50ZXJzLnNwbGljZShuLDEpLHRoaXMucG9pbnRlcklzRG93bj0hMX19fSx7a2V5OlwiX3VwZGF0ZUxhdGVzdFBvaW50ZXJcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7dGhpcy5fbGF0ZXN0UG9pbnRlci5wb2ludGVyPXQsdGhpcy5fbGF0ZXN0UG9pbnRlci5ldmVudD1lLHRoaXMuX2xhdGVzdFBvaW50ZXIuZXZlbnRUYXJnZXQ9bn19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9sYXRlc3RQb2ludGVyLnBvaW50ZXI9bnVsbCx0aGlzLl9sYXRlc3RQb2ludGVyLmV2ZW50PW51bGwsdGhpcy5fbGF0ZXN0UG9pbnRlci5ldmVudFRhcmdldD1udWxsfX0se2tleTpcIl9jcmVhdGVQcmVwYXJlZEV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIG5ldyBJZS5JbnRlcmFjdEV2ZW50KHRoaXMsdCx0aGlzLnByZXBhcmVkLm5hbWUsZSx0aGlzLmVsZW1lbnQsbixyKX19LHtrZXk6XCJfZmlyZUV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU7bnVsbD09KGU9dGhpcy5pbnRlcmFjdGFibGUpfHxlLmZpcmUodCksKCF0aGlzLnByZXZFdmVudHx8dC50aW1lU3RhbXA+PXRoaXMucHJldkV2ZW50LnRpbWVTdGFtcCkmJih0aGlzLnByZXZFdmVudD10KX19LHtrZXk6XCJfZG9QaGFzZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZXZlbnQsbj10LnBoYXNlLHI9dC5wcmVFbmQsbz10LnR5cGUsaT10aGlzLnJlY3Q7aWYoaSYmXCJtb3ZlXCI9PT1uJiYoay5hZGRFZGdlcyh0aGlzLmVkZ2VzLGksdGhpcy5jb29yZHMuZGVsdGFbdGhpcy5pbnRlcmFjdGFibGUub3B0aW9ucy5kZWx0YVNvdXJjZV0pLGkud2lkdGg9aS5yaWdodC1pLmxlZnQsaS5oZWlnaHQ9aS5ib3R0b20taS50b3ApLCExPT09dGhpcy5fc2NvcGVGaXJlKFwiaW50ZXJhY3Rpb25zOmJlZm9yZS1hY3Rpb24tXCIuY29uY2F0KG4pLHQpKXJldHVybiExO3ZhciBhPXQuaUV2ZW50PXRoaXMuX2NyZWF0ZVByZXBhcmVkRXZlbnQoZSxuLHIsbyk7cmV0dXJuIHRoaXMuX3Njb3BlRmlyZShcImludGVyYWN0aW9uczphY3Rpb24tXCIuY29uY2F0KG4pLHQpLFwic3RhcnRcIj09PW4mJih0aGlzLnByZXZFdmVudD1hKSx0aGlzLl9maXJlRXZlbnQoYSksdGhpcy5fc2NvcGVGaXJlKFwiaW50ZXJhY3Rpb25zOmFmdGVyLWFjdGlvbi1cIi5jb25jYXQobiksdCksITB9fSx7a2V5OlwiX25vd1wiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCl9fV0sbiYmJGUoZS5wcm90b3R5cGUsbiksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fSgpO0dlLkludGVyYWN0aW9uPVplO3ZhciBKZT1aZTtHZS5kZWZhdWx0PUplO3ZhciBRZT17fTtmdW5jdGlvbiB0bih0KXt0LnBvaW50ZXJJc0Rvd24mJihvbih0LmNvb3Jkcy5jdXIsdC5vZmZzZXQudG90YWwpLHQub2Zmc2V0LnBlbmRpbmcueD0wLHQub2Zmc2V0LnBlbmRpbmcueT0wKX1mdW5jdGlvbiBlbih0KXtubih0LmludGVyYWN0aW9uKX1mdW5jdGlvbiBubih0KXtpZighZnVuY3Rpb24odCl7cmV0dXJuISghdC5vZmZzZXQucGVuZGluZy54JiYhdC5vZmZzZXQucGVuZGluZy55KX0odCkpcmV0dXJuITE7dmFyIGU9dC5vZmZzZXQucGVuZGluZztyZXR1cm4gb24odC5jb29yZHMuY3VyLGUpLG9uKHQuY29vcmRzLmRlbHRhLGUpLGsuYWRkRWRnZXModC5lZGdlcyx0LnJlY3QsZSksZS54PTAsZS55PTAsITB9ZnVuY3Rpb24gcm4odCl7dmFyIGU9dC54LG49dC55O3RoaXMub2Zmc2V0LnBlbmRpbmcueCs9ZSx0aGlzLm9mZnNldC5wZW5kaW5nLnkrPW4sdGhpcy5vZmZzZXQudG90YWwueCs9ZSx0aGlzLm9mZnNldC50b3RhbC55Kz1ufWZ1bmN0aW9uIG9uKHQsZSl7dmFyIG49dC5wYWdlLHI9dC5jbGllbnQsbz1lLngsaT1lLnk7bi54Kz1vLG4ueSs9aSxyLngrPW8sci55Kz1pfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShRZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxRZS5hZGRUb3RhbD10bixRZS5hcHBseVBlbmRpbmc9bm4sUWUuZGVmYXVsdD12b2lkIDAsR2UuX1Byb3h5TWV0aG9kcy5vZmZzZXRCeT1cIlwiO3ZhciBhbj17aWQ6XCJvZmZzZXRcIixiZWZvcmU6W1wibW9kaWZpZXJzXCIsXCJwb2ludGVyLWV2ZW50c1wiLFwiYWN0aW9uc1wiLFwiaW5lcnRpYVwiXSxpbnN0YWxsOmZ1bmN0aW9uKHQpe3QuSW50ZXJhY3Rpb24ucHJvdG90eXBlLm9mZnNldEJ5PXJufSxsaXN0ZW5lcnM6e1wiaW50ZXJhY3Rpb25zOm5ld1wiOmZ1bmN0aW9uKHQpe3QuaW50ZXJhY3Rpb24ub2Zmc2V0PXt0b3RhbDp7eDowLHk6MH0scGVuZGluZzp7eDowLHk6MH19fSxcImludGVyYWN0aW9uczp1cGRhdGUtcG9pbnRlclwiOmZ1bmN0aW9uKHQpe3JldHVybiB0bih0LmludGVyYWN0aW9uKX0sXCJpbnRlcmFjdGlvbnM6YmVmb3JlLWFjdGlvbi1zdGFydFwiOmVuLFwiaW50ZXJhY3Rpb25zOmJlZm9yZS1hY3Rpb24tbW92ZVwiOmVuLFwiaW50ZXJhY3Rpb25zOmJlZm9yZS1hY3Rpb24tZW5kXCI6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbjtpZihubihlKSlyZXR1cm4gZS5tb3ZlKHtvZmZzZXQ6ITB9KSxlLmVuZCgpLCExfSxcImludGVyYWN0aW9uczpzdG9wXCI6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbjtlLm9mZnNldC50b3RhbC54PTAsZS5vZmZzZXQudG90YWwueT0wLGUub2Zmc2V0LnBlbmRpbmcueD0wLGUub2Zmc2V0LnBlbmRpbmcueT0wfX19LHNuPWFuO1FlLmRlZmF1bHQ9c247dmFyIGxuPXt9O2Z1bmN0aW9uIHVuKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LHIua2V5LHIpfX1mdW5jdGlvbiBjbih0LGUsbil7cmV0dXJuIGUgaW4gdD9PYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHt2YWx1ZTpuLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6dFtlXT1uLHR9T2JqZWN0LmRlZmluZVByb3BlcnR5KGxuLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGxuLmRlZmF1bHQ9bG4uSW5lcnRpYVN0YXRlPXZvaWQgMDt2YXIgZm49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksY24odGhpcyxcImFjdGl2ZVwiLCExKSxjbih0aGlzLFwiaXNNb2RpZmllZFwiLCExKSxjbih0aGlzLFwic21vb3RoRW5kXCIsITEpLGNuKHRoaXMsXCJhbGxvd1Jlc3VtZVwiLCExKSxjbih0aGlzLFwibW9kaWZpY2F0aW9uXCIsdm9pZCAwKSxjbih0aGlzLFwibW9kaWZpZXJDb3VudFwiLDApLGNuKHRoaXMsXCJtb2RpZmllckFyZ1wiLHZvaWQgMCksY24odGhpcyxcInN0YXJ0Q29vcmRzXCIsdm9pZCAwKSxjbih0aGlzLFwidDBcIiwwKSxjbih0aGlzLFwidjBcIiwwKSxjbih0aGlzLFwidGVcIiwwKSxjbih0aGlzLFwidGFyZ2V0T2Zmc2V0XCIsdm9pZCAwKSxjbih0aGlzLFwibW9kaWZpZWRPZmZzZXRcIix2b2lkIDApLGNuKHRoaXMsXCJjdXJyZW50T2Zmc2V0XCIsdm9pZCAwKSxjbih0aGlzLFwibGFtYmRhX3YwXCIsMCksY24odGhpcyxcIm9uZV92ZV92MFwiLDApLGNuKHRoaXMsXCJ0aW1lb3V0XCIsdm9pZCAwKSxjbih0aGlzLFwiaW50ZXJhY3Rpb25cIix2b2lkIDApLHRoaXMuaW50ZXJhY3Rpb249ZX12YXIgZSxuO3JldHVybiBlPXQsKG49W3trZXk6XCJzdGFydFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuaW50ZXJhY3Rpb24sbj1kbihlKTtpZighbnx8IW4uZW5hYmxlZClyZXR1cm4hMTt2YXIgcj1lLmNvb3Jkcy52ZWxvY2l0eS5jbGllbnQsbz0oMCxSLmRlZmF1bHQpKHIueCxyLnkpLGk9dGhpcy5tb2RpZmljYXRpb258fCh0aGlzLm1vZGlmaWNhdGlvbj1uZXcgbWUuZGVmYXVsdChlKSk7aWYoaS5jb3B5RnJvbShlLm1vZGlmaWNhdGlvbiksdGhpcy50MD1lLl9ub3coKSx0aGlzLmFsbG93UmVzdW1lPW4uYWxsb3dSZXN1bWUsdGhpcy52MD1vLHRoaXMuY3VycmVudE9mZnNldD17eDowLHk6MH0sdGhpcy5zdGFydENvb3Jkcz1lLmNvb3Jkcy5jdXIucGFnZSx0aGlzLm1vZGlmaWVyQXJnPWkuZmlsbEFyZyh7cGFnZUNvb3Jkczp0aGlzLnN0YXJ0Q29vcmRzLHByZUVuZDohMCxwaGFzZTpcImluZXJ0aWFzdGFydFwifSksdGhpcy50MC1lLmNvb3Jkcy5jdXIudGltZVN0YW1wPDUwJiZvPm4ubWluU3BlZWQmJm8+bi5lbmRTcGVlZCl0aGlzLnN0YXJ0SW5lcnRpYSgpO2Vsc2V7aWYoaS5yZXN1bHQ9aS5zZXRBbGwodGhpcy5tb2RpZmllckFyZyksIWkucmVzdWx0LmNoYW5nZWQpcmV0dXJuITE7dGhpcy5zdGFydFNtb290aEVuZCgpfXJldHVybiBlLm1vZGlmaWNhdGlvbi5yZXN1bHQucmVjdD1udWxsLGUub2Zmc2V0QnkodGhpcy50YXJnZXRPZmZzZXQpLGUuX2RvUGhhc2Uoe2ludGVyYWN0aW9uOmUsZXZlbnQ6dCxwaGFzZTpcImluZXJ0aWFzdGFydFwifSksZS5vZmZzZXRCeSh7eDotdGhpcy50YXJnZXRPZmZzZXQueCx5Oi10aGlzLnRhcmdldE9mZnNldC55fSksZS5tb2RpZmljYXRpb24ucmVzdWx0LnJlY3Q9bnVsbCx0aGlzLmFjdGl2ZT0hMCxlLnNpbXVsYXRpb249dGhpcywhMH19LHtrZXk6XCJzdGFydEluZXJ0aWFcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLmludGVyYWN0aW9uLmNvb3Jkcy52ZWxvY2l0eS5jbGllbnQsbj1kbih0aGlzLmludGVyYWN0aW9uKSxyPW4ucmVzaXN0YW5jZSxvPS1NYXRoLmxvZyhuLmVuZFNwZWVkL3RoaXMudjApL3I7dGhpcy50YXJnZXRPZmZzZXQ9e3g6KGUueC1vKS9yLHk6KGUueS1vKS9yfSx0aGlzLnRlPW8sdGhpcy5sYW1iZGFfdjA9ci90aGlzLnYwLHRoaXMub25lX3ZlX3YwPTEtbi5lbmRTcGVlZC90aGlzLnYwO3ZhciBpPXRoaXMubW9kaWZpY2F0aW9uLGE9dGhpcy5tb2RpZmllckFyZzthLnBhZ2VDb29yZHM9e3g6dGhpcy5zdGFydENvb3Jkcy54K3RoaXMudGFyZ2V0T2Zmc2V0LngseTp0aGlzLnN0YXJ0Q29vcmRzLnkrdGhpcy50YXJnZXRPZmZzZXQueX0saS5yZXN1bHQ9aS5zZXRBbGwoYSksaS5yZXN1bHQuY2hhbmdlZCYmKHRoaXMuaXNNb2RpZmllZD0hMCx0aGlzLm1vZGlmaWVkT2Zmc2V0PXt4OnRoaXMudGFyZ2V0T2Zmc2V0LngraS5yZXN1bHQuZGVsdGEueCx5OnRoaXMudGFyZ2V0T2Zmc2V0LnkraS5yZXN1bHQuZGVsdGEueX0pLHRoaXMub25OZXh0RnJhbWUoKGZ1bmN0aW9uKCl7cmV0dXJuIHQuaW5lcnRpYVRpY2soKX0pKX19LHtrZXk6XCJzdGFydFNtb290aEVuZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLnNtb290aEVuZD0hMCx0aGlzLmlzTW9kaWZpZWQ9ITAsdGhpcy50YXJnZXRPZmZzZXQ9e3g6dGhpcy5tb2RpZmljYXRpb24ucmVzdWx0LmRlbHRhLngseTp0aGlzLm1vZGlmaWNhdGlvbi5yZXN1bHQuZGVsdGEueX0sdGhpcy5vbk5leHRGcmFtZSgoZnVuY3Rpb24oKXtyZXR1cm4gdC5zbW9vdGhFbmRUaWNrKCl9KSl9fSx7a2V5Olwib25OZXh0RnJhbWVcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3RoaXMudGltZW91dD1UdC5kZWZhdWx0LnJlcXVlc3QoKGZ1bmN0aW9uKCl7ZS5hY3RpdmUmJnQoKX0pKX19LHtrZXk6XCJpbmVydGlhVGlja1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLHIsbyxpPXRoaXMsYT10aGlzLmludGVyYWN0aW9uLHM9ZG4oYSkucmVzaXN0YW5jZSxsPShhLl9ub3coKS10aGlzLnQwKS8xZTM7aWYobDx0aGlzLnRlKXt2YXIgdSxjPTEtKE1hdGguZXhwKC1zKmwpLXRoaXMubGFtYmRhX3YwKS90aGlzLm9uZV92ZV92MDt0aGlzLmlzTW9kaWZpZWQ/KDAsMCx0PXRoaXMudGFyZ2V0T2Zmc2V0LngsZT10aGlzLnRhcmdldE9mZnNldC55LG49dGhpcy5tb2RpZmllZE9mZnNldC54LHI9dGhpcy5tb2RpZmllZE9mZnNldC55LHU9e3g6dm4obz1jLDAsdCxuKSx5OnZuKG8sMCxlLHIpfSk6dT17eDp0aGlzLnRhcmdldE9mZnNldC54KmMseTp0aGlzLnRhcmdldE9mZnNldC55KmN9O3ZhciBmPXt4OnUueC10aGlzLmN1cnJlbnRPZmZzZXQueCx5OnUueS10aGlzLmN1cnJlbnRPZmZzZXQueX07dGhpcy5jdXJyZW50T2Zmc2V0LngrPWYueCx0aGlzLmN1cnJlbnRPZmZzZXQueSs9Zi55LGEub2Zmc2V0QnkoZiksYS5tb3ZlKCksdGhpcy5vbk5leHRGcmFtZSgoZnVuY3Rpb24oKXtyZXR1cm4gaS5pbmVydGlhVGljaygpfSkpfWVsc2UgYS5vZmZzZXRCeSh7eDp0aGlzLm1vZGlmaWVkT2Zmc2V0LngtdGhpcy5jdXJyZW50T2Zmc2V0LngseTp0aGlzLm1vZGlmaWVkT2Zmc2V0LnktdGhpcy5jdXJyZW50T2Zmc2V0Lnl9KSx0aGlzLmVuZCgpfX0se2tleTpcInNtb290aEVuZFRpY2tcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLmludGVyYWN0aW9uLG49ZS5fbm93KCktdGhpcy50MCxyPWRuKGUpLnNtb290aEVuZER1cmF0aW9uO2lmKG48cil7dmFyIG89e3g6aG4obiwwLHRoaXMudGFyZ2V0T2Zmc2V0LngscikseTpobihuLDAsdGhpcy50YXJnZXRPZmZzZXQueSxyKX0saT17eDpvLngtdGhpcy5jdXJyZW50T2Zmc2V0LngseTpvLnktdGhpcy5jdXJyZW50T2Zmc2V0Lnl9O3RoaXMuY3VycmVudE9mZnNldC54Kz1pLngsdGhpcy5jdXJyZW50T2Zmc2V0LnkrPWkueSxlLm9mZnNldEJ5KGkpLGUubW92ZSh7c2tpcE1vZGlmaWVyczp0aGlzLm1vZGlmaWVyQ291bnR9KSx0aGlzLm9uTmV4dEZyYW1lKChmdW5jdGlvbigpe3JldHVybiB0LnNtb290aEVuZFRpY2soKX0pKX1lbHNlIGUub2Zmc2V0Qnkoe3g6dGhpcy50YXJnZXRPZmZzZXQueC10aGlzLmN1cnJlbnRPZmZzZXQueCx5OnRoaXMudGFyZ2V0T2Zmc2V0LnktdGhpcy5jdXJyZW50T2Zmc2V0Lnl9KSx0aGlzLmVuZCgpfX0se2tleTpcInJlc3VtZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXQucG9pbnRlcixuPXQuZXZlbnQscj10LmV2ZW50VGFyZ2V0LG89dGhpcy5pbnRlcmFjdGlvbjtvLm9mZnNldEJ5KHt4Oi10aGlzLmN1cnJlbnRPZmZzZXQueCx5Oi10aGlzLmN1cnJlbnRPZmZzZXQueX0pLG8udXBkYXRlUG9pbnRlcihlLG4sciwhMCksby5fZG9QaGFzZSh7aW50ZXJhY3Rpb246byxldmVudDpuLHBoYXNlOlwicmVzdW1lXCJ9KSwoMCxYLmNvcHlDb29yZHMpKG8uY29vcmRzLnByZXYsby5jb29yZHMuY3VyKSx0aGlzLnN0b3AoKX19LHtrZXk6XCJlbmRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaW50ZXJhY3Rpb24ubW92ZSgpLHRoaXMuaW50ZXJhY3Rpb24uZW5kKCksdGhpcy5zdG9wKCl9fSx7a2V5Olwic3RvcFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5hY3RpdmU9dGhpcy5zbW9vdGhFbmQ9ITEsdGhpcy5pbnRlcmFjdGlvbi5zaW11bGF0aW9uPW51bGwsVHQuZGVmYXVsdC5jYW5jZWwodGhpcy50aW1lb3V0KX19XSkmJnVuKGUucHJvdG90eXBlLG4pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksdH0oKTtmdW5jdGlvbiBkbih0KXt2YXIgZT10LmludGVyYWN0YWJsZSxuPXQucHJlcGFyZWQ7cmV0dXJuIGUmJmUub3B0aW9ucyYmbi5uYW1lJiZlLm9wdGlvbnNbbi5uYW1lXS5pbmVydGlhfWxuLkluZXJ0aWFTdGF0ZT1mbjt2YXIgcG49e2lkOlwiaW5lcnRpYVwiLGJlZm9yZTpbXCJtb2RpZmllcnNcIixcImFjdGlvbnNcIl0saW5zdGFsbDpmdW5jdGlvbih0KXt2YXIgZT10LmRlZmF1bHRzO3QudXNlUGx1Z2luKFFlLmRlZmF1bHQpLHQudXNlUGx1Z2luKFNlLmRlZmF1bHQpLHQuYWN0aW9ucy5waGFzZXMuaW5lcnRpYXN0YXJ0PSEwLHQuYWN0aW9ucy5waGFzZXMucmVzdW1lPSEwLGUucGVyQWN0aW9uLmluZXJ0aWE9e2VuYWJsZWQ6ITEscmVzaXN0YW5jZToxMCxtaW5TcGVlZDoxMDAsZW5kU3BlZWQ6MTAsYWxsb3dSZXN1bWU6ITAsc21vb3RoRW5kRHVyYXRpb246MzAwfX0sbGlzdGVuZXJzOntcImludGVyYWN0aW9uczpuZXdcIjpmdW5jdGlvbih0KXt2YXIgZT10LmludGVyYWN0aW9uO2UuaW5lcnRpYT1uZXcgZm4oZSl9LFwiaW50ZXJhY3Rpb25zOmJlZm9yZS1hY3Rpb24tZW5kXCI6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbixuPXQuZXZlbnQ7cmV0dXJuKCFlLl9pbnRlcmFjdGluZ3x8ZS5zaW11bGF0aW9ufHwhZS5pbmVydGlhLnN0YXJ0KG4pKSYmbnVsbH0sXCJpbnRlcmFjdGlvbnM6ZG93blwiOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW50ZXJhY3Rpb24sbj10LmV2ZW50VGFyZ2V0LHI9ZS5pbmVydGlhO2lmKHIuYWN0aXZlKWZvcih2YXIgbz1uO2kuZGVmYXVsdC5lbGVtZW50KG8pOyl7aWYobz09PWUuZWxlbWVudCl7ci5yZXN1bWUodCk7YnJlYWt9bz1fLnBhcmVudE5vZGUobyl9fSxcImludGVyYWN0aW9uczpzdG9wXCI6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbi5pbmVydGlhO2UuYWN0aXZlJiZlLnN0b3AoKX0sXCJpbnRlcmFjdGlvbnM6YmVmb3JlLWFjdGlvbi1yZXN1bWVcIjpmdW5jdGlvbih0KXt2YXIgZT10LmludGVyYWN0aW9uLm1vZGlmaWNhdGlvbjtlLnN0b3AodCksZS5zdGFydCh0LHQuaW50ZXJhY3Rpb24uY29vcmRzLmN1ci5wYWdlKSxlLmFwcGx5VG9JbnRlcmFjdGlvbih0KX0sXCJpbnRlcmFjdGlvbnM6YmVmb3JlLWFjdGlvbi1pbmVydGlhc3RhcnRcIjpmdW5jdGlvbih0KXtyZXR1cm4gdC5pbnRlcmFjdGlvbi5tb2RpZmljYXRpb24uc2V0QW5kQXBwbHkodCl9LFwiaW50ZXJhY3Rpb25zOmFjdGlvbi1yZXN1bWVcIjpTZS5hZGRFdmVudE1vZGlmaWVycyxcImludGVyYWN0aW9uczphY3Rpb24taW5lcnRpYXN0YXJ0XCI6U2UuYWRkRXZlbnRNb2RpZmllcnMsXCJpbnRlcmFjdGlvbnM6YWZ0ZXItYWN0aW9uLWluZXJ0aWFzdGFydFwiOmZ1bmN0aW9uKHQpe3JldHVybiB0LmludGVyYWN0aW9uLm1vZGlmaWNhdGlvbi5yZXN0b3JlSW50ZXJhY3Rpb25Db29yZHModCl9LFwiaW50ZXJhY3Rpb25zOmFmdGVyLWFjdGlvbi1yZXN1bWVcIjpmdW5jdGlvbih0KXtyZXR1cm4gdC5pbnRlcmFjdGlvbi5tb2RpZmljYXRpb24ucmVzdG9yZUludGVyYWN0aW9uQ29vcmRzKHQpfX19O2Z1bmN0aW9uIHZuKHQsZSxuLHIpe3ZhciBvPTEtdDtyZXR1cm4gbypvKmUrMipvKnQqbit0KnQqcn1mdW5jdGlvbiBobih0LGUsbixyKXtyZXR1cm4tbioodC89cikqKHQtMikrZX12YXIgZ249cG47bG4uZGVmYXVsdD1nbjt2YXIgeW49e307ZnVuY3Rpb24gbW4odCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsci5rZXkscil9fWZ1bmN0aW9uIGJuKHQsZSxuKXtyZXR1cm4gZSBpbiB0P09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3ZhbHVlOm4sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTp0W2VdPW4sdH1mdW5jdGlvbiB4bih0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1lW25dO2lmKHQuaW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKWJyZWFrO3IodCl9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh5bixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx5bi5FdmVudGFibGU9dm9pZCAwO3ZhciB3bj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSl7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSxibih0aGlzLFwib3B0aW9uc1wiLHZvaWQgMCksYm4odGhpcyxcInR5cGVzXCIse30pLGJuKHRoaXMsXCJwcm9wYWdhdGlvblN0b3BwZWRcIiwhMSksYm4odGhpcyxcImltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZFwiLCExKSxibih0aGlzLFwiZ2xvYmFsXCIsdm9pZCAwKSx0aGlzLm9wdGlvbnM9KDAsTS5kZWZhdWx0KSh7fSxlfHx7fSl9dmFyIGUsbjtyZXR1cm4gZT10LChuPVt7a2V5OlwiZmlyZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcy5nbG9iYWw7KGU9dGhpcy50eXBlc1t0LnR5cGVdKSYmeG4odCxlKSwhdC5wcm9wYWdhdGlvblN0b3BwZWQmJm4mJihlPW5bdC50eXBlXSkmJnhuKHQsZSl9fSx7a2V5Olwib25cIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPSgwLHouZGVmYXVsdCkodCxlKTtmb3IodCBpbiBuKXRoaXMudHlwZXNbdF09SC5tZXJnZSh0aGlzLnR5cGVzW3RdfHxbXSxuW3RdKX19LHtrZXk6XCJvZmZcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPSgwLHouZGVmYXVsdCkodCxlKTtmb3IodCBpbiBuKXt2YXIgcj10aGlzLnR5cGVzW3RdO2lmKHImJnIubGVuZ3RoKWZvcih2YXIgbz0wO288blt0XS5sZW5ndGg7bysrKXt2YXIgaT1uW3RdW29dLGE9ci5pbmRleE9mKGkpOy0xIT09YSYmci5zcGxpY2UoYSwxKX19fX0se2tleTpcImdldFJlY3RcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbH19XSkmJm1uKGUucHJvdG90eXBlLG4pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksdH0oKTt5bi5FdmVudGFibGU9d247dmFyIF9uPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShfbixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxfbi5kZWZhdWx0PWZ1bmN0aW9uKHQsZSl7aWYoZS5waGFzZWxlc3NUeXBlc1t0XSlyZXR1cm4hMDtmb3IodmFyIG4gaW4gZS5tYXApaWYoMD09PXQuaW5kZXhPZihuKSYmdC5zdWJzdHIobi5sZW5ndGgpaW4gZS5waGFzZXMpcmV0dXJuITA7cmV0dXJuITF9O3ZhciBQbj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUG4sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksUG4uY3JlYXRlSW50ZXJhY3RTdGF0aWM9ZnVuY3Rpb24odCl7dmFyIGU9ZnVuY3Rpb24gZShuLHIpe3ZhciBvPXQuaW50ZXJhY3RhYmxlcy5nZXQobixyKTtyZXR1cm4gb3x8KChvPXQuaW50ZXJhY3RhYmxlcy5uZXcobixyKSkuZXZlbnRzLmdsb2JhbD1lLmdsb2JhbEV2ZW50cyksb307cmV0dXJuIGUuZ2V0UG9pbnRlckF2ZXJhZ2U9WC5wb2ludGVyQXZlcmFnZSxlLmdldFRvdWNoQkJveD1YLnRvdWNoQkJveCxlLmdldFRvdWNoRGlzdGFuY2U9WC50b3VjaERpc3RhbmNlLGUuZ2V0VG91Y2hBbmdsZT1YLnRvdWNoQW5nbGUsZS5nZXRFbGVtZW50UmVjdD1fLmdldEVsZW1lbnRSZWN0LGUuZ2V0RWxlbWVudENsaWVudFJlY3Q9Xy5nZXRFbGVtZW50Q2xpZW50UmVjdCxlLm1hdGNoZXNTZWxlY3Rvcj1fLm1hdGNoZXNTZWxlY3RvcixlLmNsb3Nlc3Q9Xy5jbG9zZXN0LGUuZ2xvYmFsRXZlbnRzPXt9LGUudmVyc2lvbj1cIjEuMTAuMTdcIixlLnNjb3BlPXQsZS51c2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5zY29wZS51c2VQbHVnaW4odCxlKSx0aGlzfSxlLmlzU2V0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuISF0aGlzLnNjb3BlLmludGVyYWN0YWJsZXMuZ2V0KHQsZSYmZS5jb250ZXh0KX0sZS5vbj0oMCxYdC53YXJuT25jZSkoKGZ1bmN0aW9uKHQsZSxuKXtpZihpLmRlZmF1bHQuc3RyaW5nKHQpJiYtMSE9PXQuc2VhcmNoKFwiIFwiKSYmKHQ9dC50cmltKCkuc3BsaXQoLyArLykpLGkuZGVmYXVsdC5hcnJheSh0KSl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBvPXRbcl07dGhpcy5vbihvLGUsbil9cmV0dXJuIHRoaXN9aWYoaS5kZWZhdWx0Lm9iamVjdCh0KSl7Zm9yKHZhciBhIGluIHQpdGhpcy5vbihhLHRbYV0sZSk7cmV0dXJuIHRoaXN9cmV0dXJuKDAsX24uZGVmYXVsdCkodCx0aGlzLnNjb3BlLmFjdGlvbnMpP3RoaXMuZ2xvYmFsRXZlbnRzW3RdP3RoaXMuZ2xvYmFsRXZlbnRzW3RdLnB1c2goZSk6dGhpcy5nbG9iYWxFdmVudHNbdF09W2VdOnRoaXMuc2NvcGUuZXZlbnRzLmFkZCh0aGlzLnNjb3BlLmRvY3VtZW50LHQsZSx7b3B0aW9uczpufSksdGhpc30pLFwiVGhlIGludGVyYWN0Lm9uKCkgbWV0aG9kIGlzIGJlaW5nIGRlcHJlY2F0ZWRcIiksZS5vZmY9KDAsWHQud2Fybk9uY2UpKChmdW5jdGlvbih0LGUsbil7aWYoaS5kZWZhdWx0LnN0cmluZyh0KSYmLTEhPT10LnNlYXJjaChcIiBcIikmJih0PXQudHJpbSgpLnNwbGl0KC8gKy8pKSxpLmRlZmF1bHQuYXJyYXkodCkpe2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbz10W3JdO3RoaXMub2ZmKG8sZSxuKX1yZXR1cm4gdGhpc31pZihpLmRlZmF1bHQub2JqZWN0KHQpKXtmb3IodmFyIGEgaW4gdCl0aGlzLm9mZihhLHRbYV0sZSk7cmV0dXJuIHRoaXN9dmFyIHM7cmV0dXJuKDAsX24uZGVmYXVsdCkodCx0aGlzLnNjb3BlLmFjdGlvbnMpP3QgaW4gdGhpcy5nbG9iYWxFdmVudHMmJi0xIT09KHM9dGhpcy5nbG9iYWxFdmVudHNbdF0uaW5kZXhPZihlKSkmJnRoaXMuZ2xvYmFsRXZlbnRzW3RdLnNwbGljZShzLDEpOnRoaXMuc2NvcGUuZXZlbnRzLnJlbW92ZSh0aGlzLnNjb3BlLmRvY3VtZW50LHQsZSxuKSx0aGlzfSksXCJUaGUgaW50ZXJhY3Qub2ZmKCkgbWV0aG9kIGlzIGJlaW5nIGRlcHJlY2F0ZWRcIiksZS5kZWJ1Zz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNjb3BlfSxlLnN1cHBvcnRzVG91Y2g9ZnVuY3Rpb24oKXtyZXR1cm4gYi5kZWZhdWx0LnN1cHBvcnRzVG91Y2h9LGUuc3VwcG9ydHNQb2ludGVyRXZlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gYi5kZWZhdWx0LnN1cHBvcnRzUG9pbnRlckV2ZW50fSxlLnN0b3A9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MDt0PHRoaXMuc2NvcGUuaW50ZXJhY3Rpb25zLmxpc3QubGVuZ3RoO3QrKyl0aGlzLnNjb3BlLmludGVyYWN0aW9ucy5saXN0W3RdLnN0b3AoKTtyZXR1cm4gdGhpc30sZS5wb2ludGVyTW92ZVRvbGVyYW5jZT1mdW5jdGlvbih0KXtyZXR1cm4gaS5kZWZhdWx0Lm51bWJlcih0KT8odGhpcy5zY29wZS5pbnRlcmFjdGlvbnMucG9pbnRlck1vdmVUb2xlcmFuY2U9dCx0aGlzKTp0aGlzLnNjb3BlLmludGVyYWN0aW9ucy5wb2ludGVyTW92ZVRvbGVyYW5jZX0sZS5hZGREb2N1bWVudD1mdW5jdGlvbih0LGUpe3RoaXMuc2NvcGUuYWRkRG9jdW1lbnQodCxlKX0sZS5yZW1vdmVEb2N1bWVudD1mdW5jdGlvbih0KXt0aGlzLnNjb3BlLnJlbW92ZURvY3VtZW50KHQpfSxlfTt2YXIgT249e307ZnVuY3Rpb24gRW4odCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsci5rZXkscil9fWZ1bmN0aW9uIFNuKHQsZSxuKXtyZXR1cm4gZSBpbiB0P09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3ZhbHVlOm4sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTp0W2VdPW4sdH1PYmplY3QuZGVmaW5lUHJvcGVydHkoT24sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksT24uSW50ZXJhY3RhYmxlPXZvaWQgMDt2YXIgVG49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4scixvLGkpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksU24odGhpcyxcIm9wdGlvbnNcIix2b2lkIDApLFNuKHRoaXMsXCJfYWN0aW9uc1wiLHZvaWQgMCksU24odGhpcyxcInRhcmdldFwiLHZvaWQgMCksU24odGhpcyxcImV2ZW50c1wiLG5ldyB5bi5FdmVudGFibGUpLFNuKHRoaXMsXCJfY29udGV4dFwiLHZvaWQgMCksU24odGhpcyxcIl93aW5cIix2b2lkIDApLFNuKHRoaXMsXCJfZG9jXCIsdm9pZCAwKSxTbih0aGlzLFwiX3Njb3BlRXZlbnRzXCIsdm9pZCAwKSxTbih0aGlzLFwiX3JlY3RDaGVja2VyXCIsdm9pZCAwKSx0aGlzLl9hY3Rpb25zPXIuYWN0aW9ucyx0aGlzLnRhcmdldD1uLHRoaXMuX2NvbnRleHQ9ci5jb250ZXh0fHxvLHRoaXMuX3dpbj0oMCxlLmdldFdpbmRvdykoKDAsXy50cnlTZWxlY3Rvcikobik/dGhpcy5fY29udGV4dDpuKSx0aGlzLl9kb2M9dGhpcy5fd2luLmRvY3VtZW50LHRoaXMuX3Njb3BlRXZlbnRzPWksdGhpcy5zZXQocil9dmFyIG4scjtyZXR1cm4gbj10LChyPVt7a2V5OlwiX2RlZmF1bHRzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJue2Jhc2U6e30scGVyQWN0aW9uOnt9LGFjdGlvbnM6e319fX0se2tleTpcInNldE9uRXZlbnRzXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gaS5kZWZhdWx0LmZ1bmMoZS5vbnN0YXJ0KSYmdGhpcy5vbihcIlwiLmNvbmNhdCh0LFwic3RhcnRcIiksZS5vbnN0YXJ0KSxpLmRlZmF1bHQuZnVuYyhlLm9ubW92ZSkmJnRoaXMub24oXCJcIi5jb25jYXQodCxcIm1vdmVcIiksZS5vbm1vdmUpLGkuZGVmYXVsdC5mdW5jKGUub25lbmQpJiZ0aGlzLm9uKFwiXCIuY29uY2F0KHQsXCJlbmRcIiksZS5vbmVuZCksaS5kZWZhdWx0LmZ1bmMoZS5vbmluZXJ0aWFzdGFydCkmJnRoaXMub24oXCJcIi5jb25jYXQodCxcImluZXJ0aWFzdGFydFwiKSxlLm9uaW5lcnRpYXN0YXJ0KSx0aGlzfX0se2tleTpcInVwZGF0ZVBlckFjdGlvbkxpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSxuKXsoaS5kZWZhdWx0LmFycmF5KGUpfHxpLmRlZmF1bHQub2JqZWN0KGUpKSYmdGhpcy5vZmYodCxlKSwoaS5kZWZhdWx0LmFycmF5KG4pfHxpLmRlZmF1bHQub2JqZWN0KG4pKSYmdGhpcy5vbih0LG4pfX0se2tleTpcInNldFBlckFjdGlvblwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fZGVmYXVsdHM7Zm9yKHZhciByIGluIGUpe3ZhciBvPXIsYT10aGlzLm9wdGlvbnNbdF0scz1lW29dO1wibGlzdGVuZXJzXCI9PT1vJiZ0aGlzLnVwZGF0ZVBlckFjdGlvbkxpc3RlbmVycyh0LGEubGlzdGVuZXJzLHMpLGkuZGVmYXVsdC5hcnJheShzKT9hW29dPUguZnJvbShzKTppLmRlZmF1bHQucGxhaW5PYmplY3Qocyk/KGFbb109KDAsTS5kZWZhdWx0KShhW29dfHx7fSwoMCx5ZS5kZWZhdWx0KShzKSksaS5kZWZhdWx0Lm9iamVjdChuLnBlckFjdGlvbltvXSkmJlwiZW5hYmxlZFwiaW4gbi5wZXJBY3Rpb25bb10mJihhW29dLmVuYWJsZWQ9ITEhPT1zLmVuYWJsZWQpKTppLmRlZmF1bHQuYm9vbChzKSYmaS5kZWZhdWx0Lm9iamVjdChuLnBlckFjdGlvbltvXSk/YVtvXS5lbmFibGVkPXM6YVtvXT1zfX19LHtrZXk6XCJnZXRSZWN0XCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8KGkuZGVmYXVsdC5lbGVtZW50KHRoaXMudGFyZ2V0KT90aGlzLnRhcmdldDpudWxsKSxpLmRlZmF1bHQuc3RyaW5nKHRoaXMudGFyZ2V0KSYmKHQ9dHx8dGhpcy5fY29udGV4dC5xdWVyeVNlbGVjdG9yKHRoaXMudGFyZ2V0KSksKDAsXy5nZXRFbGVtZW50UmVjdCkodCl9fSx7a2V5OlwicmVjdENoZWNrZXJcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiBpLmRlZmF1bHQuZnVuYyh0KT8odGhpcy5fcmVjdENoZWNrZXI9dCx0aGlzLmdldFJlY3Q9ZnVuY3Rpb24odCl7dmFyIG49KDAsTS5kZWZhdWx0KSh7fSxlLl9yZWN0Q2hlY2tlcih0KSk7cmV0dXJuXCJ3aWR0aFwiaW4gbnx8KG4ud2lkdGg9bi5yaWdodC1uLmxlZnQsbi5oZWlnaHQ9bi5ib3R0b20tbi50b3ApLG59LHRoaXMpOm51bGw9PT10PyhkZWxldGUgdGhpcy5nZXRSZWN0LGRlbGV0ZSB0aGlzLl9yZWN0Q2hlY2tlcix0aGlzKTp0aGlzLmdldFJlY3R9fSx7a2V5OlwiX2JhY2tDb21wYXRPcHRpb25cIix2YWx1ZTpmdW5jdGlvbih0LGUpe2lmKCgwLF8udHJ5U2VsZWN0b3IpKGUpfHxpLmRlZmF1bHQub2JqZWN0KGUpKXtmb3IodmFyIG4gaW4gdGhpcy5vcHRpb25zW3RdPWUsdGhpcy5fYWN0aW9ucy5tYXApdGhpcy5vcHRpb25zW25dW3RdPWU7cmV0dXJuIHRoaXN9cmV0dXJuIHRoaXMub3B0aW9uc1t0XX19LHtrZXk6XCJvcmlnaW5cIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fYmFja0NvbXBhdE9wdGlvbihcIm9yaWdpblwiLHQpfX0se2tleTpcImRlbHRhU291cmNlXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuXCJwYWdlXCI9PT10fHxcImNsaWVudFwiPT09dD8odGhpcy5vcHRpb25zLmRlbHRhU291cmNlPXQsdGhpcyk6dGhpcy5vcHRpb25zLmRlbHRhU291cmNlfX0se2tleTpcImNvbnRleHRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb250ZXh0fX0se2tleTpcImluQ29udGV4dFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9jb250ZXh0PT09dC5vd25lckRvY3VtZW50fHwoMCxfLm5vZGVDb250YWlucykodGhpcy5fY29udGV4dCx0KX19LHtrZXk6XCJ0ZXN0SWdub3JlQWxsb3dcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIXRoaXMudGVzdElnbm9yZSh0Lmlnbm9yZUZyb20sZSxuKSYmdGhpcy50ZXN0QWxsb3codC5hbGxvd0Zyb20sZSxuKX19LHtrZXk6XCJ0ZXN0QWxsb3dcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIXR8fCEhaS5kZWZhdWx0LmVsZW1lbnQobikmJihpLmRlZmF1bHQuc3RyaW5nKHQpPygwLF8ubWF0Y2hlc1VwVG8pKG4sdCxlKTohIWkuZGVmYXVsdC5lbGVtZW50KHQpJiYoMCxfLm5vZGVDb250YWlucykodCxuKSl9fSx7a2V5OlwidGVzdElnbm9yZVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4hKCF0fHwhaS5kZWZhdWx0LmVsZW1lbnQobikpJiYoaS5kZWZhdWx0LnN0cmluZyh0KT8oMCxfLm1hdGNoZXNVcFRvKShuLHQsZSk6ISFpLmRlZmF1bHQuZWxlbWVudCh0KSYmKDAsXy5ub2RlQ29udGFpbnMpKHQsbikpfX0se2tleTpcImZpcmVcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5ldmVudHMuZmlyZSh0KSx0aGlzfX0se2tleTpcIl9vbk9mZlwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxuLHIpe2kuZGVmYXVsdC5vYmplY3QoZSkmJiFpLmRlZmF1bHQuYXJyYXkoZSkmJihyPW4sbj1udWxsKTt2YXIgbz1cIm9uXCI9PT10P1wiYWRkXCI6XCJyZW1vdmVcIixhPSgwLHouZGVmYXVsdCkoZSxuKTtmb3IodmFyIHMgaW4gYSl7XCJ3aGVlbFwiPT09cyYmKHM9Yi5kZWZhdWx0LndoZWVsRXZlbnQpO2Zvcih2YXIgbD0wO2w8YVtzXS5sZW5ndGg7bCsrKXt2YXIgdT1hW3NdW2xdOygwLF9uLmRlZmF1bHQpKHMsdGhpcy5fYWN0aW9ucyk/dGhpcy5ldmVudHNbdF0ocyx1KTppLmRlZmF1bHQuc3RyaW5nKHRoaXMudGFyZ2V0KT90aGlzLl9zY29wZUV2ZW50c1tcIlwiLmNvbmNhdChvLFwiRGVsZWdhdGVcIildKHRoaXMudGFyZ2V0LHRoaXMuX2NvbnRleHQscyx1LHIpOnRoaXMuX3Njb3BlRXZlbnRzW29dKHRoaXMudGFyZ2V0LHMsdSxyKX19cmV0dXJuIHRoaXN9fSx7a2V5Olwib25cIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHRoaXMuX29uT2ZmKFwib25cIix0LGUsbil9fSx7a2V5Olwib2ZmXCIsdmFsdWU6ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLl9vbk9mZihcIm9mZlwiLHQsZSxuKX19LHtrZXk6XCJzZXRcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9kZWZhdWx0cztmb3IodmFyIG4gaW4gaS5kZWZhdWx0Lm9iamVjdCh0KXx8KHQ9e30pLHRoaXMub3B0aW9ucz0oMCx5ZS5kZWZhdWx0KShlLmJhc2UpLHRoaXMuX2FjdGlvbnMubWV0aG9kRGljdCl7dmFyIHI9bixvPXRoaXMuX2FjdGlvbnMubWV0aG9kRGljdFtyXTt0aGlzLm9wdGlvbnNbcl09e30sdGhpcy5zZXRQZXJBY3Rpb24ociwoMCxNLmRlZmF1bHQpKCgwLE0uZGVmYXVsdCkoe30sZS5wZXJBY3Rpb24pLGUuYWN0aW9uc1tyXSkpLHRoaXNbb10odFtyXSl9Zm9yKHZhciBhIGluIHQpaS5kZWZhdWx0LmZ1bmModGhpc1thXSkmJnRoaXNbYV0odFthXSk7cmV0dXJuIHRoaXN9fSx7a2V5OlwidW5zZXRcIix2YWx1ZTpmdW5jdGlvbigpe2lmKGkuZGVmYXVsdC5zdHJpbmcodGhpcy50YXJnZXQpKWZvcih2YXIgdCBpbiB0aGlzLl9zY29wZUV2ZW50cy5kZWxlZ2F0ZWRFdmVudHMpZm9yKHZhciBlPXRoaXMuX3Njb3BlRXZlbnRzLmRlbGVnYXRlZEV2ZW50c1t0XSxuPWUubGVuZ3RoLTE7bj49MDtuLS0pe3ZhciByPWVbbl0sbz1yLnNlbGVjdG9yLGE9ci5jb250ZXh0LHM9ci5saXN0ZW5lcnM7bz09PXRoaXMudGFyZ2V0JiZhPT09dGhpcy5fY29udGV4dCYmZS5zcGxpY2UobiwxKTtmb3IodmFyIGw9cy5sZW5ndGgtMTtsPj0wO2wtLSl0aGlzLl9zY29wZUV2ZW50cy5yZW1vdmVEZWxlZ2F0ZSh0aGlzLnRhcmdldCx0aGlzLl9jb250ZXh0LHQsc1tsXVswXSxzW2xdWzFdKX1lbHNlIHRoaXMuX3Njb3BlRXZlbnRzLnJlbW92ZSh0aGlzLnRhcmdldCxcImFsbFwiKX19XSkmJkVuKG4ucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksdH0oKTtPbi5JbnRlcmFjdGFibGU9VG47dmFyIGpuPXt9O2Z1bmN0aW9uIE1uKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LHIua2V5LHIpfX1mdW5jdGlvbiBrbih0LGUsbil7cmV0dXJuIGUgaW4gdD9PYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHt2YWx1ZTpuLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6dFtlXT1uLHR9T2JqZWN0LmRlZmluZVByb3BlcnR5KGpuLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGpuLkludGVyYWN0YWJsZVNldD12b2lkIDA7dmFyIEluPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlKXt2YXIgbj10aGlzOyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksa24odGhpcyxcImxpc3RcIixbXSksa24odGhpcyxcInNlbGVjdG9yTWFwXCIse30pLGtuKHRoaXMsXCJzY29wZVwiLHZvaWQgMCksdGhpcy5zY29wZT1lLGUuYWRkTGlzdGVuZXJzKHtcImludGVyYWN0YWJsZTp1bnNldFwiOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW50ZXJhY3RhYmxlLHI9ZS50YXJnZXQsbz1lLl9jb250ZXh0LGE9aS5kZWZhdWx0LnN0cmluZyhyKT9uLnNlbGVjdG9yTWFwW3JdOnJbbi5zY29wZS5pZF0scz1ILmZpbmRJbmRleChhLChmdW5jdGlvbih0KXtyZXR1cm4gdC5jb250ZXh0PT09b30pKTthW3NdJiYoYVtzXS5jb250ZXh0PW51bGwsYVtzXS5pbnRlcmFjdGFibGU9bnVsbCksYS5zcGxpY2UocywxKX19KX12YXIgZSxuO3JldHVybiBlPXQsKG49W3trZXk6XCJuZXdcIix2YWx1ZTpmdW5jdGlvbih0LGUpe2U9KDAsTS5kZWZhdWx0KShlfHx7fSx7YWN0aW9uczp0aGlzLnNjb3BlLmFjdGlvbnN9KTt2YXIgbj1uZXcgdGhpcy5zY29wZS5JbnRlcmFjdGFibGUodCxlLHRoaXMuc2NvcGUuZG9jdW1lbnQsdGhpcy5zY29wZS5ldmVudHMpLHI9e2NvbnRleHQ6bi5fY29udGV4dCxpbnRlcmFjdGFibGU6bn07cmV0dXJuIHRoaXMuc2NvcGUuYWRkRG9jdW1lbnQobi5fZG9jKSx0aGlzLmxpc3QucHVzaChuKSxpLmRlZmF1bHQuc3RyaW5nKHQpPyh0aGlzLnNlbGVjdG9yTWFwW3RdfHwodGhpcy5zZWxlY3Rvck1hcFt0XT1bXSksdGhpcy5zZWxlY3Rvck1hcFt0XS5wdXNoKHIpKToobi50YXJnZXRbdGhpcy5zY29wZS5pZF18fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LHRoaXMuc2NvcGUuaWQse3ZhbHVlOltdLGNvbmZpZ3VyYWJsZTohMH0pLHRbdGhpcy5zY29wZS5pZF0ucHVzaChyKSksdGhpcy5zY29wZS5maXJlKFwiaW50ZXJhY3RhYmxlOm5ld1wiLHt0YXJnZXQ6dCxvcHRpb25zOmUsaW50ZXJhY3RhYmxlOm4sd2luOnRoaXMuc2NvcGUuX3dpbn0pLG59fSx7a2V5OlwiZ2V0XCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt2YXIgbj1lJiZlLmNvbnRleHR8fHRoaXMuc2NvcGUuZG9jdW1lbnQscj1pLmRlZmF1bHQuc3RyaW5nKHQpLG89cj90aGlzLnNlbGVjdG9yTWFwW3RdOnRbdGhpcy5zY29wZS5pZF07aWYoIW8pcmV0dXJuIG51bGw7dmFyIGE9SC5maW5kKG8sKGZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbnRleHQ9PT1uJiYocnx8ZS5pbnRlcmFjdGFibGUuaW5Db250ZXh0KHQpKX0pKTtyZXR1cm4gYSYmYS5pbnRlcmFjdGFibGV9fSx7a2V5OlwiZm9yRWFjaE1hdGNoXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MDtuPHRoaXMubGlzdC5sZW5ndGg7bisrKXt2YXIgcj10aGlzLmxpc3Rbbl0sbz12b2lkIDA7aWYoKGkuZGVmYXVsdC5zdHJpbmcoci50YXJnZXQpP2kuZGVmYXVsdC5lbGVtZW50KHQpJiZfLm1hdGNoZXNTZWxlY3Rvcih0LHIudGFyZ2V0KTp0PT09ci50YXJnZXQpJiZyLmluQ29udGV4dCh0KSYmKG89ZShyKSksdm9pZCAwIT09bylyZXR1cm4gb319fV0pJiZNbihlLnByb3RvdHlwZSxuKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLHR9KCk7am4uSW50ZXJhY3RhYmxlU2V0PUluO3ZhciBEbj17fTtmdW5jdGlvbiBBbih0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1lW25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxyLmtleSxyKX19ZnVuY3Rpb24gem4odCxlLG4pe3JldHVybiBlIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbZV09bix0fWZ1bmN0aW9uIENuKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIHR9KHQpfHxmdW5jdGlvbih0LGUpe3ZhciBuPW51bGw9PXQ/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZ0W1N5bWJvbC5pdGVyYXRvcl18fHRbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPW4pe3ZhciByLG8saT1bXSxhPSEwLHM9ITE7dHJ5e2ZvcihuPW4uY2FsbCh0KTshKGE9KHI9bi5uZXh0KCkpLmRvbmUpJiYoaS5wdXNoKHIudmFsdWUpLCFlfHxpLmxlbmd0aCE9PWUpO2E9ITApO31jYXRjaCh0KXtzPSEwLG89dH1maW5hbGx5e3RyeXthfHxudWxsPT1uLnJldHVybnx8bi5yZXR1cm4oKX1maW5hbGx5e2lmKHMpdGhyb3cgb319cmV0dXJuIGl9fSh0LGUpfHxmdW5jdGlvbih0LGUpe2lmKHQpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiBSbih0LGUpO3ZhciBuPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmdC5jb25zdHJ1Y3RvciYmKG49dC5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbSh0KTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/Um4odCxlKTp2b2lkIDB9fSh0LGUpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9ZnVuY3Rpb24gUm4odCxlKXsobnVsbD09ZXx8ZT50Lmxlbmd0aCkmJihlPXQubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KGUpO248ZTtuKyspcltuXT10W25dO3JldHVybiByfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShEbixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxEbi5kZWZhdWx0PXZvaWQgMDt2YXIgRm49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksem4odGhpcyxcImN1cnJlbnRUYXJnZXRcIix2b2lkIDApLHpuKHRoaXMsXCJvcmlnaW5hbEV2ZW50XCIsdm9pZCAwKSx6bih0aGlzLFwidHlwZVwiLHZvaWQgMCksdGhpcy5vcmlnaW5hbEV2ZW50PWUsKDAsRi5kZWZhdWx0KSh0aGlzLGUpfXZhciBlLG47cmV0dXJuIGU9dCwobj1be2tleTpcInByZXZlbnRPcmlnaW5hbERlZmF1bHRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMub3JpZ2luYWxFdmVudC5wcmV2ZW50RGVmYXVsdCgpfX0se2tleTpcInN0b3BQcm9wYWdhdGlvblwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5vcmlnaW5hbEV2ZW50LnN0b3BQcm9wYWdhdGlvbigpfX0se2tleTpcInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvblwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5vcmlnaW5hbEV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfX1dKSYmQW4oZS5wcm90b3R5cGUsbiksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fSgpO2Z1bmN0aW9uIFhuKHQpe2lmKCFpLmRlZmF1bHQub2JqZWN0KHQpKXJldHVybntjYXB0dXJlOiEhdCxwYXNzaXZlOiExfTt2YXIgZT0oMCxNLmRlZmF1bHQpKHt9LHQpO3JldHVybiBlLmNhcHR1cmU9ISF0LmNhcHR1cmUsZS5wYXNzaXZlPSEhdC5wYXNzaXZlLGV9dmFyIEJuPXtpZDpcImV2ZW50c1wiLGluc3RhbGw6ZnVuY3Rpb24odCl7dmFyIGUsbj1bXSxyPXt9LG89W10sYT17YWRkOnMscmVtb3ZlOmwsYWRkRGVsZWdhdGU6ZnVuY3Rpb24odCxlLG4saSxhKXt2YXIgbD1YbihhKTtpZighcltuXSl7cltuXT1bXTtmb3IodmFyIGY9MDtmPG8ubGVuZ3RoO2YrKyl7dmFyIGQ9b1tmXTtzKGQsbix1KSxzKGQsbixjLCEwKX19dmFyIHA9cltuXSx2PUguZmluZChwLChmdW5jdGlvbihuKXtyZXR1cm4gbi5zZWxlY3Rvcj09PXQmJm4uY29udGV4dD09PWV9KSk7dnx8KHY9e3NlbGVjdG9yOnQsY29udGV4dDplLGxpc3RlbmVyczpbXX0scC5wdXNoKHYpKSx2Lmxpc3RlbmVycy5wdXNoKFtpLGxdKX0scmVtb3ZlRGVsZWdhdGU6ZnVuY3Rpb24odCxlLG4sbyxpKXt2YXIgYSxzPVhuKGkpLGY9cltuXSxkPSExO2lmKGYpZm9yKGE9Zi5sZW5ndGgtMTthPj0wO2EtLSl7dmFyIHA9ZlthXTtpZihwLnNlbGVjdG9yPT09dCYmcC5jb250ZXh0PT09ZSl7Zm9yKHZhciB2PXAubGlzdGVuZXJzLGg9di5sZW5ndGgtMTtoPj0wO2gtLSl7dmFyIGc9Q24odltoXSwyKSx5PWdbMF0sbT1nWzFdLGI9bS5jYXB0dXJlLHg9bS5wYXNzaXZlO2lmKHk9PT1vJiZiPT09cy5jYXB0dXJlJiZ4PT09cy5wYXNzaXZlKXt2LnNwbGljZShoLDEpLHYubGVuZ3RofHwoZi5zcGxpY2UoYSwxKSxsKGUsbix1KSxsKGUsbixjLCEwKSksZD0hMDticmVha319aWYoZClicmVha319fSxkZWxlZ2F0ZUxpc3RlbmVyOnUsZGVsZWdhdGVVc2VDYXB0dXJlOmMsZGVsZWdhdGVkRXZlbnRzOnIsZG9jdW1lbnRzOm8sdGFyZ2V0czpuLHN1cHBvcnRzT3B0aW9uczohMSxzdXBwb3J0c1Bhc3NpdmU6ITF9O2Z1bmN0aW9uIHModCxlLHIsbyl7dmFyIGk9WG4obykscz1ILmZpbmQobiwoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZXZlbnRUYXJnZXQ9PT10fSkpO3N8fChzPXtldmVudFRhcmdldDp0LGV2ZW50czp7fX0sbi5wdXNoKHMpKSxzLmV2ZW50c1tlXXx8KHMuZXZlbnRzW2VdPVtdKSx0LmFkZEV2ZW50TGlzdGVuZXImJiFILmNvbnRhaW5zKHMuZXZlbnRzW2VdLHIpJiYodC5hZGRFdmVudExpc3RlbmVyKGUscixhLnN1cHBvcnRzT3B0aW9ucz9pOmkuY2FwdHVyZSkscy5ldmVudHNbZV0ucHVzaChyKSl9ZnVuY3Rpb24gbCh0LGUscixvKXt2YXIgaT1YbihvKSxzPUguZmluZEluZGV4KG4sKGZ1bmN0aW9uKGUpe3JldHVybiBlLmV2ZW50VGFyZ2V0PT09dH0pKSx1PW5bc107aWYodSYmdS5ldmVudHMpaWYoXCJhbGxcIiE9PWUpe3ZhciBjPSExLGY9dS5ldmVudHNbZV07aWYoZil7aWYoXCJhbGxcIj09PXIpe2Zvcih2YXIgZD1mLmxlbmd0aC0xO2Q+PTA7ZC0tKWwodCxlLGZbZF0saSk7cmV0dXJufWZvcih2YXIgcD0wO3A8Zi5sZW5ndGg7cCsrKWlmKGZbcF09PT1yKXt0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZSxyLGEuc3VwcG9ydHNPcHRpb25zP2k6aS5jYXB0dXJlKSxmLnNwbGljZShwLDEpLDA9PT1mLmxlbmd0aCYmKGRlbGV0ZSB1LmV2ZW50c1tlXSxjPSEwKTticmVha319YyYmIU9iamVjdC5rZXlzKHUuZXZlbnRzKS5sZW5ndGgmJm4uc3BsaWNlKHMsMSl9ZWxzZSBmb3IoZSBpbiB1LmV2ZW50cyl1LmV2ZW50cy5oYXNPd25Qcm9wZXJ0eShlKSYmbCh0LGUsXCJhbGxcIil9ZnVuY3Rpb24gdSh0LGUpe2Zvcih2YXIgbj1YbihlKSxvPW5ldyBGbih0KSxhPXJbdC50eXBlXSxzPUNuKFguZ2V0RXZlbnRUYXJnZXRzKHQpLDEpWzBdLGw9cztpLmRlZmF1bHQuZWxlbWVudChsKTspe2Zvcih2YXIgdT0wO3U8YS5sZW5ndGg7dSsrKXt2YXIgYz1hW3VdLGY9Yy5zZWxlY3RvcixkPWMuY29udGV4dDtpZihfLm1hdGNoZXNTZWxlY3RvcihsLGYpJiZfLm5vZGVDb250YWlucyhkLHMpJiZfLm5vZGVDb250YWlucyhkLGwpKXt2YXIgcD1jLmxpc3RlbmVycztvLmN1cnJlbnRUYXJnZXQ9bDtmb3IodmFyIHY9MDt2PHAubGVuZ3RoO3YrKyl7dmFyIGg9Q24ocFt2XSwyKSxnPWhbMF0seT1oWzFdLG09eS5jYXB0dXJlLGI9eS5wYXNzaXZlO209PT1uLmNhcHR1cmUmJmI9PT1uLnBhc3NpdmUmJmcobyl9fX1sPV8ucGFyZW50Tm9kZShsKX19ZnVuY3Rpb24gYyh0KXtyZXR1cm4gdSh0LCEwKX1yZXR1cm4gbnVsbD09KGU9dC5kb2N1bWVudCl8fGUuY3JlYXRlRWxlbWVudChcImRpdlwiKS5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLG51bGwse2dldCBjYXB0dXJlKCl7cmV0dXJuIGEuc3VwcG9ydHNPcHRpb25zPSEwfSxnZXQgcGFzc2l2ZSgpe3JldHVybiBhLnN1cHBvcnRzUGFzc2l2ZT0hMH19KSx0LmV2ZW50cz1hLGF9fTtEbi5kZWZhdWx0PUJuO3ZhciBZbj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoWW4sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksWW4uZGVmYXVsdD12b2lkIDA7dmFyIFduPXttZXRob2RPcmRlcjpbXCJzaW11bGF0aW9uUmVzdW1lXCIsXCJtb3VzZU9yUGVuXCIsXCJoYXNQb2ludGVyXCIsXCJpZGxlXCJdLHNlYXJjaDpmdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPFduLm1ldGhvZE9yZGVyLmxlbmd0aDtlKyspe3ZhciBuO249V24ubWV0aG9kT3JkZXJbZV07dmFyIHI9V25bbl0odCk7aWYocilyZXR1cm4gcn1yZXR1cm4gbnVsbH0sc2ltdWxhdGlvblJlc3VtZTpmdW5jdGlvbih0KXt2YXIgZT10LnBvaW50ZXJUeXBlLG49dC5ldmVudFR5cGUscj10LmV2ZW50VGFyZ2V0LG89dC5zY29wZTtpZighL2Rvd258c3RhcnQvaS50ZXN0KG4pKXJldHVybiBudWxsO2Zvcih2YXIgaT0wO2k8by5pbnRlcmFjdGlvbnMubGlzdC5sZW5ndGg7aSsrKXt2YXIgYT1vLmludGVyYWN0aW9ucy5saXN0W2ldLHM9cjtpZihhLnNpbXVsYXRpb24mJmEuc2ltdWxhdGlvbi5hbGxvd1Jlc3VtZSYmYS5wb2ludGVyVHlwZT09PWUpZm9yKDtzOyl7aWYocz09PWEuZWxlbWVudClyZXR1cm4gYTtzPV8ucGFyZW50Tm9kZShzKX19cmV0dXJuIG51bGx9LG1vdXNlT3JQZW46ZnVuY3Rpb24odCl7dmFyIGUsbj10LnBvaW50ZXJJZCxyPXQucG9pbnRlclR5cGUsbz10LmV2ZW50VHlwZSxpPXQuc2NvcGU7aWYoXCJtb3VzZVwiIT09ciYmXCJwZW5cIiE9PXIpcmV0dXJuIG51bGw7Zm9yKHZhciBhPTA7YTxpLmludGVyYWN0aW9ucy5saXN0Lmxlbmd0aDthKyspe3ZhciBzPWkuaW50ZXJhY3Rpb25zLmxpc3RbYV07aWYocy5wb2ludGVyVHlwZT09PXIpe2lmKHMuc2ltdWxhdGlvbiYmIUxuKHMsbikpY29udGludWU7aWYocy5pbnRlcmFjdGluZygpKXJldHVybiBzO2V8fChlPXMpfX1pZihlKXJldHVybiBlO2Zvcih2YXIgbD0wO2w8aS5pbnRlcmFjdGlvbnMubGlzdC5sZW5ndGg7bCsrKXt2YXIgdT1pLmludGVyYWN0aW9ucy5saXN0W2xdO2lmKCEodS5wb2ludGVyVHlwZSE9PXJ8fC9kb3duL2kudGVzdChvKSYmdS5zaW11bGF0aW9uKSlyZXR1cm4gdX1yZXR1cm4gbnVsbH0saGFzUG9pbnRlcjpmdW5jdGlvbih0KXtmb3IodmFyIGU9dC5wb2ludGVySWQsbj10LnNjb3BlLHI9MDtyPG4uaW50ZXJhY3Rpb25zLmxpc3QubGVuZ3RoO3IrKyl7dmFyIG89bi5pbnRlcmFjdGlvbnMubGlzdFtyXTtpZihMbihvLGUpKXJldHVybiBvfXJldHVybiBudWxsfSxpZGxlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LnBvaW50ZXJUeXBlLG49dC5zY29wZSxyPTA7cjxuLmludGVyYWN0aW9ucy5saXN0Lmxlbmd0aDtyKyspe3ZhciBvPW4uaW50ZXJhY3Rpb25zLmxpc3Rbcl07aWYoMT09PW8ucG9pbnRlcnMubGVuZ3RoKXt2YXIgaT1vLmludGVyYWN0YWJsZTtpZihpJiYoIWkub3B0aW9ucy5nZXN0dXJlfHwhaS5vcHRpb25zLmdlc3R1cmUuZW5hYmxlZCkpY29udGludWV9ZWxzZSBpZihvLnBvaW50ZXJzLmxlbmd0aD49Miljb250aW51ZTtpZighby5pbnRlcmFjdGluZygpJiZlPT09by5wb2ludGVyVHlwZSlyZXR1cm4gb31yZXR1cm4gbnVsbH19O2Z1bmN0aW9uIExuKHQsZSl7cmV0dXJuIHQucG9pbnRlcnMuc29tZSgoZnVuY3Rpb24odCl7cmV0dXJuIHQuaWQ9PT1lfSkpfXZhciBVbj1XbjtZbi5kZWZhdWx0PVVuO3ZhciBWbj17fTtmdW5jdGlvbiBObih0KXtyZXR1cm4gTm49XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0sTm4odCl9ZnVuY3Rpb24gcW4odCxlKXtyZXR1cm4gZnVuY3Rpb24odCl7aWYoQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4gdH0odCl8fGZ1bmN0aW9uKHQsZSl7dmFyIG49bnVsbD09dD9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJnRbU3ltYm9sLml0ZXJhdG9yXXx8dFtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpPVtdLGE9ITAscz0hMTt0cnl7Zm9yKG49bi5jYWxsKHQpOyEoYT0ocj1uLm5leHQoKSkuZG9uZSkmJihpLnB1c2goci52YWx1ZSksIWV8fGkubGVuZ3RoIT09ZSk7YT0hMCk7fWNhdGNoKHQpe3M9ITAsbz10fWZpbmFsbHl7dHJ5e2F8fG51bGw9PW4ucmV0dXJufHxuLnJldHVybigpfWZpbmFsbHl7aWYocyl0aHJvdyBvfX1yZXR1cm4gaX19KHQsZSl8fGZ1bmN0aW9uKHQsZSl7aWYodCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpcmV0dXJuIEduKHQsZSk7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZ0LmNvbnN0cnVjdG9yJiYobj10LmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKHQpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9Hbih0LGUpOnZvaWQgMH19KHQsZSl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKX1mdW5jdGlvbiBHbih0LGUpeyhudWxsPT1lfHxlPnQubGVuZ3RoKSYmKGU9dC5sZW5ndGgpO2Zvcih2YXIgbj0wLHI9QXJyYXkoZSk7bjxlO24rKylyW25dPXRbbl07cmV0dXJuIHJ9ZnVuY3Rpb24gJG4odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIEhuKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LHIua2V5LHIpfX1mdW5jdGlvbiBLbih0LGUpe3JldHVybiBLbj1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKTpmdW5jdGlvbih0LGUpe3JldHVybiB0Ll9fcHJvdG9fXz1lLHR9LEtuKHQsZSl9ZnVuY3Rpb24gWm4odCxlKXtpZihlJiYoXCJvYmplY3RcIj09PU5uKGUpfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlKSlyZXR1cm4gZTtpZih2b2lkIDAhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTtyZXR1cm4gZnVuY3Rpb24odCl7aWYodm9pZCAwPT09dCl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIHR9KHQpfWZ1bmN0aW9uIEpuKHQpe3JldHVybiBKbj1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKTpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0sSm4odCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KFZuLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLFZuLmRlZmF1bHQ9dm9pZCAwO3ZhciBRbj1bXCJwb2ludGVyRG93blwiLFwicG9pbnRlck1vdmVcIixcInBvaW50ZXJVcFwiLFwidXBkYXRlUG9pbnRlclwiLFwicmVtb3ZlUG9pbnRlclwiLFwid2luZG93Qmx1clwiXTtmdW5jdGlvbiB0cih0LGUpe3JldHVybiBmdW5jdGlvbihuKXt2YXIgcj1lLmludGVyYWN0aW9ucy5saXN0LG89WC5nZXRQb2ludGVyVHlwZShuKSxpPXFuKFguZ2V0RXZlbnRUYXJnZXRzKG4pLDIpLGE9aVswXSxzPWlbMV0sbD1bXTtpZigvXnRvdWNoLy50ZXN0KG4udHlwZSkpe2UucHJldlRvdWNoVGltZT1lLm5vdygpO2Zvcih2YXIgdT0wO3U8bi5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg7dSsrKXt2YXIgYz1uLmNoYW5nZWRUb3VjaGVzW3VdLGY9e3BvaW50ZXI6Yyxwb2ludGVySWQ6WC5nZXRQb2ludGVySWQoYykscG9pbnRlclR5cGU6byxldmVudFR5cGU6bi50eXBlLGV2ZW50VGFyZ2V0OmEsY3VyRXZlbnRUYXJnZXQ6cyxzY29wZTplfSxkPWVyKGYpO2wucHVzaChbZi5wb2ludGVyLGYuZXZlbnRUYXJnZXQsZi5jdXJFdmVudFRhcmdldCxkXSl9fWVsc2V7dmFyIHA9ITE7aWYoIWIuZGVmYXVsdC5zdXBwb3J0c1BvaW50ZXJFdmVudCYmL21vdXNlLy50ZXN0KG4udHlwZSkpe2Zvcih2YXIgdj0wO3Y8ci5sZW5ndGgmJiFwO3YrKylwPVwibW91c2VcIiE9PXJbdl0ucG9pbnRlclR5cGUmJnJbdl0ucG9pbnRlcklzRG93bjtwPXB8fGUubm93KCktZS5wcmV2VG91Y2hUaW1lPDUwMHx8MD09PW4udGltZVN0YW1wfWlmKCFwKXt2YXIgaD17cG9pbnRlcjpuLHBvaW50ZXJJZDpYLmdldFBvaW50ZXJJZChuKSxwb2ludGVyVHlwZTpvLGV2ZW50VHlwZTpuLnR5cGUsY3VyRXZlbnRUYXJnZXQ6cyxldmVudFRhcmdldDphLHNjb3BlOmV9LGc9ZXIoaCk7bC5wdXNoKFtoLnBvaW50ZXIsaC5ldmVudFRhcmdldCxoLmN1ckV2ZW50VGFyZ2V0LGddKX19Zm9yKHZhciB5PTA7eTxsLmxlbmd0aDt5Kyspe3ZhciBtPXFuKGxbeV0sNCkseD1tWzBdLHc9bVsxXSxfPW1bMl07bVszXVt0XSh4LG4sdyxfKX19fWZ1bmN0aW9uIGVyKHQpe3ZhciBlPXQucG9pbnRlclR5cGUsbj10LnNjb3BlLHI9e2ludGVyYWN0aW9uOlluLmRlZmF1bHQuc2VhcmNoKHQpLHNlYXJjaERldGFpbHM6dH07cmV0dXJuIG4uZmlyZShcImludGVyYWN0aW9uczpmaW5kXCIsciksci5pbnRlcmFjdGlvbnx8bi5pbnRlcmFjdGlvbnMubmV3KHtwb2ludGVyVHlwZTplfSl9ZnVuY3Rpb24gbnIodCxlKXt2YXIgbj10LmRvYyxyPXQuc2NvcGUsbz10Lm9wdGlvbnMsaT1yLmludGVyYWN0aW9ucy5kb2NFdmVudHMsYT1yLmV2ZW50cyxzPWFbZV07Zm9yKHZhciBsIGluIHIuYnJvd3Nlci5pc0lPUyYmIW8uZXZlbnRzJiYoby5ldmVudHM9e3Bhc3NpdmU6ITF9KSxhLmRlbGVnYXRlZEV2ZW50cylzKG4sbCxhLmRlbGVnYXRlTGlzdGVuZXIpLHMobixsLGEuZGVsZWdhdGVVc2VDYXB0dXJlLCEwKTtmb3IodmFyIHU9byYmby5ldmVudHMsYz0wO2M8aS5sZW5ndGg7YysrKXt2YXIgZj1pW2NdO3MobixmLnR5cGUsZi5saXN0ZW5lcix1KX19dmFyIHJyPXtpZDpcImNvcmUvaW50ZXJhY3Rpb25zXCIsaW5zdGFsbDpmdW5jdGlvbih0KXtmb3IodmFyIGU9e30sbj0wO248UW4ubGVuZ3RoO24rKyl7dmFyIHI9UW5bbl07ZVtyXT10cihyLHQpfXZhciBvLGk9Yi5kZWZhdWx0LnBFdmVudFR5cGVzO2Z1bmN0aW9uIGEoKXtmb3IodmFyIGU9MDtlPHQuaW50ZXJhY3Rpb25zLmxpc3QubGVuZ3RoO2UrKyl7dmFyIG49dC5pbnRlcmFjdGlvbnMubGlzdFtlXTtpZihuLnBvaW50ZXJJc0Rvd24mJlwidG91Y2hcIj09PW4ucG9pbnRlclR5cGUmJiFuLl9pbnRlcmFjdGluZylmb3IodmFyIHI9ZnVuY3Rpb24oKXt2YXIgZT1uLnBvaW50ZXJzW29dO3QuZG9jdW1lbnRzLnNvbWUoKGZ1bmN0aW9uKHQpe3ZhciBuPXQuZG9jO3JldHVybigwLF8ubm9kZUNvbnRhaW5zKShuLGUuZG93blRhcmdldCl9KSl8fG4ucmVtb3ZlUG9pbnRlcihlLnBvaW50ZXIsZS5ldmVudCl9LG89MDtvPG4ucG9pbnRlcnMubGVuZ3RoO28rKylyKCl9fShvPWguZGVmYXVsdC5Qb2ludGVyRXZlbnQ/W3t0eXBlOmkuZG93bixsaXN0ZW5lcjphfSx7dHlwZTppLmRvd24sbGlzdGVuZXI6ZS5wb2ludGVyRG93bn0se3R5cGU6aS5tb3ZlLGxpc3RlbmVyOmUucG9pbnRlck1vdmV9LHt0eXBlOmkudXAsbGlzdGVuZXI6ZS5wb2ludGVyVXB9LHt0eXBlOmkuY2FuY2VsLGxpc3RlbmVyOmUucG9pbnRlclVwfV06W3t0eXBlOlwibW91c2Vkb3duXCIsbGlzdGVuZXI6ZS5wb2ludGVyRG93bn0se3R5cGU6XCJtb3VzZW1vdmVcIixsaXN0ZW5lcjplLnBvaW50ZXJNb3ZlfSx7dHlwZTpcIm1vdXNldXBcIixsaXN0ZW5lcjplLnBvaW50ZXJVcH0se3R5cGU6XCJ0b3VjaHN0YXJ0XCIsbGlzdGVuZXI6YX0se3R5cGU6XCJ0b3VjaHN0YXJ0XCIsbGlzdGVuZXI6ZS5wb2ludGVyRG93bn0se3R5cGU6XCJ0b3VjaG1vdmVcIixsaXN0ZW5lcjplLnBvaW50ZXJNb3ZlfSx7dHlwZTpcInRvdWNoZW5kXCIsbGlzdGVuZXI6ZS5wb2ludGVyVXB9LHt0eXBlOlwidG91Y2hjYW5jZWxcIixsaXN0ZW5lcjplLnBvaW50ZXJVcH1dKS5wdXNoKHt0eXBlOlwiYmx1clwiLGxpc3RlbmVyOmZ1bmN0aW9uKGUpe2Zvcih2YXIgbj0wO248dC5pbnRlcmFjdGlvbnMubGlzdC5sZW5ndGg7bisrKXQuaW50ZXJhY3Rpb25zLmxpc3Rbbl0uZG9jdW1lbnRCbHVyKGUpfX0pLHQucHJldlRvdWNoVGltZT0wLHQuSW50ZXJhY3Rpb249ZnVuY3Rpb24oZSl7IWZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLGUmJktuKHQsZSl9KHMsZSk7dmFyIG4scixvLGksYT0obz1zLGk9ZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUmVmbGVjdHx8IVJlZmxlY3QuY29uc3RydWN0KXJldHVybiExO2lmKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgUHJveHkpcmV0dXJuITA7dHJ5e3JldHVybiBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbixbXSwoZnVuY3Rpb24oKXt9KSkpLCEwfWNhdGNoKHQpe3JldHVybiExfX0oKSxmdW5jdGlvbigpe3ZhciB0LGU9Sm4obyk7aWYoaSl7dmFyIG49Sm4odGhpcykuY29uc3RydWN0b3I7dD1SZWZsZWN0LmNvbnN0cnVjdChlLGFyZ3VtZW50cyxuKX1lbHNlIHQ9ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIFpuKHRoaXMsdCl9KTtmdW5jdGlvbiBzKCl7cmV0dXJuICRuKHRoaXMscyksYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIG49cywocj1be2tleTpcInBvaW50ZXJNb3ZlVG9sZXJhbmNlXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQuaW50ZXJhY3Rpb25zLnBvaW50ZXJNb3ZlVG9sZXJhbmNlfSxzZXQ6ZnVuY3Rpb24oZSl7dC5pbnRlcmFjdGlvbnMucG9pbnRlck1vdmVUb2xlcmFuY2U9ZX19LHtrZXk6XCJfbm93XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdC5ub3coKX19XSkmJkhuKG4ucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksc30oR2UuZGVmYXVsdCksdC5pbnRlcmFjdGlvbnM9e2xpc3Q6W10sbmV3OmZ1bmN0aW9uKGUpe2Uuc2NvcGVGaXJlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQuZmlyZShlLG4pfTt2YXIgbj1uZXcgdC5JbnRlcmFjdGlvbihlKTtyZXR1cm4gdC5pbnRlcmFjdGlvbnMubGlzdC5wdXNoKG4pLG59LGxpc3RlbmVyczplLGRvY0V2ZW50czpvLHBvaW50ZXJNb3ZlVG9sZXJhbmNlOjF9LHQudXNlUGx1Z2luKGxlLmRlZmF1bHQpfSxsaXN0ZW5lcnM6e1wic2NvcGU6YWRkLWRvY3VtZW50XCI6ZnVuY3Rpb24odCl7cmV0dXJuIG5yKHQsXCJhZGRcIil9LFwic2NvcGU6cmVtb3ZlLWRvY3VtZW50XCI6ZnVuY3Rpb24odCl7cmV0dXJuIG5yKHQsXCJyZW1vdmVcIil9LFwiaW50ZXJhY3RhYmxlOnVuc2V0XCI6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dC5pbnRlcmFjdGFibGUscj1lLmludGVyYWN0aW9ucy5saXN0Lmxlbmd0aC0xO3I+PTA7ci0tKXt2YXIgbz1lLmludGVyYWN0aW9ucy5saXN0W3JdO28uaW50ZXJhY3RhYmxlPT09biYmKG8uc3RvcCgpLGUuZmlyZShcImludGVyYWN0aW9uczpkZXN0cm95XCIse2ludGVyYWN0aW9uOm99KSxvLmRlc3Ryb3koKSxlLmludGVyYWN0aW9ucy5saXN0Lmxlbmd0aD4yJiZlLmludGVyYWN0aW9ucy5saXN0LnNwbGljZShyLDEpKX19fSxvbkRvY1NpZ25hbDpucixkb09uSW50ZXJhY3Rpb25zOnRyLG1ldGhvZE5hbWVzOlFufSxvcj1ycjtWbi5kZWZhdWx0PW9yO3ZhciBpcj17fTtmdW5jdGlvbiBhcih0KXtyZXR1cm4gYXI9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0sYXIodCl9ZnVuY3Rpb24gc3IoKXtyZXR1cm4gc3I9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuZ2V0P1JlZmxlY3QuZ2V0LmJpbmQoKTpmdW5jdGlvbih0LGUsbil7dmFyIHI9bHIodCxlKTtpZihyKXt2YXIgbz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHIsZSk7cmV0dXJuIG8uZ2V0P28uZ2V0LmNhbGwoYXJndW1lbnRzLmxlbmd0aDwzP3Q6bik6by52YWx1ZX19LHNyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBscih0LGUpe2Zvcig7IU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpJiZudWxsIT09KHQ9ZnIodCkpOyk7cmV0dXJuIHR9ZnVuY3Rpb24gdXIodCxlKXtyZXR1cm4gdXI9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSx1cih0LGUpfWZ1bmN0aW9uIGNyKHQsZSl7aWYoZSYmKFwib2JqZWN0XCI9PT1hcihlKXx8XCJmdW5jdGlvblwiPT10eXBlb2YgZSkpcmV0dXJuIGU7aWYodm9pZCAwIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7cmV0dXJuIGZ1bmN0aW9uKHQpe2lmKHZvaWQgMD09PXQpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiB0fSh0KX1mdW5jdGlvbiBmcih0KXtyZXR1cm4gZnI9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCk6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9LGZyKHQpfWZ1bmN0aW9uIGRyKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBwcih0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1lW25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxyLmtleSxyKX19ZnVuY3Rpb24gdnIodCxlLG4pe3JldHVybiBlJiZwcih0LnByb3RvdHlwZSxlKSxuJiZwcih0LG4pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksdH1mdW5jdGlvbiBocih0LGUsbil7cmV0dXJuIGUgaW4gdD9PYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHt2YWx1ZTpuLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6dFtlXT1uLHR9T2JqZWN0LmRlZmluZVByb3BlcnR5KGlyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGlyLlNjb3BlPXZvaWQgMCxpci5pbml0U2NvcGU9eXI7dmFyIGdyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3ZhciBlPXRoaXM7ZHIodGhpcyx0KSxocih0aGlzLFwiaWRcIixcIl9faW50ZXJhY3Rfc2NvcGVfXCIuY29uY2F0KE1hdGguZmxvb3IoMTAwKk1hdGgucmFuZG9tKCkpKSksaHIodGhpcyxcImlzSW5pdGlhbGl6ZWRcIiwhMSksaHIodGhpcyxcImxpc3RlbmVyTWFwc1wiLFtdKSxocih0aGlzLFwiYnJvd3NlclwiLGIuZGVmYXVsdCksaHIodGhpcyxcImRlZmF1bHRzXCIsKDAseWUuZGVmYXVsdCkoa2UuZGVmYXVsdHMpKSxocih0aGlzLFwiRXZlbnRhYmxlXCIseW4uRXZlbnRhYmxlKSxocih0aGlzLFwiYWN0aW9uc1wiLHttYXA6e30scGhhc2VzOntzdGFydDohMCxtb3ZlOiEwLGVuZDohMH0sbWV0aG9kRGljdDp7fSxwaGFzZWxlc3NUeXBlczp7fX0pLGhyKHRoaXMsXCJpbnRlcmFjdFN0YXRpY1wiLCgwLFBuLmNyZWF0ZUludGVyYWN0U3RhdGljKSh0aGlzKSksaHIodGhpcyxcIkludGVyYWN0RXZlbnRcIixJZS5JbnRlcmFjdEV2ZW50KSxocih0aGlzLFwiSW50ZXJhY3RhYmxlXCIsdm9pZCAwKSxocih0aGlzLFwiaW50ZXJhY3RhYmxlc1wiLG5ldyBqbi5JbnRlcmFjdGFibGVTZXQodGhpcykpLGhyKHRoaXMsXCJfd2luXCIsdm9pZCAwKSxocih0aGlzLFwiZG9jdW1lbnRcIix2b2lkIDApLGhyKHRoaXMsXCJ3aW5kb3dcIix2b2lkIDApLGhyKHRoaXMsXCJkb2N1bWVudHNcIixbXSksaHIodGhpcyxcIl9wbHVnaW5zXCIse2xpc3Q6W10sbWFwOnt9fSksaHIodGhpcyxcIm9uV2luZG93VW5sb2FkXCIsKGZ1bmN0aW9uKHQpe3JldHVybiBlLnJlbW92ZURvY3VtZW50KHQudGFyZ2V0KX0pKTt2YXIgbj10aGlzO3RoaXMuSW50ZXJhY3RhYmxlPWZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSxlJiZ1cih0LGUpfShpLHQpO3ZhciBlLHIsbz0oZT1pLHI9ZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUmVmbGVjdHx8IVJlZmxlY3QuY29uc3RydWN0KXJldHVybiExO2lmKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgUHJveHkpcmV0dXJuITA7dHJ5e3JldHVybiBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbixbXSwoZnVuY3Rpb24oKXt9KSkpLCEwfWNhdGNoKHQpe3JldHVybiExfX0oKSxmdW5jdGlvbigpe3ZhciB0LG49ZnIoZSk7aWYocil7dmFyIG89ZnIodGhpcykuY29uc3RydWN0b3I7dD1SZWZsZWN0LmNvbnN0cnVjdChuLGFyZ3VtZW50cyxvKX1lbHNlIHQ9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGNyKHRoaXMsdCl9KTtmdW5jdGlvbiBpKCl7cmV0dXJuIGRyKHRoaXMsaSksby5hcHBseSh0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIHZyKGksW3trZXk6XCJfZGVmYXVsdHNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbi5kZWZhdWx0c319LHtrZXk6XCJzZXRcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gc3IoZnIoaS5wcm90b3R5cGUpLFwic2V0XCIsdGhpcykuY2FsbCh0aGlzLHQpLG4uZmlyZShcImludGVyYWN0YWJsZTpzZXRcIix7b3B0aW9uczp0LGludGVyYWN0YWJsZTp0aGlzfSksdGhpc319LHtrZXk6XCJ1bnNldFwiLHZhbHVlOmZ1bmN0aW9uKCl7c3IoZnIoaS5wcm90b3R5cGUpLFwidW5zZXRcIix0aGlzKS5jYWxsKHRoaXMpO3ZhciB0PW4uaW50ZXJhY3RhYmxlcy5saXN0LmluZGV4T2YodGhpcyk7dDwwfHwoc3IoZnIoaS5wcm90b3R5cGUpLFwidW5zZXRcIix0aGlzKS5jYWxsKHRoaXMpLG4uaW50ZXJhY3RhYmxlcy5saXN0LnNwbGljZSh0LDEpLG4uZmlyZShcImludGVyYWN0YWJsZTp1bnNldFwiLHtpbnRlcmFjdGFibGU6dGhpc30pKX19XSksaX0oT24uSW50ZXJhY3RhYmxlKX1yZXR1cm4gdnIodCxbe2tleTpcImFkZExpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy5saXN0ZW5lck1hcHMucHVzaCh7aWQ6ZSxtYXA6dH0pfX0se2tleTpcImZpcmVcIix2YWx1ZTpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wO248dGhpcy5saXN0ZW5lck1hcHMubGVuZ3RoO24rKyl7dmFyIHI9dGhpcy5saXN0ZW5lck1hcHNbbl0ubWFwW3RdO2lmKHImJiExPT09cihlLHRoaXMsdCkpcmV0dXJuITF9fX0se2tleTpcImluaXRcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5pc0luaXRpYWxpemVkP3RoaXM6eXIodGhpcyx0KX19LHtrZXk6XCJwbHVnaW5Jc0luc3RhbGxlZFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9wbHVnaW5zLm1hcFt0LmlkXXx8LTEhPT10aGlzLl9wbHVnaW5zLmxpc3QuaW5kZXhPZih0KX19LHtrZXk6XCJ1c2VQbHVnaW5cIix2YWx1ZTpmdW5jdGlvbih0LGUpe2lmKCF0aGlzLmlzSW5pdGlhbGl6ZWQpcmV0dXJuIHRoaXM7aWYodGhpcy5wbHVnaW5Jc0luc3RhbGxlZCh0KSlyZXR1cm4gdGhpcztpZih0LmlkJiYodGhpcy5fcGx1Z2lucy5tYXBbdC5pZF09dCksdGhpcy5fcGx1Z2lucy5saXN0LnB1c2godCksdC5pbnN0YWxsJiZ0Lmluc3RhbGwodGhpcyxlKSx0Lmxpc3RlbmVycyYmdC5iZWZvcmUpe2Zvcih2YXIgbj0wLHI9dGhpcy5saXN0ZW5lck1hcHMubGVuZ3RoLG89dC5iZWZvcmUucmVkdWNlKChmdW5jdGlvbih0LGUpe3JldHVybiB0W2VdPSEwLHRbbXIoZSldPSEwLHR9KSx7fSk7bjxyO24rKyl7dmFyIGk9dGhpcy5saXN0ZW5lck1hcHNbbl0uaWQ7aWYob1tpXXx8b1ttcihpKV0pYnJlYWt9dGhpcy5saXN0ZW5lck1hcHMuc3BsaWNlKG4sMCx7aWQ6dC5pZCxtYXA6dC5saXN0ZW5lcnN9KX1lbHNlIHQubGlzdGVuZXJzJiZ0aGlzLmxpc3RlbmVyTWFwcy5wdXNoKHtpZDp0LmlkLG1hcDp0Lmxpc3RlbmVyc30pO3JldHVybiB0aGlzfX0se2tleTpcImFkZERvY3VtZW50XCIsdmFsdWU6ZnVuY3Rpb24odCxuKXtpZigtMSE9PXRoaXMuZ2V0RG9jSW5kZXgodCkpcmV0dXJuITE7dmFyIHI9ZS5nZXRXaW5kb3codCk7bj1uPygwLE0uZGVmYXVsdCkoe30sbik6e30sdGhpcy5kb2N1bWVudHMucHVzaCh7ZG9jOnQsb3B0aW9uczpufSksdGhpcy5ldmVudHMuZG9jdW1lbnRzLnB1c2godCksdCE9PXRoaXMuZG9jdW1lbnQmJnRoaXMuZXZlbnRzLmFkZChyLFwidW5sb2FkXCIsdGhpcy5vbldpbmRvd1VubG9hZCksdGhpcy5maXJlKFwic2NvcGU6YWRkLWRvY3VtZW50XCIse2RvYzp0LHdpbmRvdzpyLHNjb3BlOnRoaXMsb3B0aW9uczpufSl9fSx7a2V5OlwicmVtb3ZlRG9jdW1lbnRcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgbj10aGlzLmdldERvY0luZGV4KHQpLHI9ZS5nZXRXaW5kb3codCksbz10aGlzLmRvY3VtZW50c1tuXS5vcHRpb25zO3RoaXMuZXZlbnRzLnJlbW92ZShyLFwidW5sb2FkXCIsdGhpcy5vbldpbmRvd1VubG9hZCksdGhpcy5kb2N1bWVudHMuc3BsaWNlKG4sMSksdGhpcy5ldmVudHMuZG9jdW1lbnRzLnNwbGljZShuLDEpLHRoaXMuZmlyZShcInNjb3BlOnJlbW92ZS1kb2N1bWVudFwiLHtkb2M6dCx3aW5kb3c6cixzY29wZTp0aGlzLG9wdGlvbnM6b30pfX0se2tleTpcImdldERvY0luZGV4XCIsdmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0aGlzLmRvY3VtZW50cy5sZW5ndGg7ZSsrKWlmKHRoaXMuZG9jdW1lbnRzW2VdLmRvYz09PXQpcmV0dXJuIGU7cmV0dXJuLTF9fSx7a2V5OlwiZ2V0RG9jT3B0aW9uc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0RG9jSW5kZXgodCk7cmV0dXJuLTE9PT1lP251bGw6dGhpcy5kb2N1bWVudHNbZV0ub3B0aW9uc319LHtrZXk6XCJub3dcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybih0aGlzLndpbmRvdy5EYXRlfHxEYXRlKS5ub3coKX19XSksdH0oKTtmdW5jdGlvbiB5cih0LG4pe3JldHVybiB0LmlzSW5pdGlhbGl6ZWQ9ITAsaS5kZWZhdWx0LndpbmRvdyhuKSYmZS5pbml0KG4pLGguZGVmYXVsdC5pbml0KG4pLGIuZGVmYXVsdC5pbml0KG4pLFR0LmRlZmF1bHQuaW5pdChuKSx0LndpbmRvdz1uLHQuZG9jdW1lbnQ9bi5kb2N1bWVudCx0LnVzZVBsdWdpbihWbi5kZWZhdWx0KSx0LnVzZVBsdWdpbihEbi5kZWZhdWx0KSx0fWZ1bmN0aW9uIG1yKHQpe3JldHVybiB0JiZ0LnJlcGxhY2UoL1xcLy4qJC8sXCJcIil9aXIuU2NvcGU9Z3I7dmFyIGJyPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShicixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxici5kZWZhdWx0PXZvaWQgMDt2YXIgeHI9bmV3IGlyLlNjb3BlLHdyPXhyLmludGVyYWN0U3RhdGljO2JyLmRlZmF1bHQ9d3I7dmFyIF9yPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWxUaGlzP2dsb2JhbFRoaXM6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dm9pZCAwO3hyLmluaXQoX3IpO3ZhciBQcj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksUHIuZGVmYXVsdD12b2lkIDAsUHIuZGVmYXVsdD1mdW5jdGlvbigpe307dmFyIE9yPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShPcixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxPci5kZWZhdWx0PXZvaWQgMCxPci5kZWZhdWx0PWZ1bmN0aW9uKCl7fTt2YXIgRXI9e307ZnVuY3Rpb24gU3IodCxlKXtyZXR1cm4gZnVuY3Rpb24odCl7aWYoQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4gdH0odCl8fGZ1bmN0aW9uKHQsZSl7dmFyIG49bnVsbD09dD9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJnRbU3ltYm9sLml0ZXJhdG9yXXx8dFtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpPVtdLGE9ITAscz0hMTt0cnl7Zm9yKG49bi5jYWxsKHQpOyEoYT0ocj1uLm5leHQoKSkuZG9uZSkmJihpLnB1c2goci52YWx1ZSksIWV8fGkubGVuZ3RoIT09ZSk7YT0hMCk7fWNhdGNoKHQpe3M9ITAsbz10fWZpbmFsbHl7dHJ5e2F8fG51bGw9PW4ucmV0dXJufHxuLnJldHVybigpfWZpbmFsbHl7aWYocyl0aHJvdyBvfX1yZXR1cm4gaX19KHQsZSl8fGZ1bmN0aW9uKHQsZSl7aWYodCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpcmV0dXJuIFRyKHQsZSk7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZ0LmNvbnN0cnVjdG9yJiYobj10LmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKHQpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9Ucih0LGUpOnZvaWQgMH19KHQsZSl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKX1mdW5jdGlvbiBUcih0LGUpeyhudWxsPT1lfHxlPnQubGVuZ3RoKSYmKGU9dC5sZW5ndGgpO2Zvcih2YXIgbj0wLHI9QXJyYXkoZSk7bjxlO24rKylyW25dPXRbbl07cmV0dXJuIHJ9T2JqZWN0LmRlZmluZVByb3BlcnR5KEVyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLEVyLmRlZmF1bHQ9dm9pZCAwLEVyLmRlZmF1bHQ9ZnVuY3Rpb24odCl7dmFyIGU9W1tcInhcIixcInlcIl0sW1wibGVmdFwiLFwidG9wXCJdLFtcInJpZ2h0XCIsXCJib3R0b21cIl0sW1wid2lkdGhcIixcImhlaWdodFwiXV0uZmlsdGVyKChmdW5jdGlvbihlKXt2YXIgbj1TcihlLDIpLHI9blswXSxvPW5bMV07cmV0dXJuIHIgaW4gdHx8byBpbiB0fSkpLG49ZnVuY3Rpb24obixyKXtmb3IodmFyIG89dC5yYW5nZSxpPXQubGltaXRzLGE9dm9pZCAwPT09aT97bGVmdDotMS8wLHJpZ2h0OjEvMCx0b3A6LTEvMCxib3R0b206MS8wfTppLHM9dC5vZmZzZXQsbD12b2lkIDA9PT1zP3t4OjAseTowfTpzLHU9e3JhbmdlOm8sZ3JpZDp0LHg6bnVsbCx5Om51bGx9LGM9MDtjPGUubGVuZ3RoO2MrKyl7dmFyIGY9U3IoZVtjXSwyKSxkPWZbMF0scD1mWzFdLHY9TWF0aC5yb3VuZCgobi1sLngpL3RbZF0pLGg9TWF0aC5yb3VuZCgoci1sLnkpL3RbcF0pO3VbZF09TWF0aC5tYXgoYS5sZWZ0LE1hdGgubWluKGEucmlnaHQsdip0W2RdK2wueCkpLHVbcF09TWF0aC5tYXgoYS50b3AsTWF0aC5taW4oYS5ib3R0b20saCp0W3BdK2wueSkpfXJldHVybiB1fTtyZXR1cm4gbi5ncmlkPXQsbi5jb29yZEZpZWxkcz1lLG59O3ZhciBqcj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoanIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGpyLFwiZWRnZVRhcmdldFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBQci5kZWZhdWx0fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShqcixcImVsZW1lbnRzXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIE9yLmRlZmF1bHR9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGpyLFwiZ3JpZFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBFci5kZWZhdWx0fX0pO3ZhciBNcj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoTXIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksTXIuZGVmYXVsdD12b2lkIDA7dmFyIGtyPXtpZDpcInNuYXBwZXJzXCIsaW5zdGFsbDpmdW5jdGlvbih0KXt2YXIgZT10LmludGVyYWN0U3RhdGljO2Uuc25hcHBlcnM9KDAsTS5kZWZhdWx0KShlLnNuYXBwZXJzfHx7fSxqciksZS5jcmVhdGVTbmFwR3JpZD1lLnNuYXBwZXJzLmdyaWR9fSxJcj1rcjtNci5kZWZhdWx0PUlyO3ZhciBEcj17fTtmdW5jdGlvbiBBcih0LGUpe3ZhciBuPU9iamVjdC5rZXlzKHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciByPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHModCk7ZSYmKHI9ci5maWx0ZXIoKGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsZSkuZW51bWVyYWJsZX0pKSksbi5wdXNoLmFwcGx5KG4scil9cmV0dXJuIG59ZnVuY3Rpb24genIodCl7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIG49bnVsbCE9YXJndW1lbnRzW2VdP2FyZ3VtZW50c1tlXTp7fTtlJTI/QXIoT2JqZWN0KG4pLCEwKS5mb3JFYWNoKChmdW5jdGlvbihlKXtDcih0LGUsbltlXSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXModCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhuKSk6QXIoT2JqZWN0KG4pKS5mb3JFYWNoKChmdW5jdGlvbihlKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobixlKSl9KSl9cmV0dXJuIHR9ZnVuY3Rpb24gQ3IodCxlLG4pe3JldHVybiBlIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbZV09bix0fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShEcixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxEci5kZWZhdWx0PURyLmFzcGVjdFJhdGlvPXZvaWQgMDt2YXIgUnI9e3N0YXJ0OmZ1bmN0aW9uKHQpe3ZhciBlPXQuc3RhdGUsbj10LnJlY3Qscj10LmVkZ2VzLG89dC5wYWdlQ29vcmRzLGk9ZS5vcHRpb25zLnJhdGlvLGE9ZS5vcHRpb25zLHM9YS5lcXVhbERlbHRhLGw9YS5tb2RpZmllcnM7XCJwcmVzZXJ2ZVwiPT09aSYmKGk9bi53aWR0aC9uLmhlaWdodCksZS5zdGFydENvb3Jkcz0oMCxNLmRlZmF1bHQpKHt9LG8pLGUuc3RhcnRSZWN0PSgwLE0uZGVmYXVsdCkoe30sbiksZS5yYXRpbz1pLGUuZXF1YWxEZWx0YT1zO3ZhciB1PWUubGlua2VkRWRnZXM9e3RvcDpyLnRvcHx8ci5sZWZ0JiYhci5ib3R0b20sbGVmdDpyLmxlZnR8fHIudG9wJiYhci5yaWdodCxib3R0b206ci5ib3R0b218fHIucmlnaHQmJiFyLnRvcCxyaWdodDpyLnJpZ2h0fHxyLmJvdHRvbSYmIXIubGVmdH07aWYoZS54SXNQcmltYXJ5QXhpcz0hKCFyLmxlZnQmJiFyLnJpZ2h0KSxlLmVxdWFsRGVsdGEpe3ZhciBjPSh1LmxlZnQ/MTotMSkqKHUudG9wPzE6LTEpO2UuZWRnZVNpZ249e3g6Yyx5OmN9fWVsc2UgZS5lZGdlU2lnbj17eDp1LmxlZnQ/LTE6MSx5OnUudG9wPy0xOjF9O2lmKCgwLE0uZGVmYXVsdCkodC5lZGdlcyx1KSxsJiZsLmxlbmd0aCl7dmFyIGY9bmV3IG1lLmRlZmF1bHQodC5pbnRlcmFjdGlvbik7Zi5jb3B5RnJvbSh0LmludGVyYWN0aW9uLm1vZGlmaWNhdGlvbiksZi5wcmVwYXJlU3RhdGVzKGwpLGUuc3ViTW9kaWZpY2F0aW9uPWYsZi5zdGFydEFsbCh6cih7fSx0KSl9fSxzZXQ6ZnVuY3Rpb24odCl7dmFyIGU9dC5zdGF0ZSxuPXQucmVjdCxyPXQuY29vcmRzLG89KDAsTS5kZWZhdWx0KSh7fSxyKSxpPWUuZXF1YWxEZWx0YT9GcjpYcjtpZihpKGUsZS54SXNQcmltYXJ5QXhpcyxyLG4pLCFlLnN1Yk1vZGlmaWNhdGlvbilyZXR1cm4gbnVsbDt2YXIgYT0oMCxNLmRlZmF1bHQpKHt9LG4pOygwLGsuYWRkRWRnZXMpKGUubGlua2VkRWRnZXMsYSx7eDpyLngtby54LHk6ci55LW8ueX0pO3ZhciBzPWUuc3ViTW9kaWZpY2F0aW9uLnNldEFsbCh6cih6cih7fSx0KSx7fSx7cmVjdDphLGVkZ2VzOmUubGlua2VkRWRnZXMscGFnZUNvb3JkczpyLHByZXZDb29yZHM6cixwcmV2UmVjdDphfSkpLGw9cy5kZWx0YTtyZXR1cm4gcy5jaGFuZ2VkJiYoaShlLE1hdGguYWJzKGwueCk+TWF0aC5hYnMobC55KSxzLmNvb3JkcyxzLnJlY3QpLCgwLE0uZGVmYXVsdCkocixzLmNvb3JkcykpLHMuZXZlbnRQcm9wc30sZGVmYXVsdHM6e3JhdGlvOlwicHJlc2VydmVcIixlcXVhbERlbHRhOiExLG1vZGlmaWVyczpbXSxlbmFibGVkOiExfX07ZnVuY3Rpb24gRnIodCxlLG4pe3ZhciByPXQuc3RhcnRDb29yZHMsbz10LmVkZ2VTaWduO2U/bi55PXIueSsobi54LXIueCkqby55Om4ueD1yLngrKG4ueS1yLnkpKm8ueH1mdW5jdGlvbiBYcih0LGUsbixyKXt2YXIgbz10LnN0YXJ0UmVjdCxpPXQuc3RhcnRDb29yZHMsYT10LnJhdGlvLHM9dC5lZGdlU2lnbjtpZihlKXt2YXIgbD1yLndpZHRoL2E7bi55PWkueSsobC1vLmhlaWdodCkqcy55fWVsc2V7dmFyIHU9ci5oZWlnaHQqYTtuLng9aS54Kyh1LW8ud2lkdGgpKnMueH19RHIuYXNwZWN0UmF0aW89UnI7dmFyIEJyPSgwLFNlLm1ha2VNb2RpZmllcikoUnIsXCJhc3BlY3RSYXRpb1wiKTtEci5kZWZhdWx0PUJyO3ZhciBZcj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoWXIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksWXIuZGVmYXVsdD12b2lkIDA7dmFyIFdyPWZ1bmN0aW9uKCl7fTtXci5fZGVmYXVsdHM9e307dmFyIExyPVdyO1lyLmRlZmF1bHQ9THI7dmFyIFVyPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShVcixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoVXIsXCJkZWZhdWx0XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFlyLmRlZmF1bHR9fSk7dmFyIFZyPXt9O2Z1bmN0aW9uIE5yKHQsZSxuKXtyZXR1cm4gaS5kZWZhdWx0LmZ1bmModCk/ay5yZXNvbHZlUmVjdExpa2UodCxlLmludGVyYWN0YWJsZSxlLmVsZW1lbnQsW24ueCxuLnksZV0pOmsucmVzb2x2ZVJlY3RMaWtlKHQsZS5pbnRlcmFjdGFibGUsZS5lbGVtZW50KX1PYmplY3QuZGVmaW5lUHJvcGVydHkoVnIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksVnIuZGVmYXVsdD12b2lkIDAsVnIuZ2V0UmVzdHJpY3Rpb25SZWN0PU5yLFZyLnJlc3RyaWN0PXZvaWQgMDt2YXIgcXI9e3N0YXJ0OmZ1bmN0aW9uKHQpe3ZhciBlPXQucmVjdCxuPXQuc3RhcnRPZmZzZXQscj10LnN0YXRlLG89dC5pbnRlcmFjdGlvbixpPXQucGFnZUNvb3JkcyxhPXIub3B0aW9ucyxzPWEuZWxlbWVudFJlY3QsbD0oMCxNLmRlZmF1bHQpKHtsZWZ0OjAsdG9wOjAscmlnaHQ6MCxib3R0b206MH0sYS5vZmZzZXR8fHt9KTtpZihlJiZzKXt2YXIgdT1OcihhLnJlc3RyaWN0aW9uLG8saSk7aWYodSl7dmFyIGM9dS5yaWdodC11LmxlZnQtZS53aWR0aCxmPXUuYm90dG9tLXUudG9wLWUuaGVpZ2h0O2M8MCYmKGwubGVmdCs9YyxsLnJpZ2h0Kz1jKSxmPDAmJihsLnRvcCs9ZixsLmJvdHRvbSs9Zil9bC5sZWZ0Kz1uLmxlZnQtZS53aWR0aCpzLmxlZnQsbC50b3ArPW4udG9wLWUuaGVpZ2h0KnMudG9wLGwucmlnaHQrPW4ucmlnaHQtZS53aWR0aCooMS1zLnJpZ2h0KSxsLmJvdHRvbSs9bi5ib3R0b20tZS5oZWlnaHQqKDEtcy5ib3R0b20pfXIub2Zmc2V0PWx9LHNldDpmdW5jdGlvbih0KXt2YXIgZT10LmNvb3JkcyxuPXQuaW50ZXJhY3Rpb24scj10LnN0YXRlLG89ci5vcHRpb25zLGk9ci5vZmZzZXQsYT1OcihvLnJlc3RyaWN0aW9uLG4sZSk7aWYoYSl7dmFyIHM9ay54eXdoVG9UbGJyKGEpO2UueD1NYXRoLm1heChNYXRoLm1pbihzLnJpZ2h0LWkucmlnaHQsZS54KSxzLmxlZnQraS5sZWZ0KSxlLnk9TWF0aC5tYXgoTWF0aC5taW4ocy5ib3R0b20taS5ib3R0b20sZS55KSxzLnRvcCtpLnRvcCl9fSxkZWZhdWx0czp7cmVzdHJpY3Rpb246bnVsbCxlbGVtZW50UmVjdDpudWxsLG9mZnNldDpudWxsLGVuZE9ubHk6ITEsZW5hYmxlZDohMX19O1ZyLnJlc3RyaWN0PXFyO3ZhciBHcj0oMCxTZS5tYWtlTW9kaWZpZXIpKHFyLFwicmVzdHJpY3RcIik7VnIuZGVmYXVsdD1Hcjt2YXIgJHI9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KCRyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLCRyLnJlc3RyaWN0RWRnZXM9JHIuZGVmYXVsdD12b2lkIDA7dmFyIEhyPXt0b3A6MS8wLGxlZnQ6MS8wLGJvdHRvbTotMS8wLHJpZ2h0Oi0xLzB9LEtyPXt0b3A6LTEvMCxsZWZ0Oi0xLzAsYm90dG9tOjEvMCxyaWdodDoxLzB9O2Z1bmN0aW9uIFpyKHQsZSl7Zm9yKHZhciBuPVtcInRvcFwiLFwibGVmdFwiLFwiYm90dG9tXCIsXCJyaWdodFwiXSxyPTA7cjxuLmxlbmd0aDtyKyspe3ZhciBvPW5bcl07byBpbiB0fHwodFtvXT1lW29dKX1yZXR1cm4gdH12YXIgSnI9e25vSW5uZXI6SHIsbm9PdXRlcjpLcixzdGFydDpmdW5jdGlvbih0KXt2YXIgZSxuPXQuaW50ZXJhY3Rpb24scj10LnN0YXJ0T2Zmc2V0LG89dC5zdGF0ZSxpPW8ub3B0aW9ucztpZihpKXt2YXIgYT0oMCxWci5nZXRSZXN0cmljdGlvblJlY3QpKGkub2Zmc2V0LG4sbi5jb29yZHMuc3RhcnQucGFnZSk7ZT1rLnJlY3RUb1hZKGEpfWU9ZXx8e3g6MCx5OjB9LG8ub2Zmc2V0PXt0b3A6ZS55K3IudG9wLGxlZnQ6ZS54K3IubGVmdCxib3R0b206ZS55LXIuYm90dG9tLHJpZ2h0OmUueC1yLnJpZ2h0fX0sc2V0OmZ1bmN0aW9uKHQpe3ZhciBlPXQuY29vcmRzLG49dC5lZGdlcyxyPXQuaW50ZXJhY3Rpb24sbz10LnN0YXRlLGk9by5vZmZzZXQsYT1vLm9wdGlvbnM7aWYobil7dmFyIHM9KDAsTS5kZWZhdWx0KSh7fSxlKSxsPSgwLFZyLmdldFJlc3RyaWN0aW9uUmVjdCkoYS5pbm5lcixyLHMpfHx7fSx1PSgwLFZyLmdldFJlc3RyaWN0aW9uUmVjdCkoYS5vdXRlcixyLHMpfHx7fTtacihsLEhyKSxacih1LEtyKSxuLnRvcD9lLnk9TWF0aC5taW4oTWF0aC5tYXgodS50b3AraS50b3Ascy55KSxsLnRvcCtpLnRvcCk6bi5ib3R0b20mJihlLnk9TWF0aC5tYXgoTWF0aC5taW4odS5ib3R0b20raS5ib3R0b20scy55KSxsLmJvdHRvbStpLmJvdHRvbSkpLG4ubGVmdD9lLng9TWF0aC5taW4oTWF0aC5tYXgodS5sZWZ0K2kubGVmdCxzLngpLGwubGVmdCtpLmxlZnQpOm4ucmlnaHQmJihlLng9TWF0aC5tYXgoTWF0aC5taW4odS5yaWdodCtpLnJpZ2h0LHMueCksbC5yaWdodCtpLnJpZ2h0KSl9fSxkZWZhdWx0czp7aW5uZXI6bnVsbCxvdXRlcjpudWxsLG9mZnNldDpudWxsLGVuZE9ubHk6ITEsZW5hYmxlZDohMX19OyRyLnJlc3RyaWN0RWRnZXM9SnI7dmFyIFFyPSgwLFNlLm1ha2VNb2RpZmllcikoSnIsXCJyZXN0cmljdEVkZ2VzXCIpOyRyLmRlZmF1bHQ9UXI7dmFyIHRvPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0byxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0by5yZXN0cmljdFJlY3Q9dG8uZGVmYXVsdD12b2lkIDA7dmFyIGVvPSgwLE0uZGVmYXVsdCkoe2dldCBlbGVtZW50UmVjdCgpe3JldHVybnt0b3A6MCxsZWZ0OjAsYm90dG9tOjEscmlnaHQ6MX19LHNldCBlbGVtZW50UmVjdCh0KXt9fSxWci5yZXN0cmljdC5kZWZhdWx0cyksbm89e3N0YXJ0OlZyLnJlc3RyaWN0LnN0YXJ0LHNldDpWci5yZXN0cmljdC5zZXQsZGVmYXVsdHM6ZW99O3RvLnJlc3RyaWN0UmVjdD1ubzt2YXIgcm89KDAsU2UubWFrZU1vZGlmaWVyKShubyxcInJlc3RyaWN0UmVjdFwiKTt0by5kZWZhdWx0PXJvO3ZhciBvbz17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkob28sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksb28ucmVzdHJpY3RTaXplPW9vLmRlZmF1bHQ9dm9pZCAwO3ZhciBpbz17d2lkdGg6LTEvMCxoZWlnaHQ6LTEvMH0sYW89e3dpZHRoOjEvMCxoZWlnaHQ6MS8wfSxzbz17c3RhcnQ6ZnVuY3Rpb24odCl7cmV0dXJuICRyLnJlc3RyaWN0RWRnZXMuc3RhcnQodCl9LHNldDpmdW5jdGlvbih0KXt2YXIgZT10LmludGVyYWN0aW9uLG49dC5zdGF0ZSxyPXQucmVjdCxvPXQuZWRnZXMsaT1uLm9wdGlvbnM7aWYobyl7dmFyIGE9ay50bGJyVG9YeXdoKCgwLFZyLmdldFJlc3RyaWN0aW9uUmVjdCkoaS5taW4sZSx0LmNvb3JkcykpfHxpbyxzPWsudGxiclRvWHl3aCgoMCxWci5nZXRSZXN0cmljdGlvblJlY3QpKGkubWF4LGUsdC5jb29yZHMpKXx8YW87bi5vcHRpb25zPXtlbmRPbmx5OmkuZW5kT25seSxpbm5lcjooMCxNLmRlZmF1bHQpKHt9LCRyLnJlc3RyaWN0RWRnZXMubm9Jbm5lciksb3V0ZXI6KDAsTS5kZWZhdWx0KSh7fSwkci5yZXN0cmljdEVkZ2VzLm5vT3V0ZXIpfSxvLnRvcD8obi5vcHRpb25zLmlubmVyLnRvcD1yLmJvdHRvbS1hLmhlaWdodCxuLm9wdGlvbnMub3V0ZXIudG9wPXIuYm90dG9tLXMuaGVpZ2h0KTpvLmJvdHRvbSYmKG4ub3B0aW9ucy5pbm5lci5ib3R0b209ci50b3ArYS5oZWlnaHQsbi5vcHRpb25zLm91dGVyLmJvdHRvbT1yLnRvcCtzLmhlaWdodCksby5sZWZ0PyhuLm9wdGlvbnMuaW5uZXIubGVmdD1yLnJpZ2h0LWEud2lkdGgsbi5vcHRpb25zLm91dGVyLmxlZnQ9ci5yaWdodC1zLndpZHRoKTpvLnJpZ2h0JiYobi5vcHRpb25zLmlubmVyLnJpZ2h0PXIubGVmdCthLndpZHRoLG4ub3B0aW9ucy5vdXRlci5yaWdodD1yLmxlZnQrcy53aWR0aCksJHIucmVzdHJpY3RFZGdlcy5zZXQodCksbi5vcHRpb25zPWl9fSxkZWZhdWx0czp7bWluOm51bGwsbWF4Om51bGwsZW5kT25seTohMSxlbmFibGVkOiExfX07b28ucmVzdHJpY3RTaXplPXNvO3ZhciBsbz0oMCxTZS5tYWtlTW9kaWZpZXIpKHNvLFwicmVzdHJpY3RTaXplXCIpO29vLmRlZmF1bHQ9bG87dmFyIHVvPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh1byxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodW8sXCJkZWZhdWx0XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFlyLmRlZmF1bHR9fSk7dmFyIGNvPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShjbyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxjby5zbmFwPWNvLmRlZmF1bHQ9dm9pZCAwO3ZhciBmbz17c3RhcnQ6ZnVuY3Rpb24odCl7dmFyIGUsbj10LmludGVyYWN0aW9uLHI9dC5pbnRlcmFjdGFibGUsbz10LmVsZW1lbnQsaT10LnJlY3QsYT10LnN0YXRlLHM9dC5zdGFydE9mZnNldCxsPWEub3B0aW9ucyx1PWwub2Zmc2V0V2l0aE9yaWdpbj9mdW5jdGlvbih0KXt2YXIgZT10LmludGVyYWN0aW9uLmVsZW1lbnQ7cmV0dXJuKDAsay5yZWN0VG9YWSkoKDAsay5yZXNvbHZlUmVjdExpa2UpKHQuc3RhdGUub3B0aW9ucy5vcmlnaW4sbnVsbCxudWxsLFtlXSkpfHwoMCxBLmRlZmF1bHQpKHQuaW50ZXJhY3RhYmxlLGUsdC5pbnRlcmFjdGlvbi5wcmVwYXJlZC5uYW1lKX0odCk6e3g6MCx5OjB9O2lmKFwic3RhcnRDb29yZHNcIj09PWwub2Zmc2V0KWU9e3g6bi5jb29yZHMuc3RhcnQucGFnZS54LHk6bi5jb29yZHMuc3RhcnQucGFnZS55fTtlbHNle3ZhciBjPSgwLGsucmVzb2x2ZVJlY3RMaWtlKShsLm9mZnNldCxyLG8sW25dKTsoZT0oMCxrLnJlY3RUb1hZKShjKXx8e3g6MCx5OjB9KS54Kz11LngsZS55Kz11Lnl9dmFyIGY9bC5yZWxhdGl2ZVBvaW50czthLm9mZnNldHM9aSYmZiYmZi5sZW5ndGg/Zi5tYXAoKGZ1bmN0aW9uKHQsbil7cmV0dXJue2luZGV4Om4scmVsYXRpdmVQb2ludDp0LHg6cy5sZWZ0LWkud2lkdGgqdC54K2UueCx5OnMudG9wLWkuaGVpZ2h0KnQueStlLnl9fSkpOlt7aW5kZXg6MCxyZWxhdGl2ZVBvaW50Om51bGwseDplLngseTplLnl9XX0sc2V0OmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW50ZXJhY3Rpb24sbj10LmNvb3JkcyxyPXQuc3RhdGUsbz1yLm9wdGlvbnMsYT1yLm9mZnNldHMscz0oMCxBLmRlZmF1bHQpKGUuaW50ZXJhY3RhYmxlLGUuZWxlbWVudCxlLnByZXBhcmVkLm5hbWUpLGw9KDAsTS5kZWZhdWx0KSh7fSxuKSx1PVtdO28ub2Zmc2V0V2l0aE9yaWdpbnx8KGwueC09cy54LGwueS09cy55KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKylmb3IodmFyIGY9YVtjXSxkPWwueC1mLngscD1sLnktZi55LHY9MCxoPW8udGFyZ2V0cy5sZW5ndGg7djxoO3YrKyl7dmFyIGcseT1vLnRhcmdldHNbdl07KGc9aS5kZWZhdWx0LmZ1bmMoeSk/eShkLHAsZS5fcHJveHksZix2KTp5KSYmdS5wdXNoKHt4OihpLmRlZmF1bHQubnVtYmVyKGcueCk/Zy54OmQpK2YueCx5OihpLmRlZmF1bHQubnVtYmVyKGcueSk/Zy55OnApK2YueSxyYW5nZTppLmRlZmF1bHQubnVtYmVyKGcucmFuZ2UpP2cucmFuZ2U6by5yYW5nZSxzb3VyY2U6eSxpbmRleDp2LG9mZnNldDpmfSl9Zm9yKHZhciBtPXt0YXJnZXQ6bnVsbCxpblJhbmdlOiExLGRpc3RhbmNlOjAscmFuZ2U6MCxkZWx0YTp7eDowLHk6MH19LGI9MDtiPHUubGVuZ3RoO2IrKyl7dmFyIHg9dVtiXSx3PXgucmFuZ2UsXz14LngtbC54LFA9eC55LWwueSxPPSgwLFIuZGVmYXVsdCkoXyxQKSxFPU88PXc7dz09PTEvMCYmbS5pblJhbmdlJiZtLnJhbmdlIT09MS8wJiYoRT0hMSksbS50YXJnZXQmJiEoRT9tLmluUmFuZ2UmJnchPT0xLzA/Ty93PG0uZGlzdGFuY2UvbS5yYW5nZTp3PT09MS8wJiZtLnJhbmdlIT09MS8wfHxPPG0uZGlzdGFuY2U6IW0uaW5SYW5nZSYmTzxtLmRpc3RhbmNlKXx8KG0udGFyZ2V0PXgsbS5kaXN0YW5jZT1PLG0ucmFuZ2U9dyxtLmluUmFuZ2U9RSxtLmRlbHRhLng9XyxtLmRlbHRhLnk9UCl9cmV0dXJuIG0uaW5SYW5nZSYmKG4ueD1tLnRhcmdldC54LG4ueT1tLnRhcmdldC55KSxyLmNsb3Nlc3Q9bSxtfSxkZWZhdWx0czp7cmFuZ2U6MS8wLHRhcmdldHM6bnVsbCxvZmZzZXQ6bnVsbCxvZmZzZXRXaXRoT3JpZ2luOiEwLG9yaWdpbjpudWxsLHJlbGF0aXZlUG9pbnRzOm51bGwsZW5kT25seTohMSxlbmFibGVkOiExfX07Y28uc25hcD1mbzt2YXIgcG89KDAsU2UubWFrZU1vZGlmaWVyKShmbyxcInNuYXBcIik7Y28uZGVmYXVsdD1wbzt2YXIgdm89e307ZnVuY3Rpb24gaG8odCxlKXsobnVsbD09ZXx8ZT50Lmxlbmd0aCkmJihlPXQubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KGUpO248ZTtuKyspcltuXT10W25dO3JldHVybiByfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2byxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx2by5zbmFwU2l6ZT12by5kZWZhdWx0PXZvaWQgMDt2YXIgZ289e3N0YXJ0OmZ1bmN0aW9uKHQpe3ZhciBlPXQuc3RhdGUsbj10LmVkZ2VzLHI9ZS5vcHRpb25zO2lmKCFuKXJldHVybiBudWxsO3Quc3RhdGU9e29wdGlvbnM6e3RhcmdldHM6bnVsbCxyZWxhdGl2ZVBvaW50czpbe3g6bi5sZWZ0PzA6MSx5Om4udG9wPzA6MX1dLG9mZnNldDpyLm9mZnNldHx8XCJzZWxmXCIsb3JpZ2luOnt4OjAseTowfSxyYW5nZTpyLnJhbmdlfX0sZS50YXJnZXRGaWVsZHM9ZS50YXJnZXRGaWVsZHN8fFtbXCJ3aWR0aFwiLFwiaGVpZ2h0XCJdLFtcInhcIixcInlcIl1dLGNvLnNuYXAuc3RhcnQodCksZS5vZmZzZXRzPXQuc3RhdGUub2Zmc2V0cyx0LnN0YXRlPWV9LHNldDpmdW5jdGlvbih0KXt2YXIgZSxuLHI9dC5pbnRlcmFjdGlvbixvPXQuc3RhdGUsYT10LmNvb3JkcyxzPW8ub3B0aW9ucyxsPW8ub2Zmc2V0cyx1PXt4OmEueC1sWzBdLngseTphLnktbFswXS55fTtvLm9wdGlvbnM9KDAsTS5kZWZhdWx0KSh7fSxzKSxvLm9wdGlvbnMudGFyZ2V0cz1bXTtmb3IodmFyIGM9MDtjPChzLnRhcmdldHN8fFtdKS5sZW5ndGg7YysrKXt2YXIgZj0ocy50YXJnZXRzfHxbXSlbY10sZD12b2lkIDA7aWYoZD1pLmRlZmF1bHQuZnVuYyhmKT9mKHUueCx1Lnkscik6Zil7Zm9yKHZhciBwPTA7cDxvLnRhcmdldEZpZWxkcy5sZW5ndGg7cCsrKXt2YXIgdj0oZT1vLnRhcmdldEZpZWxkc1twXSxuPTIsZnVuY3Rpb24odCl7aWYoQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4gdH0oZSl8fGZ1bmN0aW9uKHQsZSl7dmFyIG49bnVsbD09dD9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJnRbU3ltYm9sLml0ZXJhdG9yXXx8dFtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpPVtdLGE9ITAscz0hMTt0cnl7Zm9yKG49bi5jYWxsKHQpOyEoYT0ocj1uLm5leHQoKSkuZG9uZSkmJihpLnB1c2goci52YWx1ZSksIWV8fGkubGVuZ3RoIT09ZSk7YT0hMCk7fWNhdGNoKHQpe3M9ITAsbz10fWZpbmFsbHl7dHJ5e2F8fG51bGw9PW4ucmV0dXJufHxuLnJldHVybigpfWZpbmFsbHl7aWYocyl0aHJvdyBvfX1yZXR1cm4gaX19KGUsbil8fGZ1bmN0aW9uKHQsZSl7aWYodCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpcmV0dXJuIGhvKHQsZSk7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZ0LmNvbnN0cnVjdG9yJiYobj10LmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKHQpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9obyh0LGUpOnZvaWQgMH19KGUsbil8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKSksaD12WzBdLGc9dlsxXTtpZihoIGluIGR8fGcgaW4gZCl7ZC54PWRbaF0sZC55PWRbZ107YnJlYWt9fW8ub3B0aW9ucy50YXJnZXRzLnB1c2goZCl9fXZhciB5PWNvLnNuYXAuc2V0KHQpO3JldHVybiBvLm9wdGlvbnM9cyx5fSxkZWZhdWx0czp7cmFuZ2U6MS8wLHRhcmdldHM6bnVsbCxvZmZzZXQ6bnVsbCxlbmRPbmx5OiExLGVuYWJsZWQ6ITF9fTt2by5zbmFwU2l6ZT1nbzt2YXIgeW89KDAsU2UubWFrZU1vZGlmaWVyKShnbyxcInNuYXBTaXplXCIpO3ZvLmRlZmF1bHQ9eW87dmFyIG1vPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShtbyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxtby5zbmFwRWRnZXM9bW8uZGVmYXVsdD12b2lkIDA7dmFyIGJvPXtzdGFydDpmdW5jdGlvbih0KXt2YXIgZT10LmVkZ2VzO3JldHVybiBlPyh0LnN0YXRlLnRhcmdldEZpZWxkcz10LnN0YXRlLnRhcmdldEZpZWxkc3x8W1tlLmxlZnQ/XCJsZWZ0XCI6XCJyaWdodFwiLGUudG9wP1widG9wXCI6XCJib3R0b21cIl1dLHZvLnNuYXBTaXplLnN0YXJ0KHQpKTpudWxsfSxzZXQ6dm8uc25hcFNpemUuc2V0LGRlZmF1bHRzOigwLE0uZGVmYXVsdCkoKDAseWUuZGVmYXVsdCkodm8uc25hcFNpemUuZGVmYXVsdHMpLHt0YXJnZXRzOm51bGwscmFuZ2U6bnVsbCxvZmZzZXQ6e3g6MCx5OjB9fSl9O21vLnNuYXBFZGdlcz1ibzt2YXIgeG89KDAsU2UubWFrZU1vZGlmaWVyKShibyxcInNuYXBFZGdlc1wiKTttby5kZWZhdWx0PXhvO3ZhciB3bz17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkod28sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHdvLFwiZGVmYXVsdFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBZci5kZWZhdWx0fX0pO3ZhciBfbz17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoX28sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KF9vLFwiZGVmYXVsdFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBZci5kZWZhdWx0fX0pO3ZhciBQbz17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUG8sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksUG8uZGVmYXVsdD12b2lkIDA7dmFyIE9vPXthc3BlY3RSYXRpbzpEci5kZWZhdWx0LHJlc3RyaWN0RWRnZXM6JHIuZGVmYXVsdCxyZXN0cmljdDpWci5kZWZhdWx0LHJlc3RyaWN0UmVjdDp0by5kZWZhdWx0LHJlc3RyaWN0U2l6ZTpvby5kZWZhdWx0LHNuYXBFZGdlczptby5kZWZhdWx0LHNuYXA6Y28uZGVmYXVsdCxzbmFwU2l6ZTp2by5kZWZhdWx0LHNwcmluZzp3by5kZWZhdWx0LGF2b2lkOlVyLmRlZmF1bHQsdHJhbnNmb3JtOl9vLmRlZmF1bHQscnViYmVyYmFuZDp1by5kZWZhdWx0fTtQby5kZWZhdWx0PU9vO3ZhciBFbz17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoRW8sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksRW8uZGVmYXVsdD12b2lkIDA7dmFyIFNvPXtpZDpcIm1vZGlmaWVyc1wiLGluc3RhbGw6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdFN0YXRpYztmb3IodmFyIG4gaW4gdC51c2VQbHVnaW4oU2UuZGVmYXVsdCksdC51c2VQbHVnaW4oTXIuZGVmYXVsdCksZS5tb2RpZmllcnM9UG8uZGVmYXVsdCxQby5kZWZhdWx0KXt2YXIgcj1Qby5kZWZhdWx0W25dLG89ci5fZGVmYXVsdHMsaT1yLl9tZXRob2RzO28uX21ldGhvZHM9aSx0LmRlZmF1bHRzLnBlckFjdGlvbltuXT1vfX19LFRvPVNvO0VvLmRlZmF1bHQ9VG87dmFyIGpvPXt9O2Z1bmN0aW9uIE1vKHQpe3JldHVybiBNbz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSxNbyh0KX1mdW5jdGlvbiBrbyh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1lW25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxyLmtleSxyKX19ZnVuY3Rpb24gSW8odCxlKXtyZXR1cm4gSW89T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSxJbyh0LGUpfWZ1bmN0aW9uIERvKHQsZSl7aWYoZSYmKFwib2JqZWN0XCI9PT1NbyhlKXx8XCJmdW5jdGlvblwiPT10eXBlb2YgZSkpcmV0dXJuIGU7aWYodm9pZCAwIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7cmV0dXJuIEFvKHQpfWZ1bmN0aW9uIEFvKHQpe2lmKHZvaWQgMD09PXQpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiB0fWZ1bmN0aW9uIHpvKHQpe3JldHVybiB6bz1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKTpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0sem8odCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGpvLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGpvLmRlZmF1bHQ9am8uUG9pbnRlckV2ZW50PXZvaWQgMDt2YXIgQ289ZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLGUmJklvKHQsZSl9KGEsdCk7dmFyIGUsbixyLG8saT0ocj1hLG89ZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUmVmbGVjdHx8IVJlZmxlY3QuY29uc3RydWN0KXJldHVybiExO2lmKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgUHJveHkpcmV0dXJuITA7dHJ5e3JldHVybiBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbixbXSwoZnVuY3Rpb24oKXt9KSkpLCEwfWNhdGNoKHQpe3JldHVybiExfX0oKSxmdW5jdGlvbigpe3ZhciB0LGU9em8ocik7aWYobyl7dmFyIG49em8odGhpcykuY29uc3RydWN0b3I7dD1SZWZsZWN0LmNvbnN0cnVjdChlLGFyZ3VtZW50cyxuKX1lbHNlIHQ9ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIERvKHRoaXMsdCl9KTtmdW5jdGlvbiBhKHQsZSxuLHIsbyxzKXt2YXIgbDtpZihmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsYSksbD1pLmNhbGwodGhpcyxvKSxYLnBvaW50ZXJFeHRlbmQoQW8obCksbiksbiE9PWUmJlgucG9pbnRlckV4dGVuZChBbyhsKSxlKSxsLnRpbWVTdGFtcD1zLGwub3JpZ2luYWxFdmVudD1uLGwudHlwZT10LGwucG9pbnRlcklkPVguZ2V0UG9pbnRlcklkKGUpLGwucG9pbnRlclR5cGU9WC5nZXRQb2ludGVyVHlwZShlKSxsLnRhcmdldD1yLGwuY3VycmVudFRhcmdldD1udWxsLFwidGFwXCI9PT10KXt2YXIgdT1vLmdldFBvaW50ZXJJbmRleChlKTtsLmR0PWwudGltZVN0YW1wLW8ucG9pbnRlcnNbdV0uZG93blRpbWU7dmFyIGM9bC50aW1lU3RhbXAtby50YXBUaW1lO2wuZG91YmxlPSEhby5wcmV2VGFwJiZcImRvdWJsZXRhcFwiIT09by5wcmV2VGFwLnR5cGUmJm8ucHJldlRhcC50YXJnZXQ9PT1sLnRhcmdldCYmYzw1MDB9ZWxzZVwiZG91YmxldGFwXCI9PT10JiYobC5kdD1lLnRpbWVTdGFtcC1vLnRhcFRpbWUsbC5kb3VibGU9ITApO3JldHVybiBsfXJldHVybiBlPWEsKG49W3trZXk6XCJfc3VidHJhY3RPcmlnaW5cIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10Lngsbj10Lnk7cmV0dXJuIHRoaXMucGFnZVgtPWUsdGhpcy5wYWdlWS09bix0aGlzLmNsaWVudFgtPWUsdGhpcy5jbGllbnRZLT1uLHRoaXN9fSx7a2V5OlwiX2FkZE9yaWdpblwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXQueCxuPXQueTtyZXR1cm4gdGhpcy5wYWdlWCs9ZSx0aGlzLnBhZ2VZKz1uLHRoaXMuY2xpZW50WCs9ZSx0aGlzLmNsaWVudFkrPW4sdGhpc319LHtrZXk6XCJwcmV2ZW50RGVmYXVsdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5vcmlnaW5hbEV2ZW50LnByZXZlbnREZWZhdWx0KCl9fV0pJiZrbyhlLnByb3RvdHlwZSxuKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLGF9KE4uQmFzZUV2ZW50KTtqby5Qb2ludGVyRXZlbnQ9am8uZGVmYXVsdD1Dbzt2YXIgUm89e307T2JqZWN0LmRlZmluZVByb3BlcnR5KFJvLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLFJvLmRlZmF1bHQ9dm9pZCAwO3ZhciBGbz17aWQ6XCJwb2ludGVyLWV2ZW50cy9iYXNlXCIsYmVmb3JlOltcImluZXJ0aWFcIixcIm1vZGlmaWVyc1wiLFwiYXV0by1zdGFydFwiLFwiYWN0aW9uc1wiXSxpbnN0YWxsOmZ1bmN0aW9uKHQpe3QucG9pbnRlckV2ZW50cz1Gbyx0LmRlZmF1bHRzLmFjdGlvbnMucG9pbnRlckV2ZW50cz1Gby5kZWZhdWx0cywoMCxNLmRlZmF1bHQpKHQuYWN0aW9ucy5waGFzZWxlc3NUeXBlcyxGby50eXBlcyl9LGxpc3RlbmVyczp7XCJpbnRlcmFjdGlvbnM6bmV3XCI6ZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcmFjdGlvbjtlLnByZXZUYXA9bnVsbCxlLnRhcFRpbWU9MH0sXCJpbnRlcmFjdGlvbnM6dXBkYXRlLXBvaW50ZXJcIjpmdW5jdGlvbih0KXt2YXIgZT10LmRvd24sbj10LnBvaW50ZXJJbmZvOyFlJiZuLmhvbGR8fChuLmhvbGQ9e2R1cmF0aW9uOjEvMCx0aW1lb3V0Om51bGx9KX0sXCJpbnRlcmFjdGlvbnM6bW92ZVwiOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5pbnRlcmFjdGlvbixyPXQucG9pbnRlcixvPXQuZXZlbnQsaT10LmV2ZW50VGFyZ2V0O3QuZHVwbGljYXRlfHxuLnBvaW50ZXJJc0Rvd24mJiFuLnBvaW50ZXJXYXNNb3ZlZHx8KG4ucG9pbnRlcklzRG93biYmWW8odCksWG8oe2ludGVyYWN0aW9uOm4scG9pbnRlcjpyLGV2ZW50Om8sZXZlbnRUYXJnZXQ6aSx0eXBlOlwibW92ZVwifSxlKSl9LFwiaW50ZXJhY3Rpb25zOmRvd25cIjpmdW5jdGlvbih0LGUpeyFmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10LmludGVyYWN0aW9uLHI9dC5wb2ludGVyLG89dC5ldmVudCxpPXQuZXZlbnRUYXJnZXQsYT10LnBvaW50ZXJJbmRleCxzPW4ucG9pbnRlcnNbYV0uaG9sZCxsPV8uZ2V0UGF0aChpKSx1PXtpbnRlcmFjdGlvbjpuLHBvaW50ZXI6cixldmVudDpvLGV2ZW50VGFyZ2V0OmksdHlwZTpcImhvbGRcIix0YXJnZXRzOltdLHBhdGg6bCxub2RlOm51bGx9LGM9MDtjPGwubGVuZ3RoO2MrKyl7dmFyIGY9bFtjXTt1Lm5vZGU9ZixlLmZpcmUoXCJwb2ludGVyRXZlbnRzOmNvbGxlY3QtdGFyZ2V0c1wiLHUpfWlmKHUudGFyZ2V0cy5sZW5ndGgpe2Zvcih2YXIgZD0xLzAscD0wO3A8dS50YXJnZXRzLmxlbmd0aDtwKyspe3ZhciB2PXUudGFyZ2V0c1twXS5ldmVudGFibGUub3B0aW9ucy5ob2xkRHVyYXRpb247djxkJiYoZD12KX1zLmR1cmF0aW9uPWQscy50aW1lb3V0PXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7WG8oe2ludGVyYWN0aW9uOm4sZXZlbnRUYXJnZXQ6aSxwb2ludGVyOnIsZXZlbnQ6byx0eXBlOlwiaG9sZFwifSxlKX0pLGQpfX0odCxlKSxYbyh0LGUpfSxcImludGVyYWN0aW9uczp1cFwiOmZ1bmN0aW9uKHQsZSl7WW8odCksWG8odCxlKSxmdW5jdGlvbih0LGUpe3ZhciBuPXQuaW50ZXJhY3Rpb24scj10LnBvaW50ZXIsbz10LmV2ZW50LGk9dC5ldmVudFRhcmdldDtuLnBvaW50ZXJXYXNNb3ZlZHx8WG8oe2ludGVyYWN0aW9uOm4sZXZlbnRUYXJnZXQ6aSxwb2ludGVyOnIsZXZlbnQ6byx0eXBlOlwidGFwXCJ9LGUpfSh0LGUpfSxcImludGVyYWN0aW9uczpjYW5jZWxcIjpmdW5jdGlvbih0LGUpe1lvKHQpLFhvKHQsZSl9fSxQb2ludGVyRXZlbnQ6am8uUG9pbnRlckV2ZW50LGZpcmU6WG8sY29sbGVjdEV2ZW50VGFyZ2V0czpCbyxkZWZhdWx0czp7aG9sZER1cmF0aW9uOjYwMCxpZ25vcmVGcm9tOm51bGwsYWxsb3dGcm9tOm51bGwsb3JpZ2luOnt4OjAseTowfX0sdHlwZXM6e2Rvd246ITAsbW92ZTohMCx1cDohMCxjYW5jZWw6ITAsdGFwOiEwLGRvdWJsZXRhcDohMCxob2xkOiEwfX07ZnVuY3Rpb24gWG8odCxlKXt2YXIgbj10LmludGVyYWN0aW9uLHI9dC5wb2ludGVyLG89dC5ldmVudCxpPXQuZXZlbnRUYXJnZXQsYT10LnR5cGUscz10LnRhcmdldHMsbD12b2lkIDA9PT1zP0JvKHQsZSk6cyx1PW5ldyBqby5Qb2ludGVyRXZlbnQoYSxyLG8saSxuLGUubm93KCkpO2UuZmlyZShcInBvaW50ZXJFdmVudHM6bmV3XCIse3BvaW50ZXJFdmVudDp1fSk7Zm9yKHZhciBjPXtpbnRlcmFjdGlvbjpuLHBvaW50ZXI6cixldmVudDpvLGV2ZW50VGFyZ2V0OmksdGFyZ2V0czpsLHR5cGU6YSxwb2ludGVyRXZlbnQ6dX0sZj0wO2Y8bC5sZW5ndGg7ZisrKXt2YXIgZD1sW2ZdO2Zvcih2YXIgcCBpbiBkLnByb3BzfHx7fSl1W3BdPWQucHJvcHNbcF07dmFyIHY9KDAsQS5kZWZhdWx0KShkLmV2ZW50YWJsZSxkLm5vZGUpO2lmKHUuX3N1YnRyYWN0T3JpZ2luKHYpLHUuZXZlbnRhYmxlPWQuZXZlbnRhYmxlLHUuY3VycmVudFRhcmdldD1kLm5vZGUsZC5ldmVudGFibGUuZmlyZSh1KSx1Ll9hZGRPcmlnaW4odiksdS5pbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWR8fHUucHJvcGFnYXRpb25TdG9wcGVkJiZmKzE8bC5sZW5ndGgmJmxbZisxXS5ub2RlIT09dS5jdXJyZW50VGFyZ2V0KWJyZWFrfWlmKGUuZmlyZShcInBvaW50ZXJFdmVudHM6ZmlyZWRcIixjKSxcInRhcFwiPT09YSl7dmFyIGg9dS5kb3VibGU/WG8oe2ludGVyYWN0aW9uOm4scG9pbnRlcjpyLGV2ZW50Om8sZXZlbnRUYXJnZXQ6aSx0eXBlOlwiZG91YmxldGFwXCJ9LGUpOnU7bi5wcmV2VGFwPWgsbi50YXBUaW1lPWgudGltZVN0YW1wfXJldHVybiB1fWZ1bmN0aW9uIEJvKHQsZSl7dmFyIG49dC5pbnRlcmFjdGlvbixyPXQucG9pbnRlcixvPXQuZXZlbnQsaT10LmV2ZW50VGFyZ2V0LGE9dC50eXBlLHM9bi5nZXRQb2ludGVySW5kZXgociksbD1uLnBvaW50ZXJzW3NdO2lmKFwidGFwXCI9PT1hJiYobi5wb2ludGVyV2FzTW92ZWR8fCFsfHxsLmRvd25UYXJnZXQhPT1pKSlyZXR1cm5bXTtmb3IodmFyIHU9Xy5nZXRQYXRoKGkpLGM9e2ludGVyYWN0aW9uOm4scG9pbnRlcjpyLGV2ZW50Om8sZXZlbnRUYXJnZXQ6aSx0eXBlOmEscGF0aDp1LHRhcmdldHM6W10sbm9kZTpudWxsfSxmPTA7Zjx1Lmxlbmd0aDtmKyspe3ZhciBkPXVbZl07Yy5ub2RlPWQsZS5maXJlKFwicG9pbnRlckV2ZW50czpjb2xsZWN0LXRhcmdldHNcIixjKX1yZXR1cm5cImhvbGRcIj09PWEmJihjLnRhcmdldHM9Yy50YXJnZXRzLmZpbHRlcigoZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuIHQuZXZlbnRhYmxlLm9wdGlvbnMuaG9sZER1cmF0aW9uPT09KG51bGw9PShlPW4ucG9pbnRlcnNbc10pP3ZvaWQgMDplLmhvbGQuZHVyYXRpb24pfSkpKSxjLnRhcmdldHN9ZnVuY3Rpb24gWW8odCl7dmFyIGU9dC5pbnRlcmFjdGlvbixuPXQucG9pbnRlckluZGV4LHI9ZS5wb2ludGVyc1tuXS5ob2xkO3ImJnIudGltZW91dCYmKGNsZWFyVGltZW91dChyLnRpbWVvdXQpLHIudGltZW91dD1udWxsKX12YXIgV289Rm87Um8uZGVmYXVsdD1Xbzt2YXIgTG89e307ZnVuY3Rpb24gVW8odCl7dmFyIGU9dC5pbnRlcmFjdGlvbjtlLmhvbGRJbnRlcnZhbEhhbmRsZSYmKGNsZWFySW50ZXJ2YWwoZS5ob2xkSW50ZXJ2YWxIYW5kbGUpLGUuaG9sZEludGVydmFsSGFuZGxlPW51bGwpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShMbyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxMby5kZWZhdWx0PXZvaWQgMDt2YXIgVm89e2lkOlwicG9pbnRlci1ldmVudHMvaG9sZFJlcGVhdFwiLGluc3RhbGw6ZnVuY3Rpb24odCl7dC51c2VQbHVnaW4oUm8uZGVmYXVsdCk7dmFyIGU9dC5wb2ludGVyRXZlbnRzO2UuZGVmYXVsdHMuaG9sZFJlcGVhdEludGVydmFsPTAsZS50eXBlcy5ob2xkcmVwZWF0PXQuYWN0aW9ucy5waGFzZWxlc3NUeXBlcy5ob2xkcmVwZWF0PSEwfSxsaXN0ZW5lcnM6W1wibW92ZVwiLFwidXBcIixcImNhbmNlbFwiLFwiZW5kYWxsXCJdLnJlZHVjZSgoZnVuY3Rpb24odCxlKXtyZXR1cm4gdFtcInBvaW50ZXJFdmVudHM6XCIuY29uY2F0KGUpXT1Vbyx0fSkse1wicG9pbnRlckV2ZW50czpuZXdcIjpmdW5jdGlvbih0KXt2YXIgZT10LnBvaW50ZXJFdmVudDtcImhvbGRcIj09PWUudHlwZSYmKGUuY291bnQ9KGUuY291bnR8fDApKzEpfSxcInBvaW50ZXJFdmVudHM6ZmlyZWRcIjpmdW5jdGlvbih0LGUpe3ZhciBuPXQuaW50ZXJhY3Rpb24scj10LnBvaW50ZXJFdmVudCxvPXQuZXZlbnRUYXJnZXQsaT10LnRhcmdldHM7aWYoXCJob2xkXCI9PT1yLnR5cGUmJmkubGVuZ3RoKXt2YXIgYT1pWzBdLmV2ZW50YWJsZS5vcHRpb25zLmhvbGRSZXBlYXRJbnRlcnZhbDthPD0wfHwobi5ob2xkSW50ZXJ2YWxIYW5kbGU9c2V0VGltZW91dCgoZnVuY3Rpb24oKXtlLnBvaW50ZXJFdmVudHMuZmlyZSh7aW50ZXJhY3Rpb246bixldmVudFRhcmdldDpvLHR5cGU6XCJob2xkXCIscG9pbnRlcjpyLGV2ZW50OnJ9LGUpfSksYSkpfX19KX0sTm89Vm87TG8uZGVmYXVsdD1Obzt2YXIgcW89e307ZnVuY3Rpb24gR28odCl7cmV0dXJuKDAsTS5kZWZhdWx0KSh0aGlzLmV2ZW50cy5vcHRpb25zLHQpLHRoaXN9T2JqZWN0LmRlZmluZVByb3BlcnR5KHFvLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHFvLmRlZmF1bHQ9dm9pZCAwO3ZhciAkbz17aWQ6XCJwb2ludGVyLWV2ZW50cy9pbnRlcmFjdGFibGVUYXJnZXRzXCIsaW5zdGFsbDpmdW5jdGlvbih0KXt2YXIgZT10LkludGVyYWN0YWJsZTtlLnByb3RvdHlwZS5wb2ludGVyRXZlbnRzPUdvO3ZhciBuPWUucHJvdG90eXBlLl9iYWNrQ29tcGF0T3B0aW9uO2UucHJvdG90eXBlLl9iYWNrQ29tcGF0T3B0aW9uPWZ1bmN0aW9uKHQsZSl7dmFyIHI9bi5jYWxsKHRoaXMsdCxlKTtyZXR1cm4gcj09PXRoaXMmJih0aGlzLmV2ZW50cy5vcHRpb25zW3RdPWUpLHJ9fSxsaXN0ZW5lcnM6e1wicG9pbnRlckV2ZW50czpjb2xsZWN0LXRhcmdldHNcIjpmdW5jdGlvbih0LGUpe3ZhciBuPXQudGFyZ2V0cyxyPXQubm9kZSxvPXQudHlwZSxpPXQuZXZlbnRUYXJnZXQ7ZS5pbnRlcmFjdGFibGVzLmZvckVhY2hNYXRjaChyLChmdW5jdGlvbih0KXt2YXIgZT10LmV2ZW50cyxhPWUub3B0aW9ucztlLnR5cGVzW29dJiZlLnR5cGVzW29dLmxlbmd0aCYmdC50ZXN0SWdub3JlQWxsb3coYSxyLGkpJiZuLnB1c2goe25vZGU6cixldmVudGFibGU6ZSxwcm9wczp7aW50ZXJhY3RhYmxlOnR9fSl9KSl9LFwiaW50ZXJhY3RhYmxlOm5ld1wiOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW50ZXJhY3RhYmxlO2UuZXZlbnRzLmdldFJlY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIGUuZ2V0UmVjdCh0KX19LFwiaW50ZXJhY3RhYmxlOnNldFwiOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5pbnRlcmFjdGFibGUscj10Lm9wdGlvbnM7KDAsTS5kZWZhdWx0KShuLmV2ZW50cy5vcHRpb25zLGUucG9pbnRlckV2ZW50cy5kZWZhdWx0cyksKDAsTS5kZWZhdWx0KShuLmV2ZW50cy5vcHRpb25zLHIucG9pbnRlckV2ZW50c3x8e30pfX19LEhvPSRvO3FvLmRlZmF1bHQ9SG87dmFyIEtvPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShLbyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxLby5kZWZhdWx0PXZvaWQgMDt2YXIgWm89e2lkOlwicG9pbnRlci1ldmVudHNcIixpbnN0YWxsOmZ1bmN0aW9uKHQpe3QudXNlUGx1Z2luKFJvKSx0LnVzZVBsdWdpbihMby5kZWZhdWx0KSx0LnVzZVBsdWdpbihxby5kZWZhdWx0KX19LEpvPVpvO0tvLmRlZmF1bHQ9Sm87dmFyIFFvPXt9O2Z1bmN0aW9uIHRpKHQpe3ZhciBlPXQuSW50ZXJhY3RhYmxlO3QuYWN0aW9ucy5waGFzZXMucmVmbG93PSEwLGUucHJvdG90eXBlLnJlZmxvdz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1pLmRlZmF1bHQuc3RyaW5nKHQudGFyZ2V0KT9ILmZyb20odC5fY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKHQudGFyZ2V0KSk6W3QudGFyZ2V0XSxvPW4ud2luZG93LlByb21pc2UsYT1vP1tdOm51bGwscz1mdW5jdGlvbigpe3ZhciBpPXJbbF0scz10LmdldFJlY3QoaSk7aWYoIXMpcmV0dXJuXCJicmVha1wiO3ZhciB1PUguZmluZChuLmludGVyYWN0aW9ucy5saXN0LChmdW5jdGlvbihuKXtyZXR1cm4gbi5pbnRlcmFjdGluZygpJiZuLmludGVyYWN0YWJsZT09PXQmJm4uZWxlbWVudD09PWkmJm4ucHJlcGFyZWQubmFtZT09PWUubmFtZX0pKSxjPXZvaWQgMDtpZih1KXUubW92ZSgpLGEmJihjPXUuX3JlZmxvd1Byb21pc2V8fG5ldyBvKChmdW5jdGlvbih0KXt1Ll9yZWZsb3dSZXNvbHZlPXR9KSkpO2Vsc2V7dmFyIGY9KDAsay50bGJyVG9YeXdoKShzKSxkPXtwYWdlOnt4OmYueCx5OmYueX0sY2xpZW50Ont4OmYueCx5OmYueX0sdGltZVN0YW1wOm4ubm93KCl9LHA9WC5jb29yZHNUb0V2ZW50KGQpO2M9ZnVuY3Rpb24odCxlLG4scixvKXt2YXIgaT10LmludGVyYWN0aW9ucy5uZXcoe3BvaW50ZXJUeXBlOlwicmVmbG93XCJ9KSxhPXtpbnRlcmFjdGlvbjppLGV2ZW50Om8scG9pbnRlcjpvLGV2ZW50VGFyZ2V0Om4scGhhc2U6XCJyZWZsb3dcIn07aS5pbnRlcmFjdGFibGU9ZSxpLmVsZW1lbnQ9bixpLnByZXZFdmVudD1vLGkudXBkYXRlUG9pbnRlcihvLG8sbiwhMCksWC5zZXRaZXJvQ29vcmRzKGkuY29vcmRzLmRlbHRhKSwoMCxYdC5jb3B5QWN0aW9uKShpLnByZXBhcmVkLHIpLGkuX2RvUGhhc2UoYSk7dmFyIHM9dC53aW5kb3cuUHJvbWlzZSxsPXM/bmV3IHMoKGZ1bmN0aW9uKHQpe2kuX3JlZmxvd1Jlc29sdmU9dH0pKTp2b2lkIDA7cmV0dXJuIGkuX3JlZmxvd1Byb21pc2U9bCxpLnN0YXJ0KHIsZSxuKSxpLl9pbnRlcmFjdGluZz8oaS5tb3ZlKGEpLGkuZW5kKG8pKTooaS5zdG9wKCksaS5fcmVmbG93UmVzb2x2ZSgpKSxpLnJlbW92ZVBvaW50ZXIobyxvKSxsfShuLHQsaSxlLHApfWEmJmEucHVzaChjKX0sbD0wO2w8ci5sZW5ndGgmJlwiYnJlYWtcIiE9PXMoKTtsKyspO3JldHVybiBhJiZvLmFsbChhKS50aGVuKChmdW5jdGlvbigpe3JldHVybiB0fSkpfSh0aGlzLGUsdCl9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShRbyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxRby5kZWZhdWx0PXZvaWQgMCxRby5pbnN0YWxsPXRpO3ZhciBlaT17aWQ6XCJyZWZsb3dcIixpbnN0YWxsOnRpLGxpc3RlbmVyczp7XCJpbnRlcmFjdGlvbnM6c3RvcFwiOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5pbnRlcmFjdGlvbjtcInJlZmxvd1wiPT09bi5wb2ludGVyVHlwZSYmKG4uX3JlZmxvd1Jlc29sdmUmJm4uX3JlZmxvd1Jlc29sdmUoKSxILnJlbW92ZShlLmludGVyYWN0aW9ucy5saXN0LG4pKX19fSxuaT1laTtRby5kZWZhdWx0PW5pO3ZhciByaT17ZXhwb3J0czp7fX07ZnVuY3Rpb24gb2kodCl7cmV0dXJuIG9pPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9LG9pKHQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyaS5leHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHJpLmV4cG9ydHMuZGVmYXVsdD12b2lkIDAsYnIuZGVmYXVsdC51c2UobGUuZGVmYXVsdCksYnIuZGVmYXVsdC51c2UoUWUuZGVmYXVsdCksYnIuZGVmYXVsdC51c2UoS28uZGVmYXVsdCksYnIuZGVmYXVsdC51c2UobG4uZGVmYXVsdCksYnIuZGVmYXVsdC51c2UoRW8uZGVmYXVsdCksYnIuZGVmYXVsdC51c2UoYWUuZGVmYXVsdCksYnIuZGVmYXVsdC51c2UoRXQuZGVmYXVsdCksYnIuZGVmYXVsdC51c2UoRHQuZGVmYXVsdCksYnIuZGVmYXVsdC51c2UoUW8uZGVmYXVsdCk7dmFyIGlpPWJyLmRlZmF1bHQ7aWYocmkuZXhwb3J0cy5kZWZhdWx0PWlpLFwib2JqZWN0XCI9PT1vaShyaSkmJnJpKXRyeXtyaS5leHBvcnRzPWJyLmRlZmF1bHR9Y2F0Y2godCl7fWJyLmRlZmF1bHQuZGVmYXVsdD1ici5kZWZhdWx0LEV0LmRlZmF1bHQsRHQuZGVmYXVsdCxhZS5kZWZhdWx0LGxlLmRlZmF1bHQsaGUuZGVmYXVsdCxsbi5kZWZhdWx0LGJyLmRlZmF1bHQsRW8uZGVmYXVsdCxRZS5kZWZhdWx0LEtvLmRlZmF1bHQsUW8uZGVmYXVsdCxyaT1yaS5leHBvcnRzO3ZhciBhaT17ZXhwb3J0czp7fX07ZnVuY3Rpb24gc2kodCl7cmV0dXJuIHNpPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9LHNpKHQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShhaS5leHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGFpLmV4cG9ydHMuZGVmYXVsdD12b2lkIDA7dmFyIGxpPXJpLmRlZmF1bHQ7aWYoYWkuZXhwb3J0cy5kZWZhdWx0PWxpLFwib2JqZWN0XCI9PT1zaShhaSkmJmFpKXRyeXthaS5leHBvcnRzPXJpLmRlZmF1bHR9Y2F0Y2godCl7fXJldHVybiByaS5kZWZhdWx0LmRlZmF1bHQ9cmkuZGVmYXVsdCxhaS5leHBvcnRzfSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJhY3QubWluLmpzLm1hcFxuIiwiaW1wb3J0IGludGVyYWN0IGZyb20gJ2ludGVyYWN0anMnO1xuaW1wb3J0IHtWZXJkb2NzRW5kcG9pbnR9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkayc7XG5pbXBvcnQge2dldFJHQkF9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9VdGlscy9Db2xvcnMnO1xuaW1wb3J0IHtJVGVtcGxhdGVGaWVsZH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9UeXBlcyc7XG5pbXBvcnQge0NvbXBvbmVudCwgaCwgRXZlbnQsIEV2ZW50RW1pdHRlciwgRnJhZ21lbnQsIFByb3AsIEhvc3R9IGZyb20gJ0BzdGVuY2lsL2NvcmUnO1xuaW1wb3J0IHtJUGFnZVJlbmRlckV2ZW50fSBmcm9tICcuLi8uLi9lbWJlZHMvdmVyZG9jcy12aWV3L3ZlcmRvY3Mtdmlldyc7XG5pbXBvcnQge2dldFJvbGVJbmRleCwgcmVuZGVyRG9jdW1lbnRGaWVsZH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbHMnO1xuaW1wb3J0IFRlbXBsYXRlU3RvcmUgZnJvbSAnLi4vLi4vLi4vdXRpbHMvdGVtcGxhdGVTdG9yZSc7XG5pbXBvcnQge2xvYWRUZW1wbGF0ZX0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvVGVtcGxhdGVzJztcbmltcG9ydCB7U0RLRXJyb3J9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2Vycm9ycyc7XG5cbi8qKlxuICogSGVscGVyIGZ1bmN0aW9uIHRvIHNhZmVseSBzZXQvdXBkYXRlIGNvbXBvbmVudHMgaW4gYSBDU1MgdHJhbnNmb3JtIGF0dHJpYnV0ZS4gVHJhbnNmb3JtIGlzIG5vcm1hbGx5IHNldCBhcyBhIHN0cmluZyBvZlxuICogYG9wZXJhdGlvbjEocGFyYW0pIG9wZXJhdGlvbjIocGFyYW0pIC4uLmAgY29tcG9uZW50cywgd2hpY2ggbWFrZXMgdXBkYXRpbmcgdGhlbSBhIGJpdCBvZiBhIHBhaW4uIFRoaXMgd2lsbCByZW1vdmUgdGhlXG4gKiBzcGVjaWZpZWQgY29tcG9uZW50IGlmIGl0J3MgYWxyZWFkeSBzZXQgYW5kIHJlcGxhY2UgaXQgd2l0aCB0aGUgbmV3IHZhbHVlLCB3aXRob3V0IHRvdWNoaW5nIHRoZSBvdGhlciBjb21wb25lbnRzIHRoYXRcbiAqIG1heSBhbHJlYWR5IGJlIHNldC4gTm90ZSB0aGF0IHRoaXMgb3BlcmF0aW9uIG1vdmVzIHRoZSBjb21wb25lbnQgdG8gdGhlIGVuZCBvZiB0aGUgdHJhbnNmb3JtIGNoYWluIHNvIGl0J3Mgbm90IG1lYW50XG4gKiB0byBiZSB1c2VkIGZvciBvcmRlci1zZW5zaXRpdmUgY29tcG9uZW50cyBlLmcuIHRyYW5zbGF0ZS10aGVuLXJvdGF0ZS5cbiAqL1xuY29uc3QgdXBkYXRlQ3NzVHJhbnNmb3JtID0gKGVsOiBIVE1MRWxlbWVudCwga2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpID0+IHtcbiAgLy8gZS5nLiAnc2NhbGUoMS44NzkwOCwgMS44NzkwOCkgdHJhbnNsYXRlKDBweCwgMHB4KTsnXG4gIGNvbnN0IGN1cnJlbnRUcmFuc2Zvcm0gPSBlbC5zdHlsZS50cmFuc2Zvcm07XG4gIC8vIGUuZy4gWydzY2FsZSgxLjg3OTA4LCAxLjg3OTA4KScsICdzY2FsZScsICcxLjg3OTA4LCAxLjg3OTA4JywgLi4uXSwgWyAndHJhbnNsYXRlKDBweCwgMHB4KScsICd0cmFuc2xhdGUnLCAnMHB4LCAwcHgnXV1cbiAgY29uc3QgY29tcG9uZW50cyA9IFsuLi5jdXJyZW50VHJhbnNmb3JtLm1hdGNoQWxsKC8oXFx3KylcXCgoW14pXSopXFwpL2dpKV07XG4gIGVsLnN0eWxlLnRyYW5zZm9ybSA9IFtcbiAgICBjb21wb25lbnRzIC8vXG4gICAgICAuZmlsdGVyKGNvbXBvbmVudCA9PiBjb21wb25lbnRbMV0gIT09IGtleSkgLy8gUmVtb3ZlIHRoZSBlbnRyeSBpZiBpdCdzIGFscmVhZHkgc2V0XG4gICAgICAubWFwKGNvbXBvbmVudCA9PiBjb21wb25lbnRbMF0pLCAvLyBDb252ZXJ0IGJhY2sgdGhlIHJlbWFpbmluZyBlbnRyaWVzXG4gICAgYCR7a2V5fSgke3ZhbHVlfSlgLFxuICBdLmpvaW4oJyAnKTtcbn07XG5cbmNvbnN0IGljb25TaW5nbGVsaW5lID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGhlaWdodD1cIjI0XCIgd2lkdGg9XCIyNFwiPjxwYXRoIGQ9XCJNMy40MjUgMTYuMTVWMTNoMTEuMTV2My4xNVptMC01LjE1VjcuODVoMTcuMTVWMTFaXCIvPjwvc3ZnPic7XG5cbmNvbnN0IGljb25NdWx0aWxpbmUgPVxuICAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjRcIiB3aWR0aD1cIjI0XCI+PHBhdGggZD1cIk0zLjIyNSAyMC43MjV2LTMuMTVoMTEuNTV2My4xNVptMC00Ljc3NVYxMi44aDE3LjU1djMuMTVabTAtNC43NVY4LjA1aDE3LjU1djMuMTVabTAtNC43NzV2LTMuMTVoMTcuNTV2My4xNVpcIi8+PC9zdmc+JztcblxuY29uc3QgaWNvbkNoZWNrID1cbiAgJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGhlaWdodD1cIjI0XCIgd2lkdGg9XCIyNFwiPjxwYXRoIGQ9XCJtMTAuNTUgMTYuNTUgNy4yNzUtNy4yNzVMMTYuMDUgNy41bC01LjUgNS40NS0yLjY3NS0yLjY1TDYuMSAxMi4wNzVabS01LjM3NSA0LjkyNXEtMS4xMjUgMC0xLjg4Ny0uNzYzLS43NjMtLjc2Mi0uNzYzLTEuODg3VjUuMTc1cTAtMS4xMjUuNzYzLTEuODg4Ljc2Mi0uNzYyIDEuODg3LS43NjJoMTMuNjVxMS4xMjUgMCAxLjg4OC43NjIuNzYyLjc2My43NjIgMS44ODh2MTMuNjVxMCAxLjEyNS0uNzYyIDEuODg3LS43NjMuNzYzLTEuODg4Ljc2M1ptMC0yLjY1aDEzLjY1VjUuMTc1SDUuMTc1djEzLjY1Wm0wLTEzLjY1djEzLjY1LTEzLjY1WlwiLz48L3N2Zz4nO1xuXG5jb25zdCBpY29uUmFkaW8gPVxuICAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjRcIiB3aWR0aD1cIjI0XCI+PHBhdGggZD1cIk0xMiAxN3EyLjA3NSAwIDMuNTM4LTEuNDYzUTE3IDE0LjA3NSAxNyAxMnQtMS40NjItMy41MzhRMTQuMDc1IDcgMTIgNyA5LjkyNSA3IDguNDYzIDguNDYyIDcgOS45MjUgNyAxMnEwIDIuMDc1IDEuNDYzIDMuNTM3UTkuOTI1IDE3IDEyIDE3Wm0wIDUuODVxLTIuMjc1IDAtNC4yNS0uODV0LTMuNDM4LTIuMzEyUTIuODUgMTguMjI1IDIgMTYuMjVxLS44NS0xLjk3NS0uODUtNC4yNVQyIDcuNzVxLjg1LTEuOTc1IDIuMzEyLTMuNDM4UTUuNzc1IDIuODUgNy43NSAycTEuOTc1LS44NSA0LjI1LS44NXQ0LjI1Ljg1cTEuOTc1Ljg1IDMuNDM4IDIuMzEyUTIxLjE1IDUuNzc1IDIyIDcuNzVxLjg1IDEuOTc1Ljg1IDQuMjVUMjIgMTYuMjVxLS44NSAxLjk3NS0yLjMxMiAzLjQzOFExOC4yMjUgMjEuMTUgMTYuMjUgMjJxLTEuOTc1Ljg1LTQuMjUuODVabTAtMy4xNXEzLjI1IDAgNS40NzUtMi4yMjVRMTkuNyAxNS4yNSAxOS43IDEycTAtMy4yNS0yLjIyNS01LjQ3NVExNS4yNSA0LjMgMTIgNC4zcS0zLjI1IDAtNS40NzUgMi4yMjVRNC4zIDguNzUgNC4zIDEycTAgMy4yNSAyLjIyNSA1LjQ3NVE4Ljc1IDE5LjcgMTIgMTkuN1ptMC03LjdaXCIvPjwvc3ZnPic7XG5cbmNvbnN0IGljb25EYXRlcGlja2VyID1cbiAgJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGhlaWdodD1cIjI0XCIgd2lkdGg9XCIyNFwiPjxwYXRoIGQ9XCJNNy42IDEzLjkyNXEtLjU1IDAtLjkyNS0uMzc1dC0uMzc1LS45MjVxMC0uNTUuMzc1LS45MzcuMzc1LS4zODguOTI1LS4zODh0LjkyNS4zODhxLjM3NS4zODcuMzc1LjkzN3QtLjM3NS45MjVxLS4zNzUuMzc1LS45MjUuMzc1Wm00LjQgMHEtLjU1IDAtLjkyNS0uMzc1dC0uMzc1LS45MjVxMC0uNTUuMzc1LS45MzcuMzc1LS4zODguOTI1LS4zODh0LjkyNS4zODhxLjM3NS4zODcuMzc1LjkzN3QtLjM3NS45MjVxLS4zNzUuMzc1LS45MjUuMzc1Wm00LjQgMHEtLjU1IDAtLjkyNS0uMzc1dC0uMzc1LS45MjVxMC0uNTUuMzc1LS45MzcuMzc1LS4zODguOTI1LS4zODh0LjkyNS4zODhxLjM3NS4zODcuMzc1LjkzN3QtLjM3NS45MjVxLS4zNzUuMzc1LS45MjUuMzc1Wk01LjMgMjIuODVxLTEuMzI1IDAtMi4yMzgtLjkxMi0uOTEyLS45MTMtLjkxMi0yLjIzOFY2LjNxMC0xLjMyNS45MTItMi4yMzguOTEzLS45MTIgMi4yMzgtLjkxMkg2di0yaDIuNTc1djJoNi44NXYtMkgxOHYyaC43cTEuMzI1IDAgMi4yMzguOTEyLjkxMi45MTMuOTEyIDIuMjM4djEzLjRxMCAxLjMyNS0uOTEyIDIuMjM4LS45MTMuOTEyLTIuMjM4LjkxMlptMC0zLjE1aDEzLjRWMTBINS4zdjkuN1pNNS4zIDhoMTMuNFY2LjNINS4zWm0wIDBWNi4zIDhaXCIvPjwvc3ZnPic7XG5cbmNvbnN0IGljb25TaWduYXR1cmUgPVxuICAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjRcIiB3aWR0aD1cIjI0XCI+PHBhdGggZD1cIm05LjIyNSAyMS4yMjUgNC42NS00LjY1aDguNDV2NC42NVptLTUuMzUtMi4ySDUuMDVsOC41LTguNS0xLjE3NS0xLjE3NS04LjUgOC41Wm0xNC4yNS05Ljk1TDEzLjggNC44bDEuMzI1LTEuMzI1cS42MjUtLjY1IDEuNTI1LS42NjMuOS0uMDEyIDEuNi42NjNsMS4yMjUgMS4xNzVxLjY3NS42NzUuNjYzIDEuNTYyLS4wMTMuODg4LS42NjMgMS41MTNaTTE2LjcgMTAuNTUgNiAyMS4yMjVIMS42NzVWMTYuOUwxMi4zNSA2LjIyNVptLTMuNzI1LS42MjUtLjYtLjU3NSAxLjE3NSAxLjE3NVpcIi8+PC9zdmc+JztcblxuY29uc3QgaWNvbkluaXRpYWwgPSAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjRcIiB3aWR0aD1cIjI0XCI+PHBhdGggZD1cIk02LjIyNSAyMC43NzVWN2gtNVYzLjIyNUgxNVY3aC01djEzLjc3NVptOS43NzUgMHYtOGgtM1Y5aDkuNzc1djMuNzc1aC0zdjhaXCIvPjwvc3ZnPic7XG5cbi8qKlxuICogRGlzcGxheXMgYSBidWlsZGVyIGV4cGVyaWVuY2UgZm9yIGxheWluZyBvdXQgZmllbGRzIGluIGEgdGVtcGxhdGUuIE5vdGUgdGhhdCB0aGlzIGV4cGVyaWVuY2UgcmVxdWlyZXMgYSBsYXJnZSBkaXNwbGF5IGFyZWEgdG9cbiAqIHByZXNlbnQgYWxsIG9mIHRoZSByZXF1aXJlZCBjb250cm9scywgc28gaXQgaXMgcHJpbWFyaWx5IGludGVuZGVkIHRvIGJlIHVzZWQgaW4gZGVza3RvcCBlbnZpcm9ubWVudHMuXG4gKi9cbkBDb21wb25lbnQoe1xuICB0YWc6ICd2ZXJkb2NzLXRlbXBsYXRlLWZpZWxkcycsXG4gIHN0eWxlVXJsOiAndmVyZG9jcy10ZW1wbGF0ZS1maWVsZHMuc2NzcycsXG4gIHNoYWRvdzogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFZlcmRvY3NUZW1wbGF0ZUZpZWxkcyB7XG4gIHBhZ2UwRWw6IEhUTUxEaXZFbGVtZW50O1xuICB0b29sYmFyRWw6IEhUTUxEaXZFbGVtZW50O1xuXG4gIC8qKlxuICAgKiBUaGUgZW5kcG9pbnQgdG8gdXNlIHRvIGNvbW11bmljYXRlIHdpdGggVmVyZG9jcy4gSWYgbm90IHNldCwgdGhlIGRlZmF1bHQgZW5kcG9pbnQgd2lsbCBiZSB1c2VkLlxuICAgKi9cbiAgQFByb3AoKSBlbmRwb2ludDogVmVyZG9jc0VuZHBvaW50ID0gVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKTtcblxuICAvKipcbiAgICogVGhlIElEIG9mIHRoZSB0ZW1wbGF0ZSB0byBjcmVhdGUgdGhlIGRvY3VtZW50IGZyb20uXG4gICAqL1xuICBAUHJvcCgpIHRlbXBsYXRlSWQ6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSB1c2VyIGNvbXBsZXRlcyB0aGUgc3RlcC5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBzZXR0aW5nc1VwZGF0ZWQ6IEV2ZW50RW1pdHRlcjtcblxuICAvKipcbiAgICogRXZlbnQgZmlyZWQgd2hlbiB0aGUgdXNlciBjYW5jZWxzIHRoZSBkaWFsb2cuXG4gICAqL1xuICBARXZlbnQoe2NvbXBvc2VkOiB0cnVlfSkgY2FuY2VsOiBFdmVudEVtaXR0ZXI7XG5cbiAgLyoqXG4gICAqIEV2ZW50IGZpcmVkIGlmIGFuIGVycm9yIG9jY3Vycy4gVGhlIGV2ZW50IGRldGFpbHMgd2lsbCBjb250YWluIGluZm9ybWF0aW9uIGFib3V0IHRoZSBlcnJvci4gTW9zdCBlcnJvcnMgd2lsbFxuICAgKiB0ZXJtaW5hdGUgdGhlIHByb2Nlc3MsIGFuZCB0aGUgY2FsbGluZyBhcHBsaWNhdGlvbiBzaG91bGQgY29ycmVjdCB0aGUgY29uZGl0aW9uIGFuZCByZS1yZW5kZXIgdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBzZGtFcnJvcjogRXZlbnRFbWl0dGVyPFNES0Vycm9yPjtcblxuICBhc3luYyBjb21wb25lbnRXaWxsTG9hZCgpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5lbmRwb2ludC5sb2FkU2Vzc2lvbigpO1xuXG4gICAgICBpZiAoIXRoaXMudGVtcGxhdGVJZCkge1xuICAgICAgICBjb25zb2xlLmxvZyhgW0ZJRUxEU10gTWlzc2luZyByZXF1aXJlZCB0ZW1wbGF0ZSBJRCAke3RoaXMudGVtcGxhdGVJZH1gKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0cnkge1xuICAgICAgICBjb25zb2xlLmxvZyhgW0ZJRUxEU10gTG9hZGluZyB0ZW1wbGF0ZSAke3RoaXMudGVtcGxhdGVJZH1gKTtcbiAgICAgICAgYXdhaXQgbG9hZFRlbXBsYXRlKHRoaXMuZW5kcG9pbnQsIHRoaXMudGVtcGxhdGVJZCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbRklFTERTXSBFcnJvciBsb2FkaW5nIHRlbXBsYXRlJywgZSk7XG4gICAgICAgIHRoaXMuc2RrRXJyb3I/LmVtaXQobmV3IFNES0Vycm9yKGUubWVzc2FnZSwgZS5yZXNwb25zZT8uc3RhdHVzLCBlLnJlc3BvbnNlPy5kYXRhKSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5sb2coJ1tGSUVMRFNdIEVycm9yIHdpdGggcHJldmlldyBzZXNzaW9uJywgZSk7XG4gICAgICB0aGlzLnNka0Vycm9yPy5lbWl0KG5ldyBTREtFcnJvcihlLm1lc3NhZ2UsIGUucmVzcG9uc2U/LnN0YXR1cywgZS5yZXNwb25zZT8uZGF0YSkpO1xuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZFJlbmRlcigpIHtcbiAgICAvLyBjb25zb2xlLmxvZygncmVuZGVyZWQnLCB0aGlzLnBhZ2UwRWwsIHRoaXMudG9vbGJhckVsKTtcbiAgICAvLyBjb25zb2xlLmxvZygndycsIHRoaXMucGFnZTBFbC5jbGllbnRXaWR0aCk7XG4gICAgLy8gY29uc29sZS5sb2coJ3QnLCB0aGlzLnRvb2xiYXJFbC5jbGllbnRXaWR0aCk7XG4gICAgaW50ZXJhY3QuZHluYW1pY0Ryb3AodHJ1ZSk7XG4gICAgdGhpcy50b29sYmFyRWwuc3R5bGUud2lkdGggPSBgJHt0aGlzLnBhZ2UwRWwuY2xpZW50V2lkdGh9cHhgO1xuICB9XG5cbiAgYXN5bmMgaGFuZGxlRmllbGRDaGFuZ2UoZmllbGQ6IElUZW1wbGF0ZUZpZWxkLCBlOiBhbnksIG9wdGlvbklkPzogc3RyaW5nKSB7XG4gICAgY29uc29sZS5sb2coJ1tGSUVMRFNdIGhhbmRsZUZpZWxkQ2hhbmdlJywgZmllbGQsIGUsIG9wdGlvbklkKTtcbiAgfVxuXG4gIGhhbmRsZVBhZ2VSZW5kZXJlZChlKSB7XG4gICAgY29uc3QgcGFnZUluZm8gPSBlLmRldGFpbCBhcyBJUGFnZVJlbmRlckV2ZW50O1xuICAgIGNvbnNvbGUubG9nKCdbRklFTERTXSBQYWdlIHJlbmRlcmVkJywgcGFnZUluZm8pO1xuXG4gICAgY29uc3QgZmllbGRzID0gVGVtcGxhdGVTdG9yZS5maWVsZHMuZmlsdGVyKGZpZWxkID0+IGZpZWxkLnBhZ2Vfc2VxdWVuY2UgPT09IHBhZ2VJbmZvLnJlbmRlcmVkUGFnZS5wYWdlTnVtYmVyKTtcbiAgICAvLyBjb25zdCBmaWVsZHMgPSB0aGlzLmZpZWxkcy5maWx0ZXIoZmllbGQgPT4gZmllbGQucGFnZV9zZXF1ZW5jZSA9PT0gcGFnZUluZm8ucmVuZGVyZWRQYWdlLnBhZ2VOdW1iZXIpO1xuICAgIGNvbnNvbGUubG9nKCdbRklFTERTXSBGaWVsZHMgb24gcGFnZScsIGZpZWxkcyk7XG4gICAgZmllbGRzLmZvckVhY2goZmllbGQgPT4ge1xuICAgICAgY29uc3QgZWwgPSByZW5kZXJEb2N1bWVudEZpZWxkKGZpZWxkLCBwYWdlSW5mby5yZW5kZXJlZFBhZ2UsIGdldFJvbGVJbmRleChUZW1wbGF0ZVN0b3JlLnJvbGVOYW1lcywgZmllbGQucm9sZV9uYW1lKSwgdGhpcy5oYW5kbGVGaWVsZENoYW5nZSwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAvLyBjb25zdCBlbCA9IHJlbmRlckRvY3VtZW50RmllbGQoZmllbGQsIHBhZ2VJbmZvLnJlbmRlcmVkUGFnZSwgZ2V0Um9sZUluZGV4KHRoaXMucm9sZXMsIGZpZWxkLnJvbGVfbmFtZSksIHRoaXMuaGFuZGxlRmllbGRDaGFuZ2UsIHRydWUsIHRydWUsIHRydWUpO1xuICAgICAgaWYgKCFlbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ3JlY2lwaWVudENoYW5nZWQnLCBlID0+IHtcbiAgICAgICAgZWwuc2V0QXR0cmlidXRlKCdyb2xlaW5kZXgnLCBnZXRSb2xlSW5kZXgoVGVtcGxhdGVTdG9yZS5yb2xlTmFtZXMsIGUuZGV0YWlsKSk7XG4gICAgICAgIC8vIGVsLnNldEF0dHJpYnV0ZSgncm9sZWluZGV4JywgZ2V0Um9sZUluZGV4KHRoaXMucm9sZXMsIGUuZGV0YWlsKSk7XG4gICAgICB9KTtcblxuICAgICAgZWwuc2V0QXR0cmlidXRlKCd4U2NhbGUnLCBwYWdlSW5mby5yZW5kZXJlZFBhZ2UueFNjYWxlKTtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZSgneVNjYWxlJywgcGFnZUluZm8ucmVuZGVyZWRQYWdlLnlTY2FsZSk7XG5cbiAgICAgIGludGVyYWN0KGVsKS5kcmFnZ2FibGUoe1xuICAgICAgICBsaXN0ZW5lcnM6IHtcbiAgICAgICAgICBzdGFydChldmVudCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tGSUVMRFNdIERyYWcgc3RhcnRlZCcsIGV2ZW50LnR5cGUsIGV2ZW50LnRhcmdldCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBtb3ZlKGV2ZW50KSB7XG4gICAgICAgICAgICBjb25zdCBvbGRYID0gKyhldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKCdwb3NYJykgfHwgMCk7XG4gICAgICAgICAgICBjb25zdCBvbGRZID0gKyhldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKCdwb3NZJykgfHwgMCk7XG4gICAgICAgICAgICBjb25zdCB4U2NhbGUgPSArKGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3hTY2FsZScpIHx8IDEpO1xuICAgICAgICAgICAgY29uc3QgeVNjYWxlID0gKyhldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKCd5U2NhbGUnKSB8fCAxKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1ggPSBldmVudC5keCAvIHhTY2FsZSArIG9sZFg7XG4gICAgICAgICAgICBjb25zdCBuZXdZID0gZXZlbnQuZHkgLyB5U2NhbGUgKyBvbGRZO1xuICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnNldEF0dHJpYnV0ZSgncG9zWCcsIG5ld1gpO1xuICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnNldEF0dHJpYnV0ZSgncG9zeScsIG5ld1kpO1xuICAgICAgICAgICAgdXBkYXRlQ3NzVHJhbnNmb3JtKGV2ZW50LnRhcmdldCwgJ3RyYW5zbGF0ZScsIGAke25ld1h9cHgsICR7bmV3WX1weGApO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZW5kKGV2ZW50KSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW0ZJRUxEU10gRHJhZyBlbmRlZCcsIGV2ZW50KTtcbiAgICAgICAgICAgIC8vIGV2ZW50LnRhcmdldC5zZXRBdHRyaWJ1dGUoJ3Bvc1gnLCAwKTtcbiAgICAgICAgICAgIC8vIGV2ZW50LnRhcmdldC5zZXRBdHRyaWJ1dGUoJ3Bvc3knLCAwKTtcbiAgICAgICAgICAgIC8vIHVwZGF0ZUNzc1RyYW5zZm9ybShldmVudC50YXJnZXQsICd0cmFuc2xhdGUnLCBgJHswfXB4LCAkezB9cHhgKTtcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgdGVzdEZpZWxkOiBJVGVtcGxhdGVGaWVsZCA9IHtcbiAgICAgIHRlbXBsYXRlX2lkOiAnJyxcbiAgICAgIG5hbWU6ICd0ZXN0JyxcbiAgICAgIHJvbGVfbmFtZTogJ1JlY2lwaWVudCAxJyxcbiAgICAgIHR5cGU6ICd0ZXh0Ym94JyxcbiAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgc2V0dGluZzoge1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwLFxuICAgICAgfSxcbiAgICAgIHBhZ2Vfc2VxdWVuY2U6IDAsXG4gICAgfTtcblxuICAgIGlmIChUZW1wbGF0ZVN0b3JlLmxvYWRpbmcpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxIb3N0PlxuICAgICAgICAgIDx2ZXJkb2NzLWxvYWRlciAvPlxuICAgICAgICA8L0hvc3Q+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8SG9zdD5cbiAgICAgICAge1RlbXBsYXRlU3RvcmUudGVtcGxhdGUgPyAoXG4gICAgICAgICAgPEZyYWdtZW50PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkcy1iYXJcIiByZWY9e2VsID0+ICh0aGlzLnRvb2xiYXJFbCA9IGVsIGFzIEhUTUxEaXZFbGVtZW50KX0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsYWJlbFwiPkFkZCBGaWVsZDo8L2Rpdj5cbiAgICAgICAgICAgICAgPHZlcmRvY3MtdG9vbGJhci1pY29uIGljb249e2ljb25TaW5nbGVsaW5lfSB0ZXh0PVwiU2luZ2xlLWxpbmUgVGV4dCBCb3hcIiBvblByZXNzPXsoKSA9PiBjb25zb2xlLmxvZygnc2luZ2xlIHByZXNzJyl9IC8+XG4gICAgICAgICAgICAgIDx2ZXJkb2NzLXRvb2xiYXItaWNvbiBpY29uPXtpY29uTXVsdGlsaW5lfSB0ZXh0PVwiTXVsdGktbGluZSBUZXh0IEJveFwiIG9uUHJlc3M9eygpID0+IGNvbnNvbGUubG9nKCdtdWx0aSBwcmVzcycpfSAvPlxuICAgICAgICAgICAgICA8dmVyZG9jcy10b29sYmFyLWljb24gaWNvbj17aWNvbkNoZWNrfSB0ZXh0PVwiQ2hlY2tib3hcIiBvblByZXNzPXsoKSA9PiBjb25zb2xlLmxvZygnY2hlY2sgcHJlc3MnKX0gLz5cbiAgICAgICAgICAgICAgPHZlcmRvY3MtdG9vbGJhci1pY29uIGljb249e2ljb25SYWRpb30gdGV4dD1cIlJhZGlvIEJ1dHRvblwiIG9uUHJlc3M9eygpID0+IGNvbnNvbGUubG9nKCdyYWRpbyBwcmVzcycpfSAvPlxuICAgICAgICAgICAgICA8dmVyZG9jcy10b29sYmFyLWljb24gaWNvbj17aWNvbkRhdGVwaWNrZXJ9IHRleHQ9XCJEYXRlIFBpY2tlclwiIG9uUHJlc3M9eygpID0+IGNvbnNvbGUubG9nKCdkYXRlIHByZXNzJyl9IC8+XG4gICAgICAgICAgICAgIDx2ZXJkb2NzLXRvb2xiYXItaWNvbiBpY29uPXtpY29uU2lnbmF0dXJlfSB0ZXh0PVwiU2lnbmF0dXJlXCIgb25QcmVzcz17KCkgPT4gY29uc29sZS5sb2coJ3NpZ25hdHVyZSBwcmVzcycpfSAvPlxuICAgICAgICAgICAgICA8dmVyZG9jcy10b29sYmFyLWljb24gaWNvbj17aWNvbkluaXRpYWx9IHRleHQ9XCJJbml0aWFsc1wiIG9uUHJlc3M9eygpID0+IGNvbnNvbGUubG9nKCdpbml0aWFsIHByZXNzJyl9IC8+XG4gICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tmbGV4OiAnMSd9fSAvPlxuICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IGNvbnNvbGUubG9nKCdzYXZlJyl9IGRpc2FibGVkPXt0cnVlfSBjbGFzcz1cIm9wZXJhdGlvblwiPlxuICAgICAgICAgICAgICAgIFNhdmVcbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gY29uc29sZS5sb2coJ2Nsb3NlJyl9IGNsYXNzPVwib3BlcmF0aW9uXCI+XG4gICAgICAgICAgICAgICAgQ2xvc2VcbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhZ2UtMFwiIHJlZj17ZWwgPT4gKHRoaXMucGFnZTBFbCA9IGVsIGFzIEhUTUxEaXZFbGVtZW50KX0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLXBsYWNlZC1maWVsZHNcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGl0bGVcIj5Vc2VyLVBsYWNlZCBGaWVsZHM8L2Rpdj5cbiAgICAgICAgICAgICAgICA8dmVyZG9jcy1maWVsZC1zaWduYXR1cmVcbiAgICAgICAgICAgICAgICAgIGZpZWxkPXt0ZXN0RmllbGR9XG4gICAgICAgICAgICAgICAgICBzdHlsZT17e3dpZHRoOiAnODJweCcsIGhlaWdodDogJzQxcHgnLCBsZWZ0OiAnMjBweCcsIHRvcDogJzQwcHgnLCB0cmFuc2Zvcm06ICdzY2FsZSgxLDEpJywgYmFja2dyb3VuZENvbG9yOiBnZXRSR0JBKDApfX1cbiAgICAgICAgICAgICAgICAgIG1vdmVhYmxlPXt0cnVlfVxuICAgICAgICAgICAgICAgICAgZWRpdGFibGU9e3RydWV9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPHZlcmRvY3Mtdmlld1xuICAgICAgICAgICAgICB0ZW1wbGF0ZUlkPXt0aGlzLnRlbXBsYXRlSWR9XG4gICAgICAgICAgICAgIGVuZHBvaW50PXt0aGlzLmVuZHBvaW50fVxuICAgICAgICAgICAgICBvblBhZ2VSZW5kZXJlZD17ZSA9PiB0aGlzLmhhbmRsZVBhZ2VSZW5kZXJlZChlKX1cbiAgICAgICAgICAgICAgcGFnZUxheWVycz17W1xuICAgICAgICAgICAgICAgIHtuYW1lOiAncGFnZScsIHR5cGU6ICdjYW52YXMnfSxcbiAgICAgICAgICAgICAgICB7bmFtZTogJ2NvbnRyb2xzJywgdHlwZTogJ2Rpdid9LFxuICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L0ZyYWdtZW50PlxuICAgICAgICApIDogKFxuICAgICAgICAgIDxkaXY+RXJyb3IgbG9hZGluZyBUZW1wbGF0ZS4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci48L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvSG9zdD5cbiAgICApO1xuICB9XG59XG4iLCJAaW1wb3J0ICcuLi8uLi8uLi90aGVtZS5zY3NzJztcblxudmVyZG9jcy10ZW1wbGF0ZS1maWVsZHMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtZmFtaWx5OiAkdmVyZG9jcy1wcmltYXJ5LWZvbnQ7XG5cbiAgLnBhZ2UtMCB7XG4gICAgcGFkZGluZzogNjVweCAxNXB4IDAgMTVweDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG4gICAgLnVzZXItcGxhY2VkLWZpZWxkcyB7XG4gICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IDVweCAjMDAwMDAwMGY7XG5cbiAgICAgIC50aXRsZSB7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgY29sb3I6ICNmZmZmZmY7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgcGFkZGluZzogM3B4IDZweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogJHZlcmRvY3MtZ3JleS1ibHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5maWVsZHMtYmFyIHtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB6LWluZGV4OiAxMDAwMDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcGFkZGluZzogNXB4IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYmFja2dyb3VuZDogJHZlcmRvY3MtZ3JleS1ibHVlO1xuXG4gICAgLmxhYmVsIHtcbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICB9XG5cbiAgICAuaWNvbiB7XG4gICAgICBtYXJnaW46IDAgNHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC44LCAwLjgpO1xuXG4gICAgICBzdmcge1xuICAgICAgICBmaWxsOiAjZmZmZmZmO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5vcGVyYXRpb24ge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICBjb2xvcjogI2NjY2NjYztcbiAgICAgICAgY3Vyc29yOiBpbmhlcml0O1xuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIkBpbXBvcnQgJy4uLy4uLy4uL3RoZW1lLnNjc3MnO1xuXG52ZXJkb2NzLXRlbXBsYXRlLXByb3BlcnRpZXMge1xuICBmb250LWZhbWlseTogJHZlcmRvY3MtcHJpbWFyeS1mb250O1xuXG4gIGZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIGg1IHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBtYXJnaW46IDAgMCA2cHggMDtcbiAgICB9XG5cbiAgICAucm93IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW46IDAgMCAyMHB4IDA7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIH1cblxuICAgIGZpZWxkc2V0IHtcbiAgICAgIHdpZHRoOiA0NDBweDtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbjogMCAwIDIwcHggMDtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICBwYWRkaW5nOiAyMHB4IDIwcHggMTBweCAyMHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHZlcmRvY3MtZ3JleS00O1xuICAgICAgYm94LXNoYWRvdzogMCAxcHggM3B4IDAgcmdiKDAgMCAwIC8gMjAlKSwgMCAycHggMnB4IDAgcmdiKDAgMCAwIC8gMTIlKSwgMCAwIDJweCAwIHJnYigwIDAgMCAvIDE0JSk7XG4gICAgfVxuXG4gICAgbGFiZWwge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgbWFyZ2luOiAwIDAgNHB4IDA7XG4gICAgICBjb2xvcjogJHZlcmRvY3MtYmctNDtcbiAgICB9XG5cbiAgICBpbnB1dCB7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICBwYWRkaW5nOiAzcHggNnB4IDNweCAwO1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHZlcmRvY3MtZGFyay1ibHVlO1xuXG4gICAgICAmOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuaW5wdXQtcm93IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBtYXJnaW46IDAgMCAxMHB4IDA7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcblxuICAgICAgbGFiZWwge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgfVxuXG4gICAgICB2ZXJkb2NzLXRleHQtaW5wdXQge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXg6IDAgMCA0MHB4O1xuXG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdmVyZG9jcy1jaGVja2JveCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXg6IDAgMCA0MHB4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAucmFkaW8tcm93IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW46IDAgMCAxMHB4IDA7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuXG4gICAgICB2ZXJkb2NzLXJhZGlvLWJ1dHRvbiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXg6IDAgMCAzMHB4O1xuICAgICAgfVxuXG4gICAgICBsYWJlbCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAgICAgLnRpdGxlIHtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuYnV0dG9ucyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBjb2x1bW4tZ2FwOiA4cHg7XG4gICAgbWFyZ2luLXRvcDogMTZweDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuXG4gICAgLmZsZXgtZmlsbCB7XG4gICAgICBmbGV4OiAxO1xuICAgIH1cbiAgfVxuXG4gIDo6cGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAkdmVyZG9jcy1iZy0yO1xuICB9XG59XG4iLCJpbXBvcnQge1ZlcmRvY3NFbmRwb2ludH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrJztcbmltcG9ydCB7Q29tcG9uZW50LCBoLCBFdmVudCwgRXZlbnRFbWl0dGVyLCBQcm9wLCBTdGF0ZX0gZnJvbSAnQHN0ZW5jaWwvY29yZSc7XG5pbXBvcnQge2dldFRlbXBsYXRlfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzL1RlbXBsYXRlcyc7XG5pbXBvcnQge0lUZW1wbGF0ZX0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9UeXBlcyc7XG5pbXBvcnQge1NES0Vycm9yfSBmcm9tICcuLi8uLi8uLi91dGlscy9lcnJvcnMnO1xuaW1wb3J0IFRlbXBsYXRlU3RvcmUgZnJvbSAnLi4vLi4vLi4vdXRpbHMvdGVtcGxhdGVTdG9yZSc7XG5cbi8qKlxuICogRGlzcGxheXMgYSBjb2xsZWN0aW9uIG9mIHNldHRpbmdzIGJveGVzIHRoYXQgYWxsb3cgYSB1c2VyIHRvIGNvbmZpZ3VyZSBhIHRlbXBsYXRlJ3MgYmVoYXZpb3IuXG4gKi9cbkBDb21wb25lbnQoe1xuICB0YWc6ICd2ZXJkb2NzLXRlbXBsYXRlLXByb3BlcnRpZXMnLFxuICBzdHlsZVVybDogJ3ZlcmRvY3MtdGVtcGxhdGUtcHJvcGVydGllcy5zY3NzJyxcbiAgc2hhZG93OiBmYWxzZSxcbn0pXG5leHBvcnQgY2xhc3MgVmVyZG9jc1RlbXBsYXRlUHJvcGVydGllcyB7XG4gIC8qKlxuICAgKiBUaGUgZW5kcG9pbnQgdG8gdXNlIHRvIGNvbW11bmljYXRlIHdpdGggVmVyZG9jcy4gSWYgbm90IHNldCwgdGhlIGRlZmF1bHQgZW5kcG9pbnQgd2lsbCBiZSB1c2VkLlxuICAgKi9cbiAgQFByb3AoKSBlbmRwb2ludDogVmVyZG9jc0VuZHBvaW50ID0gVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKTtcblxuICAvKipcbiAgICogVGhlIHRlbXBsYXRlIElEIHRvIGVkaXQuXG4gICAqL1xuICBAUHJvcCgpIHRlbXBsYXRlSWQ6IHN0cmluZyA9ICcnO1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSB1c2VyIGNhbmNlbHMgdGhlIGRpYWxvZy5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBjYW5jZWw6IEV2ZW50RW1pdHRlcjtcblxuICAvKipcbiAgICogRXZlbnQgZmlyZWQgd2hlbiB0aGUgdXNlciBjb21wbGV0ZXMgdGhlIHN0ZXAuXG4gICAqL1xuICBARXZlbnQoe2NvbXBvc2VkOiB0cnVlfSkgc2V0dGluZ3NVcGRhdGVkOiBFdmVudEVtaXR0ZXI8e25hbWU6IHN0cmluZzsgc2VuZFJlbWluZGVyczogYm9vbGVhbjsgZmlyc3RSZW1pbmRlckRheXM6IG51bWJlcjsgcmVtaW5kZXJEYXlzOiBudW1iZXJ9PjtcblxuICAvKipcbiAgICogRXZlbnQgZmlyZWQgaWYgYW4gZXJyb3Igb2NjdXJzLiBUaGUgZXZlbnQgZGV0YWlscyB3aWxsIGNvbnRhaW4gaW5mb3JtYXRpb24gYWJvdXQgdGhlIGVycm9yLiBNb3N0IGVycm9ycyB3aWxsXG4gICAqIHRlcm1pbmF0ZSB0aGUgcHJvY2VzcywgYW5kIHRoZSBjYWxsaW5nIGFwcGxpY2F0aW9uIHNob3VsZCBjb3JyZWN0IHRoZSBjb25kaXRpb24gYW5kIHJlLXJlbmRlciB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIHNka0Vycm9yOiBFdmVudEVtaXR0ZXI8U0RLRXJyb3I+O1xuXG4gIEBTdGF0ZSgpIHRlbXBsYXRlOiBJVGVtcGxhdGUgfCBudWxsID0gbnVsbDtcbiAgQFN0YXRlKCkgbmFtZTogc3RyaW5nID0gJyc7XG4gIEBTdGF0ZSgpIHZpc2liaWxpdHk6IHN0cmluZyA9ICcnO1xuICBAU3RhdGUoKSBzZW5kUmVtaW5kZXJzID0gZmFsc2U7XG4gIEBTdGF0ZSgpIGZpcnN0UmVtaW5kZXJEYXlzID0gJzEnO1xuICBAU3RhdGUoKSByZW1pbmRlckRheXMgPSAnMSc7XG5cbiAgYXN5bmMgY29tcG9uZW50V2lsbExvYWQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuZW5kcG9pbnQubG9hZFNlc3Npb24oKTtcblxuICAgICAgY29uc29sZS5sb2coYFtQUk9QRVJUSUVTXSBMb2FkaW5nIHRlbXBsYXRlICR7dGhpcy50ZW1wbGF0ZUlkfWApO1xuICAgICAgY29uc3QgdGVtcGxhdGUgPSBhd2FpdCBnZXRUZW1wbGF0ZSh0aGlzLmVuZHBvaW50LCB0aGlzLnRlbXBsYXRlSWQpO1xuICAgICAgaWYgKCF0ZW1wbGF0ZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnW1BSRVZJRVddIFVuYWJsZSB0byBsb2FkIHRlbXBsYXRlJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ1tQUk9QRVJUSUVTXSBHb3QgdGVtcGxhdGUnLCB0ZW1wbGF0ZSk7XG4gICAgICB0aGlzLnRlbXBsYXRlID0gdGVtcGxhdGU7XG4gICAgICBUZW1wbGF0ZVN0b3JlLnRlbXBsYXRlID0gdGVtcGxhdGU7XG4gICAgICB0aGlzLm5hbWUgPSB0ZW1wbGF0ZS5uYW1lO1xuICAgICAgdGhpcy5zZW5kUmVtaW5kZXJzID0gdGVtcGxhdGUucmVtaW5kZXJfaWQgIT09IG51bGw7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5sb2coJ1tQUk9QRVJUSUVTXSBFcnJvciBsb2FkaW5nIHRlbXBsYXRlJywgZSk7XG4gICAgICB0aGlzLnNka0Vycm9yPy5lbWl0KG5ldyBTREtFcnJvcihlLm1lc3NhZ2UsIGUucmVzcG9uc2U/LnN0YXR1cywgZS5yZXNwb25zZT8uZGF0YSkpO1xuICAgIH1cbiAgfVxuXG4gIGhhbmRsZU1lc3NhZ2VDaGFuZ2UoZTogYW55KSB7XG4gICAgY29uc29sZS5sb2coZSk7XG4gICAgLy8gdGhpcy5tZXNzYWdlID0gZS50YXJnZXQudmFsdWU7XG4gIH1cblxuICBoYW5kbGVDYW5jZWwoZSkge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgdGhpcy5jYW5jZWw/LmVtaXQoKTtcbiAgfVxuXG4gIGhhbmRsZVN1Ym1pdChlKSB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIGNvbnNvbGUubG9nKCduZXcnLCB7XG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICB2aXNpYmlsaXR5OiB0aGlzLnZpc2liaWxpdHksXG4gICAgICBmaXJzdFJlbWluZGVyRGF5czogK3RoaXMuZmlyc3RSZW1pbmRlckRheXMsXG4gICAgICByZW1pbmRlckRheXM6ICt0aGlzLnJlbWluZGVyRGF5cyxcbiAgICAgIHNlbmRSZW1pbmRlcnM6IHRoaXMuc2VuZFJlbWluZGVycyxcbiAgICB9KTtcbiAgICB0aGlzLnNldHRpbmdzVXBkYXRlZD8uZW1pdCh7XG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICBmaXJzdFJlbWluZGVyRGF5czogK3RoaXMuZmlyc3RSZW1pbmRlckRheXMsXG4gICAgICByZW1pbmRlckRheXM6ICt0aGlzLnJlbWluZGVyRGF5cyxcbiAgICAgIHNlbmRSZW1pbmRlcnM6IHRoaXMuc2VuZFJlbWluZGVycyxcbiAgICB9KTtcblxuICAgIC8vIHRoaXMuY29udGFjdFNlbGVjdGVkPy5lbWl0KHtcbiAgICAvLyAgIGRlbGVnYXRvcjogdGhpcy5kZWxlZ2F0b3IsXG4gICAgLy8gfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc29sZS5sb2coJ3ZhbHMnLCB7Zmlyc3RSZW1pbmRlckRheXM6IHRoaXMuZmlyc3RSZW1pbmRlckRheXMsIHJlbWluZGVyRGF5czogdGhpcy5yZW1pbmRlckRheXMsIG5hbWU6IHRoaXMubmFtZX0pO1xuICAgIHJldHVybiAoXG4gICAgICA8Zm9ybSBvblN1Ym1pdD17ZSA9PiBlLnByZXZlbnREZWZhdWx0KCl9IG9uQ2xpY2s9e2UgPT4gZS5zdG9wUHJvcGFnYXRpb24oKX0gYXV0b2NvbXBsZXRlPVwib2ZmXCI+XG4gICAgICAgIDxoNT5UZW1wbGF0ZSBOYW1lPC9oNT5cbiAgICAgICAgPGZpZWxkc2V0PlxuICAgICAgICAgIDx2ZXJkb2NzLXRleHQtaW5wdXRcbiAgICAgICAgICAgIHZhbHVlPXt0aGlzLm5hbWV9XG4gICAgICAgICAgICBhdXRvY29tcGxldGU9XCJvZmZcIlxuICAgICAgICAgICAgb25JbnB1dD17KGU6IGFueSkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLm5hbWUgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9maWVsZHNldD5cblxuICAgICAgICA8aDU+UmVtaW5kZXJzPC9oNT5cbiAgICAgICAgPGZpZWxkc2V0PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1yb3dcIj5cbiAgICAgICAgICAgIDxsYWJlbD5TZW5kIEF1dG9tYXRpYyBSZW1pbmRlcnM8L2xhYmVsPlxuICAgICAgICAgICAgPHZlcmRvY3MtY2hlY2tib3ggbmFtZT1cImF1dG9tYXRpYy1yZW1pbmRlcnNcIiBjaGVja2VkPXt0aGlzLnNlbmRSZW1pbmRlcnN9IHZhbHVlPVwib25cIiBvblNlbGVjdGVkPXtlID0+ICh0aGlzLnNlbmRSZW1pbmRlcnMgPSBlLmRldGFpbC52YWx1ZSA9PT0gJ29uJyl9IC8+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtcm93XCI+XG4gICAgICAgICAgICA8bGFiZWw+RGF5cyBCZWZvcmUgRmlyc3QgUmVtaW5kZXI8L2xhYmVsPlxuICAgICAgICAgICAgPHZlcmRvY3MtdGV4dC1pbnB1dFxuICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5maXJzdFJlbWluZGVyRGF5c31cbiAgICAgICAgICAgICAgb25JbnB1dD17KGU6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZmlyc3RSZW1pbmRlckRheXMgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0LXJvd1wiPlxuICAgICAgICAgICAgPGxhYmVsPkRheXMgQmV0d2VlbiBSZW1pbmRlcnM8L2xhYmVsPlxuICAgICAgICAgICAgPHZlcmRvY3MtdGV4dC1pbnB1dFxuICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5yZW1pbmRlckRheXN9XG4gICAgICAgICAgICAgIG9uSW5wdXQ9eyhlOiBhbnkpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmZpcnN0UmVtaW5kZXJEYXlzID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2ZpZWxkc2V0PlxuXG4gICAgICAgIDxoNT5UZW1wbGF0ZSBWaXNpYmlsaXR5PC9oNT5cbiAgICAgICAgPGZpZWxkc2V0PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1yb3dcIj5cbiAgICAgICAgICAgIDx2ZXJkb2NzLXJhZGlvLWJ1dHRvbiBuYW1lPVwidmlzaWJpbGl0eVwiIGNoZWNrZWQ9e3RydWV9IHZhbHVlPVwicHJpdmF0ZVwiIC8+XG4gICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInZlcmRvY3MtcmFkaW8tYnV0dG9uLXZpc2liaWxpdHktcHJpdmF0ZVwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGl0bGVcIj5Qcml2YXRlPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXNjcmlwdGlvblwiPk9ubHkgeW91IGNhbiBzaGFyZSBhbmQgdXNlIHRoaXMgdGVtcGxhdGU8L2Rpdj5cbiAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLXJvd1wiPlxuICAgICAgICAgICAgPHZlcmRvY3MtcmFkaW8tYnV0dG9uIG5hbWU9XCJ2aXNpYmlsaXR5XCIgY2hlY2tlZD17dHJ1ZX0gdmFsdWU9XCJzaGFyZWRcIiAvPlxuICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJ2ZXJkb2NzLXJhZGlvLWJ1dHRvbi12aXNpYmlsaXR5LXNoYXJlZFwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGl0bGVcIj5TaGFyZWQgdG8geW91ciBvcmdhbml6YXRpb248L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRlc2NyaXB0aW9uXCI+R2l2ZSBhY2Nlc3MgdG8geW91ciBvcmdhbml6YXRpb24gdG8gc2hhcmUgYW5kIHVzZSB0aGlzIHRlbXBsYXRlPC9kaXY+XG4gICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1yb3dcIj5cbiAgICAgICAgICAgIDx2ZXJkb2NzLXJhZGlvLWJ1dHRvbiBuYW1lPVwidmlzaWJpbGl0eVwiIGNoZWNrZWQ9e3RydWV9IHZhbHVlPVwic2hhcmVkX3B1YmxpY1wiIC8+XG4gICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInZlcmRvY3MtcmFkaW8tYnV0dG9uLXZpc2liaWxpdHktc2hhcmVkX3B1YmxpY1wiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGl0bGVcIj5TaGFyZWQgdG8geW91ciBvcmdhbml6YXRpb24gYW5kIFB1YmxpYzwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGVzY3JpcHRpb25cIj5HaXZlIGFjY2VzcyB0byB5b3VyIG9yZ2FuaXphdGlvbiB0byBzaGFyZSB0aGlzIHRlbXBsYXRlLCBhbmQgYW55b25lIG9uIHRoZSBXZWIgY2FuIGZpbmQgYW5kIHVzZSB0aGlzIHRlbXBsYXRlPC9kaXY+XG4gICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1yb3dcIj5cbiAgICAgICAgICAgIDx2ZXJkb2NzLXJhZGlvLWJ1dHRvbiBuYW1lPVwidmlzaWJpbGl0eVwiIGNoZWNrZWQ9e3RydWV9IHZhbHVlPVwicHVibGljXCIgLz5cbiAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwidmVyZG9jcy1yYWRpby1idXR0b24tdmlzaWJpbGl0eS1wdWJsaWNcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpdGxlXCI+UHVibGljPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXNjcmlwdGlvblwiPkFueW9uZSBvbiB0aGUgV2ViIGNhbiBmaW5kIGFuZCB1c2UgdGhpcyB0ZW1wbGF0ZTwvZGl2PlxuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9maWVsZHNldD5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uc1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LWZpbGxcIiAvPlxuXG4gICAgICAgICAgPHZlcmRvY3MtYnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lXCIgbGFiZWw9XCJDYW5jZWxcIiBzaXplPVwic21hbGxcIiBvbkNsaWNrPXtlID0+IHRoaXMuaGFuZGxlQ2FuY2VsKGUpfSAvPlxuICAgICAgICAgIDx2ZXJkb2NzLWJ1dHRvbiBsYWJlbD1cIk9LXCIgc2l6ZT1cInNtYWxsXCIgb25DbGljaz17ZSA9PiB0aGlzLmhhbmRsZVN1Ym1pdChlKX0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvcm0+XG4gICAgKTtcbiAgfVxufVxuIiwiQGltcG9ydCAnLi4vLi4vLi4vdGhlbWUuc2Nzcyc7XG5cbnZlcmRvY3MtdGVtcGxhdGUtcmVjaXBpZW50cyB7XG4gIGZvbnQtZmFtaWx5OiAkdmVyZG9jcy1wcmltYXJ5LWZvbnQ7XG5cbiAgZm9ybSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHZlcmRvY3MtZ3JleS00O1xuICAgIHBhZGRpbmc6IDEycHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgaDUge1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBjb2xvcjogJHZlcmRvY3MtZGVlcC1ibHVlO1xuICAgICAgbWFyZ2luOiAwIDAgMTBweCAwO1xuICAgIH1cblxuICAgIC5wYXJ0aWNpcGFudHMge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cblxuICAgIC8vIFRvIGF2b2lkIHRoZSBuZWVkIHRvIGNvbXB1dGUgdGhpbmdzIGxpa2UgaGVpZ2h0cywgdGhpcyBsYXllciBpcyBzaW1wbHkgZGlzcGxheWVkIFwib24gdG9wXCIgb2YgYWxsIHRoZSBsZXZlbCByb3dzLiBJdHNcbiAgICAvLyBiYWNrZ3JvdW5kIG9ic2N1cmVzIHRoZSBob3Jpem9udGFsIGxpbmVzLlxuICAgIC5sZWZ0LWxpbmUge1xuICAgICAgdG9wOiAzMnB4O1xuICAgICAgbGVmdDogMjBweDtcbiAgICAgIHotaW5kZXg6IDE7XG4gICAgICB3aWR0aDogMTJweDtcbiAgICAgIGJvdHRvbTogMzBweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgICBib3JkZXItbGVmdDogM3B4IGRvdHRlZCAjOWI5YjliO1xuICAgIH1cblxuICAgIC5yb3cge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGNvbHVtbi1nYXA6IDA7XG4gICAgICBtYXJnaW4tbGVmdDogNTBweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBwYWRkaW5nOiA2cHggMCA0cHggMDtcblxuICAgICAgLmljb24ge1xuICAgICAgICB0b3A6IDE0cHg7XG4gICAgICAgIHotaW5kZXg6IDI7XG4gICAgICAgIGxlZnQ6IC00MHB4O1xuICAgICAgICB3aWR0aDogMjRweDtcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG5cbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAjMDAwMDAwODk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLnNlbmRlciB7XG4gICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBwYWRkaW5nOiAwIDVweCAwIDE1cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgICAgICBtYXJnaW46IDAgMCAwIDE0cHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR2ZXJkb2NzLWdyZXktMztcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHZlcmRvY3MtZ3JleS0yO1xuICAgICAgfVxuXG4gICAgICAuY29tcGxldGUge1xuICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgcGFkZGluZzogMCAxNXB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMzBweDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICAgICAgbWFyZ2luOiAwIDAgMCAxNHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdmVyZG9jcy1ncmV5LTM7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR2ZXJkb2NzLWdyZXktMjtcbiAgICAgIH1cblxuICAgICAgLmxhYmVsIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIG1hcmdpbi1yaWdodDogNnB4O1xuICAgICAgICBjb2xvcjogJHZlcmRvY3MtZ3JleS0xO1xuICAgICAgfVxuXG4gICAgICAuc2V0dGluZ3MtYnV0dG9uIHtcbiAgICAgICAgbWFyZ2luOiA0cHggMCAwIDlweDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgfVxuXG4gICAgICAucmVjaXBpZW50IHtcbiAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBwYWRkaW5nOiAwIDVweCAwIDE1cHg7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR2ZXJkb2NzLWdyZXktMjtcbiAgICAgIH1cblxuICAgICAgLmRyb3B6b25lIHtcbiAgICAgICAgd2lkdGg6IDE0cHg7XG4gICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgLy92aXNpYmlsaXR5OiBoaWRkZW47XG5cbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAjY2NjY2NjO1xuICAgICAgICB9XG5cbiAgICAgICAgJi52aXNpYmxlIHtcbiAgICAgICAgICBtYXJnaW46IDAgN3B4O1xuICAgICAgICAgIC8vdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICAgICAgfVxuXG4gICAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjNjU0ZGNiN2Y7XG4gICAgICAgICAgYm9yZGVyOiAxcHggZGFzaGVkICM2NTRkY2I7XG5cbiAgICAgICAgICBzdmcge1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGxhYmVsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIG1hcmdpbjogMCAwIDRweCAwO1xuICAgICAgY29sb3I6ICR2ZXJkb2NzLWJnLTQ7XG4gICAgfVxuXG4gICAgaW5wdXQge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgcGFkZGluZzogM3B4IDZweCAzcHggMDtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICR2ZXJkb2NzLWRhcmstYmx1ZTtcblxuICAgICAgJjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmJ1dHRvbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgY29sdW1uLWdhcDogOHB4O1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcblxuICAgIC5mbGV4LWZpbGwge1xuICAgICAgZmxleDogMTtcbiAgICB9XG4gIH1cblxuICA6OnBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogJHZlcmRvY3MtYmctMjtcbiAgfVxufVxuIiwiaW1wb3J0IGludGVyYWN0IGZyb20gJ2ludGVyYWN0anMnO1xuaW1wb3J0IHtWZXJkb2NzRW5kcG9pbnR9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkayc7XG5pbXBvcnQge2dldFJHQkF9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9VdGlscy9Db2xvcnMnO1xuaW1wb3J0IHtJUm9sZSwgVGVtcGxhdGVTZW5kZXJUeXBlc30gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9UeXBlcyc7XG5pbXBvcnQge0NvbXBvbmVudCwgaCwgRXZlbnQsIEV2ZW50RW1pdHRlciwgRnJhZ21lbnQsIFByb3AsIFN0YXRlfSBmcm9tICdAc3RlbmNpbC9jb3JlJztcbmltcG9ydCB7Z2V0Um9sZUluZGV4fSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlscyc7XG5cbmNvbnN0IGFycmF5TW92ZSA9IChhcnI6IGFueVtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKSA9PiB7XG4gIGNvbnN0IG5ld0FyciA9IFsuLi5hcnJdO1xuICBuZXdBcnIuc3BsaWNlKHRvSW5kZXgsIDAsIG5ld0Fyci5zcGxpY2UoZnJvbUluZGV4LCAxKVswXSk7XG4gIHJldHVybiBuZXdBcnI7XG59O1xuXG50eXBlIFRBbm5vdGF0ZWRSb2xlID0gSVJvbGUgJiB7b3JkZXI6IG51bWJlcn07XG5cbmNvbnN0IHNlbmRlckxhYmVsczogUmVjb3JkPFRlbXBsYXRlU2VuZGVyVHlwZXMsIHN0cmluZz4gPSB7XG4gIFtUZW1wbGF0ZVNlbmRlclR5cGVzLkVWRVJZT05FXTogJ0V2ZXJ5b25lJyxcbiAgW1RlbXBsYXRlU2VuZGVyVHlwZXMuRVZFUllPTkVfQVNfQ1JFQVRPUl06ICdFdmVyeW9uZSBhcyBNZScsXG4gIFtUZW1wbGF0ZVNlbmRlclR5cGVzLk9SR0FOSVpBVElPTl9NRU1CRVJdOiAnT3JnYW5pemF0aW9uIG1lbWJlcicsXG4gIFtUZW1wbGF0ZVNlbmRlclR5cGVzLk9SR0FOSVpBVElPTl9NRU1CRVJfQVNfQ1JFQVRPUl06ICdPcmdhbml6YXRpb24gTWVtYmVyIGFzIE1lJyxcbiAgW1RlbXBsYXRlU2VuZGVyVHlwZXMuQ1JFQVRPUl06ICdNZScsXG59O1xuXG5jb25zdCBzZXR0aW5nc0ljb24gPVxuICAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjBcIiB3aWR0aD1cIjIwXCI+PHBhdGggZD1cIm04LjAyMSAxNy45MTctLjMxMy0yLjVxLS4yNy0uMTI1LS42MjUtLjMzNC0uMzU0LS4yMDgtLjYyNS0uMzk1bC0yLjMxMi45NzktMS45NzktMy40MzggMS45NzktMS41cS0uMDIxLS4xNjctLjAzMS0uMzY0LS4wMTEtLjE5OC0uMDExLS4zNjUgMC0uMTQ2LjAxMS0uMzQ0LjAxLS4xOTguMDMxLS4zODVsLTEuOTc5LTEuNSAxLjk3OS0zLjQxNyAyLjMxMi45NThxLjI3MS0uMTg3LjYxNS0uMzg1dC42MzUtLjM0NGwuMzEzLTIuNWgzLjk1OGwuMzEzIDIuNXEuMzEyLjE2Ny42MjUuMzQ0LjMxMi4xNzcuNjA0LjM4NWwyLjMzMy0uOTU4IDEuOTc5IDMuNDE3LTEuOTc5IDEuNTIxcS4wMjEuMTg3LjAyMS4zNjRWMTBxMCAuMTQ2LS4wMS4zMzMtLjAxMS4xODgtLjAxMS4zOTZsMS45NTggMS41LTEuOTc5IDMuNDM4LTIuMzEyLS45NzlxLS4yOTIuMjA4LS42MTUuMzk1LS4zMjMuMTg4LS42MTQuMzM0bC0uMzEzIDIuNVptMS45MzctNS4zNTVxMS4wNjMgMCAxLjgxMy0uNzV0Ljc1LTEuODEycTAtMS4wNjItLjc1LTEuODEydC0xLjgxMy0uNzVxLTEuMDQxIDAtMS44MDIuNzUtLjc2Ljc1LS43NiAxLjgxMnQuNzYgMS44MTJxLjc2MS43NSAxLjgwMi43NVptMC0xLjMzM3EtLjUgMC0uODY0LS4zNjQtLjM2NS0uMzY1LS4zNjUtLjg2NXQuMzY1LS44NjVxLjM2NC0uMzY0Ljg2NC0uMzY0dC44NjUuMzY0cS4zNjUuMzY1LjM2NS44NjV0LS4zNjUuODY1cS0uMzY1LjM2NC0uODY1LjM2NFpNMTAuMDIxIDEwWm0tLjg1NCA2LjU4M2gxLjY2NmwuMjUtMi4xODdxLjYwNS0uMTY3IDEuMTM2LS40OS41MzEtLjMyMyAxLjAzMS0uODAybDIuMDIxLjg3NS44NTQtMS4zNzUtMS43OTItMS4zNTRxLjEwNS0uMzMzLjEzNi0uNjM1LjAzMS0uMzAzLjAzMS0uNjE1IDAtLjI5Mi0uMDMxLS41NzMtLjAzMS0uMjgxLS4xMTUtLjYzNWwxLjc5Mi0xLjM5Ni0uODM0LTEuMzc1LTIuMDYyLjg3NXEtLjQzOC0uNDM4LTEuMDIxLS43ODEtLjU4My0uMzQ0LTEuMTI1LS40OWwtLjI3MS0yLjIwOEg5LjE2N2wtLjI3MSAyLjIwOHEtLjU4NC4xNDYtMS4xMjUuNDU4LS41NDIuMzEzLTEuMDQyLjc5MmwtMi4wMjEtLjg1NC0uODMzIDEuMzc1IDEuNzUgMS4zNTRxLS4wODMuMzMzLS4xMjUuNjQ2LS4wNDIuMzEyLS4wNDIuNjA0dC4wNDIuNTk0cS4wNDIuMzAyLjEyNS42MzVsLTEuNzUgMS4zNzUuODMzIDEuMzc1IDIuMDIxLS44NTRxLjQ3OS40NTggMS4wMjEuNzcxLjU0Mi4zMTIgMS4xNDYuNDc5WlwiLz48L3N2Zz4nO1xuXG5jb25zdCBzdGFydEljb24gPVxuICAnPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB0YWJpbmRleD1cIi0xXCI+PHBhdGggZD1cIk0yIDEyQzIgNi40OCA2LjQ4IDIgMTIgMnMxMCA0LjQ4IDEwIDEwLTQuNDggMTAtMTAgMTBTMiAxNy41MiAyIDEyem0xMCA2YzMuMzEgMCA2LTIuNjkgNi02cy0yLjY5LTYtNi02LTYgMi42OS02IDYgMi42OSA2IDYgNnpcIj48L3BhdGg+PC9zdmc+JztcblxuY29uc3Qgc3RlcEljb24gPVxuICAnPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB0YWJpbmRleD1cIi0xXCI+PHBhdGggZD1cIk0xMiAyQzguMTMgMiA1IDUuMTMgNSA5YzAgNS4yNSA3IDEzIDcgMTNzNy03Ljc1IDctMTNjMC0zLjg3LTMuMTMtNy03LTd6bTAgOS41Yy0xLjM4IDAtMi41LTEuMTItMi41LTIuNXMxLjEyLTIuNSAyLjUtMi41IDIuNSAxLjEyIDIuNSAyLjUtMS4xMiAyLjUtMi41IDIuNXpcIj48L3BhdGg+PC9zdmc+JztcblxuY29uc3QgZG9uZUljb24gPVxuICAnPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB0YWJpbmRleD1cIi0xXCI+PHBhdGggZD1cIm0xOCA3LTEuNDEtMS40MS02LjM0IDYuMzQgMS40MSAxLjQxTDE4IDd6bTQuMjQtMS40MUwxMS42NiAxNi4xNyA3LjQ4IDEybC0xLjQxIDEuNDFMMTEuNjYgMTlsMTItMTItMS40Mi0xLjQxek0uNDEgMTMuNDEgNiAxOWwxLjQxLTEuNDFMMS44MyAxMiAuNDEgMTMuNDF6XCI+PC9wYXRoPjwvc3ZnPic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUNvbnRhY3RTZWFyY2hFdmVudCB7XG4gIC8vIFRoZSB0ZXh0IHRoZSB1c2VyIGhhcyBlbnRlcmVkIGluIHRoZSBzZWFyY2ggZmllbGRcbiAgcXVlcnk6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJQ29udGFjdFNlbGVjdEV2ZW50IHtcbiAgZnVsbF9uYW1lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgZGVsZWdhdG9yOiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElFbWFpbENvbnRhY3Qge1xuICAvLyBPcHRpb25hbCBidXQgcmVjb21tZW5kZWQuIEFuIGludGVybmFsIGlkZW50aWZpZXIgdXNlZCB0byBpZGVudGlmeSB0aGUgY29udGFjdCBpbiB0aGUgY2FsbGluZyBzeXN0ZW0uXG4gIGlkPzogYW55O1xuXG4gIC8vIFRoZSB1c2VyJ3MgYXZhdGFyLiBJZiBub3Qgc2V0LCBhIHBsYWNlaG9sZGVyIHdpbGwgYmUgc2hvd24uIFRvIGhpZGUgYXZhdGFycyBlbnRpcmVseSwgdXNlIENTUyB0byBzZXRcbiAgLy8gYHZlcmRvY3MtY29udGFjdC1waWNrZXIgLmF2YXRhciB7IGRpc3BsYXk6IG5vbmU7IH1gXG4gIGF2YXRhcj86IHN0cmluZztcblxuICAvLyBUaGUgcmVjaXBpZW50J3MgbmFtZSwgYXMgaXQgc2hvdWxkIGJlIGRpc3BsYXllZCB0byB0aGUgdXNlci5cbiAgbmFtZTogc3RyaW5nO1xuXG4gIC8vIFRoZSBlbWFpbCBhZGRyZXNzIGZvciB0aGUgY29udGFjdC5cbiAgZW1haWw6IHN0cmluZztcblxuICAvLyBBbiBvcHRpb25hbCBwaG9uZSBudW1iZXIgZm9yIHRoZSBjb250YWN0LiBUaGlzIG51bWJlciBtdXN0IGJlIGFibGUgU01TIG1lc3NhZ2VzLiBJZiBib3RoIGVtYWlsIGFuZCBwaG9uZSBhcmUgcHJvdmlkZWQsXG4gIC8vIG5vdGlmaWNhdGlvbnMgd2lsbCBiZSBzZW50IHRvIGJvdGggbG9jYXRpb25zLlxuICBwaG9uZT86IHN0cmluZztcblxuICBba2V5OiBzdHJpbmddOiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVBob25lQ29udGFjdCB7XG4gIC8vIE9wdGlvbmFsIGJ1dCByZWNvbW1lbmRlZC4gQW4gaW50ZXJuYWwgaWRlbnRpZmllciB1c2VkIHRvIGlkZW50aWZ5IHRoZSBjb250YWN0IGluIHRoZSBjYWxsaW5nIHN5c3RlbS5cbiAgaWQ/OiBhbnk7XG5cbiAgLy8gVGhlIHVzZXIncyBhdmF0YXIuIElmIG5vdCBzZXQsIGEgcGxhY2Vob2xkZXIgd2lsbCBiZSBzaG93bi4gVG8gaGlkZSBhdmF0YXJzIGVudGlyZWx5LCB1c2UgQ1NTIHRvIHNldFxuICAvLyBgdmVyZG9jcy1jb250YWN0LXBpY2tlciAuYXZhdGFyIHsgZGlzcGxheTogbm9uZTsgfWBcbiAgYXZhdGFyPzogc3RyaW5nO1xuXG4gIC8vIFRoZSByZWNpcGllbnQncyBuYW1lLCBhcyBpdCBzaG91bGQgYmUgZGlzcGxheWVkIHRvIHRoZSB1c2VyLlxuICBuYW1lOiBzdHJpbmc7XG5cbiAgLy8gVGhlIGVtYWlsIGFkZHJlc3MgZm9yIHRoZSBjb250YWN0LlxuICBlbWFpbD86IHN0cmluZztcblxuICAvLyBBbiBvcHRpb25hbCBwaG9uZSBudW1iZXIgZm9yIHRoZSBjb250YWN0LiBUaGlzIG51bWJlciBtdXN0IGJlIGFibGUgU01TIG1lc3NhZ2VzLiBJZiBib3RoIGVtYWlsIGFuZCBwaG9uZSBhcmUgcHJvdmlkZWQsXG4gIC8vIG5vdGlmaWNhdGlvbnMgd2lsbCBiZSBzZW50IHRvIGJvdGggbG9jYXRpb25zLlxuICBwaG9uZTogc3RyaW5nO1xuXG4gIFtrZXk6IHN0cmluZ106IGFueTtcbn1cblxuLyoqXG4gKiBEaXNwbGF5cyBhIGNvbnRhY3QgcGlja2VyIHN1aXRhYmxlIGZvciBmaWxsaW5nIG91dCBSZWNpcGllbnQgb2JqZWN0cyB3aGVuIHNlbmRpbmcgRG9jdW1lbnRzLlxuICpcbiAqIFRoaXMgcGlja2VyIGNhbiBhbHNvIGJlIGludGVncmF0ZWQgd2l0aCBhIGJhY2tlbmQgdG8gcHJvdmlkZSBjb250YWN0IGxpc3QgLyBzdWdnZXN0aW9uIC8gYWRkcmVzcy1ib29rIHN0eWxlIGJlaGF2aW9yLiBBcyB0aGVcbiAqIHVzZXIgaW50ZXJhY3RzIHdpdGggdGhlIGNvbXBvbmVudCwgdGhlIHRleHQgZW50ZXJlZCBpbiB0aGUgbmFtZSBmaWVsZCBpcyBzZW50IGJhY2sgdG8gdGhlIHBhcmVudCB2aWEgdGhlIGBzZWFyY2hDb250YWN0c2AgZXZlbnQuXG4gKiBUaGUgcGFyZW50IGNhbiB1c2UgdGhhdCB0ZXh0IGFzIGEgcXVlcnkgc3RyaW5nIHRvIGNhbGwgYSBiYWNrZW5kIHRvIG9idGFpbiBhcHByb3ByaWF0ZSBjb250YWN0cyB0byBzaG93LiBUaGlzIGxpc3QgbWF5IGFsc28gYmVcbiAqIGhhcmQtY29kZWQgYWhlYWQgb2YgdGltZSB0byBwcm92aWRlIHRoZSB1c2VyIHdpdGggc21hcnQgc3VnZ2VzdGlvbnMgb24gaW5pdGlhbCBkaXNwbGF5LCBzdWNoIGFzIFwiUmVjZW50bHkgVXNlZFwiIGNvbnRhY3RzLCBvclxuICogdG8gYWx3YXlzIGRpc3BsYXkgdGhlIHVzZXIncyBvd24gY29udGFjdCByZWNvcmQuXG4gKi9cbkBDb21wb25lbnQoe1xuICB0YWc6ICd2ZXJkb2NzLXRlbXBsYXRlLXJlY2lwaWVudHMnLFxuICBzdHlsZVVybDogJ3ZlcmRvY3MtdGVtcGxhdGUtcmVjaXBpZW50cy5zY3NzJyxcbiAgc2hhZG93OiBmYWxzZSxcbn0pXG5leHBvcnQgY2xhc3MgVmVyZG9jc1RlbXBsYXRlUmVjaXBpZW50cyB7XG4gIC8qKlxuICAgKiBUaGUgZW5kcG9pbnQgdG8gdXNlIHRvIGNvbW11bmljYXRlIHdpdGggVmVyZG9jcy4gSWYgbm90IHNldCwgdGhlIGRlZmF1bHQgZW5kcG9pbnQgd2lsbCBiZSB1c2VkLlxuICAgKi9cbiAgQFByb3AoKSBlbmRwb2ludDogVmVyZG9jc0VuZHBvaW50ID0gVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKTtcblxuICAvKipcbiAgICogVGhlIHJvbGUgdGhhdCB0aGlzIGNvbnRhY3Qgd2lsbCBiZSBhc3NpZ25lZCB0by5cbiAgICovXG4gIEBQcm9wKCkgdGVtcGxhdGVSb2xlOiBJUm9sZSB8IG51bGwgPSBudWxsO1xuXG4gIC8qKlxuICAgKiBJZiBzZXQsIHN1Z2dlc3Rpb25zIHdpbGwgYmUgZGlzcGxheWVkIGluIGEgZHJvcC1kb3duIGxpc3QgdG8gdGhlIHVzZXIuIEl0IGlzIHJlY29tbWVuZGVkIHRoYXQgdGhlIG51bWJlclxuICAgKiBvZiBzdWdnZXN0aW9ucyBiZSBsaW1pdGVkIHRvIHRoZSA1IGJlc3QgbWF0Y2hpbmcgcmVjb3Jkcy5cbiAgICovXG4gIEBQcm9wKCkgY29udGFjdFN1Z2dlc3Rpb25zOiAoSUVtYWlsQ29udGFjdCB8IElQaG9uZUNvbnRhY3QpW10gPSBbXTtcblxuICAvKipcbiAgICogRXZlbnQgZmlyZWQgd2hlbiB0aGUgdXNlciBlbnRlcnMgdGV4dCBpbiB0aGUgc2VhcmNoIGZpZWxkLiBUaGUgY2FsbGluZyBhcHBsaWNhdGlvbiBtYXkgdXNlIHRoaXMgdG8gdXBkYXRlXG4gICAqIHRoZSBgY29udGFjdFN1Z2dlc3Rpb25zYCBwcm9wZXJ0eS5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBzZWFyY2hDb250YWN0czogRXZlbnRFbWl0dGVyPElDb250YWN0U2VhcmNoRXZlbnQ+O1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSB1c2VyIGNhbmNlbHMgdGhlIGRpYWxvZy5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBjYW5jZWw6IEV2ZW50RW1pdHRlcjtcblxuICAvKipcbiAgICogRXZlbnQgZmlyZWQgd2hlbiB0aGUgdXNlciBjb21wbGV0ZXMgdGhlIHN0ZXAuXG4gICAqL1xuICBARXZlbnQoe2NvbXBvc2VkOiB0cnVlfSkgc2V0dGluZ3NVcGRhdGVkOiBFdmVudEVtaXR0ZXI7XG5cbiAgLyoqXG4gICAqIEV2ZW50IGZpcmVkIHdoZW4gdGhlIHVzZXIgY2hhbmdlcyB0aGUgdHlwZS5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBjb250YWN0U2VsZWN0ZWQ6IEV2ZW50RW1pdHRlcjxJQ29udGFjdFNlbGVjdEV2ZW50PjtcblxuICBAU3RhdGUoKSBuYW1lOiBzdHJpbmc7XG4gIEBTdGF0ZSgpIGVtYWlsOiBzdHJpbmc7XG4gIEBTdGF0ZSgpIHBob25lOiBzdHJpbmc7XG4gIEBTdGF0ZSgpIG1lc3NhZ2U6IHN0cmluZztcbiAgQFN0YXRlKCkgc2hvd1N1Z2dlc3Rpb25zOiBib29sZWFuID0gZmFsc2U7XG4gIEBTdGF0ZSgpIHNob3dNZXNzYWdlOiBib29sZWFuID0gZmFsc2U7XG4gIEBTdGF0ZSgpIGRlbGVnYXRvcjogYm9vbGVhbiA9IGZhbHNlO1xuICBAU3RhdGUoKSBzZW5kZXI6IFRlbXBsYXRlU2VuZGVyVHlwZXMgPSBUZW1wbGF0ZVNlbmRlclR5cGVzLkNSRUFUT1I7XG4gIEBTdGF0ZSgpIHNob3dpbmdTZW5kZXJEaWFsb2cgPSBmYWxzZTtcbiAgQFN0YXRlKCkgb3JkZXJlZFJvbGVzOiBUQW5ub3RhdGVkUm9sZVtdID0gW107XG5cbiAgc2VxdWVuY2VzOiBudW1iZXJbXSA9IFtdO1xuICByb2xlc0F0U2VxdWVuY2U6IFJlY29yZDxudW1iZXIsIFRBbm5vdGF0ZWRSb2xlW10+ID0ge307XG5cbiAgY29tcG9uZW50V2lsbExvYWQoKSB7XG4gICAgaWYgKHRoaXMudGVtcGxhdGVSb2xlKSB7XG4gICAgICB0aGlzLm5hbWUgPSB0aGlzLnRlbXBsYXRlUm9sZS5mdWxsX25hbWUgfHwgJyc7XG4gICAgICB0aGlzLmVtYWlsID0gdGhpcy50ZW1wbGF0ZVJvbGUuZW1haWwgfHwgJyc7XG4gICAgICB0aGlzLnBob25lID0gdGhpcy50ZW1wbGF0ZVJvbGUucGhvbmUgfHwgJyc7XG4gICAgICB0aGlzLmRlbGVnYXRvciA9IHRoaXMudGVtcGxhdGVSb2xlLmRlbGVnYXRvciB8fCBmYWxzZTtcbiAgICAgIHRoaXMubWVzc2FnZSA9IHRoaXMudGVtcGxhdGVSb2xlLm1lc3NhZ2UgfHwgJyc7XG4gICAgICB0aGlzLnNob3dNZXNzYWdlID0gdGhpcy5tZXNzYWdlICE9PSAnJztcbiAgICB9XG5cbiAgICB0aGlzLm9yZGVyZWRSb2xlcyA9IFtcbiAgICAgIHtcbiAgICAgICAgb3JkZXI6IDAsXG4gICAgICAgIHRlbXBsYXRlX2lkOiAnOTUxMDE2YjAtYzVlZi00NTBkLWI2MjgtOWEwYzViODRiMTYzJyxcbiAgICAgICAgbmFtZTogJ1NlbGxlciAxJyxcbiAgICAgICAgZnVsbF9uYW1lOiAnJyxcbiAgICAgICAgZW1haWw6ICcnLFxuICAgICAgICB0eXBlOiAnc2lnbmVyJyxcbiAgICAgICAgc2VxdWVuY2U6IDEsXG4gICAgICAgIGZpZWxkczogW10sXG4gICAgICAgIGRlbGVnYXRvcjogZmFsc2UsXG4gICAgICAgIHBob25lOiAnJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG9yZGVyOiAxLFxuICAgICAgICB0ZW1wbGF0ZV9pZDogJzk1MTAxNmIwLWM1ZWYtNDUwZC1iNjI4LTlhMGM1Yjg0YjE2MycsXG4gICAgICAgIG5hbWU6ICdTZWxsZXIgMicsXG4gICAgICAgIGZ1bGxfbmFtZTogJycsXG4gICAgICAgIGVtYWlsOiAnJyxcbiAgICAgICAgdHlwZTogJ3NpZ25lcicsXG4gICAgICAgIHNlcXVlbmNlOiAxLFxuICAgICAgICBmaWVsZHM6IFtdLFxuICAgICAgICBkZWxlZ2F0b3I6IGZhbHNlLFxuICAgICAgICBwaG9uZTogJycsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBvcmRlcjogMixcbiAgICAgICAgdGVtcGxhdGVfaWQ6ICc5NTEwMTZiMC1jNWVmLTQ1MGQtYjYyOC05YTBjNWI4NGIxNjMnLFxuICAgICAgICBuYW1lOiAnQnV5ZXIgMScsXG4gICAgICAgIGZ1bGxfbmFtZTogJycsXG4gICAgICAgIGVtYWlsOiAnJyxcbiAgICAgICAgdHlwZTogJ3NpZ25lcicsXG4gICAgICAgIHNlcXVlbmNlOiAyLFxuICAgICAgICBmaWVsZHM6IFtdLFxuICAgICAgICBkZWxlZ2F0b3I6IGZhbHNlLFxuICAgICAgICBwaG9uZTogJycsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBvcmRlcjogMyxcbiAgICAgICAgdGVtcGxhdGVfaWQ6ICc5NTEwMTZiMC1jNWVmLTQ1MGQtYjYyOC05YTBjNWI4NGIxNjMnLFxuICAgICAgICBuYW1lOiAnQnV5ZXIgMicsXG4gICAgICAgIGZ1bGxfbmFtZTogJycsXG4gICAgICAgIGVtYWlsOiAnJyxcbiAgICAgICAgdHlwZTogJ3NpZ25lcicsXG4gICAgICAgIHNlcXVlbmNlOiAyLFxuICAgICAgICBmaWVsZHM6IFtdLFxuICAgICAgICBkZWxlZ2F0b3I6IGZhbHNlLFxuICAgICAgICBwaG9uZTogJycsXG4gICAgICB9LFxuICAgIF07XG5cbiAgICB0aGlzLmNvbXB1dGVSb2xlc0J5U2VxdWVuY2UoKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZFJlbmRlcigpIHtcbiAgICBpbnRlcmFjdC5keW5hbWljRHJvcCh0cnVlKTtcbiAgICBpbnRlcmFjdCgnLnJlY2lwaWVudCcpLmRyYWdnYWJsZSh7XG4gICAgICBsaXN0ZW5lcnM6IHtcbiAgICAgICAgc3RhcnQoZXZlbnQpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnZHJhZyBzdGFydCcsIGV2ZW50LnR5cGUsIGV2ZW50LnRhcmdldCk7XG4gICAgICAgIH0sXG4gICAgICAgIG1vdmUoZXZlbnQpIHtcbiAgICAgICAgICBjb25zdCBvbGRYID0gKyhldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKCdwb3NYJykgfHwgMCk7XG4gICAgICAgICAgY29uc3Qgb2xkWSA9ICsoZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZSgncG9zWScpIHx8IDApO1xuICAgICAgICAgIGNvbnN0IG5ld1ggPSBldmVudC5keCArIG9sZFg7XG4gICAgICAgICAgY29uc3QgbmV3WSA9IGV2ZW50LmR5ICsgb2xkWTtcbiAgICAgICAgICBldmVudC50YXJnZXQuc2V0QXR0cmlidXRlKCdwb3NYJywgbmV3WCk7XG4gICAgICAgICAgZXZlbnQudGFyZ2V0LnNldEF0dHJpYnV0ZSgncG9zeScsIG5ld1kpO1xuICAgICAgICAgIGV2ZW50LnRhcmdldC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlKCR7bmV3WH1weCwgJHtuZXdZfXB4KWA7XG4gICAgICAgIH0sXG4gICAgICAgIGVuZChldmVudCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdlbmQnLCBldmVudCk7XG4gICAgICAgICAgZXZlbnQudGFyZ2V0LnNldEF0dHJpYnV0ZSgncG9zWCcsIDApO1xuICAgICAgICAgIGV2ZW50LnRhcmdldC5zZXRBdHRyaWJ1dGUoJ3Bvc3knLCAwKTtcbiAgICAgICAgICBldmVudC50YXJnZXQuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgwcHgsIDBweClgO1xuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGludGVyYWN0KCcuZHJvcHpvbmUnKS5kcm9wem9uZSh7XG4gICAgICBvdmVybGFwOiAwLjA1LFxuICAgICAgb25kcm9wOiBldmVudCA9PiB7XG4gICAgICAgIGV2ZW50LnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcblxuICAgICAgICBjb25zb2xlLmxvZyhldmVudC5yZWxhdGVkVGFyZ2V0LmlkICsgJyB3YXMgZHJvcHBlZCBpbnRvICcgKyBldmVudC50YXJnZXQuaWQpO1xuXG4gICAgICAgIGNvbnN0IHJvbGVOYW1lID0gZXZlbnQucmVsYXRlZFRhcmdldC5kYXRhc2V0LnJvbGVuYW1lO1xuICAgICAgICBjb25zdCB0YXJnZXRPcmRlciA9ICtldmVudC50YXJnZXQuZGF0YXNldC5vcmRlcjtcbiAgICAgICAgY29uc3QgdGFyZ2V0U2VxdWVuY2UgPSArZXZlbnQudGFyZ2V0LmRhdGFzZXQuc2VxdWVuY2U7XG4gICAgICAgIC8vIGNvbnN0IHJvbGVJbmRleCA9IHRoaXMub3JkZXJlZFJvbGVzLmZpbmRJbmRleChyb2xlID0+IHJvbGUubmFtZSA9PT0gcm9sZVRvTW92ZSk7XG5cbiAgICAgICAgY29uc3Qgcm9sZUluZGV4ID0gdGhpcy5vcmRlcmVkUm9sZXMuZmluZEluZGV4KHJvbGUgPT4gcm9sZS5uYW1lID09PSByb2xlTmFtZSk7XG4gICAgICAgIGlmIChyb2xlSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1dpbGwgbW92ZScsIHtyb2xlTmFtZSwgdGFyZ2V0T3JkZXIsIHRhcmdldFNlcXVlbmNlLCByb2xlSW5kZXh9KTtcbiAgICAgICAgICBjb25zdCByb2xlID0gdGhpcy5vcmRlcmVkUm9sZXNbcm9sZUluZGV4XTtcbiAgICAgICAgICByb2xlLnNlcXVlbmNlID0gdGFyZ2V0U2VxdWVuY2U7XG5cbiAgICAgICAgICBjb25zb2xlLmxvZygnYmVmb3JlJywgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLm9yZGVyZWRSb2xlcykpKTtcbiAgICAgICAgICB0aGlzLm9yZGVyZWRSb2xlcyA9IGFycmF5TW92ZSh0aGlzLm9yZGVyZWRSb2xlcywgcm9sZUluZGV4LCB0YXJnZXRPcmRlcik7XG4gICAgICAgICAgdGhpcy5vcmRlcmVkUm9sZXMuZm9yRWFjaCgocm9sZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHJvbGUub3JkZXIgPSBpbmRleDtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBjb25zb2xlLmxvZygnYWZ0ZXInLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMub3JkZXJlZFJvbGVzKSkpO1xuICAgICAgICAgIHRoaXMuY29tcHV0ZVJvbGVzQnlTZXF1ZW5jZSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25kcm9wYWN0aXZhdGU6IGUgPT4ge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnZHJvcCBhY3RpdmF0ZWQnKTtcbiAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmFkZCgndmlzaWJsZScpO1xuICAgICAgfSxcbiAgICAgIG9uZHJvcGRlYWN0aXZhdGU6IGUgPT4ge1xuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCd2aXNpYmxlJyk7XG4gICAgICB9LFxuICAgICAgb25kcmFnZW50ZXI6IGUgPT4ge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnZHJhZyBlbnRlcicsIGUpO1xuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbiAgICAgIH0sXG4gICAgICBvbmRyYWdsZWF2ZTogZSA9PiB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdkcmFnIGxlYXZlJywgZSk7XG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfVxuXG4gIGNvbXB1dGVSb2xlc0J5U2VxdWVuY2UoKSB7XG4gICAgY29uc3Qgcm9sZXNBdFNlcXVlbmNlOiBSZWNvcmQ8bnVtYmVyLCBUQW5ub3RhdGVkUm9sZVtdPiA9IHt9O1xuXG4gICAgdGhpcy5vcmRlcmVkUm9sZXMuZm9yRWFjaChyb2xlID0+IHtcbiAgICAgIHJvbGVzQXRTZXF1ZW5jZVtyb2xlLnNlcXVlbmNlXSB8fD0gW107XG4gICAgICByb2xlc0F0U2VxdWVuY2Vbcm9sZS5zZXF1ZW5jZV0ucHVzaChyb2xlKTtcbiAgICB9KTtcblxuICAgIHRoaXMucm9sZXNBdFNlcXVlbmNlID0gcm9sZXNBdFNlcXVlbmNlO1xuXG4gICAgY29uc29sZS5sb2coJ3JhcycsIHRoaXMucm9sZXNBdFNlcXVlbmNlKTtcbiAgICB0aGlzLnNlcXVlbmNlcyA9IE9iamVjdC5rZXlzKHJvbGVzQXRTZXF1ZW5jZSkubWFwKGxldmVsU3RyID0+ICtsZXZlbFN0cik7XG4gICAgdGhpcy5zZXF1ZW5jZXMuc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICB9XG5cbiAgaGFuZGxlQ2FuY2VsKGUpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHRoaXMuc2hvd1N1Z2dlc3Rpb25zID0gZmFsc2U7XG4gICAgdGhpcy5jYW5jZWw/LmVtaXQoKTtcbiAgfVxuXG4gIGhhbmRsZVN1Ym1pdChlKSB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIHRoaXMuc2hvd1N1Z2dlc3Rpb25zID0gZmFsc2U7XG4gICAgdGhpcy5jb250YWN0U2VsZWN0ZWQ/LmVtaXQoe1xuICAgICAgZnVsbF9uYW1lOiB0aGlzLm5hbWUsXG4gICAgICBlbWFpbDogdGhpcy5lbWFpbCxcbiAgICAgIHBob25lOiB0aGlzLnBob25lLFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgZGVsZWdhdG9yOiB0aGlzLmRlbGVnYXRvcixcbiAgICB9KTtcblxuICAgIHRoaXMuc2V0dGluZ3NVcGRhdGVkPy5lbWl0KHt9KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zb2xlLmxvZygnb3JkZXJlZCByb2xlcycsIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5vcmRlcmVkUm9sZXMpKSk7XG4gICAgY29uc3Qgcm9sZU5hbWVzID0gdGhpcy5vcmRlcmVkUm9sZXMubWFwKHJvbGUgPT4gcm9sZS5uYW1lKSB8fCBbXTtcbiAgICBsZXQgYmVmb3JlT3JkZXIgPSAwO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxmb3JtIG9uU3VibWl0PXtlID0+IGUucHJldmVudERlZmF1bHQoKX0gb25DbGljaz17ZSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpfSBhdXRvY29tcGxldGU9XCJvZmZcIj5cbiAgICAgICAgPGg1PlBhcnRpY2lwYW50IE9yZGVyPC9oNT5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwicGFydGljaXBhbnRzXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImxlZnQtbGluZVwiIC8+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImljb25cIiBpbm5lckhUTUw9e3N0YXJ0SWNvbn0gLz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZW5kZXJcIj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJsYWJlbFwiPlNlbmRlcjo8L3NwYW4+IHtzZW5kZXJMYWJlbHNbdGhpcy5zZW5kZXJdfXsnICd9XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZXR0aW5ncy1idXR0b25cIiBpbm5lckhUTUw9e3NldHRpbmdzSWNvbn0gb25DbGljaz17KCkgPT4gKHRoaXMuc2hvd2luZ1NlbmRlckRpYWxvZyA9IHRydWUpfSBhcmlhLXJvbGU9XCJidXR0b25cIiAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICB7dGhpcy5zZXF1ZW5jZXMubWFwKHNlcXVlbmNlID0+IChcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImljb25cIiBpbm5lckhUTUw9e3N0ZXBJY29ufSAvPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcHpvbmVcIiBkYXRhLW9yZGVyPXtiZWZvcmVPcmRlcn0gZGF0YS1zZXF1ZW5jZT17c2VxdWVuY2V9IC8+XG4gICAgICAgICAgICAgIHt0aGlzLnJvbGVzQXRTZXF1ZW5jZVtzZXF1ZW5jZV0ubWFwKHJvbGUgPT4ge1xuICAgICAgICAgICAgICAgIGJlZm9yZU9yZGVyID0gcm9sZS5vcmRlcjtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPEZyYWdtZW50PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVjaXBpZW50XCIgc3R5bGU9e3tiYWNrZ3JvdW5kQ29sb3I6IGdldFJHQkEoZ2V0Um9sZUluZGV4KHJvbGVOYW1lcywgcm9sZS5uYW1lKSl9fSBkYXRhLXJvbGVuYW1lPXtyb2xlLm5hbWV9PlxuICAgICAgICAgICAgICAgICAgICAgIHtyb2xlLm5hbWV9IDxkaXYgY2xhc3M9XCJzZXR0aW5ncy1idXR0b25cIiBpbm5lckhUTUw9e3NldHRpbmdzSWNvbn0gb25DbGljaz17KCkgPT4gKHRoaXMuc2hvd2luZ1NlbmRlckRpYWxvZyA9IHRydWUpfSBhcmlhLXJvbGU9XCJidXR0b25cIiAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3B6b25lXCIgZGF0YS1vcmRlcj17YmVmb3JlT3JkZXJ9IGRhdGEtc2VxdWVuY2U9e3NlcXVlbmNlfSAvPlxuICAgICAgICAgICAgICAgICAgPC9GcmFnbWVudD5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkpfVxuXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImljb25cIiBpbm5lckhUTUw9e2RvbmVJY29ufSAvPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbXBsZXRlXCI+RG9jdW1lbnQgQ29tcGxldGU8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbnNcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1maWxsXCIgLz5cblxuICAgICAgICAgIDx2ZXJkb2NzLWJ1dHRvbiB2YXJpYW50PVwib3V0bGluZVwiIGxhYmVsPVwiQ2FuY2VsXCIgc2l6ZT1cInNtYWxsXCIgb25DbGljaz17ZSA9PiB0aGlzLmhhbmRsZUNhbmNlbChlKX0gLz5cbiAgICAgICAgICA8dmVyZG9jcy1idXR0b24gbGFiZWw9XCJPS1wiIHNpemU9XCJzbWFsbFwiIG9uQ2xpY2s9e2UgPT4gdGhpcy5oYW5kbGVTdWJtaXQoZSl9IC8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHsvKiBXZSBkbyBpdCB0aGlzIHdheSBpbnN0ZWFkIG9mIHNldHRpbmcgb3BlbiBzbyB0aGUgd2lkZ2V0IHJlc2V0cyBlYWNoIHRpbWUgaXQncyBkaXNwbGF5ZWQsIGluIGNhc2UgdGhlIHVzZXIgb3BlbnMvY2hhbmdlcy9jYW5jZWxzICovfVxuICAgICAgICB7dGhpcy5zaG93aW5nU2VuZGVyRGlhbG9nICYmIChcbiAgICAgICAgICA8dmVyZG9jcy10ZW1wbGF0ZS1zZW5kZXItZGlhbG9nXG4gICAgICAgICAgICBvcGVuPXt0cnVlfVxuICAgICAgICAgICAgdmFsdWU9e3RoaXMuc2VuZGVyfVxuICAgICAgICAgICAgb25DYW5jZWw9eygpID0+ICh0aGlzLnNob3dpbmdTZW5kZXJEaWFsb2cgPSBmYWxzZSl9XG4gICAgICAgICAgICBvbkRvbmU9e2UgPT4ge1xuICAgICAgICAgICAgICB0aGlzLnNob3dpbmdTZW5kZXJEaWFsb2cgPSBmYWxzZTtcbiAgICAgICAgICAgICAgdGhpcy5zZW5kZXIgPSBlLmRldGFpbC5zZW5kZXI7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICA8L2Zvcm0+XG4gICAgKTtcbiAgfVxufVxuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZycpO1xudmFyIHRyaW0gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc3RyaW5nLXRyaW0nKS50cmltO1xudmFyIHdoaXRlc3BhY2VzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3doaXRlc3BhY2VzJyk7XG5cbnZhciAkcGFyc2VJbnQgPSBnbG9iYWwucGFyc2VJbnQ7XG52YXIgU3ltYm9sID0gZ2xvYmFsLlN5bWJvbDtcbnZhciBJVEVSQVRPUiA9IFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XG52YXIgaGV4ID0gL15bKy1dPzB4L2k7XG52YXIgZXhlYyA9IHVuY3VycnlUaGlzKGhleC5leGVjKTtcbnZhciBGT1JDRUQgPSAkcGFyc2VJbnQod2hpdGVzcGFjZXMgKyAnMDgnKSAhPT0gOCB8fCAkcGFyc2VJbnQod2hpdGVzcGFjZXMgKyAnMHgxNicpICE9PSAyMlxuICAvLyBNUyBFZGdlIDE4LSBicm9rZW4gd2l0aCBib3hlZCBzeW1ib2xzXG4gIHx8IChJVEVSQVRPUiAmJiAhZmFpbHMoZnVuY3Rpb24gKCkgeyAkcGFyc2VJbnQoT2JqZWN0KElURVJBVE9SKSk7IH0pKTtcblxuLy8gYHBhcnNlSW50YCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtcGFyc2VpbnQtc3RyaW5nLXJhZGl4XG5tb2R1bGUuZXhwb3J0cyA9IEZPUkNFRCA/IGZ1bmN0aW9uIHBhcnNlSW50KHN0cmluZywgcmFkaXgpIHtcbiAgdmFyIFMgPSB0cmltKHRvU3RyaW5nKHN0cmluZykpO1xuICByZXR1cm4gJHBhcnNlSW50KFMsIChyYWRpeCA+Pj4gMCkgfHwgKGV4ZWMoaGV4LCBTKSA/IDE2IDogMTApKTtcbn0gOiAkcGFyc2VJbnQ7XG4iLCJ2YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciAkcGFyc2VJbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbnVtYmVyLXBhcnNlLWludCcpO1xuXG4vLyBgcGFyc2VJbnRgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1wYXJzZWludC1zdHJpbmctcmFkaXhcbiQoeyBnbG9iYWw6IHRydWUsIGZvcmNlZDogcGFyc2VJbnQgIT0gJHBhcnNlSW50IH0sIHtcbiAgcGFyc2VJbnQ6ICRwYXJzZUludFxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBlcy9uby1zdHJpbmctcHJvdG90eXBlLW1hdGNoYWxsIC0tIHNhZmUgKi9cbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcy1jbGF1c2UnKTtcbnZhciBjcmVhdGVJdGVyYXRvckNvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9yLWNyZWF0ZS1jb25zdHJ1Y3RvcicpO1xudmFyIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLWl0ZXItcmVzdWx0LW9iamVjdCcpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7XG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgaXNOdWxsT3JVbmRlZmluZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtbnVsbC1vci11bmRlZmluZWQnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtcmVnZXhwJyk7XG52YXIgZ2V0UmVnRXhwRmxhZ3MgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWdldC1mbGFncycpO1xudmFyIGdldE1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtbWV0aG9kJyk7XG52YXIgZGVmaW5lQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4nKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIEludGVybmFsU3RhdGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKTtcbnZhciBJU19QVVJFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXB1cmUnKTtcblxudmFyIE1BVENIX0FMTCA9IHdlbGxLbm93blN5bWJvbCgnbWF0Y2hBbGwnKTtcbnZhciBSRUdFWFBfU1RSSU5HID0gJ1JlZ0V4cCBTdHJpbmcnO1xudmFyIFJFR0VYUF9TVFJJTkdfSVRFUkFUT1IgPSBSRUdFWFBfU1RSSU5HICsgJyBJdGVyYXRvcic7XG52YXIgc2V0SW50ZXJuYWxTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuc2V0O1xudmFyIGdldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmdldHRlckZvcihSRUdFWFBfU1RSSU5HX0lURVJBVE9SKTtcbnZhciBSZWdFeHBQcm90b3R5cGUgPSBSZWdFeHAucHJvdG90eXBlO1xudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG52YXIgc3RyaW5nSW5kZXhPZiA9IHVuY3VycnlUaGlzKCcnLmluZGV4T2YpO1xudmFyIG5hdGl2ZU1hdGNoQWxsID0gdW5jdXJyeVRoaXMoJycubWF0Y2hBbGwpO1xuXG52YXIgV09SS1NfV0lUSF9OT05fR0xPQkFMX1JFR0VYID0gISFuYXRpdmVNYXRjaEFsbCAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICBuYXRpdmVNYXRjaEFsbCgnYScsIC8uLyk7XG59KTtcblxudmFyICRSZWdFeHBTdHJpbmdJdGVyYXRvciA9IGNyZWF0ZUl0ZXJhdG9yQ29uc3RydWN0b3IoZnVuY3Rpb24gUmVnRXhwU3RyaW5nSXRlcmF0b3IocmVnZXhwLCBzdHJpbmcsICRnbG9iYWwsIGZ1bGxVbmljb2RlKSB7XG4gIHNldEludGVybmFsU3RhdGUodGhpcywge1xuICAgIHR5cGU6IFJFR0VYUF9TVFJJTkdfSVRFUkFUT1IsXG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAgc3RyaW5nOiBzdHJpbmcsXG4gICAgZ2xvYmFsOiAkZ2xvYmFsLFxuICAgIHVuaWNvZGU6IGZ1bGxVbmljb2RlLFxuICAgIGRvbmU6IGZhbHNlXG4gIH0pO1xufSwgUkVHRVhQX1NUUklORywgZnVuY3Rpb24gbmV4dCgpIHtcbiAgdmFyIHN0YXRlID0gZ2V0SW50ZXJuYWxTdGF0ZSh0aGlzKTtcbiAgaWYgKHN0YXRlLmRvbmUpIHJldHVybiBjcmVhdGVJdGVyUmVzdWx0T2JqZWN0KHVuZGVmaW5lZCwgdHJ1ZSk7XG4gIHZhciBSID0gc3RhdGUucmVnZXhwO1xuICB2YXIgUyA9IHN0YXRlLnN0cmluZztcbiAgdmFyIG1hdGNoID0gcmVnRXhwRXhlYyhSLCBTKTtcbiAgaWYgKG1hdGNoID09PSBudWxsKSB7XG4gICAgc3RhdGUuZG9uZSA9IHRydWU7XG4gICAgcmV0dXJuIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QodW5kZWZpbmVkLCB0cnVlKTtcbiAgfVxuICBpZiAoc3RhdGUuZ2xvYmFsKSB7XG4gICAgaWYgKHRvU3RyaW5nKG1hdGNoWzBdKSA9PT0gJycpIFIubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKFIubGFzdEluZGV4KSwgc3RhdGUudW5pY29kZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QobWF0Y2gsIGZhbHNlKTtcbiAgfVxuICBzdGF0ZS5kb25lID0gdHJ1ZTtcbiAgcmV0dXJuIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QobWF0Y2gsIGZhbHNlKTtcbn0pO1xuXG52YXIgJG1hdGNoQWxsID0gZnVuY3Rpb24gKHN0cmluZykge1xuICB2YXIgUiA9IGFuT2JqZWN0KHRoaXMpO1xuICB2YXIgUyA9IHRvU3RyaW5nKHN0cmluZyk7XG4gIHZhciBDID0gc3BlY2llc0NvbnN0cnVjdG9yKFIsIFJlZ0V4cCk7XG4gIHZhciBmbGFncyA9IHRvU3RyaW5nKGdldFJlZ0V4cEZsYWdzKFIpKTtcbiAgdmFyIG1hdGNoZXIsICRnbG9iYWwsIGZ1bGxVbmljb2RlO1xuICBtYXRjaGVyID0gbmV3IEMoQyA9PT0gUmVnRXhwID8gUi5zb3VyY2UgOiBSLCBmbGFncyk7XG4gICRnbG9iYWwgPSAhIX5zdHJpbmdJbmRleE9mKGZsYWdzLCAnZycpO1xuICBmdWxsVW5pY29kZSA9ICEhfnN0cmluZ0luZGV4T2YoZmxhZ3MsICd1Jyk7XG4gIG1hdGNoZXIubGFzdEluZGV4ID0gdG9MZW5ndGgoUi5sYXN0SW5kZXgpO1xuICByZXR1cm4gbmV3ICRSZWdFeHBTdHJpbmdJdGVyYXRvcihtYXRjaGVyLCBTLCAkZ2xvYmFsLCBmdWxsVW5pY29kZSk7XG59O1xuXG4vLyBgU3RyaW5nLnByb3RvdHlwZS5tYXRjaEFsbGAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hhbGxcbiQoeyB0YXJnZXQ6ICdTdHJpbmcnLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiBXT1JLU19XSVRIX05PTl9HTE9CQUxfUkVHRVggfSwge1xuICBtYXRjaEFsbDogZnVuY3Rpb24gbWF0Y2hBbGwocmVnZXhwKSB7XG4gICAgdmFyIE8gPSByZXF1aXJlT2JqZWN0Q29lcmNpYmxlKHRoaXMpO1xuICAgIHZhciBmbGFncywgUywgbWF0Y2hlciwgcng7XG4gICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChyZWdleHApKSB7XG4gICAgICBpZiAoaXNSZWdFeHAocmVnZXhwKSkge1xuICAgICAgICBmbGFncyA9IHRvU3RyaW5nKHJlcXVpcmVPYmplY3RDb2VyY2libGUoZ2V0UmVnRXhwRmxhZ3MocmVnZXhwKSkpO1xuICAgICAgICBpZiAoIX5zdHJpbmdJbmRleE9mKGZsYWdzLCAnZycpKSB0aHJvdyAkVHlwZUVycm9yKCdgLm1hdGNoQWxsYCBkb2VzIG5vdCBhbGxvdyBub24tZ2xvYmFsIHJlZ2V4ZXMnKTtcbiAgICAgIH1cbiAgICAgIGlmIChXT1JLU19XSVRIX05PTl9HTE9CQUxfUkVHRVgpIHJldHVybiBuYXRpdmVNYXRjaEFsbChPLCByZWdleHApO1xuICAgICAgbWF0Y2hlciA9IGdldE1ldGhvZChyZWdleHAsIE1BVENIX0FMTCk7XG4gICAgICBpZiAobWF0Y2hlciA9PT0gdW5kZWZpbmVkICYmIElTX1BVUkUgJiYgY2xhc3NvZihyZWdleHApID09ICdSZWdFeHAnKSBtYXRjaGVyID0gJG1hdGNoQWxsO1xuICAgICAgaWYgKG1hdGNoZXIpIHJldHVybiBjYWxsKG1hdGNoZXIsIHJlZ2V4cCwgTyk7XG4gICAgfSBlbHNlIGlmIChXT1JLU19XSVRIX05PTl9HTE9CQUxfUkVHRVgpIHJldHVybiBuYXRpdmVNYXRjaEFsbChPLCByZWdleHApO1xuICAgIFMgPSB0b1N0cmluZyhPKTtcbiAgICByeCA9IG5ldyBSZWdFeHAocmVnZXhwLCAnZycpO1xuICAgIHJldHVybiBJU19QVVJFID8gY2FsbCgkbWF0Y2hBbGwsIHJ4LCBTKSA6IHJ4W01BVENIX0FMTF0oUyk7XG4gIH1cbn0pO1xuXG5JU19QVVJFIHx8IE1BVENIX0FMTCBpbiBSZWdFeHBQcm90b3R5cGUgfHwgZGVmaW5lQnVpbHRJbihSZWdFeHBQcm90b3R5cGUsIE1BVENIX0FMTCwgJG1hdGNoQWxsKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=
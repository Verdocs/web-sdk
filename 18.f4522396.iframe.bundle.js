/*! For license information please see 18.f4522396.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"./dist/esm/Colors-1b298092.js":function(module,__webpack_exports__,__webpack_require__){"use strict";function getRGBA(roleIndex){switch(roleIndex%10){case 0:return 0===roleIndex?"rgba(255, 193, 7, 0.4)":"rgba(134, 134, 134, 0.3)";case 1:return"rgba(156, 39, 176, .4)";case 2:return"rgba(33, 150, 243, .4)";case 3:return"rgba(220, 231, 117, 0.3)";case 4:return"rgba(121, 134, 203, 0.3)";case 5:return"rgba(77, 182, 172, 0.3)";case 6:return"rgba(255, 202, 165, 0.3)";case 7:return"rgba(2, 247, 190, 0.3)";case 8:return"rgba(255, 138, 101, 0.3)";case 9:return"rgba(82, 255, 79, 0.3)";default:return"rgba(229, 115, 155, 0.3)"}}__webpack_require__.d(__webpack_exports__,"a",(function(){return getRGBA}))},"./dist/esm/Validators-f110bae2.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return isValidPhone})),__webpack_require__.d(__webpack_exports__,"b",(function(){return isValidEmail}));var EMAIL_REGEX=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,isValidEmail=function isValidEmail(email){return!!email&&EMAIL_REGEX.test(email)},PHONE_REGEX=/((?:\+|00)[17](?: |\-)?|(?:\+|00)[1-9]\d{0,2}(?: |\-)?|(?:\+|00)1\-\d{3}(?: |\-)?)?(0\d|\([0-9]{3}\)|[1-9]{0,3})(?:((?: |\-)[0-9]{2}){4}|((?:[0-9]{2}){4})|((?: |\-)[0-9]{3}(?: |\-)[0-9]{4})|([0-9]{7}))/,isValidPhone=function isValidPhone(phone){return!!phone&&PHONE_REGEX.test(phone)}},"./dist/esm/errors-9b5498c8.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SDKError}));__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.reflect.construct.js"),__webpack_require__("./node_modules/core-js/modules/es.map.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}function _possibleConstructorReturn(self,call){if(call&&("object"==typeof call||"function"==typeof call))return call;if(void 0!==call)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(self)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _wrapNativeSuper(Class){var _cache="function"==typeof Map?new Map:void 0;return _wrapNativeSuper=function _wrapNativeSuper(Class){if(null===Class||!function _isNativeFunction(fn){return-1!==Function.toString.call(fn).indexOf("[native code]")}(Class))return Class;if("function"!=typeof Class)throw new TypeError("Super expression must either be null or a function");if(void 0!==_cache){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper)}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor)}return Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(Wrapper,Class)},_wrapNativeSuper(Class)}function _construct(Parent,args,Class){return _construct=_isNativeReflectConstruct()?Reflect.construct.bind():function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var instance=new(Function.bind.apply(Parent,a));return Class&&_setPrototypeOf(instance,Class.prototype),instance},_construct.apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}var SDKError=function(_Error){!function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),Object.defineProperty(subClass,"prototype",{writable:!1}),superClass&&_setPrototypeOf(subClass,superClass)}(SDKError,_Error);var _super=function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}(SDKError);function SDKError(message,statusCode,response){var _this;return function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,SDKError),(_this=_super.call(this,message||"SDK Error")).response=response,_this.statusCode=statusCode,Object.setPrototypeOf(_assertThisInitialized(_this),(this instanceof SDKError?this.constructor:void 0).prototype),_this}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(SDKError)}(_wrapNativeSuper(Error))},"./dist/esm/utils-3f23facc.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getRoleIndex})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getFieldId})),__webpack_require__.d(__webpack_exports__,"c",(function(){return rescale})),__webpack_require__.d(__webpack_exports__,"d",(function(){return fullNameToInitials})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getFieldSettings})),__webpack_require__.d(__webpack_exports__,"f",(function(){return integerSequence})),__webpack_require__.d(__webpack_exports__,"g",(function(){return renderDocumentField})),__webpack_require__.d(__webpack_exports__,"h",(function(){return setControlStyles}));__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.fill.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js");function rescale(r,n){return r*n}var integerSequence=function integerSequence(start,count){return Array(count).fill(1).map((function(_,index){return index+start}))},fullNameToInitials=function fullNameToInitials(name){return name.split(" ").map((function(word){return word[0]})).join("")},setControlStyles=function setControlStyles(el,field,xScale,yScale,option){var _a,_b,_c,_d,settings=field.setting||field.settings,_settings$x=settings.x,x=void 0===_settings$x?0:_settings$x,_settings$y=settings.y,y=void 0===_settings$y?0:_settings$y,_settings$width=settings.width,width=void 0===_settings$width?function defaultWidth(field){switch(field.type){case"attachment":case"payment":return 24;case"checkbox":case"checkbox_group":case"radio_button_group":return 14;case"signature":case"initial":return 82}return 150}(field):_settings$width,_settings$height=settings.height,height=void 0===_settings$height?function defaultHeight(field){switch(field.type){case"attachment":case"payment":return 24;case"checkbox":case"checkbox_group":case"radio_button_group":return 14;case"signature":case"initial":return 41}return 50}(field):_settings$height,optionSettings=void 0!==option&&settings.options[option]?settings.options[option]:null;optionSettings&&(x=null!==(_a=optionSettings.x)&&void 0!==_a?_a:x,y=null!==(_b=optionSettings.y)&&void 0!==_b?_b:y,width=null!==(_c=optionSettings.width)&&void 0!==_c?_c:width,height=null!==(_d=optionSettings.height)&&void 0!==_d?_d:height),el.style.width=width+"px",el.style.height=height+"px",el.style.position="absolute",el.style.left=rescale(xScale,x)+"px",el.style.bottom=rescale(yScale,y)+"px",el.style.transform="scale("+xScale+", "+yScale+")"},getFieldId=function getFieldId(field){return"verdocs-doc-fld-"+field.name},getFieldOptionId=function getFieldOptionId(field,index){return"verdocs-doc-fld-"+field.name+"-"+index},renderDocumentField=function renderDocumentField(field,docPage,roleIndex,handleFieldChange,disabled){var editable=arguments.length>5&&void 0!==arguments[5]&&arguments[5],draggable=arguments.length>6&&void 0!==arguments[6]&&arguments[6],controlsDiv=document.getElementById(docPage.containerId+"-controls");if(controlsDiv)switch(field.type){case"attachment":case"date":case"dropdown":case"initial":case"payment":case"signature":case"timestamp":case"textarea":case"textbox":var id=getFieldId(field),existingField=document.getElementById(id);if(existingField)return void setControlStyles(existingField,field,docPage.xScale,docPage.yScale);var el=document.createElement("verdocs-field-"+field.type);return el.field=field,el.setAttribute("id",id),el.setAttribute("roleindex",roleIndex),disabled&&el.setAttribute("disabled",!0),editable&&el.setAttribute("editable",!0),draggable&&el.setAttribute("draggable",!0),el.addEventListener("fieldChange",(function(e){return handleFieldChange(field,e)})),setControlStyles(el,field,docPage.xScale,docPage.yScale),controlsDiv.appendChild(el),el;case"checkbox_group":field.setting.options.forEach((function(_,checkboxIndex){var id=getFieldOptionId(field,checkboxIndex),existingField=document.getElementById(id);if(!existingField){var cbEl=document.createElement("verdocs-field-checkbox");return cbEl.field=field,cbEl.setAttribute("id",id),cbEl.setAttribute("roleindex",roleIndex),cbEl.setAttribute("option",checkboxIndex),disabled&&cbEl.setAttribute("disabled",!0),cbEl.addEventListener("fieldChange",(function(e){return handleFieldChange(field,e)})),setControlStyles(cbEl,field,docPage.xScale,docPage.yScale),controlsDiv.appendChild(cbEl),cbEl}setControlStyles(existingField,field,docPage.xScale,docPage.yScale)}));break;case"radio_button_group":field.setting.options.forEach((function(_,buttonIndex){var id=getFieldOptionId(field,buttonIndex),existingField=document.getElementById(id);if(!existingField){var cbEl=document.createElement("verdocs-field-radio-button");return cbEl.field=field,cbEl.setAttribute("id",id),cbEl.setAttribute("roleindex",roleIndex),cbEl.setAttribute("option",buttonIndex),disabled&&cbEl.setAttribute("disabled",!0),cbEl.addEventListener("fieldChange",(function(e){return handleFieldChange(field,e)})),setControlStyles(cbEl,field,docPage.xScale,docPage.yScale,buttonIndex),controlsDiv.appendChild(cbEl),cbEl}setControlStyles(existingField,field,docPage.xScale,docPage.yScale)}));break;default:return console.log("[PREVIEW] Skipping unsupported field type",field),null}},getRoleIndex=function getRoleIndex(roles,role){return roles.indexOf(role)||0},getFieldSettings=function getFieldSettings(field){return field.setting?field.setting:field.settings?field.settings:{x:0,y:0,required:!1,disabled:!1,result:"",value:""}}},"./dist/esm/verdocs-sign.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(Buffer){__webpack_require__.d(__webpack_exports__,"verdocs_sign",(function(){return VerdocsSign}));__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find-index.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/web.url.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js");var _index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__=__webpack_require__("./dist/esm/index-f78d163d.js"),_VerdocsEndpoint_82f4600d_js__WEBPACK_IMPORTED_MODULE_35__=__webpack_require__("./dist/esm/VerdocsEndpoint-82f4600d.js"),_Validators_f110bae2_js__WEBPACK_IMPORTED_MODULE_37__=(__webpack_require__("./dist/esm/Types-ab9f6af8.js"),__webpack_require__("./dist/esm/Validators-f110bae2.js")),_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_38__=__webpack_require__("./dist/esm/Colors-1b298092.js"),_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_39__=__webpack_require__("./dist/esm/utils-3f23facc.js"),_errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_40__=__webpack_require__("./dist/esm/errors-9b5498c8.js");function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(void 0===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}var __awaiter$1=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator$1=function(thisArg,body){var f,y,t,g,_={label:0,sent:function sent(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}},getSigningSession=function getSigningSession(endpoint,params){return __awaiter$1(void 0,void 0,void 0,(function(){return __generator$1(this,(function(_a){return[2,endpoint.api.get("/envelopes/".concat(params.envelopeId,"/recipients/").concat(encodeURIComponent(params.roleId),"/invitation/").concat(params.inviteCode)).then((function(r){var _a,_b,signerToken=(null===(_a=r.headers)||void 0===_a?void 0:_a.signer_token)||"",session=Object(_VerdocsEndpoint_82f4600d_js__WEBPACK_IMPORTED_MODULE_35__.b)(signerToken);return endpoint.setToken(null===(_b=r.headers)||void 0===_b?void 0:_b.signer_token),{recipient:r.data,session:session,signerToken:signerToken}}))]}))}))},getEnvelope=function getEnvelope(endpoint,envelopeId){return __awaiter$1(void 0,void 0,void 0,(function(){return __generator$1(this,(function(_a){return[2,endpoint.api.get("/envelopes/".concat(envelopeId)).then((function(r){return r.data}))]}))}))},getEnvelopeFile=function getEnvelopeFile(endpoint,envelopeId,documentId){return __awaiter$1(void 0,void 0,void 0,(function(){return __generator$1(this,(function(_a){return[2,endpoint.api.get("/envelopes/".concat(envelopeId,"/envelope_documents/").concat(documentId,"?file=true"),{responseType:"arraybuffer"}).then((function(r){return Buffer.from(r.data,"binary").toString("base64")}))]}))}))},updateEnvelopeField=function updateEnvelopeField(endpoint,envelopeId,fieldName,value){return __awaiter$1(void 0,void 0,void 0,(function(){return __generator$1(this,(function(_a){return[2,endpoint.api.put("/envelopes/".concat(envelopeId,"/fields/").concat(fieldName),value).then((function(r){return r.data}))]}))}))},__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=function(thisArg,body){var f,y,t,g,_={label:0,sent:function sent(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}},VerdocsSign=function(){function VerdocsSign(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsSign),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.j)(this,hostRef),this.sdkError=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.e)(this,"sdkError",7),this.endpoint=_VerdocsEndpoint_82f4600d_js__WEBPACK_IMPORTED_MODULE_35__.a.getDefault(),this.envelopeId=null,this.roleId=null,this.inviteCode=null,this.recipient=null,this.signerToken=null,this.pdfUrl=null,this.recipientIndex=-1,this.envelope=null,this.fields=[],this.hasSignature=!1,this.nextButtonLabel="Start",this.focusedField=""}var _handleFieldChange,_handleOptionSelected,_savePDF,_componentDidLoad;return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsSign,[{key:"componentDidLoad",value:(_componentDidLoad=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(){var _a,_b,_c,_yield$getSigningSess,session,recipient,signerToken,envelope,_this=this;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.prev=0,console.log("[SIGN] Processing invite code for "+this.envelopeId+" / "+this.envelopeId),_context.next=4,getSigningSession(this.endpoint,{envelopeId:this.envelopeId,roleId:this.roleId,inviteCode:this.inviteCode});case 4:return _yield$getSigningSess=_context.sent,session=_yield$getSigningSess.session,recipient=_yield$getSigningSess.recipient,signerToken=_yield$getSigningSess.signerToken,console.log("[SIGN] Got signing session "+session.email+" / "+session.profile_id),this.recipient=recipient,this.signerToken=signerToken,this.endpoint.setToken(signerToken),this.recipient.agreed&&(this.nextButtonLabel="Next"),_context.next=15,getEnvelope(this.endpoint,this.envelopeId);case 15:envelope=_context.sent,this.envelope=envelope,console.log("[SIGN] Signing document",document),this.pdfUrl=this.endpoint.getBaseURL()+"/documents/"+this.envelopeId+"/envelope_documents/"+envelope.envelope_document_id+"?file=true",this.recipientIndex=this.envelope.recipients.findIndex((function(recipient){return recipient.role_name==_this.roleId})),this.recipientIndex>-1&&console.log("Found recipient",this.envelope.recipients[this.recipientIndex]),this.fields=this.envelope.fields.filter((function(field){return field.recipient_role===_this.roleId})),console.log("Loaded fields",this.fields),_context.next=29;break;case 25:_context.prev=25,_context.t0=_context.catch(0),console.log("Error with signing session",_context.t0),null===(_a=this.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_40__.a(_context.t0.message,null===(_b=_context.t0.response)||void 0===_b?void 0:_b.status,null===(_c=_context.t0.response)||void 0===_c?void 0:_c.data));case 29:case"end":return _context.stop()}}),_callee,this,[[0,25]])}))),function componentDidLoad(){return _componentDidLoad.apply(this,arguments)})},{key:"handleClickAgree",value:function handleClickAgree(){var _this2=this;console.log("agree clicked"),function updateRecipientStatus(endpoint,envelopeId,roleName,action,params){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.put("/envelopes/".concat(envelopeId,"/recipients/").concat(roleName),__assign({role_name:roleName,action:action},params||{})).then((function(r){return r.data}))]}))}))}(this.endpoint,this.envelopeId,this.roleId,"update",{agreed:!0}).then((function(r){console.log("update result",r),_this2.nextButtonLabel="Next",_this2.recipient=r})).catch((function(e){var _a,_b,_c;console.log("update failure",e),null===(_a=_this2.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_40__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data))}))}},{key:"savePDF",value:(_savePDF=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(){var fileName,data,xhr,url;return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return fileName=this.envelope.name+" - "+this.envelope.updated_at.split("T")[0]+".pdf",_context2.next=3,getEnvelopeFile(this.endpoint,this.envelopeId,this.envelope.envelope_document_id);case 3:data=_context2.sent,(xhr=new XMLHttpRequest).responseType="blob",xhr.onload=function(){var a=document.createElement("a");a.href=window.URL.createObjectURL(xhr.response),a.download=fileName,a.style.display="none",document.body.appendChild(a),a.click(),a.remove()},url="data:application/pdf;base64,"+data,console.log("url",url.length,url),xhr.open("GET","data:application/pdf;base64,"+data),xhr.send();case 11:case"end":return _context2.stop()}}),_callee2,this)}))),function savePDF(){return _savePDF.apply(this,arguments)})},{key:"handleOptionSelected",value:(_handleOptionSelected=_asyncToGenerator(_regeneratorRuntime().mark((function _callee3(e){return _regeneratorRuntime().wrap((function _callee3$(_context3){for(;;)switch(_context3.prev=_context3.next){case 0:_context3.t0=e.detail.id,_context3.next="later"===_context3.t0?3:"claim"===_context3.t0?5:"decline"===_context3.t0?6:"print"===_context3.t0?7:"download"===_context3.t0?8:10;break;case 3:return(null===window||void 0===window?void 0:window.STORYBOOK_ENV)||window.alert("User intends to sign later."),_context3.abrupt("break",10);case 5:case 6:case 7:return _context3.abrupt("break",10);case 8:return this.savePDF().catch((function(){})),_context3.abrupt("break",10);case 10:case"end":return _context3.stop()}}),_callee3,this)}))),function handleOptionSelected(_x){return _handleOptionSelected.apply(this,arguments)})},{key:"handleFieldChange",value:(_handleFieldChange=_asyncToGenerator(_regeneratorRuntime().mark((function _callee4(field,e,optionId){var options,_this3=this;return _regeneratorRuntime().wrap((function _callee4$(_context4){for(;;)switch(_context4.prev=_context4.next){case 0:console.log("fieldChange",field,e.detail),_context4.t0=field.type,_context4.next="textbox"===_context4.t0?4:"checkbox_group"===_context4.t0?6:"radio_button_group"===_context4.t0?8:"dropdown"===_context4.t0?11:"initial"===_context4.t0?13:"signature"===_context4.t0?15:17;break;case 4:return updateEnvelopeField(this.endpoint,this.envelopeId,field.name,{prepared:!1,value:e.detail}).then((function(r){return console.log("Update result",r)})).catch((function(e){var _a,_b,_c,_d,_e,_f;null===(_a=_this3.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_40__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data)),401===(null===(_d=e.response)||void 0===_d?void 0:_d.status)&&"jwt expired"===(null===(_f=null===(_e=e.response)||void 0===_e?void 0:_e.data)||void 0===_f?void 0:_f.error)&&console.log("jwt expired"),console.log("Error updating",e)})),_context4.abrupt("break",17);case 6:return updateEnvelopeField(this.endpoint,this.envelopeId,field.name,{prepared:!1,value:{options:[{id:optionId,checked:e.detail}]}}).then((function(r){return console.log("Update result",r)})).catch((function(e){var _a,_b,_c;null===(_a=_this3.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_40__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data)),console.log("Error updating",e)})),_context4.abrupt("break",17);case 8:return options=field.settings.options.map((function(option){return{id:option.id,selected:optionId===option.id}})),updateEnvelopeField(this.endpoint,this.envelopeId,field.name,{prepared:!1,value:{options:options}}).then((function(r){return console.log("Update result",r)})).catch((function(e){var _a,_b,_c;null===(_a=_this3.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_40__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data)),console.log("Error updating",e)})),_context4.abrupt("break",17);case 11:return updateEnvelopeField(this.endpoint,this.envelopeId,field.name,{prepared:!1,value:e.detail}).then((function(r){return console.log("Update result",r)})).catch((function(e){var _a,_b,_c;null===(_a=_this3.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_40__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data)),console.log("Error updating",e)})),_context4.abrupt("break",17);case 13:return console.log("Got initial",e.detail),_context4.abrupt("break",17);case 15:return console.log("Got signature",e.detail),_context4.abrupt("break",17);case 17:case"end":return _context4.stop()}}),_callee4,this)}))),function handleFieldChange(_x2,_x3,_x4){return _handleFieldChange.apply(this,arguments)})},{key:"renderCheckboxGroupOption",value:function renderCheckboxGroupOption(page,field,option){var _this4=this,style={left:Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_39__.c)(page.xScale,option.x)+"px",bottom:Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_39__.c)(page.yScale,option.y)+"px",position:"absolute",transform:"scale("+page.xScale+", "+page.yScale+")",backgroundColor:Object(_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_38__.a)(this.recipientIndex)};return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("verdocs-field-checkbox",{style:style,field:field,onFieldChange:function onFieldChange(e){return _this4.handleFieldChange(field,e,option.id)}})}},{key:"renderRadioGroupOption",value:function renderRadioGroupOption(page,field,option){var _this5=this,style={left:Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_39__.c)(page.xScale,option.x)+"px",bottom:Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_39__.c)(page.yScale,option.y)+"px",position:"absolute",transform:"scale("+page.xScale+", "+page.yScale+")",backgroundColor:Object(_Colors_1b298092_js__WEBPACK_IMPORTED_MODULE_38__.a)(this.recipientIndex)};return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("verdocs-field-radio-button",{style:style,field:field,onFieldChange:function onFieldChange(e){return _this5.handleFieldChange(field,e,option.id)}})}},{key:"isFieldValid",value:function isFieldValid(field){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;switch(field.type){case"textbox":switch((null===(_a=field.settings)||void 0===_a?void 0:_a.validator)||""){case"email":return Object(_Validators_f110bae2_js__WEBPACK_IMPORTED_MODULE_37__.b)((null===(_b=field.settings)||void 0===_b?void 0:_b.result)||"");case"phone":return Object(_Validators_f110bae2_js__WEBPACK_IMPORTED_MODULE_37__.a)((null===(_c=field.settings)||void 0===_c?void 0:_c.result)||"");default:return!!(null===(_d=field.settings)||void 0===_d?void 0:_d.result)}case"signature":case"initial":case"textarea":case"date":case"timestamp":case"attachment":return!!(null===(_e=field.settings)||void 0===_e?void 0:_e.result);case"dropdown":return!!(null===(_f=field.settings)||void 0===_f?void 0:_f.value);case"checkbox_group":var checked=((null===(_h=null===(_g=field.settings)||void 0===_g?void 0:_g.options)||void 0===_h?void 0:_h.filter((function(option){return option.checked})))||[]).length;return checked>=((null===(_j=field.settings)||void 0===_j?void 0:_j.minimum_checked)||0)&&checked<=((null===(_k=field.settings)||void 0===_k?void 0:_k.maximum_checked)||999);case"radio_button_group":return((null===(_m=null===(_l=field.settings)||void 0===_l?void 0:_l.options)||void 0===_m?void 0:_m.filter((function(option){return option.selected})))||[]).length>0;default:return!1}}},{key:"handleNext",value:function handleNext(){var _this6=this,requiredFields=this.fields.filter((function(field){return field.required}));console.log("required Fields",requiredFields);var focusedIndex=requiredFields.findIndex((function(field){return field.name===_this6.focusedField}));console.log("focused Index",focusedIndex);var nextFocusedIndex=focusedIndex+1;nextFocusedIndex>=requiredFields.length&&(nextFocusedIndex=0);var nextRequiredField=requiredFields[nextFocusedIndex];if(console.log("next required field",nextRequiredField),nextRequiredField){var id=Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_39__.b)(nextRequiredField),el=document.getElementById(id);console.log("focusing",id,el),null==el||el.focusField(),this.focusedField=nextRequiredField.name}}},{key:"renderField",value:function renderField(field,docPage){var _this7=this,controlsDiv=document.getElementById(docPage.containerId+"-controls");if(controlsDiv){var id=Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_39__.b)(field),existingField=document.getElementById(id);if(existingField)Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_39__.h)(existingField,field,docPage.xScale,docPage.yScale,this.recipientIndex);else{var el;switch(field.type){case"attachment":case"checkbox_group":case"date":case"dropdown":case"initial":case"payment":case"signature":case"timestamp":case"textarea":case"textbox":el=document.createElement("verdocs-field-"+field.type);break;case"radio_button_group":break;default:console.log("[SIGN] Skipping unsupported field type",field)}el&&(el.field=field,el.recipient=this.recipient,el.setAttribute("id",id),el.setAttribute("roleindex",this.recipientIndex),el.addEventListener("fieldChange",(function(e){return _this7.handleFieldChange(field,e)})),Object(_utils_3f23facc_js__WEBPACK_IMPORTED_MODULE_39__.h)(existingField,field,docPage.xScale,docPage.yScale,this.recipientIndex),controlsDiv.appendChild(el))}}}},{key:"handlePageRendered",value:function handlePageRendered(e){var _this8=this,pageInfo=e.detail;console.log("[SIGN] Page rendered",pageInfo);var fields=this.fields.filter((function(field){return field.page===pageInfo.renderedPage.pageNumber}));console.log("[SIGN] Fields on page",fields),fields.forEach((function(field){return _this8.renderField(field,pageInfo.renderedPage)}))}},{key:"render",value:function render(){var _a,_b,_c,_d,_this9=this;return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.b,{class:{storybook:!!(null===window||void 0===window?void 0:window.STORYBOOK_ENV),agreed:null===(_a=this.recipient)||void 0===_a?void 0:_a.agreed}},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"intro"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"inner"},"Please review and act on these documents.")),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"header"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"inner"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"toolbar"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"tools"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("verdocs-dropdown",{options:[{id:"later",label:"Finish Later"},{id:"claim",label:"Claim the Document",disabled:!0},{id:"decline",label:"Decline to Sign"},{id:"print",label:"Print Without Signing"},{id:"download",label:"Download"}],onOptionSelected:function onOptionSelected(e){return _this9.handleOptionSelected(e)}}),(null===(_b=this.recipient)||void 0===_b?void 0:_b.agreed)?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{style:{flex:"1"}}):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"agree"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"agree-checkbox"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("input",{type:"checkbox",value:"None",id:"agree-checkbox-element",name:"agree",onChange:function onChange(){return _this9.handleClickAgree()}}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("label",{htmlFor:"agree-checkbox-element"})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("span",null,"I agree to use electronic records and signatures.")),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("verdocs-button",{size:"small",label:this.nextButtonLabel,disabled:!(null===(_c=this.recipient)||void 0===_c?void 0:_c.agreed),onClick:function onClick(){return _this9.handleNext()}}))))),(null===(_d=this.recipient)||void 0===_d?void 0:_d.agreed)?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{style:{display:"none"}}):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"cover"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"document"},this.pdfUrl?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("div",{class:"inner"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("verdocs-view",{source:this.pdfUrl,endpoint:this.endpoint,onPageRendered:function onPageRendered(e){return _this9.handlePageRendered(e)},pageLayers:[{name:"page",type:"canvas"},{name:"controls",type:"div"}]})):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_34__.h)("verdocs-loader",null)))}}]),VerdocsSign}();VerdocsSign.style='verdocs-sign{display:-ms-flexbox;display:flex;overflow:hidden;position:relative;min-height:600px;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-sign div{-webkit-box-sizing:border-box;box-sizing:border-box}verdocs-sign .header{-ms-flex:0;flex:0;display:-ms-flexbox;display:flex;z-index:1000;-ms-flex-align:center;align-items:center;-webkit-transition:all 0.25s;transition:all 0.25s;-ms-flex-pack:center;justify-content:center;background-color:#33354c;-webkit-box-shadow:0 4px 4px 0 rgba(0, 0, 0, 0.24), 0 0 4px 0 rgba(0, 0, 0, 0.12);box-shadow:0 4px 4px 0 rgba(0, 0, 0, 0.24), 0 0 4px 0 rgba(0, 0, 0, 0.12)}verdocs-sign .header .inner{width:100%;max-width:1028px}verdocs-sign .intro{width:100%;height:60px;display:-ms-flexbox;display:flex;background:#ffffff;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}verdocs-sign .intro .inner{width:100%;color:#111111;padding:0 14px;font-size:20px;font-weight:500;line-height:28px;max-width:1024px}verdocs-sign .toolbar{width:100%;margin:0 auto;padding:0 14px;position:relative}verdocs-sign .tools{width:100%;color:#fff;height:56px;display:-ms-flexbox;display:flex;font-size:12px;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row;background-color:#33354c}verdocs-sign .cover{top:0;left:0;right:0;bottom:0;z-index:999;position:absolute;background:rgba(0, 0, 0, 0.5)}verdocs-sign .document{-ms-flex:1;flex:1;height:100%;display:-ms-flexbox;display:flex;position:relative;overflow-y:scroll;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}verdocs-sign .document .inner{width:100%;max-width:1028px}verdocs-sign .agree{-ms-flex:1;flex:1;-ms-flex-direction:row;flex-direction:row;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-right:10px}verdocs-sign .agree .intro{display:none}verdocs-sign .agree .header{-ms-flex:0 0 56px;flex:0 0 56px}verdocs-sign .agree .agree-checkbox{background:#ccc;-ms-flex:0 0 20px;flex:0 0 20px;display:-ms-flexbox;display:flex;width:20px;height:20px;border-radius:3px;position:relative;margin:0 10px 0 14px}verdocs-sign .agree .agree-checkbox input[type=checkbox]:checked+label:after{filter:alpha(opacity=100);opacity:1}verdocs-sign .agree .agree-checkbox label{left:2px;top:2px;width:16px;height:16px;cursor:pointer;position:absolute;background:#33354c;-webkit-box-shadow:inset 0 -1px 1px rgba(255, 255, 255, 0.8);box-shadow:inset 0 -1px 1px rgba(255, 255, 255, 0.8)}verdocs-sign .agree .agree-checkbox label .agree-checkbox label:hover::after{filter:alpha(opacity=30);opacity:0.3}verdocs-sign .agree .agree-checkbox label:after{top:2px;left:3px;width:8px;opacity:0;height:5px;content:"";position:absolute;background:transparent;filter:alpha(opacity=0);-webkit-transform:rotate(-45deg);transform:rotate(-45deg);border:2px solid #fcfff4;border-top:none;border-right:none}'}.call(this,__webpack_require__("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0B2ZXJkb2NzL2pzLXNkay9VdGlscy9Db2xvcnMuanMiLCJ3ZWJwYWNrOi8vL25vZGVfbW9kdWxlcy9AdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzL1ZhbGlkYXRvcnMuanMiLCJ3ZWJwYWNrOi8vL3NyYy91dGlscy9lcnJvcnMudHMiLCJ3ZWJwYWNrOi8vL25vZGVfbW9kdWxlcy9AdmVyZG9jcy9qcy1zZGsvVXRpbHMvRmllbGRzLmpzIiwid2VicGFjazovLy9zcmMvdXRpbHMvdXRpbHMudHMiLCJ3ZWJwYWNrOi8vL25vZGVfbW9kdWxlcy9AdmVyZG9jcy9qcy1zZGsvRW52ZWxvcGVzL0VudmVsb3Blcy5qcyIsIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0B2ZXJkb2NzL2pzLXNkay9FbnZlbG9wZXMvUmVjaXBpZW50cy5qcyIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvZW1iZWRzL3ZlcmRvY3Mtc2lnbi92ZXJkb2NzLXNpZ24udHN4Iiwid2VicGFjazovLy9zcmMvY29tcG9uZW50cy9lbWJlZHMvdmVyZG9jcy1zaWduL3ZlcmRvY3Mtc2lnbi5zY3NzIl0sIm5hbWVzIjpbImdldFJHQkEiLCJyb2xlSW5kZXgiLCJFTUFJTF9SRUdFWCIsImlzVmFsaWRFbWFpbCIsImVtYWlsIiwidGVzdCIsIlBIT05FX1JFR0VYIiwiaXNWYWxpZFBob25lIiwicGhvbmUiLCJTREtFcnJvciIsIm1lc3NhZ2UiLCJzdGF0dXNDb2RlIiwicmVzcG9uc2UiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsIkVycm9yIiwicmVzY2FsZSIsInIiLCJuIiwiaW50ZWdlclNlcXVlbmNlIiwic3RhcnQiLCJjb3VudCIsIkFycmF5IiwiZmlsbCIsIm1hcCIsIl8iLCJpbmRleCIsImZ1bGxOYW1lVG9Jbml0aWFscyIsIm5hbWUiLCJzcGxpdCIsIndvcmQiLCJqb2luIiwic2V0Q29udHJvbFN0eWxlcyIsImVsIiwiZmllbGQiLCJ4U2NhbGUiLCJ5U2NhbGUiLCJvcHRpb24iLCJzZXR0aW5ncyIsInNldHRpbmciLCJ4IiwieSIsIndpZHRoIiwiZGVmYXVsdFdpZHRoIiwidHlwZSIsImhlaWdodCIsImRlZmF1bHRIZWlnaHQiLCJvcHRpb25TZXR0aW5ncyIsInVuZGVmaW5lZCIsIm9wdGlvbnMiLCJzdHlsZSIsInBvc2l0aW9uIiwibGVmdCIsImJvdHRvbSIsInRyYW5zZm9ybSIsImdldEZpZWxkSWQiLCJnZXRGaWVsZE9wdGlvbklkIiwicmVuZGVyRG9jdW1lbnRGaWVsZCIsImRvY1BhZ2UiLCJoYW5kbGVGaWVsZENoYW5nZSIsImRpc2FibGVkIiwiZWRpdGFibGUiLCJkcmFnZ2FibGUiLCJjb250cm9sc0RpdiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjb250YWluZXJJZCIsImlkIiwiZXhpc3RpbmdGaWVsZCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImFwcGVuZENoaWxkIiwiZm9yRWFjaCIsImNoZWNrYm94SW5kZXgiLCJjYkVsIiwiYnV0dG9uSW5kZXgiLCJjb25zb2xlIiwibG9nIiwiZ2V0Um9sZUluZGV4Iiwicm9sZXMiLCJyb2xlIiwiaW5kZXhPZiIsImdldEZpZWxkU2V0dGluZ3MiLCJyZXF1aXJlZCIsInJlc3VsdCIsInZhbHVlIiwiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQIiwiZ2VuZXJhdG9yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJmdWxmaWxsZWQiLCJzdGVwIiwibmV4dCIsInJlamVjdGVkIiwiZG9uZSIsImFkb3B0IiwidGhlbiIsImFwcGx5IiwiX19nZW5lcmF0b3IiLCJib2R5IiwiZiIsInQiLCJnIiwibGFiZWwiLCJzZW50IiwidHJ5cyIsIm9wcyIsInZlcmIiLCJTeW1ib2wiLCJpdGVyYXRvciIsInRoaXMiLCJ2Iiwib3AiLCJUeXBlRXJyb3IiLCJjYWxsIiwicG9wIiwibGVuZ3RoIiwicHVzaCIsImdldFNpZ25pbmdTZXNzaW9uIiwiZW5kcG9pbnQiLCJwYXJhbXMiLCJfYSIsImFwaSIsImdldCIsImNvbmNhdCIsImVudmVsb3BlSWQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJyb2xlSWQiLCJpbnZpdGVDb2RlIiwiX2IiLCJzaWduZXJUb2tlbiIsImhlYWRlcnMiLCJzaWduZXJfdG9rZW4iLCJzZXNzaW9uIiwiZGVjb2RlQWNjZXNzVG9rZW5Cb2R5Iiwic2V0VG9rZW4iLCJyZWNpcGllbnQiLCJkYXRhIiwiZ2V0RW52ZWxvcGUiLCJnZXRFbnZlbG9wZUZpbGUiLCJkb2N1bWVudElkIiwicmVzcG9uc2VUeXBlIiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwidXBkYXRlRW52ZWxvcGVGaWVsZCIsImZpZWxkTmFtZSIsInB1dCIsIl9fYXNzaWduIiwiYXNzaWduIiwicyIsImkiLCJhcmd1bWVudHMiLCJwIiwiaGFzT3duUHJvcGVydHkiLCJWZXJkb2NzU2lnbiIsIlZlcmRvY3NFbmRwb2ludCIsImdldERlZmF1bHQiLCJFbnZlbG9wZXMuZ2V0U2lnbmluZ1Nlc3Npb24iLCJwcm9maWxlX2lkIiwiYWdyZWVkIiwibmV4dEJ1dHRvbkxhYmVsIiwiRW52ZWxvcGVzLmdldEVudmVsb3BlIiwiZW52ZWxvcGUiLCJwZGZVcmwiLCJnZXRCYXNlVVJMIiwiZW52ZWxvcGVfZG9jdW1lbnRfaWQiLCJyZWNpcGllbnRJbmRleCIsInJlY2lwaWVudHMiLCJmaW5kSW5kZXgiLCJyb2xlX25hbWUiLCJmaWVsZHMiLCJmaWx0ZXIiLCJyZWNpcGllbnRfcm9sZSIsInNka0Vycm9yIiwiZW1pdCIsInN0YXR1cyIsImhhbmRsZUNsaWNrQWdyZWUiLCJ1cGRhdGVSZWNpcGllbnRTdGF0dXMiLCJyb2xlTmFtZSIsImFjdGlvbiIsImZpbGVOYW1lIiwidXBkYXRlZF9hdCIsIkVudmVsb3Blcy5nZXRFbnZlbG9wZUZpbGUiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIm9ubG9hZCIsImEiLCJocmVmIiwid2luZG93IiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiZG93bmxvYWQiLCJkaXNwbGF5IiwiY2xpY2siLCJyZW1vdmUiLCJ1cmwiLCJvcGVuIiwic2VuZCIsImRldGFpbCIsImFsZXJ0Iiwic2F2ZVBERiIsIm9wdGlvbklkIiwiRW52ZWxvcGVzLnVwZGF0ZUVudmVsb3BlRmllbGQiLCJwcmVwYXJlZCIsImVycm9yIiwiY2hlY2tlZCIsInNlbGVjdGVkIiwicmVuZGVyQ2hlY2tib3hHcm91cE9wdGlvbiIsInBhZ2UiLCJiYWNrZ3JvdW5kQ29sb3IiLCJoIiwib25GaWVsZENoYW5nZSIsInJlbmRlclJhZGlvR3JvdXBPcHRpb24iLCJpc0ZpZWxkVmFsaWQiLCJ2YWxpZGF0b3IiLCJtaW5pbXVtX2NoZWNrZWQiLCJtYXhpbXVtX2NoZWNrZWQiLCJoYW5kbGVOZXh0IiwicmVxdWlyZWRGaWVsZHMiLCJmb2N1c2VkSW5kZXgiLCJmb2N1c2VkRmllbGQiLCJuZXh0Rm9jdXNlZEluZGV4IiwibmV4dFJlcXVpcmVkRmllbGQiLCJmb2N1c0ZpZWxkIiwicmVuZGVyRmllbGQiLCJoYW5kbGVQYWdlUmVuZGVyZWQiLCJwYWdlSW5mbyIsInJlbmRlcmVkUGFnZSIsInBhZ2VOdW1iZXIiLCJyZW5kZXIiLCJIb3N0IiwiY2xhc3MiLCJzdG9yeWJvb2siLCJvbk9wdGlvblNlbGVjdGVkIiwiaGFuZGxlT3B0aW9uU2VsZWN0ZWQiLCJmbGV4Iiwib25DaGFuZ2UiLCJodG1sRm9yIiwic2l6ZSIsIm9uQ2xpY2siLCJzb3VyY2UiLCJvblBhZ2VSZW5kZXJlZCIsInBhZ2VMYXllcnMiXSwibWFwcGluZ3MiOiI7Z0tBOEJPLFNBQVNBLFFBQVFDLFdBQ3BCLE9BQVFBLFVBQVksSUFDaEIsS0FBSyxFQUNELE9BQXFCLElBQWRBLFVBQWtCLHlCQUEyQiwyQkFDeEQsS0FBSyxFQUNELE1BQU8seUJBQ1gsS0FBSyxFQUNELE1BQU8seUJBQ1gsS0FBSyxFQUNELE1BQU8sMkJBQ1gsS0FBSyxFQUNELE1BQU8sMkJBQ1gsS0FBSyxFQUNELE1BQU8s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QUtxQixNQUFNLFNBQ1RyQixrRUFBS3FCLE1BQU0sa0JBQ1RyQixvRUFBTzdLLEtBQUssV0FBVzJDLE1BQU0sT0FBT3BCLEdBQUcseUJBQXlCdkMsS0FBSyxRQUFRdU4sU0FBVSwyQkFBTSxPQUFLNUQsa0JBQWtCLElBQ3BIa0Msb0VBQU8yQixRQUFRLDRCQUVqQjNCLDZIQUtKQSw2RUFBZ0I0QixLQUFLLFFBQVF4SSxNQUFPTyxLQUFLbUQsZ0JBQWlCM0csV0FBeUIsUUFBZCxHQUFBd0QsS0FBSzBCLGlCQUFTLGlCQUFFd0IsUUFBUWdGLFFBQVMsMEJBQU0sT0FBS3RCLFlBQVksU0FNckgsUUFBZCxHQUFBNUcsS0FBSzBCLGlCQUFTLGlCQUFFd0IsUUFBaUNtRCxrRUFBS3ZLLE1BQU8sQ0FBQ3FKLFFBQVMsVUFBOUNrQixrRUFBS3FCLE1BQU0sVUFFdENyQixrRUFBS3FCLE1BQU0sWUFDUjFILEtBQUtzRCxPQUNKK0Msa0VBQUtxQixNQUFNLFNBQ1RyQiwyRUFDRThCLE9BQVFuSSxLQUFLc0QsT0FDYjdDLFNBQVVULEtBQUtTLFNBQ2YySCxlQUFnQix3QkFBQWhMLEdBQUMsT0FBSSxPQUFLZ0ssbUJBQW1CaEssRUFBRSxFQUMvQ2lMLFdBQVksQ0FDVixDQUFDN04sS0FBTSxPQUFRZ0IsS0FBTSxVQUNyQixDQUFDaEIsS0FBTSxXQUFZZ0IsS0FBTSxXQUsvQjZLLG1GLEtBS1QsWUFoYXFCLEcsa0JDeEJELHdpRyIsImZpbGUiOiIxOC5mNDUyMjM5Ni5pZnJhbWUuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhIGByZ2JhKHIsZyxiLGEpYCBzdHJpbmcgdmFsdWUsIHJldHVybnMgdGhlIGhleCBlcXVpdmFsZW50LCBkcm9wcGluZyB0aGUgYWxwaGEgY2hhbm5lbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJHQihyZ2JhKSB7XG4gICAgdmFyIHJnYk51bWJlcnMgPSByZ2JhLnJlcGxhY2UoJ3JnYmEoJywgJycpLnJlcGxhY2UoJyknLCAnJykuc3BsaXQoJywnKTtcbiAgICB2YXIgcmdiT2JqZWN0ID0ge1xuICAgICAgICByZWQ6ICtyZ2JOdW1iZXJzWzBdLFxuICAgICAgICBncmVlbjogK3JnYk51bWJlcnNbMV0sXG4gICAgICAgIGJsdWU6ICtyZ2JOdW1iZXJzWzJdLFxuICAgICAgICBhbHBoYTogK3JnYk51bWJlcnNbM10sXG4gICAgfTtcbiAgICB2YXIgYWxwaGEgPSAxIC0gcmdiT2JqZWN0LmFscGhhO1xuICAgIHZhciByZWQgPSBNYXRoLnJvdW5kKChyZ2JPYmplY3QuYWxwaGEgKiAocmdiT2JqZWN0LnJlZCAvIDI1NSkgKyBhbHBoYSkgKiAyNTUpO1xuICAgIHZhciBncmVlbiA9IE1hdGgucm91bmQoKHJnYk9iamVjdC5hbHBoYSAqIChyZ2JPYmplY3QuZ3JlZW4gLyAyNTUpICsgYWxwaGEpICogMjU1KTtcbiAgICB2YXIgYmx1ZSA9IE1hdGgucm91bmQoKHJnYk9iamVjdC5hbHBoYSAqIChyZ2JPYmplY3QuYmx1ZSAvIDI1NSkgKyBhbHBoYSkgKiAyNTUpO1xuICAgIHJldHVybiAnIycgKyByZ2JUb0hleChyZWQpICsgcmdiVG9IZXgoZ3JlZW4pICsgcmdiVG9IZXgoYmx1ZSk7XG59XG4vKipcbiAqIEdpdmVuIGFuIFJHQiBzdHJpbmcgdmFsdWUsIHJldHVybnMgdGhlIGhleCBlcXVpdmFsZW50LlxuICovXG5mdW5jdGlvbiByZ2JUb0hleChyZ2IpIHtcbiAgICB2YXIgaGV4ID0gcmdiLnRvU3RyaW5nKDE2KTtcbiAgICBpZiAoaGV4Lmxlbmd0aCA8IDIpIHtcbiAgICAgICAgcmV0dXJuICcwJyArIGhleDtcbiAgICB9XG4gICAgcmV0dXJuIGhleDtcbn1cbi8qKlxuICogR2l2ZW4gYSBzaWduZXIgcm9sZSBpbmRleCwgcmV0dXJuIHRoZSBjb2xvciBjb2RlIGZvciB0aGF0IHNpZ25lci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJHQkEocm9sZUluZGV4KSB7XG4gICAgc3dpdGNoIChyb2xlSW5kZXggJSAxMCkge1xuICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICByZXR1cm4gcm9sZUluZGV4ID09PSAwID8gJ3JnYmEoMjU1LCAxOTMsIDcsIDAuNCknIDogJ3JnYmEoMTM0LCAxMzQsIDEzNCwgMC4zKSc7IC8vICNGRkU2OUNcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDE1NiwgMzksIDE3NiwgLjQpJzsgLy8gJyNFM0MzRTknXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSgzMywgMTUwLCAyNDMsIC40KSc7IC8vICcjQzFFMUZCJ1xuICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoMjIwLCAyMzEsIDExNywgMC4zKSc7XG4gICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSgxMjEsIDEzNCwgMjAzLCAwLjMpJztcbiAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDc3LCAxODIsIDE3MiwgMC4zKSc7XG4gICAgICAgIGNhc2UgNjpcbiAgICAgICAgICAgIHJldHVybiAncmdiYSgyNTUsIDIwMiwgMTY1LCAwLjMpJztcbiAgICAgICAgY2FzZSA3OlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDIsIDI0NywgMTkwLCAwLjMpJztcbiAgICAgICAgY2FzZSA4OlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDI1NSwgMTM4LCAxMDEsIDAuMyknO1xuICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoODIsIDI1NSwgNzksIDAuMyknO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuICdyZ2JhKDIyOSwgMTE1LCAxNTUsIDAuMyknO1xuICAgIH1cbn1cbi8qKlxuICogR2l2ZW4gYSByb2xlIG5hbWUsIHJldHVybiBhIGNvbG9yIGNvZGUgZm9yIGl0LiBUaGlzIHdvcmtzIGJ5IGNvbXB1dGluZyBhIGhhc2ggY29kZSBzbyB0aGUgc3BlY2lmaWMgY29sb3IgcmV0dXJuZWRcbiAqIGlzIG5vdCBzcGVjaWZpZWQgZXhwbGljaXRseSwgYnV0IHdpbGwgYmUgdGhlIHNhbWUgZm9yIGV2ZXJ5IGNhbGwgd2l0aCB0aGUgc2FtZSBpbnB1dCB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5hbWVUb1JHQkEoc3RyKSB7XG4gICAgaWYgKCEhc3RyKSB7XG4gICAgICAgIHZhciB2YWxpZE51bSA9IHBhcnNlSW50KHN0ci5zbGljZSgtMSksIDEwKTtcbiAgICAgICAgaWYgKCFpc05hTih2YWxpZE51bSkpIHtcbiAgICAgICAgICAgIHN0ciArPSAodmFsaWROdW0gKiA5OSkudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaGFzaCA9IDA7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBoYXNoID0gc3RyLmNoYXJDb2RlQXQoaSkgKyAoKGhhc2ggPDwgNSkgLSBoYXNoKTtcbiAgICAgICAgfVxuICAgICAgICBoYXNoID0gTWF0aC5yb3VuZChoYXNoIC8gMS4zKTtcbiAgICAgICAgdmFyIGMgPSAoaGFzaCAmIDB4MDBmZmZmMDgpLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICB2YXIgaGV4ID0gJyMnICsgJzAwMDAwJy5zdWJzdHJpbmcoMCwgNiAtIGMubGVuZ3RoKSArIGM7XG4gICAgICAgIHZhciByZXN1bHQgPSAvXiM/KFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pJC9pLmV4ZWMoaGV4KTtcbiAgICAgICAgdmFyIGNvbG9yID0ge1xuICAgICAgICAgICAgcjogcGFyc2VJbnQocmVzdWx0WzFdLCAxNiksXG4gICAgICAgICAgICBnOiBwYXJzZUludChyZXN1bHRbMl0sIDE2KSxcbiAgICAgICAgICAgIGI6IHBhcnNlSW50KHJlc3VsdFszXSwgMTYpLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gXCJyZ2JhKFwiLmNvbmNhdChjb2xvci5yLCBcIiwgXCIpLmNvbmNhdChjb2xvci5nLCBcIiwgXCIpLmNvbmNhdChjb2xvci5iLCBcIiwgMC4yKVwiKTtcbiAgICB9XG59XG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0byBvYnRhaW4gYSBjb2xvciBjb2RlIGdpdmVuIGEgcm9sZSBuYW1lIGdpdmVuIHZhcmlvdXMgcG9zc2libGUgaW5wdXRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Um9sZUNvbG9yKG5hbWUsIHJvbGVzLCBpbmRleCkge1xuICAgIGlmIChpbmRleCkge1xuICAgICAgICByZXR1cm4gZ2V0UkdCQShpbmRleCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHJvbGVzICYmIHJvbGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIHJvbGVJbmRleCA9IHJvbGVzLmZpbmRJbmRleChmdW5jdGlvbiAocm9sZSkgeyByZXR1cm4gcm9sZS5uYW1lID09PSBuYW1lOyB9KTtcbiAgICAgICAgaWYgKHJvbGVJbmRleCA+IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gcm9sZXNbcm9sZUluZGV4XS5yZ2JhIHx8IGdldFJHQkEocm9sZUluZGV4KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBuYW1lVG9SR0JBKG5hbWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gbmFtZVRvUkdCQShuYW1lKTtcbiAgICB9XG59XG4iLCIvKipcbiAqIEdldCBhbGwgZGVmaW5lZCB2YWxpZGF0b3JzXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHtEb2N1bWVudHN9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9UZW1wbGF0ZXMnO1xuICpcbiAqIGF3YWl0IERvY3VtZW50cy5nZXREb2N1bWVudHModGVtcGxhdGVJRCk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IHZhciBnZXRWYWxpZGF0b3JzID0gZnVuY3Rpb24gKGVuZHBvaW50KSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZ2V0KCcvdmFsaWRhdG9ycycpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pO1xufTtcbmV4cG9ydCB2YXIgZ2V0VmFsaWRhdG9yID0gZnVuY3Rpb24gKGVuZHBvaW50LCB2YWxpZGF0b3JOYW1lKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZ2V0KFwiL3ZhbGlkYXRvcnMvXCIuY29uY2F0KHZhbGlkYXRvck5hbWUpKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KTtcbn07XG52YXIgRU1BSUxfUkVHRVggPSAvXigoW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKSopfChcIi4rXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31dKXwoKFthLXpBLVpcXC0wLTldK1xcLikrW2EtekEtWl17Mix9KSkkLztcbmV4cG9ydCB2YXIgaXNWYWxpZEVtYWlsID0gZnVuY3Rpb24gKGVtYWlsKSB7IHJldHVybiAhIWVtYWlsICYmIEVNQUlMX1JFR0VYLnRlc3QoZW1haWwpOyB9O1xuLy8gQHNlZSBodHRwczovL3d3dy5yZWdleHRlc3Rlci5jb20vMTk3OFxudmFyIFBIT05FX1JFR0VYID0gLygoPzpcXCt8MDApWzE3XSg/OiB8XFwtKT98KD86XFwrfDAwKVsxLTldXFxkezAsMn0oPzogfFxcLSk/fCg/OlxcK3wwMCkxXFwtXFxkezN9KD86IHxcXC0pPyk/KDBcXGR8XFwoWzAtOV17M31cXCl8WzEtOV17MCwzfSkoPzooKD86IHxcXC0pWzAtOV17Mn0pezR9fCgoPzpbMC05XXsyfSl7NH0pfCgoPzogfFxcLSlbMC05XXszfSg/OiB8XFwtKVswLTldezR9KXwoWzAtOV17N30pKS87XG5leHBvcnQgdmFyIGlzVmFsaWRQaG9uZSA9IGZ1bmN0aW9uIChwaG9uZSkgeyByZXR1cm4gISFwaG9uZSAmJiBQSE9ORV9SRUdFWC50ZXN0KHBob25lKTsgfTtcbmV4cG9ydCB2YXIgaXNWYWxpZFJvbGVOYW1lID0gZnVuY3Rpb24gKHZhbHVlLCByb2xlcykgeyByZXR1cm4gcm9sZXMuZmluZEluZGV4KGZ1bmN0aW9uIChyb2xlKSB7IHJldHVybiByb2xlLm5hbWUgPT09IHZhbHVlOyB9KSAhPT0gLTE7IH07XG52YXIgVGFnUmVnRXggPSAvXlthLXpBLVowLTktXXswLDMyfSQvO1xuZXhwb3J0IHZhciBpc1ZhbGlkVGFnID0gZnVuY3Rpb24gKHZhbHVlLCB0YWdzKSB7IHJldHVybiBUYWdSZWdFeC50ZXN0KHZhbHVlKSB8fCB0YWdzLmZpbmRJbmRleChmdW5jdGlvbiAodGFnKSB7IHJldHVybiB0YWcubmFtZSA9PT0gdmFsdWU7IH0pICE9PSAtMTsgfTtcbiIsIi8qKlxuICogUGFzc2VkIHRvIHBhcmVudCBjb21wb25lbnRzIGluIGNlcnRhaW4gY2FsbGJhY2tzIHdpdGggdGhlIGxvd2VyLWxldmVsIEpTLVNESyBlbWl0cyBhbiBlcnJvclxuICovXG5leHBvcnQgY2xhc3MgU0RLRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvZGU7XG4gIHN0YXR1c0NvZGU7XG4gIHJlc3BvbnNlO1xuXG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZywgc3RhdHVzQ29kZTogbnVtYmVyLCByZXNwb25zZTogYW55KSB7XG4gICAgc3VwZXIobWVzc2FnZSB8fCAnU0RLIEVycm9yJyk7XG4gICAgdGhpcy5yZXNwb25zZSA9IHJlc3BvbnNlO1xuICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIG5ldy50YXJnZXQucHJvdG90eXBlKTtcbiAgfVxufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGdldFJUb3AoeSwgZmllbGRIZWlnaHQsIGlUZXh0SGVpZ2h0LCB5UmF0aW8pIHtcbiAgICByZXR1cm4gaVRleHRIZWlnaHQgLSAoeSArIGZpZWxkSGVpZ2h0KSAqIHlSYXRpbztcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRSTGVmdCh4LCByYXRpbykge1xuICAgIHJldHVybiB4ICogcmF0aW87XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0UlZhbHVlKHksIHJhdGlvKSB7XG4gICAgcmV0dXJuIHkgKiByYXRpbztcbn1cbmV4cG9ydCBmdW5jdGlvbiBibG9iVG9CYXNlNjQoaW1hZ2UpIHtcbiAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZmlsZVJlYWRlci5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBET01FeGNlcHRpb24oJ1Byb2JsZW0gcmVhZGluZyBibG9iLicpKTtcbiAgICAgICAgfTtcbiAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXNvbHZlKGZpbGVSZWFkZXIucmVzdWx0KTtcbiAgICAgICAgfTtcbiAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGltYWdlKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNjYWxlKHIsIG4pIHtcbiAgICByZXR1cm4gciAqIG47XG59XG4iLCIvLyBUaGVzZSBzaG91bGQgcHJvYmFibHkgYWxsIG1vdmUgdG8gSlMtU0RLXG5pbXBvcnQge3Jlc2NhbGV9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9VdGlscy9GaWVsZHMnO1xuLy8gaW1wb3J0IHtnZXRSR0JBfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvVXRpbHMvQ29sb3JzJztcbmltcG9ydCB7SVRlbXBsYXRlRmllbGR9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9UZW1wbGF0ZXMvVHlwZXMnO1xuaW1wb3J0IHtJRG9jdW1lbnRGaWVsZH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL0VudmVsb3Blcy9UeXBlcyc7XG5pbXBvcnQge0lEb2N1bWVudFBhZ2VJbmZvfSBmcm9tICcuL1R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGludGVnZXJTZXF1ZW5jZSA9IChzdGFydDogbnVtYmVyLCBjb3VudDogbnVtYmVyKTogbnVtYmVyW10gPT5cbiAgQXJyYXkoY291bnQpXG4gICAgLmZpbGwoMSlcbiAgICAubWFwKChfLCBpbmRleCkgPT4gaW5kZXggKyBzdGFydCk7XG5cbmV4cG9ydCBjb25zdCBmdWxsTmFtZVRvSW5pdGlhbHMgPSAobmFtZTogc3RyaW5nKSA9PlxuICBuYW1lXG4gICAgLnNwbGl0KCcgJylcbiAgICAubWFwKHdvcmQgPT4gd29yZFswXSlcbiAgICAuam9pbignJyk7XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0V2lkdGggPSAoZmllbGQ6IElUZW1wbGF0ZUZpZWxkIHwgSURvY3VtZW50RmllbGQpID0+IHtcbiAgc3dpdGNoIChmaWVsZC50eXBlKSB7XG4gICAgY2FzZSAnYXR0YWNobWVudCc6XG4gICAgY2FzZSAncGF5bWVudCc6XG4gICAgICByZXR1cm4gMjQ7XG4gICAgY2FzZSAnY2hlY2tib3gnOlxuICAgIGNhc2UgJ2NoZWNrYm94X2dyb3VwJzpcbiAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOlxuICAgICAgcmV0dXJuIDE0O1xuICAgIGNhc2UgJ3NpZ25hdHVyZSc6XG4gICAgY2FzZSAnaW5pdGlhbCc6XG4gICAgICByZXR1cm4gODI7XG4gIH1cblxuICByZXR1cm4gMTUwO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRIZWlnaHQgPSAoZmllbGQ6IElUZW1wbGF0ZUZpZWxkIHwgSURvY3VtZW50RmllbGQpID0+IHtcbiAgc3dpdGNoIChmaWVsZC50eXBlKSB7XG4gICAgY2FzZSAnYXR0YWNobWVudCc6XG4gICAgY2FzZSAncGF5bWVudCc6XG4gICAgICByZXR1cm4gMjQ7XG4gICAgY2FzZSAnY2hlY2tib3gnOlxuICAgIGNhc2UgJ2NoZWNrYm94X2dyb3VwJzpcbiAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOlxuICAgICAgcmV0dXJuIDE0O1xuICAgIGNhc2UgJ3NpZ25hdHVyZSc6XG4gICAgY2FzZSAnaW5pdGlhbCc6XG4gICAgICByZXR1cm4gNDE7XG4gIH1cblxuICByZXR1cm4gNTA7XG59O1xuXG5leHBvcnQgY29uc3Qgc2V0Q29udHJvbFN0eWxlcyA9IChlbDogSFRNTEVsZW1lbnQsIGZpZWxkOiBJVGVtcGxhdGVGaWVsZCB8IElEb2N1bWVudEZpZWxkLCB4U2NhbGU6IG51bWJlciwgeVNjYWxlOiBudW1iZXIsIG9wdGlvbj86IG51bWJlcikgPT4ge1xuICBjb25zdCBzZXR0aW5ncyA9IChmaWVsZCBhcyBJVGVtcGxhdGVGaWVsZCkuc2V0dGluZyB8fCAoZmllbGQgYXMgSURvY3VtZW50RmllbGQpLnNldHRpbmdzO1xuICBsZXQge3ggPSAwLCB5ID0gMCwgd2lkdGggPSBkZWZhdWx0V2lkdGgoZmllbGQpLCBoZWlnaHQgPSBkZWZhdWx0SGVpZ2h0KGZpZWxkKX0gPSBzZXR0aW5ncztcblxuICBjb25zdCBvcHRpb25TZXR0aW5ncyA9IG9wdGlvbiAhPT0gdW5kZWZpbmVkICYmIHNldHRpbmdzLm9wdGlvbnNbb3B0aW9uXSA/IHNldHRpbmdzLm9wdGlvbnNbb3B0aW9uXSA6IG51bGw7XG4gIGlmIChvcHRpb25TZXR0aW5ncykge1xuICAgIHggPSBvcHRpb25TZXR0aW5ncy54ID8/IHg7XG4gICAgeSA9IG9wdGlvblNldHRpbmdzLnkgPz8geTtcbiAgICB3aWR0aCA9IG9wdGlvblNldHRpbmdzLndpZHRoID8/IHdpZHRoO1xuICAgIGhlaWdodCA9IG9wdGlvblNldHRpbmdzLmhlaWdodCA/PyBoZWlnaHQ7XG4gIH1cblxuICBlbC5zdHlsZS53aWR0aCA9IGAke3dpZHRofXB4YDtcbiAgZWwuc3R5bGUuaGVpZ2h0ID0gYCR7aGVpZ2h0fXB4YDtcbiAgZWwuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICBlbC5zdHlsZS5sZWZ0ID0gYCR7cmVzY2FsZSh4U2NhbGUsIHgpfXB4YDtcbiAgZWwuc3R5bGUuYm90dG9tID0gYCR7cmVzY2FsZSh5U2NhbGUsIHkpfXB4YDtcbiAgZWwuc3R5bGUudHJhbnNmb3JtID0gYHNjYWxlKCR7eFNjYWxlfSwgJHt5U2NhbGV9KWA7XG4gIC8vIGVsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGZpZWxkWydyZ2JhJ10gfHwgZ2V0UkdCQShyb2xlSW5kZXgpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEZpZWxkSWQgPSAoZmllbGQ6IElUZW1wbGF0ZUZpZWxkIHwgSURvY3VtZW50RmllbGQpID0+IHtcbiAgcmV0dXJuIGB2ZXJkb2NzLWRvYy1mbGQtJHtmaWVsZC5uYW1lfWA7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0RmllbGRPcHRpb25JZCA9IChmaWVsZDogSVRlbXBsYXRlRmllbGQsIGluZGV4OiBudW1iZXIpID0+IHtcbiAgcmV0dXJuIGB2ZXJkb2NzLWRvYy1mbGQtJHtmaWVsZC5uYW1lfS0ke2luZGV4fWA7XG59O1xuXG5leHBvcnQgY29uc3QgcmVuZGVyRG9jdW1lbnRGaWVsZCA9IChcbiAgZmllbGQ6IElUZW1wbGF0ZUZpZWxkLFxuICBkb2NQYWdlOiBJRG9jdW1lbnRQYWdlSW5mbyxcbiAgcm9sZUluZGV4OiBudW1iZXIsXG4gIGhhbmRsZUZpZWxkQ2hhbmdlOiAoZmllbGQ6IElUZW1wbGF0ZUZpZWxkLCBlOiBhbnksIG9wdGlvbklkPzogc3RyaW5nKSA9PiB2b2lkLFxuICBkaXNhYmxlZDogYm9vbGVhbixcbiAgZWRpdGFibGU6IGJvb2xlYW4gPSBmYWxzZSxcbiAgZHJhZ2dhYmxlOiBib29sZWFuID0gZmFsc2UsXG4pID0+IHtcbiAgY29uc3QgY29udHJvbHNEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkb2NQYWdlLmNvbnRhaW5lcklkICsgJy1jb250cm9scycpO1xuICBpZiAoIWNvbnRyb2xzRGl2KSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3dpdGNoIChmaWVsZC50eXBlKSB7XG4gICAgY2FzZSAnYXR0YWNobWVudCc6XG4gICAgY2FzZSAnZGF0ZSc6XG4gICAgY2FzZSAnZHJvcGRvd24nOlxuICAgIGNhc2UgJ2luaXRpYWwnOlxuICAgIGNhc2UgJ3BheW1lbnQnOlxuICAgIGNhc2UgJ3NpZ25hdHVyZSc6XG4gICAgY2FzZSAndGltZXN0YW1wJzpcbiAgICBjYXNlICd0ZXh0YXJlYSc6XG4gICAgY2FzZSAndGV4dGJveCc6IHtcbiAgICAgIGNvbnN0IGlkID0gZ2V0RmllbGRJZChmaWVsZCk7XG4gICAgICBjb25zdCBleGlzdGluZ0ZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgICAgaWYgKGV4aXN0aW5nRmllbGQpIHtcbiAgICAgICAgc2V0Q29udHJvbFN0eWxlcyhleGlzdGluZ0ZpZWxkLCBmaWVsZCwgZG9jUGFnZS54U2NhbGUsIGRvY1BhZ2UueVNjYWxlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBlbDogYW55ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgdmVyZG9jcy1maWVsZC0ke2ZpZWxkLnR5cGV9YCk7XG4gICAgICBlbC5maWVsZCA9IGZpZWxkO1xuICAgICAgZWwuc2V0QXR0cmlidXRlKCdpZCcsIGlkKTtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZSgncm9sZWluZGV4Jywgcm9sZUluZGV4KTtcbiAgICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBpZiAoZWRpdGFibGUpIHtcbiAgICAgICAgZWwuc2V0QXR0cmlidXRlKCdlZGl0YWJsZScsIHRydWUpO1xuICAgICAgfVxuICAgICAgaWYgKGRyYWdnYWJsZSkge1xuICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoJ2RyYWdnYWJsZScsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignZmllbGRDaGFuZ2UnLCBlID0+IGhhbmRsZUZpZWxkQ2hhbmdlKGZpZWxkLCBlKSk7XG4gICAgICBzZXRDb250cm9sU3R5bGVzKGVsLCBmaWVsZCwgZG9jUGFnZS54U2NhbGUsIGRvY1BhZ2UueVNjYWxlKTtcbiAgICAgIGNvbnRyb2xzRGl2LmFwcGVuZENoaWxkKGVsKTtcblxuICAgICAgcmV0dXJuIGVsO1xuICAgIH1cblxuICAgIGNhc2UgJ2NoZWNrYm94X2dyb3VwJzpcbiAgICAgIGZpZWxkLnNldHRpbmcub3B0aW9ucy5mb3JFYWNoKChfLCBjaGVja2JveEluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IGlkID0gZ2V0RmllbGRPcHRpb25JZChmaWVsZCwgY2hlY2tib3hJbmRleCk7XG4gICAgICAgIGNvbnN0IGV4aXN0aW5nRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICAgIGlmIChleGlzdGluZ0ZpZWxkKSB7XG4gICAgICAgICAgc2V0Q29udHJvbFN0eWxlcyhleGlzdGluZ0ZpZWxkLCBmaWVsZCwgZG9jUGFnZS54U2NhbGUsIGRvY1BhZ2UueVNjYWxlKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjYkVsOiBhbnkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGB2ZXJkb2NzLWZpZWxkLWNoZWNrYm94YCk7XG4gICAgICAgIGNiRWwuZmllbGQgPSBmaWVsZDtcbiAgICAgICAgY2JFbC5zZXRBdHRyaWJ1dGUoJ2lkJywgaWQpO1xuICAgICAgICBjYkVsLnNldEF0dHJpYnV0ZSgncm9sZWluZGV4Jywgcm9sZUluZGV4KTtcbiAgICAgICAgY2JFbC5zZXRBdHRyaWJ1dGUoJ29wdGlvbicsIGNoZWNrYm94SW5kZXgpO1xuICAgICAgICBpZiAoZGlzYWJsZWQpIHtcbiAgICAgICAgICBjYkVsLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBjYkVsLmFkZEV2ZW50TGlzdGVuZXIoJ2ZpZWxkQ2hhbmdlJywgZSA9PiBoYW5kbGVGaWVsZENoYW5nZShmaWVsZCwgZSkpO1xuICAgICAgICBzZXRDb250cm9sU3R5bGVzKGNiRWwsIGZpZWxkLCBkb2NQYWdlLnhTY2FsZSwgZG9jUGFnZS55U2NhbGUpO1xuICAgICAgICBjb250cm9sc0Rpdi5hcHBlbmRDaGlsZChjYkVsKTtcblxuICAgICAgICByZXR1cm4gY2JFbDtcbiAgICAgIH0pO1xuXG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3JhZGlvX2J1dHRvbl9ncm91cCc6XG4gICAgICBmaWVsZC5zZXR0aW5nLm9wdGlvbnMuZm9yRWFjaCgoXywgYnV0dG9uSW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBnZXRGaWVsZE9wdGlvbklkKGZpZWxkLCBidXR0b25JbmRleCk7XG4gICAgICAgIGNvbnN0IGV4aXN0aW5nRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICAgIGlmIChleGlzdGluZ0ZpZWxkKSB7XG4gICAgICAgICAgc2V0Q29udHJvbFN0eWxlcyhleGlzdGluZ0ZpZWxkLCBmaWVsZCwgZG9jUGFnZS54U2NhbGUsIGRvY1BhZ2UueVNjYWxlKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjYkVsOiBhbnkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGB2ZXJkb2NzLWZpZWxkLXJhZGlvLWJ1dHRvbmApO1xuICAgICAgICBjYkVsLmZpZWxkID0gZmllbGQ7XG4gICAgICAgIGNiRWwuc2V0QXR0cmlidXRlKCdpZCcsIGlkKTtcbiAgICAgICAgY2JFbC5zZXRBdHRyaWJ1dGUoJ3JvbGVpbmRleCcsIHJvbGVJbmRleCk7XG4gICAgICAgIGNiRWwuc2V0QXR0cmlidXRlKCdvcHRpb24nLCBidXR0b25JbmRleCk7XG4gICAgICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgICAgIGNiRWwuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGNiRWwuYWRkRXZlbnRMaXN0ZW5lcignZmllbGRDaGFuZ2UnLCBlID0+IGhhbmRsZUZpZWxkQ2hhbmdlKGZpZWxkLCBlKSk7XG4gICAgICAgIHNldENvbnRyb2xTdHlsZXMoY2JFbCwgZmllbGQsIGRvY1BhZ2UueFNjYWxlLCBkb2NQYWdlLnlTY2FsZSwgYnV0dG9uSW5kZXgpO1xuICAgICAgICBjb250cm9sc0Rpdi5hcHBlbmRDaGlsZChjYkVsKTtcblxuICAgICAgICByZXR1cm4gY2JFbDtcbiAgICAgIH0pO1xuXG4gICAgICBicmVhaztcblxuICAgIC8vIGNhc2UgJ2F0dGFjaG1lbnQnOlxuICAgIC8vICAgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd2ZXJkb2NzLWZpZWxkLWF0dGFjaG1lbnQnKTtcbiAgICAvLyAgIGVsLnNldEF0dHJpYnV0ZSgndmFsdWUnLCByZXN1bHQgfHwgJycpO1xuICAgIC8vICAgYnJlYWs7XG4gICAgLy8gY2FzZSAncGF5bWVudCc6XG4gICAgLy8gICBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZlcmRvY3MtZmllbGQtcGF5bWVudCcpO1xuICAgIC8vICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnNvbGUubG9nKCdbUFJFVklFV10gU2tpcHBpbmcgdW5zdXBwb3J0ZWQgZmllbGQgdHlwZScsIGZpZWxkKTtcbiAgICAgIHJldHVybiBudWxsO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Um9sZUluZGV4ID0gKHJvbGVzOiBzdHJpbmdbXSwgcm9sZTogc3RyaW5nKSA9PiByb2xlcy5pbmRleE9mKHJvbGUpIHx8IDA7XG5cbi8vIFRPRE86IFdlIGNhbiBjbGVhbiB0aGlzIHVwIGEgbG90IGlmIHdlIGFsdGVyIHRoZSBBUEkgdG8gZW1pdCBib3RoIHNldHRpbmcgYW5kIHNldHRpbmdzIHJlZ2FyZGxlc3Mgb2YgdGhlIHNvdXJjZSB0eXBlLFxuLy8gICBidXQgdGhlbiBtZXJnZSB0aGUgU0RLIHR5cGVzIHRvIGVuY291cmFnZSBkZXZlbG9wZXJzIHRvIHVzZSBqdXN0IGBzZXR0aW5nc2AuXG5leHBvcnQgY29uc3QgZ2V0RmllbGRTZXR0aW5ncyA9IChmaWVsZDogSVRlbXBsYXRlRmllbGQgfCBJRG9jdW1lbnRGaWVsZCkgPT4ge1xuICBpZiAoKGZpZWxkIGFzIElUZW1wbGF0ZUZpZWxkKS5zZXR0aW5nKSB7XG4gICAgcmV0dXJuIChmaWVsZCBhcyBJVGVtcGxhdGVGaWVsZCkuc2V0dGluZztcbiAgfVxuXG4gIGlmICgoZmllbGQgYXMgSURvY3VtZW50RmllbGQpLnNldHRpbmdzKSB7XG4gICAgcmV0dXJuIChmaWVsZCBhcyBJRG9jdW1lbnRGaWVsZCkuc2V0dGluZ3M7XG4gIH1cblxuICByZXR1cm4ge3g6IDAsIHk6IDAsIHJlcXVpcmVkOiBmYWxzZSwgZGlzYWJsZWQ6IGZhbHNlLCByZXN1bHQ6ICcnLCB2YWx1ZTogJyd9O1xufTtcbiIsInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG5pbXBvcnQgeyBkZWNvZGVBY2Nlc3NUb2tlbkJvZHkgfSBmcm9tICcuLi9VdGlscy9Ub2tlbic7XG4vKipcbiAqIENyZWF0ZSBhbiBlbnZlbG9wZVxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7RW52ZWxvcGVzLCBJQ3JlYXRlRW52ZWxvcGVSb2xlLCBJQ3JlYXRlRW52ZWxvcGVSZXF1ZXN0fSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvRW52ZWxvcGVzJztcbiAqXG4gKiBjb25zdCByb2xlMTogSUNyZWF0ZUVudmVsb3BlUm9sZSA9IHtcbiAqICAgdHlwZTogJ3NpZ25lcicsXG4gKiAgIG5hbWU6ICdTZWxsZXInLFxuICogICBmdWxsX25hbWU6ICdQYWlnZSBUdXJuZXInLFxuICogICBlbWFpbDogJ3BhaWdlLnR1cm5lckBub21haWwuY29tJyxcbiAqICAgcGhvbmU6ICcnLFxuICogICBzZXF1ZW5jZTogMSxcbiAqICAgZGVsZWdhdG9yOiBmYWxzZSxcbiAqICAgbWVzc2FnZTogJycsXG4gKiB9O1xuICpcbiAqIGNvbnN0IHJvbGUyOiBJQ3JlYXRlRW52ZWxvcGVSb2xlID0ge1xuICogICB0eXBlOiAnc2lnbmVyJyxcbiAqICAgbmFtZTogJ0J1eWVyJyxcbiAqICAgZnVsbF9uYW1lOiAnV2lsbCBQb3dlcicsXG4gKiAgIGVtYWlsOiAnd2lsbC5wb3dlckBub21haWwuY29tJyxcbiAqICAgcGhvbmU6ICcnLFxuICogICBzZXF1ZW5jZTogMixcbiAqICAgZGVsZWdhdG9yOiBmYWxzZSxcbiAqICAgbWVzc2FnZTogJycsXG4gKiB9O1xuICpcbiAqIGNvbnN0IHJlcXVlc3Q6IElDcmVhdGVFbnZlbG9wZVJlcXVlc3QgPSB7dGVtcGxhdGVfaWQ6ICdkMjMzODc0Mi1mM2ExLTQ2NWItODU5Mi04MDY1ODc0MTNjYzEnLCBuYW1lOiAnQmlsbCBvZiBTYWxlJywgcm9sZXM6IFtyb2xlMSwgcm9sZTJdfTtcbiAqIGNvbnN0IHtpZCwgcmVjaXBpZW50c30gPSBhd2FpdCBFbnZlbG9wZXMuY3JlYXRlRW52ZWxvcGUoVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKSwgcmVxdWVzdCk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IHZhciBjcmVhdGVFbnZlbG9wZSA9IGZ1bmN0aW9uIChlbmRwb2ludCwgcmVxdWVzdCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgICAgICAgICAucG9zdCgnL2VudmVsb3BlcycsIHJlcXVlc3QpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSldO1xuICAgIH0pO1xufSk7IH07XG4vKipcbiAqIEdldCBhIHN1bW1hcnkgb2YgY3VycmVudGx5IGFjdGl2ZSBlbnZlbG9wZXMuXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHtFbnZlbG9wZXN9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9FbnZlbG9wZXMnO1xuICpcbiAqIGNvbnN0IHthY3Rpb25fcmVxdWlyZWQsIGNvbXBsZXRlZCwgd2FpdGluZ19vbl9vdGhlcnN9ID0gYXdhaXQgRW52ZWxvcGVzLmdldFN1bW1hcnkoVmVyZG9jc0VuZHBvaW50LmdldERlZmF1bHQoKSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IHZhciBnZXRTdW1tYXJ5ID0gZnVuY3Rpb24gKGVuZHBvaW50LCBwYWdlKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAgICAgICAgIC5wb3N0KCcvZW52ZWxvcGVzL3N1bW1hcnknLCB7IHBhZ2U6IHBhZ2UgfSlcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KV07XG4gICAgfSk7XG59KTsgfTtcbi8qKlxuICogU2VhcmNoIGZvciBlbnZlbG9wZXMgbWF0Y2hpbmcgdmFyaW91cyBjcml0ZXJpYS5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQge0VudmVsb3Blc30gZnJvbSAnQHZlcmRvY3MvanMtc2RrL0VudmVsb3Blcyc7XG4gKlxuICogY29uc3Qge3Jlc3VsdCwgcGFnZSwgdG90YWx9ID0gYXdhaXQgRW52ZWxvcGVzLnNlYXJjaChWZXJkb2NzRW5kcG9pbnQuZ2V0RGVmYXVsdCgpLCB7IC4uLiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgdmFyIHNlYXJjaEVudmVsb3BlcyA9IGZ1bmN0aW9uIChlbmRwb2ludCwgcGFyYW1zKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAgICAgICAgIC5wb3N0KCcvZW52ZWxvcGVzL3NlYXJjaCcsIHBhcmFtcylcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KV07XG4gICAgfSk7XG59KTsgfTtcbi8qKlxuICogR2V0IGEgc2lnbmluZyBzZXNzaW9uIGZvciBhbiBFbnZlbG9wZS5cbiAqL1xuZXhwb3J0IHZhciBnZXRTaWduaW5nU2Vzc2lvbiA9IGZ1bmN0aW9uIChlbmRwb2ludCwgcGFyYW1zKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAgICAgICAgIC5nZXQoXCIvZW52ZWxvcGVzL1wiLmNvbmNhdChwYXJhbXMuZW52ZWxvcGVJZCwgXCIvcmVjaXBpZW50cy9cIikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudChwYXJhbXMucm9sZUlkKSwgXCIvaW52aXRhdGlvbi9cIikuY29uY2F0KHBhcmFtcy5pbnZpdGVDb2RlKSlcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocikge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAgICAgLy8gQXZvaWRpbmcgYSBqc29ud2VidG9rZW4gZGVwZW5kZW5jeSBoZXJlIC0gd2UgZG9uJ3QgYWN0dWFsbHkgbmVlZCB0aGUgd2hvbGUgbGlicmFyeVxuICAgICAgICAgICAgICAgIHZhciBzaWduZXJUb2tlbiA9ICgoX2EgPSByLmhlYWRlcnMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zaWduZXJfdG9rZW4pIHx8ICcnO1xuICAgICAgICAgICAgICAgIHZhciBzZXNzaW9uID0gZGVjb2RlQWNjZXNzVG9rZW5Cb2R5KHNpZ25lclRva2VuKTtcbiAgICAgICAgICAgICAgICBlbmRwb2ludC5zZXRUb2tlbigoX2IgPSByLmhlYWRlcnMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5zaWduZXJfdG9rZW4pO1xuICAgICAgICAgICAgICAgIHJldHVybiB7IHJlY2lwaWVudDogci5kYXRhLCBzZXNzaW9uOiBzZXNzaW9uLCBzaWduZXJUb2tlbjogc2lnbmVyVG9rZW4gfTtcbiAgICAgICAgICAgIH0pXTtcbiAgICB9KTtcbn0pOyB9O1xuLyoqXG4gKiBHZXQgdGhlIGxpc3Qgb2YgcmVjaXBpZW50cyBmb3IgYW4gRW52ZWxvcGUuXG4gKi9cbmV4cG9ydCB2YXIgZ2V0RW52ZWxvcGVSZWNpcGllbnRzID0gZnVuY3Rpb24gKGVuZHBvaW50LCBlbnZlbG9wZUlkKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAgICAgICAgIC5nZXQoXCIvZW52ZWxvcGVzL1wiLmNvbmNhdChlbnZlbG9wZUlkLCBcIi9yZWNpcGllbnRzXCIpKVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pXTtcbiAgICB9KTtcbn0pOyB9O1xuLyoqXG4gKiBHZXQgYWxsIG1ldGFkYXRhIGZvciBhbiBFbnZlbG9wZS5cbiAqL1xuZXhwb3J0IHZhciBnZXRFbnZlbG9wZSA9IGZ1bmN0aW9uIChlbmRwb2ludCwgZW52ZWxvcGVJZCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgICAgICAgICAuZ2V0KFwiL2VudmVsb3Blcy9cIi5jb25jYXQoZW52ZWxvcGVJZCkpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSldO1xuICAgIH0pO1xufSk7IH07XG4vKipcbiAqIENhbmNlbCBhbiBFbnZlbG9wZS5cbiAqL1xuZXhwb3J0IHZhciBjYW5jZWxFbnZlbG9wZSA9IGZ1bmN0aW9uIChlbmRwb2ludCwgZW52ZWxvcGVJZCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgICAgICAgICAucHV0KFwiL2VudmVsb3Blcy9cIi5jb25jYXQoZW52ZWxvcGVJZCksIHsgYWN0aW9uOiAnY2FuY2VsJyB9KVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pXTtcbiAgICB9KTtcbn0pOyB9O1xuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIHJlY2lwaWVudCBoYXMgYSBwZW5kaW5nIGFjdGlvbi4gTm90ZSB0aGF0IHRoaXMgZG9lcyBub3QgbmVjZXNzYXJpbHkgbWVhbiB0aGUgcmVjaXBpZW50IGNhbiBhY3QgKHlldCkuXG4gKi9cbmV4cG9ydCB2YXIgcmVjaXBpZW50SGFzQWN0aW9uID0gZnVuY3Rpb24gKHJlY2lwaWVudCkgeyByZXR1cm4gIVsnc3VibWl0dGVkJywgJ2NhbmNlbGVkJywgJ2RlY2xpbmVkJ10uaW5jbHVkZXMocmVjaXBpZW50LnN0YXR1cyk7IH07XG4vKipcbiAqIFJldHVybnMgdGhlIHJlY2lwaWVudHMgd2hvIHN0aWxsIGhhdmUgYSBwZW5kaW5nIGFjdGlvbi4gTm90ZSB0aGF0IG5vdCBhbGwgb2YgdGhlc2UgcmVjaXBpZW50cyBtYXkgYmUgYWJsZSB0byBhY3QgKHlldCkuXG4gKi9cbmV4cG9ydCB2YXIgZ2V0UmVjaXBpZW50c1dpdGhBY3Rpb25zID0gZnVuY3Rpb24gKGVudmVsb3BlKSB7IHJldHVybiAoKGVudmVsb3BlID09PSBudWxsIHx8IGVudmVsb3BlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlbnZlbG9wZS5yZWNpcGllbnRzKSB8fCBbXSkuZmlsdGVyKHJlY2lwaWVudEhhc0FjdGlvbik7IH07XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgcmVjaXBpZW50IGNhbiBhY3QuXG4gKi9cbmV4cG9ydCB2YXIgcmVjaXBpZW50Q2FuQWN0ID0gZnVuY3Rpb24gKHJlY2lwaWVudCwgcmVjaXBpZW50c1dpdGhBY3Rpb25zKSB7IHZhciBfYTsgcmV0dXJuIHJlY2lwaWVudC5zZXF1ZW5jZSA9PT0gKChfYSA9IHJlY2lwaWVudHNXaXRoQWN0aW9ucyA9PT0gbnVsbCB8fCByZWNpcGllbnRzV2l0aEFjdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlY2lwaWVudHNXaXRoQWN0aW9uc1swXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNlcXVlbmNlKTsgfTtcbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSB1c2VyIGNhbiBhY3QuXG4gKi9cbmV4cG9ydCB2YXIgdXNlckNhbkFjdCA9IGZ1bmN0aW9uIChlbWFpbCwgcmVjaXBpZW50c1dpdGhBY3Rpb25zKSB7XG4gICAgdmFyIF9hO1xuICAgIHZhciByZWNpcGllbnQgPSByZWNpcGllbnRzV2l0aEFjdGlvbnMuZmluZChmdW5jdGlvbiAocikgeyByZXR1cm4gci5lbWFpbCA9PT0gZW1haWw7IH0pO1xuICAgIHJldHVybiByZWNpcGllbnQgJiYgcmVjaXBpZW50LnNlcXVlbmNlID09PSAoKF9hID0gcmVjaXBpZW50c1dpdGhBY3Rpb25zID09PSBudWxsIHx8IHJlY2lwaWVudHNXaXRoQWN0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVjaXBpZW50c1dpdGhBY3Rpb25zWzBdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc2VxdWVuY2UpO1xufTtcbi8qKlxuICogR2V0IChiaW5hcnkgZG93bmxvYWQpIGEgZmlsZSBhdHRhY2hlZCB0byBhbiBFbnZlbG9wZS4gSXQgaXMgaW1wb3J0YW50IHRvIHVzZSB0aGlzIG1ldGhvZFxuICogcmF0aGVyIHRoYW4gYSBkaXJlY3QgQSBIUkVGIG9yIHNpbWlsYXIgbGluayB0byBzZXQgdGhlIGF1dGhvcml6YXRpb24gaGVhZGVycyBmb3IgdGhlXG4gKiByZXF1ZXN0LlxuICovXG5leHBvcnQgdmFyIGdldEVudmVsb3BlRmlsZSA9IGZ1bmN0aW9uIChlbmRwb2ludCwgZW52ZWxvcGVJZCwgZG9jdW1lbnRJZCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgICAgICAgICAuZ2V0KFwiL2VudmVsb3Blcy9cIi5jb25jYXQoZW52ZWxvcGVJZCwgXCIvZW52ZWxvcGVfZG9jdW1lbnRzL1wiKS5jb25jYXQoZG9jdW1lbnRJZCwgXCI/ZmlsZT10cnVlXCIpLCB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnYXJyYXlidWZmZXInLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gQnVmZmVyLmZyb20oci5kYXRhLCAnYmluYXJ5JykudG9TdHJpbmcoJ2Jhc2U2NCcpOyB9KV07XG4gICAgfSk7XG59KTsgfTtcbi8qKlxuICogVXBkYXRlIGEgRG9jdW1lbnQgZmllbGQuIFR5cGljYWxseSBjYWxsZWQgZHVyaW5nIHRoZSBzaWduaW5nIHByb2Nlc3MgYXMgYSBSZWNpcGllbnQgZmlsbHMgaW4gZmllbGRzLlxuICovXG5leHBvcnQgdmFyIHVwZGF0ZUVudmVsb3BlRmllbGQgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIGVudmVsb3BlSWQsIGZpZWxkTmFtZSwgdmFsdWUpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgICAgICAgICAgLnB1dChcIi9lbnZlbG9wZXMvXCIuY29uY2F0KGVudmVsb3BlSWQsIFwiL2ZpZWxkcy9cIikuY29uY2F0KGZpZWxkTmFtZSksIHZhbHVlKVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pXTtcbiAgICB9KTtcbn0pOyB9O1xuLyoqXG4gKiBVcGRhdGUgYSBEb2N1bWVudCBzaWduYXR1cmUgZmllbGQuIFNpZ25hdHVyZSBmaWVsZHMgYXJlIElELWRyaXZlbi4gQ2FsbCBgRG9jdW1lbnQuY3JlYXRlU2lnbmF0dXJlKClgIGZpcnN0IHRvIGNyZWF0ZSBhXG4gKiBzaWduYXR1cmUgZm9yIGEgUmVjaXBpZW50LCB0aGVuIGNhbGwgYERvY3VtZW50cy51cGRhdGVEb2N1bWVudEZpZWxkU2lnbmF0dXJlKClgIHRvIGF0dGFjaCBpdCB0byBhIGZpZWxkLlxuICovXG5leHBvcnQgdmFyIHVwZGF0ZUVudmVsb3BlRmllbGRTaWduYXR1cmUgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIGVudmVsb3BlSWQsIGZpZWxkTmFtZSwgc2lnbmF0dXJlSWQpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgICAgICAgICAgLnB1dChcIi9lbnZlbG9wZXMvXCIuY29uY2F0KGVudmVsb3BlSWQsIFwiL2ZpZWxkcy9cIikuY29uY2F0KGZpZWxkTmFtZSwgXCIvc2lnbmF0dXJlL1wiKS5jb25jYXQoc2lnbmF0dXJlSWQpKVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pXTtcbiAgICB9KTtcbn0pOyB9O1xuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG4vKipcbiAqIFVwZGF0ZSBhIHJlY2lwaWVudCdzIHN0YXR1cyBibG9ja1xuICovXG5leHBvcnQgdmFyIHVwZGF0ZVJlY2lwaWVudFN0YXR1cyA9IGZ1bmN0aW9uIChlbmRwb2ludCwgZW52ZWxvcGVJZCwgcm9sZU5hbWUsIGFjdGlvbiwgcGFyYW1zKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAgICAgICAgIC5wdXQoXCIvZW52ZWxvcGVzL1wiLmNvbmNhdChlbnZlbG9wZUlkLCBcIi9yZWNpcGllbnRzL1wiKS5jb25jYXQocm9sZU5hbWUpLCBfX2Fzc2lnbih7IHJvbGVfbmFtZTogcm9sZU5hbWUsIGFjdGlvbjogYWN0aW9uIH0sIChwYXJhbXMgfHwge30pKSlcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KV07XG4gICAgfSk7XG59KTsgfTtcbmV4cG9ydCB2YXIgZ2V0U2lnbmVyVG9rZW4gPSBmdW5jdGlvbiAoZW5kcG9pbnQsIGVudmVsb3BlSWQsIHJvbGVOYW1lKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZ2V0KFwiL2VudmVsb3Blcy9cIi5jb25jYXQoZW52ZWxvcGVJZCwgXCIvcmVjaXBpZW50cy9cIikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudChyb2xlTmFtZSksIFwiL3NpZ25lci10b2tlblwiKSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xuZXhwb3J0IHZhciBnZXRJblBlcnNvbkxpbmsgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIGVudmVsb3BlSWQsIHJvbGVOYW1lKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZ2V0KFwiL2VudmVsb3Blcy9cIi5jb25jYXQoZW52ZWxvcGVJZCwgXCIvcmVjaXBpZW50cy9cIikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudChyb2xlTmFtZSksIFwiP2luX3BlcnNvbl9saW5rPXRydWVcIikpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pO1xufTtcbiIsImltcG9ydCB7RXZlbnQsIEV2ZW50RW1pdHRlciwgSG9zdH0gZnJvbSAnQHN0ZW5jaWwvY29yZSc7XG5pbXBvcnQge1ZlcmRvY3NFbmRwb2ludH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrJztcbmltcG9ydCB7RW52ZWxvcGVzfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvRW52ZWxvcGVzJztcbmltcG9ydCB7Z2V0UkdCQX0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1V0aWxzL0NvbG9ycyc7XG5pbXBvcnQge3Jlc2NhbGV9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9VdGlscy9GaWVsZHMnO1xuaW1wb3J0IHtDb21wb25lbnQsIFByb3AsIFN0YXRlLCBofSBmcm9tICdAc3RlbmNpbC9jb3JlJztcbmltcG9ydCB7dXBkYXRlUmVjaXBpZW50U3RhdHVzfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvRW52ZWxvcGVzL1JlY2lwaWVudHMnO1xuaW1wb3J0IHtpc1ZhbGlkRW1haWwsIGlzVmFsaWRQaG9uZX0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9WYWxpZGF0b3JzJztcbmltcG9ydCB7SUVudmVsb3BlLCBJRG9jdW1lbnRGaWVsZCwgSVJlY2lwaWVudH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL0VudmVsb3Blcy9UeXBlcyc7XG5pbXBvcnQge0lQYWdlUmVuZGVyRXZlbnR9IGZyb20gJy4uL3ZlcmRvY3Mtdmlldy92ZXJkb2NzLXZpZXcnO1xuaW1wb3J0IHtnZXRGaWVsZElkLCBzZXRDb250cm9sU3R5bGVzfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlscyc7XG5pbXBvcnQge0lEb2N1bWVudFBhZ2VJbmZvfSBmcm9tICcuLi8uLi8uLi91dGlscy9UeXBlcyc7XG5pbXBvcnQge1NES0Vycm9yfSBmcm9tICcuLi8uLi8uLi91dGlscy9lcnJvcnMnO1xuXG4vKipcbiAqIERpc3BsYXkgYSBkb2N1bWVudCBzaWduaW5nIGV4cGVyaWVuY2UuXG4gKlxuICogKioqTk9URTogVGhpcyBzYW1wbGUgZG9jdW1lbnQgd2lsbCByZXNldCBldmVyeSAxMCBtaW51dGVzLi4uKioqXG4gKi9cbkBDb21wb25lbnQoe1xuICB0YWc6ICd2ZXJkb2NzLXNpZ24nLFxuICBzdHlsZVVybDogJ3ZlcmRvY3Mtc2lnbi5zY3NzJyxcbiAgc2hhZG93OiBmYWxzZSxcbn0pXG5leHBvcnQgY2xhc3MgVmVyZG9jc1NpZ24ge1xuICAvKipcbiAgICogVGhlIGVuZHBvaW50IHRvIHVzZSB0byBjb21tdW5pY2F0ZSB3aXRoIFZlcmRvY3MuIElmIG5vdCBzZXQsIHRoZSBkZWZhdWx0IGVuZHBvaW50IHdpbGwgYmUgdXNlZC5cbiAgICovXG4gIEBQcm9wKCkgZW5kcG9pbnQ6IFZlcmRvY3NFbmRwb2ludCA9IFZlcmRvY3NFbmRwb2ludC5nZXREZWZhdWx0KCk7XG5cbiAgLyoqXG4gICAqIFRoZSBJRCBvZiB0aGUgZW52ZWxvcGUgdG8gc2lnbi5cbiAgICovXG4gIEBQcm9wKCkgZW52ZWxvcGVJZDogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG5cbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSByb2xlIHRoYXQgd2lsbCBiZSBzaWduaW5nLlxuICAgKi9cbiAgQFByb3AoKSByb2xlSWQ6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gIC8qKlxuICAgKiBUaGUgaW52aXRlIGNvZGUgZm9yIHRoZSBzaWduZXIuXG4gICAqL1xuICBAUHJvcCgpIGludml0ZUNvZGU6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCBpZiBhbiBlcnJvciBvY2N1cnMuIFRoZSBldmVudCBkZXRhaWxzIHdpbGwgY29udGFpbiBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZXJyb3IuIE1vc3QgZXJyb3JzIHdpbGxcbiAgICogdGVybWluYXRlIHRoZSBwcm9jZXNzLCBhbmQgdGhlIGNhbGxpbmcgYXBwbGljYXRpb24gc2hvdWxkIGNvcnJlY3QgdGhlIGNvbmRpdGlvbiBhbmQgcmUtcmVuZGVyIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBARXZlbnQoe2NvbXBvc2VkOiB0cnVlfSkgc2RrRXJyb3I6IEV2ZW50RW1pdHRlcjxTREtFcnJvcj47XG5cbiAgQFN0YXRlKCkgcmVjaXBpZW50OiBJUmVjaXBpZW50IHwgbnVsbCA9IG51bGw7XG5cbiAgQFN0YXRlKCkgc2lnbmVyVG9rZW4gPSBudWxsO1xuICBAU3RhdGUoKSBwZGZVcmwgPSBudWxsO1xuICBAU3RhdGUoKSByZWNpcGllbnRJbmRleDogbnVtYmVyID0gLTE7XG4gIEBTdGF0ZSgpIGVudmVsb3BlOiBJRW52ZWxvcGUgfCBudWxsID0gbnVsbDtcbiAgQFN0YXRlKCkgZmllbGRzOiBJRG9jdW1lbnRGaWVsZFtdID0gW107XG5cbiAgQFN0YXRlKCkgaGFzU2lnbmF0dXJlID0gZmFsc2U7XG5cbiAgQFN0YXRlKCkgbmV4dEJ1dHRvbkxhYmVsID0gJ1N0YXJ0JztcblxuICBAU3RhdGUoKSBmb2N1c2VkRmllbGQgPSAnJztcblxuICBhc3luYyBjb21wb25lbnREaWRMb2FkKCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZyhgW1NJR05dIFByb2Nlc3NpbmcgaW52aXRlIGNvZGUgZm9yICR7dGhpcy5lbnZlbG9wZUlkfSAvICR7dGhpcy5lbnZlbG9wZUlkfWApO1xuICAgICAgY29uc3Qge3Nlc3Npb24sIHJlY2lwaWVudCwgc2lnbmVyVG9rZW59ID0gYXdhaXQgRW52ZWxvcGVzLmdldFNpZ25pbmdTZXNzaW9uKHRoaXMuZW5kcG9pbnQsIHtcbiAgICAgICAgZW52ZWxvcGVJZDogdGhpcy5lbnZlbG9wZUlkLFxuICAgICAgICByb2xlSWQ6IHRoaXMucm9sZUlkLFxuICAgICAgICBpbnZpdGVDb2RlOiB0aGlzLmludml0ZUNvZGUsXG4gICAgICB9KTtcblxuICAgICAgY29uc29sZS5sb2coYFtTSUdOXSBHb3Qgc2lnbmluZyBzZXNzaW9uICR7c2Vzc2lvbi5lbWFpbH0gLyAke3Nlc3Npb24ucHJvZmlsZV9pZH1gKTtcblxuICAgICAgdGhpcy5yZWNpcGllbnQgPSByZWNpcGllbnQ7XG4gICAgICB0aGlzLnNpZ25lclRva2VuID0gc2lnbmVyVG9rZW47XG4gICAgICB0aGlzLmVuZHBvaW50LnNldFRva2VuKHNpZ25lclRva2VuKTtcblxuICAgICAgaWYgKHRoaXMucmVjaXBpZW50LmFncmVlZCkge1xuICAgICAgICB0aGlzLm5leHRCdXR0b25MYWJlbCA9ICdOZXh0JztcbiAgICAgIH1cblxuICAgICAgY29uc3QgZW52ZWxvcGUgPSBhd2FpdCBFbnZlbG9wZXMuZ2V0RW52ZWxvcGUodGhpcy5lbmRwb2ludCwgdGhpcy5lbnZlbG9wZUlkKTtcbiAgICAgIHRoaXMuZW52ZWxvcGUgPSBlbnZlbG9wZTtcbiAgICAgIGNvbnNvbGUubG9nKCdbU0lHTl0gU2lnbmluZyBkb2N1bWVudCcsIGRvY3VtZW50KTtcblxuICAgICAgdGhpcy5wZGZVcmwgPSBgJHt0aGlzLmVuZHBvaW50LmdldEJhc2VVUkwoKX0vZG9jdW1lbnRzLyR7dGhpcy5lbnZlbG9wZUlkfS9lbnZlbG9wZV9kb2N1bWVudHMvJHtlbnZlbG9wZS5lbnZlbG9wZV9kb2N1bWVudF9pZH0/ZmlsZT10cnVlYDtcblxuICAgICAgdGhpcy5yZWNpcGllbnRJbmRleCA9IHRoaXMuZW52ZWxvcGUucmVjaXBpZW50cy5maW5kSW5kZXgocmVjaXBpZW50ID0+IHJlY2lwaWVudC5yb2xlX25hbWUgPT0gdGhpcy5yb2xlSWQpO1xuICAgICAgaWYgKHRoaXMucmVjaXBpZW50SW5kZXggPiAtMSkge1xuICAgICAgICBjb25zb2xlLmxvZygnRm91bmQgcmVjaXBpZW50JywgdGhpcy5lbnZlbG9wZS5yZWNpcGllbnRzW3RoaXMucmVjaXBpZW50SW5kZXhdKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5maWVsZHMgPSB0aGlzLmVudmVsb3BlLmZpZWxkcy5maWx0ZXIoZmllbGQgPT4gZmllbGQucmVjaXBpZW50X3JvbGUgPT09IHRoaXMucm9sZUlkKTtcbiAgICAgIGNvbnNvbGUubG9nKCdMb2FkZWQgZmllbGRzJywgdGhpcy5maWVsZHMpO1xuXG4gICAgICAvLyBUT0RPOiBGaXggc2VydmljZSB0byBhbGxvdyB0aGlzP1xuICAgICAgLy8gY29uc3Qgc2lncyA9IGF3YWl0IGdldFNpZ25hdHVyZXMoKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdzaWdzJywgc2lncyk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5sb2coJ0Vycm9yIHdpdGggc2lnbmluZyBzZXNzaW9uJywgZSk7XG4gICAgICB0aGlzLnNka0Vycm9yPy5lbWl0KG5ldyBTREtFcnJvcihlLm1lc3NhZ2UsIGUucmVzcG9uc2U/LnN0YXR1cywgZS5yZXNwb25zZT8uZGF0YSkpO1xuICAgIH1cbiAgfVxuXG4gIGhhbmRsZUNsaWNrQWdyZWUoKSB7XG4gICAgY29uc29sZS5sb2coJ2FncmVlIGNsaWNrZWQnKTtcbiAgICB1cGRhdGVSZWNpcGllbnRTdGF0dXModGhpcy5lbmRwb2ludCwgdGhpcy5lbnZlbG9wZUlkLCB0aGlzLnJvbGVJZCwgJ3VwZGF0ZScsIHthZ3JlZWQ6IHRydWV9KVxuICAgICAgLnRoZW4ociA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCd1cGRhdGUgcmVzdWx0Jywgcik7XG4gICAgICAgIHRoaXMubmV4dEJ1dHRvbkxhYmVsID0gJ05leHQnO1xuICAgICAgICB0aGlzLnJlY2lwaWVudCA9IHI7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGUgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygndXBkYXRlIGZhaWx1cmUnLCBlKTtcbiAgICAgICAgdGhpcy5zZGtFcnJvcj8uZW1pdChuZXcgU0RLRXJyb3IoZS5tZXNzYWdlLCBlLnJlc3BvbnNlPy5zdGF0dXMsIGUucmVzcG9uc2U/LmRhdGEpKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgc2F2ZVBERigpIHtcbiAgICBjb25zdCBmaWxlTmFtZSA9IGAke3RoaXMuZW52ZWxvcGUubmFtZX0gLSAke3RoaXMuZW52ZWxvcGUudXBkYXRlZF9hdC5zcGxpdCgnVCcpWzBdfS5wZGZgO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBFbnZlbG9wZXMuZ2V0RW52ZWxvcGVGaWxlKHRoaXMuZW5kcG9pbnQsIHRoaXMuZW52ZWxvcGVJZCwgdGhpcy5lbnZlbG9wZS5lbnZlbG9wZV9kb2N1bWVudF9pZCk7XG5cbiAgICAvLyBUaGlzIGlzIGJldHRlciBpbiBSZWFjdCB0aGFuIGRvaW5nIHdpbmRvdy5ocmVmPSBvciBzaW1pbGFyIHRvIHRyaWdnZXIgYSBkb3dubG9hZC4gRm9yIGEgZGVzY3JpcHRpb24gb2YgdGhlIHRlY2huaXF1ZVxuICAgIC8vIHNlZSBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy84MTI2NjIzL2Rvd25sb2FkaW5nLWNhbnZhcy1lbGVtZW50LXRvLWFuLWltYWdlXG4gICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgIHhoci5yZXNwb25zZVR5cGUgPSAnYmxvYic7XG4gICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGxldCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgYS5ocmVmID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoeGhyLnJlc3BvbnNlKTtcbiAgICAgIGEuZG93bmxvYWQgPSBmaWxlTmFtZTtcbiAgICAgIGEuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSk7XG4gICAgICBhLmNsaWNrKCk7XG4gICAgICBhLnJlbW92ZSgpO1xuICAgIH07XG5cbiAgICBjb25zdCB1cmwgPSBgZGF0YTphcHBsaWNhdGlvbi9wZGY7YmFzZTY0LCR7ZGF0YX1gO1xuICAgIGNvbnNvbGUubG9nKCd1cmwnLCB1cmwubGVuZ3RoLCB1cmwpO1xuICAgIHhoci5vcGVuKCdHRVQnLCBgZGF0YTphcHBsaWNhdGlvbi9wZGY7YmFzZTY0LCR7ZGF0YX1gKTtcbiAgICB4aHIuc2VuZCgpO1xuICB9XG5cbiAgYXN5bmMgaGFuZGxlT3B0aW9uU2VsZWN0ZWQoZSkge1xuICAgIHN3aXRjaCAoZS5kZXRhaWwuaWQpIHtcbiAgICAgIGNhc2UgJ2xhdGVyJzpcbiAgICAgICAgLy8gdGhpcy5yb3V0ZXIubmF2aWdhdGUoW2B2aWV3L3NpZ24vJHt0aGlzLmVudmVsb3BlSWR9L3JvbGUvJHt0aGlzLnJvbGVOYW1lfS9zYXZlZGBdKTtcbiAgICAgICAgaWYgKCF3aW5kb3c/LlsnU1RPUllCT09LX0VOViddKSB7XG4gICAgICAgICAgd2luZG93LmFsZXJ0KCdVc2VyIGludGVuZHMgdG8gc2lnbiBsYXRlci4nKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NsYWltJzpcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdkZWNsaW5lJzpcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdwcmludCc6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnZG93bmxvYWQnOlxuICAgICAgICB0aGlzLnNhdmVQREYoKS5jYXRjaCgoKSA9PiB7fSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGhhbmRsZUZpZWxkQ2hhbmdlKGZpZWxkOiBJRG9jdW1lbnRGaWVsZCwgZTogYW55LCBvcHRpb25JZD86IHN0cmluZykge1xuICAgIGNvbnNvbGUubG9nKCdmaWVsZENoYW5nZScsIGZpZWxkLCBlLmRldGFpbCk7XG4gICAgc3dpdGNoIChmaWVsZC50eXBlKSB7XG4gICAgICBjYXNlICd0ZXh0Ym94JzpcbiAgICAgICAgRW52ZWxvcGVzLnVwZGF0ZUVudmVsb3BlRmllbGQodGhpcy5lbmRwb2ludCwgdGhpcy5lbnZlbG9wZUlkLCBmaWVsZC5uYW1lLCB7cHJlcGFyZWQ6IGZhbHNlLCB2YWx1ZTogZS5kZXRhaWx9KVxuICAgICAgICAgIC50aGVuKHIgPT4gY29uc29sZS5sb2coJ1VwZGF0ZSByZXN1bHQnLCByKSlcbiAgICAgICAgICAuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNka0Vycm9yPy5lbWl0KG5ldyBTREtFcnJvcihlLm1lc3NhZ2UsIGUucmVzcG9uc2U/LnN0YXR1cywgZS5yZXNwb25zZT8uZGF0YSkpO1xuICAgICAgICAgICAgaWYgKGUucmVzcG9uc2U/LnN0YXR1cyA9PT0gNDAxICYmIGUucmVzcG9uc2U/LmRhdGE/LmVycm9yID09PSAnand0IGV4cGlyZWQnKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdqd3QgZXhwaXJlZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0Vycm9yIHVwZGF0aW5nJywgZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdjaGVja2JveF9ncm91cCc6XG4gICAgICAgIEVudmVsb3Blcy51cGRhdGVFbnZlbG9wZUZpZWxkKHRoaXMuZW5kcG9pbnQsIHRoaXMuZW52ZWxvcGVJZCwgZmllbGQubmFtZSwge3ByZXBhcmVkOiBmYWxzZSwgdmFsdWU6IHtvcHRpb25zOiBbe2lkOiBvcHRpb25JZCwgY2hlY2tlZDogZS5kZXRhaWx9XX19KVxuICAgICAgICAgIC50aGVuKHIgPT4gY29uc29sZS5sb2coJ1VwZGF0ZSByZXN1bHQnLCByKSlcbiAgICAgICAgICAuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNka0Vycm9yPy5lbWl0KG5ldyBTREtFcnJvcihlLm1lc3NhZ2UsIGUucmVzcG9uc2U/LnN0YXR1cywgZS5yZXNwb25zZT8uZGF0YSkpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0Vycm9yIHVwZGF0aW5nJywgZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOlxuICAgICAgICBjb25zdCBvcHRpb25zID0gZmllbGQuc2V0dGluZ3Mub3B0aW9ucy5tYXAob3B0aW9uID0+ICh7aWQ6IG9wdGlvbi5pZCwgc2VsZWN0ZWQ6IG9wdGlvbklkID09PSBvcHRpb24uaWR9KSk7XG4gICAgICAgIEVudmVsb3Blcy51cGRhdGVFbnZlbG9wZUZpZWxkKHRoaXMuZW5kcG9pbnQsIHRoaXMuZW52ZWxvcGVJZCwgZmllbGQubmFtZSwge3ByZXBhcmVkOiBmYWxzZSwgdmFsdWU6IHtvcHRpb25zfX0pXG4gICAgICAgICAgLnRoZW4ociA9PiBjb25zb2xlLmxvZygnVXBkYXRlIHJlc3VsdCcsIHIpKVxuICAgICAgICAgIC5jYXRjaChlID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2RrRXJyb3I/LmVtaXQobmV3IFNES0Vycm9yKGUubWVzc2FnZSwgZS5yZXNwb25zZT8uc3RhdHVzLCBlLnJlc3BvbnNlPy5kYXRhKSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRXJyb3IgdXBkYXRpbmcnLCBlKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2Ryb3Bkb3duJzpcbiAgICAgICAgRW52ZWxvcGVzLnVwZGF0ZUVudmVsb3BlRmllbGQodGhpcy5lbmRwb2ludCwgdGhpcy5lbnZlbG9wZUlkLCBmaWVsZC5uYW1lLCB7cHJlcGFyZWQ6IGZhbHNlLCB2YWx1ZTogZS5kZXRhaWx9KVxuICAgICAgICAgIC50aGVuKHIgPT4gY29uc29sZS5sb2coJ1VwZGF0ZSByZXN1bHQnLCByKSlcbiAgICAgICAgICAuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNka0Vycm9yPy5lbWl0KG5ldyBTREtFcnJvcihlLm1lc3NhZ2UsIGUucmVzcG9uc2U/LnN0YXR1cywgZS5yZXNwb25zZT8uZGF0YSkpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0Vycm9yIHVwZGF0aW5nJywgZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdpbml0aWFsJzpcbiAgICAgICAgY29uc29sZS5sb2coJ0dvdCBpbml0aWFsJywgZS5kZXRhaWwpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnc2lnbmF0dXJlJzpcbiAgICAgICAgY29uc29sZS5sb2coJ0dvdCBzaWduYXR1cmUnLCBlLmRldGFpbCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlckNoZWNrYm94R3JvdXBPcHRpb24ocGFnZTogSURvY3VtZW50UGFnZUluZm8sIGZpZWxkOiBJRG9jdW1lbnRGaWVsZCwgb3B0aW9uOiBhbnkpIHtcbiAgICBjb25zdCBsZWZ0ID0gcmVzY2FsZShwYWdlLnhTY2FsZSwgb3B0aW9uLngpO1xuICAgIGNvbnN0IGJvdHRvbSA9IHJlc2NhbGUocGFnZS55U2NhbGUsIG9wdGlvbi55KTtcblxuICAgIGNvbnN0IHN0eWxlID0ge1xuICAgICAgbGVmdDogYCR7bGVmdH1weGAsXG4gICAgICBib3R0b206IGAke2JvdHRvbX1weGAsXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHRyYW5zZm9ybTogYHNjYWxlKCR7cGFnZS54U2NhbGV9LCAke3BhZ2UueVNjYWxlfSlgLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBnZXRSR0JBKHRoaXMucmVjaXBpZW50SW5kZXgpLFxuICAgIH0gYXMgYW55O1xuXG4gICAgcmV0dXJuIDx2ZXJkb2NzLWZpZWxkLWNoZWNrYm94IHN0eWxlPXtzdHlsZX0gZmllbGQ9e2ZpZWxkfSBvbkZpZWxkQ2hhbmdlPXtlID0+IHRoaXMuaGFuZGxlRmllbGRDaGFuZ2UoZmllbGQsIGUsIG9wdGlvbi5pZCl9IC8+O1xuICB9XG5cbiAgcmVuZGVyUmFkaW9Hcm91cE9wdGlvbihwYWdlOiBJRG9jdW1lbnRQYWdlSW5mbywgZmllbGQ6IElEb2N1bWVudEZpZWxkLCBvcHRpb246IGFueSkge1xuICAgIGNvbnN0IGxlZnQgPSByZXNjYWxlKHBhZ2UueFNjYWxlLCBvcHRpb24ueCk7XG4gICAgY29uc3QgYm90dG9tID0gcmVzY2FsZShwYWdlLnlTY2FsZSwgb3B0aW9uLnkpO1xuXG4gICAgY29uc3Qgc3R5bGUgPSB7XG4gICAgICBsZWZ0OiBgJHtsZWZ0fXB4YCxcbiAgICAgIGJvdHRvbTogYCR7Ym90dG9tfXB4YCxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgdHJhbnNmb3JtOiBgc2NhbGUoJHtwYWdlLnhTY2FsZX0sICR7cGFnZS55U2NhbGV9KWAsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdldFJHQkEodGhpcy5yZWNpcGllbnRJbmRleCksXG4gICAgfSBhcyBhbnk7XG5cbiAgICByZXR1cm4gPHZlcmRvY3MtZmllbGQtcmFkaW8tYnV0dG9uIHN0eWxlPXtzdHlsZX0gZmllbGQ9e2ZpZWxkfSBvbkZpZWxkQ2hhbmdlPXtlID0+IHRoaXMuaGFuZGxlRmllbGRDaGFuZ2UoZmllbGQsIGUsIG9wdGlvbi5pZCl9IC8+O1xuICB9XG5cbiAgaXNGaWVsZFZhbGlkKGZpZWxkOiBJRG9jdW1lbnRGaWVsZCkge1xuICAgIHN3aXRjaCAoZmllbGQudHlwZSkge1xuICAgICAgY2FzZSAndGV4dGJveCc6XG4gICAgICAgIHN3aXRjaCAoZmllbGQuc2V0dGluZ3M/LnZhbGlkYXRvciB8fCAnJykge1xuICAgICAgICAgIGNhc2UgJ2VtYWlsJzpcbiAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkRW1haWwoZmllbGQuc2V0dGluZ3M/LnJlc3VsdCB8fCAnJyk7XG4gICAgICAgICAgY2FzZSAncGhvbmUnOlxuICAgICAgICAgICAgcmV0dXJuIGlzVmFsaWRQaG9uZShmaWVsZC5zZXR0aW5ncz8ucmVzdWx0IHx8ICcnKTtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuICEhZmllbGQuc2V0dGluZ3M/LnJlc3VsdDtcbiAgICAgICAgfVxuXG4gICAgICBjYXNlICdzaWduYXR1cmUnOlxuICAgICAgY2FzZSAnaW5pdGlhbCc6XG4gICAgICBjYXNlICd0ZXh0YXJlYSc6XG4gICAgICBjYXNlICdkYXRlJzpcbiAgICAgIGNhc2UgJ3RpbWVzdGFtcCc6XG4gICAgICBjYXNlICdhdHRhY2htZW50JzpcbiAgICAgICAgcmV0dXJuICEhZmllbGQuc2V0dGluZ3M/LnJlc3VsdDtcbiAgICAgIGNhc2UgJ2Ryb3Bkb3duJzpcbiAgICAgICAgcmV0dXJuICEhZmllbGQuc2V0dGluZ3M/LnZhbHVlO1xuICAgICAgY2FzZSAnY2hlY2tib3hfZ3JvdXAnOlxuICAgICAgICBjb25zdCBjaGVja2VkID0gKGZpZWxkLnNldHRpbmdzPy5vcHRpb25zPy5maWx0ZXIob3B0aW9uID0+IG9wdGlvbi5jaGVja2VkKSB8fCBbXSkubGVuZ3RoO1xuICAgICAgICByZXR1cm4gY2hlY2tlZCA+PSAoZmllbGQuc2V0dGluZ3M/Lm1pbmltdW1fY2hlY2tlZCB8fCAwKSAmJiBjaGVja2VkIDw9IChmaWVsZC5zZXR0aW5ncz8ubWF4aW11bV9jaGVja2VkIHx8IDk5OSk7XG4gICAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOlxuICAgICAgICByZXR1cm4gKGZpZWxkLnNldHRpbmdzPy5vcHRpb25zPy5maWx0ZXIob3B0aW9uID0+IG9wdGlvbi5zZWxlY3RlZCkgfHwgW10pLmxlbmd0aCA+IDA7XG4gICAgICAvLyBUT0RPXG4gICAgICAvLyBjYXNlICdjaGVja2JveCc6XG4gICAgICAvLyAgIHJldHVybiA8dmVyZG9jcy1maWVsZC1jaGVja2JveCBzdHlsZT17c3R5bGV9IHZhbHVlPXtyZXN1bHQgfHwgJyd9IGlkPXtpZH0gLz47XG4gICAgICAvLyBjYXNlICdwYXltZW50JzpcbiAgICAgIC8vICAgcmV0dXJuIDx2ZXJkb2NzLWZpZWxkLXBheW1lbnQgc3R5bGU9e3N0eWxlfSBmaWVsZD17ZmllbGR9IGlkPXtpZH0gLz47XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgLy8gKGFzeW5jICgpID0+IHtcbiAgLy8gICBhd2FpdCBjdXN0b21FbGVtZW50cy53aGVuRGVmaW5lZCgndmVyZG9jcy1maWVsZC1zaWduYXR1cmUnKTtcbiAgLy8gICBjb25zdCBlbHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmVyZG9jcy1maWVsZC1zaWduYXR1cmUnKTtcbiAgLy8gICBhd2FpdCBlbHMuZm9jdXNGaWVsZCgpO1xuICAvLyB9KSgpO1xuXG4gIGhhbmRsZU5leHQoKSB7XG4gICAgLy8gRmluZCBhbmQgZm9jdXMgdGhlIG5leHQgaW5jb21wbGV0ZSByZXF1aXJlZCBmaWVsZFxuICAgIGNvbnN0IHJlcXVpcmVkRmllbGRzID0gdGhpcy5maWVsZHMuZmlsdGVyKGZpZWxkID0+IGZpZWxkLnJlcXVpcmVkKTtcbiAgICBjb25zb2xlLmxvZygncmVxdWlyZWQgRmllbGRzJywgcmVxdWlyZWRGaWVsZHMpO1xuXG4gICAgY29uc3QgZm9jdXNlZEluZGV4ID0gcmVxdWlyZWRGaWVsZHMuZmluZEluZGV4KGZpZWxkID0+IGZpZWxkLm5hbWUgPT09IHRoaXMuZm9jdXNlZEZpZWxkKTtcbiAgICBjb25zb2xlLmxvZygnZm9jdXNlZCBJbmRleCcsIGZvY3VzZWRJbmRleCk7XG5cbiAgICBsZXQgbmV4dEZvY3VzZWRJbmRleCA9IGZvY3VzZWRJbmRleCArIDE7XG4gICAgaWYgKG5leHRGb2N1c2VkSW5kZXggPj0gcmVxdWlyZWRGaWVsZHMubGVuZ3RoKSB7XG4gICAgICBuZXh0Rm9jdXNlZEluZGV4ID0gMDtcbiAgICB9XG5cbiAgICBjb25zdCBuZXh0UmVxdWlyZWRGaWVsZCA9IHJlcXVpcmVkRmllbGRzW25leHRGb2N1c2VkSW5kZXhdO1xuICAgIGNvbnNvbGUubG9nKCduZXh0IHJlcXVpcmVkIGZpZWxkJywgbmV4dFJlcXVpcmVkRmllbGQpO1xuXG4gICAgaWYgKG5leHRSZXF1aXJlZEZpZWxkKSB7XG4gICAgICBjb25zdCBpZCA9IGdldEZpZWxkSWQobmV4dFJlcXVpcmVkRmllbGQpO1xuICAgICAgY29uc3QgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkgYXMgYW55O1xuICAgICAgY29uc29sZS5sb2coJ2ZvY3VzaW5nJywgaWQsIGVsKTtcbiAgICAgIGVsPy5mb2N1c0ZpZWxkKCk7XG4gICAgICB0aGlzLmZvY3VzZWRGaWVsZCA9IG5leHRSZXF1aXJlZEZpZWxkLm5hbWU7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyRmllbGQoZmllbGQ6IElEb2N1bWVudEZpZWxkLCBkb2NQYWdlOiBJRG9jdW1lbnRQYWdlSW5mbyAvKiwgaW5kZXg6IG51bWJlciovKSB7XG4gICAgY29uc3QgY29udHJvbHNEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkb2NQYWdlLmNvbnRhaW5lcklkICsgJy1jb250cm9scycpO1xuICAgIGlmICghY29udHJvbHNEaXYpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBpZCA9IGdldEZpZWxkSWQoZmllbGQpO1xuICAgIGNvbnN0IGV4aXN0aW5nRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgaWYgKGV4aXN0aW5nRmllbGQpIHtcbiAgICAgIHNldENvbnRyb2xTdHlsZXMoZXhpc3RpbmdGaWVsZCwgZmllbGQsIGRvY1BhZ2UueFNjYWxlLCBkb2NQYWdlLnlTY2FsZSwgdGhpcy5yZWNpcGllbnRJbmRleCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IGVsO1xuICAgIHN3aXRjaCAoZmllbGQudHlwZSkge1xuICAgICAgY2FzZSAnYXR0YWNobWVudCc6XG4gICAgICBjYXNlICdjaGVja2JveF9ncm91cCc6XG4gICAgICBjYXNlICdkYXRlJzpcbiAgICAgIGNhc2UgJ2Ryb3Bkb3duJzpcbiAgICAgIGNhc2UgJ2luaXRpYWwnOlxuICAgICAgY2FzZSAncGF5bWVudCc6XG4gICAgICBjYXNlICdzaWduYXR1cmUnOlxuICAgICAgY2FzZSAndGltZXN0YW1wJzpcbiAgICAgIGNhc2UgJ3RleHRhcmVhJzpcbiAgICAgIGNhc2UgJ3RleHRib3gnOlxuICAgICAgICBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYHZlcmRvY3MtZmllbGQtJHtmaWVsZC50eXBlfWApO1xuICAgICAgICBicmVhaztcbiAgICAgIC8vICAgcmV0dXJuIGZpZWxkLnNldHRpbmdzLm9wdGlvbnMubWFwKChvcHRpb246IGFueSwgaW5kZXgpID0+IHRoaXMucmVuZGVyQ2hlY2tib3hHcm91cE9wdGlvbihyZW5kZXJPblBhZ2UsIGZpZWxkLCBvcHRpb24sIGluZGV4KSk7XG4gICAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOlxuICAgICAgICAvLyAgIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmVyZG9jcy1maWVsZC1zaWduYXR1cmUnKTtcbiAgICAgICAgLy8gICBlbC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgYmFzZTY0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICAvLyAgIHJldHVybiBmaWVsZC5zZXR0aW5ncy5vcHRpb25zLm1hcCgob3B0aW9uOiBhbnksIGluZGV4KSA9PiB0aGlzLnJlbmRlclJhZGlvR3JvdXBPcHRpb24ocmVuZGVyT25QYWdlLCBmaWVsZCwgb3B0aW9uLCBpbmRleCkpO1xuICAgICAgLy8gY2FzZSAnYXR0YWNobWVudCc6XG4gICAgICAvLyAgIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmVyZG9jcy1maWVsZC1hdHRhY2htZW50Jyk7XG4gICAgICAvLyAgIGVsLnNldEF0dHJpYnV0ZSgndmFsdWUnLCByZXN1bHQgfHwgJycpO1xuICAgICAgLy8gICBicmVhaztcbiAgICAgIC8vIGNhc2UgJ3BheW1lbnQnOlxuICAgICAgLy8gICBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZlcmRvY3MtZmllbGQtcGF5bWVudCcpO1xuICAgICAgLy8gICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGNvbnNvbGUubG9nKCdbU0lHTl0gU2tpcHBpbmcgdW5zdXBwb3J0ZWQgZmllbGQgdHlwZScsIGZpZWxkKTtcbiAgICB9XG5cbiAgICBpZiAoZWwpIHtcbiAgICAgIGVsLmZpZWxkID0gZmllbGQ7XG4gICAgICBlbC5yZWNpcGllbnQgPSB0aGlzLnJlY2lwaWVudDtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZSgnaWQnLCBpZCk7XG4gICAgICBlbC5zZXRBdHRyaWJ1dGUoJ3JvbGVpbmRleCcsIHRoaXMucmVjaXBpZW50SW5kZXgpO1xuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignZmllbGRDaGFuZ2UnLCBlID0+IHRoaXMuaGFuZGxlRmllbGRDaGFuZ2UoZmllbGQsIGUpKTtcbiAgICAgIHNldENvbnRyb2xTdHlsZXMoZXhpc3RpbmdGaWVsZCwgZmllbGQsIGRvY1BhZ2UueFNjYWxlLCBkb2NQYWdlLnlTY2FsZSwgdGhpcy5yZWNpcGllbnRJbmRleCk7XG4gICAgICBjb250cm9sc0Rpdi5hcHBlbmRDaGlsZChlbCk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlUGFnZVJlbmRlcmVkKGUpIHtcbiAgICBjb25zdCBwYWdlSW5mbyA9IGUuZGV0YWlsIGFzIElQYWdlUmVuZGVyRXZlbnQ7XG4gICAgY29uc29sZS5sb2coJ1tTSUdOXSBQYWdlIHJlbmRlcmVkJywgcGFnZUluZm8pO1xuXG4gICAgY29uc3QgZmllbGRzID0gdGhpcy5maWVsZHMuZmlsdGVyKGZpZWxkID0+IGZpZWxkLnBhZ2UgPT09IHBhZ2VJbmZvLnJlbmRlcmVkUGFnZS5wYWdlTnVtYmVyKTtcbiAgICBjb25zb2xlLmxvZygnW1NJR05dIEZpZWxkcyBvbiBwYWdlJywgZmllbGRzKTtcbiAgICBmaWVsZHMuZm9yRWFjaChmaWVsZCA9PiB0aGlzLnJlbmRlckZpZWxkKGZpZWxkLCBwYWdlSW5mby5yZW5kZXJlZFBhZ2UpKTtcbiAgICAvLyAubWFwKChmaWVsZCwgaW5kZXgpID0+IHRoaXMucmVuZGVyRmllbGQoZmllbGQsIGluZGV4KSk7XG4gICAgLy8gdGhpcy5wZGZQYWdlSW5mbyA9IGUuZGV0YWlsO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IG1lbnVPcHRpb25zID0gW1xuICAgICAge2lkOiAnbGF0ZXInLCBsYWJlbDogJ0ZpbmlzaCBMYXRlcid9LCAvL1xuICAgICAge2lkOiAnY2xhaW0nLCBsYWJlbDogJ0NsYWltIHRoZSBEb2N1bWVudCcsIGRpc2FibGVkOiB0cnVlfSxcbiAgICAgIHtpZDogJ2RlY2xpbmUnLCBsYWJlbDogJ0RlY2xpbmUgdG8gU2lnbid9LFxuICAgICAge2lkOiAncHJpbnQnLCBsYWJlbDogJ1ByaW50IFdpdGhvdXQgU2lnbmluZyd9LFxuICAgICAge2lkOiAnZG93bmxvYWQnLCBsYWJlbDogJ0Rvd25sb2FkJ30sXG4gICAgXTtcblxuICAgIHJldHVybiAoXG4gICAgICA8SG9zdCBjbGFzcz17e3N0b3J5Ym9vazogISF3aW5kb3c/LlsnU1RPUllCT09LX0VOViddLCBhZ3JlZWQ6IHRoaXMucmVjaXBpZW50Py5hZ3JlZWR9fT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImludHJvXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImlubmVyXCI+UGxlYXNlIHJldmlldyBhbmQgYWN0IG9uIHRoZXNlIGRvY3VtZW50cy48L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbm5lclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRvb2xiYXJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRvb2xzXCI+XG4gICAgICAgICAgICAgICAgPHZlcmRvY3MtZHJvcGRvd24gb3B0aW9ucz17bWVudU9wdGlvbnN9IG9uT3B0aW9uU2VsZWN0ZWQ9e2UgPT4gdGhpcy5oYW5kbGVPcHRpb25TZWxlY3RlZChlKX0gLz5cblxuICAgICAgICAgICAgICAgIHshdGhpcy5yZWNpcGllbnQ/LmFncmVlZCA/IChcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhZ3JlZVwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWdyZWUtY2hlY2tib3hcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgdmFsdWU9XCJOb25lXCIgaWQ9XCJhZ3JlZS1jaGVja2JveC1lbGVtZW50XCIgbmFtZT1cImFncmVlXCIgb25DaGFuZ2U9eygpID0+IHRoaXMuaGFuZGxlQ2xpY2tBZ3JlZSgpfSAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiYWdyZWUtY2hlY2tib3gtZWxlbWVudFwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj5JIGFncmVlIHRvIHVzZSBlbGVjdHJvbmljIHJlY29yZHMgYW5kIHNpZ25hdHVyZXMuPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tmbGV4OiAnMSd9fSAvPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPHZlcmRvY3MtYnV0dG9uIHNpemU9XCJzbWFsbFwiIGxhYmVsPXt0aGlzLm5leHRCdXR0b25MYWJlbH0gZGlzYWJsZWQ9eyF0aGlzLnJlY2lwaWVudD8uYWdyZWVkfSBvbkNsaWNrPXsoKSA9PiB0aGlzLmhhbmRsZU5leHQoKX0gLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgeyF0aGlzLnJlY2lwaWVudD8uYWdyZWVkID8gPGRpdiBjbGFzcz1cImNvdmVyXCIgLz4gOiA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ25vbmUnfX0gLz59XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cImRvY3VtZW50XCI+XG4gICAgICAgICAge3RoaXMucGRmVXJsID8gKFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlubmVyXCI+XG4gICAgICAgICAgICAgIDx2ZXJkb2NzLXZpZXdcbiAgICAgICAgICAgICAgICBzb3VyY2U9e3RoaXMucGRmVXJsfVxuICAgICAgICAgICAgICAgIGVuZHBvaW50PXt0aGlzLmVuZHBvaW50fVxuICAgICAgICAgICAgICAgIG9uUGFnZVJlbmRlcmVkPXtlID0+IHRoaXMuaGFuZGxlUGFnZVJlbmRlcmVkKGUpfVxuICAgICAgICAgICAgICAgIHBhZ2VMYXllcnM9e1tcbiAgICAgICAgICAgICAgICAgIHtuYW1lOiAncGFnZScsIHR5cGU6ICdjYW52YXMnfSxcbiAgICAgICAgICAgICAgICAgIHtuYW1lOiAnY29udHJvbHMnLCB0eXBlOiAnZGl2J30sXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8dmVyZG9jcy1sb2FkZXIgLz5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvSG9zdD5cbiAgICApO1xuICB9XG59XG4iLCJAaW1wb3J0ICcuLi8uLi8uLi90aGVtZS5zY3NzJztcblxudmVyZG9jcy1zaWduIHtcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4taGVpZ2h0OiA2MDBweDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1mYW1pbHk6ICR2ZXJkb2NzLXByaW1hcnktZm9udDtcblxuICBkaXYge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICAuaGVhZGVyIHtcbiAgICBmbGV4OiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjI1cztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWVkaXVtLWJnO1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDRweCAwIHJnYigwIDAgMCAvIDI0JSksIDAgMCA0cHggMCByZ2IoMCAwIDAgLyAxMiUpO1xuXG4gICAgLmlubmVyIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiAxMDI4cHg7XG4gICAgfVxuICB9XG5cbiAgLmludHJvIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICAgIC5pbm5lciB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGNvbG9yOiAjMTExMTExO1xuICAgICAgcGFkZGluZzogMCAxNHB4O1xuICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICAgICAgbWF4LXdpZHRoOiAxMDI0cHg7XG4gICAgfVxuICB9XG5cbiAgJi5hZ3JlZWQge1xuICAgIC5pbnRybyB7XG4gICAgICAvL2Rpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG5cbiAgLnRvb2xiYXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDAgMTRweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cblxuICAudG9vbHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGhlaWdodDogNTZweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG1lZGl1bS1iZztcbiAgfVxuXG4gIC5jb3ZlciB7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIHotaW5kZXg6IDk5OTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICB9XG5cbiAgLmRvY3VtZW50IHtcbiAgICBmbGV4OiAxO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgLmlubmVyIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiAxMDI4cHg7XG4gICAgfVxuICB9XG5cbiAgLmFncmVlIHtcbiAgICBmbGV4OiAxO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcblxuICAgIC5pbnRybyB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIC5oZWFkZXIge1xuICAgICAgZmxleDogMCAwIDU2cHg7XG4gICAgfVxuXG4gICAgLmFncmVlLWNoZWNrYm94IHtcbiAgICAgIGJhY2tncm91bmQ6ICNjY2M7XG4gICAgICBmbGV4OiAwIDAgMjBweDtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICB3aWR0aDogMjBweDtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIG1hcmdpbjogMCAxMHB4IDAgMTRweDtcblxuICAgICAgaW5wdXRbdHlwZT0nY2hlY2tib3gnXTpjaGVja2VkICsgbGFiZWw6YWZ0ZXIge1xuICAgICAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MTAwKTtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cblxuICAgICAgbGFiZWwge1xuICAgICAgICBsZWZ0OiAycHg7XG4gICAgICAgIHRvcDogMnB4O1xuICAgICAgICB3aWR0aDogMTZweDtcbiAgICAgICAgaGVpZ2h0OiAxNnB4O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogIzMzMzU0YztcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMXB4IDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG5cbiAgICAgICAgLmFncmVlLWNoZWNrYm94IGxhYmVsOmhvdmVyOjphZnRlciB7XG4gICAgICAgICAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTMwKTtcbiAgICAgICAgICBvcGFjaXR5OiAwLjM7XG4gICAgICAgIH1cblxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICB0b3A6IDJweDtcbiAgICAgICAgICBsZWZ0OiAzcHg7XG4gICAgICAgICAgd2lkdGg6IDhweDtcbiAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgIGhlaWdodDogNXB4O1xuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MCk7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjZmNmZmY0O1xuICAgICAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgICAgICAgYm9yZGVyLXJpZ2h0OiBub25lO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9
/*! For license information please see 35.a81c2fbd.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{"./dist/esm/Validators-f110bae2.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return isValidPhone})),__webpack_require__.d(__webpack_exports__,"b",(function(){return isValidEmail}));var EMAIL_REGEX=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,isValidEmail=function isValidEmail(email){return!!email&&EMAIL_REGEX.test(email)},PHONE_REGEX=/((?:\+|00)[17](?: |\-)?|(?:\+|00)[1-9]\d{0,2}(?: |\-)?|(?:\+|00)1\-\d{3}(?: |\-)?)?(0\d|\([0-9]{3}\)|[1-9]{0,3})(?:((?: |\-)[0-9]{2}){4}|((?:[0-9]{2}){4})|((?: |\-)[0-9]{3}(?: |\-)[0-9]{4})|([0-9]{7}))/,isValidPhone=function isValidPhone(phone){return!!phone&&PHONE_REGEX.test(phone)}},"./dist/esm/verdocs-sign.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_sign",(function(){return VerdocsSign}));__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find-index.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/web.url.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js");var _index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__=__webpack_require__("./dist/esm/index-f78d163d.js"),_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__=__webpack_require__("./dist/esm/Envelopes-19ca610d.js"),_Validators_f110bae2_js__WEBPACK_IMPORTED_MODULE_38__=(__webpack_require__("./dist/esm/Types-ab9f6af8.js"),__webpack_require__("./dist/esm/Validators-f110bae2.js")),_VerdocsEndpoint_dac04424_js__WEBPACK_IMPORTED_MODULE_39__=__webpack_require__("./dist/esm/VerdocsEndpoint-dac04424.js"),_utils_16973ff9_js__WEBPACK_IMPORTED_MODULE_40__=__webpack_require__("./dist/esm/utils-16973ff9.js"),_errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__=__webpack_require__("./dist/esm/errors-9b5498c8.js");__webpack_require__("./dist/esm/index-fd7b8a34.js");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(void 0===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}var __assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=function(thisArg,body){var f,y,t,g,_={label:0,sent:function sent(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}},createSignature=function createSignature(endpoint,name,signature){var data=new FormData;return data.append("signature",signature,name),endpoint.api.post("/signatures",data).then((function(r){return r.data}))},VerdocsSign=function(){function VerdocsSign(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsSign),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.j)(this,hostRef),this.sdkError=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.e)(this,"sdkError",7),this.fieldUpdated=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.e)(this,"fieldUpdated",7),this.endpoint=null,this.recipientIndex=-1,this.fields=[],this.envelopeId=null,this.roleId=null,this.inviteCode=null,this.recipient=null,this.signerToken=null,this.hasSignature=!1,this.nextButtonLabel="Start",this.focusedField="",this.finishLater=!1,this.showFinishLater=!1}var _handleFieldChange,_handleOptionSelected,_savePDF,_componentDidLoad;return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsSign,[{key:"componentWillLoad",value:function componentWillLoad(){this.endpoint=new _VerdocsEndpoint_dac04424_js__WEBPACK_IMPORTED_MODULE_39__.a({sessionType:"signing"})}},{key:"componentDidLoad",value:(_componentDidLoad=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(){var _a,_b,_c,_d,_e,_f,_yield$getSigningSess,session,recipient,signerToken,_this=this;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(this.envelopeId){_context.next=3;break}return null===(_a=this.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a("[SIGN] Missing required envelopId",500,"")),_context.abrupt("return");case 3:if(this.roleId){_context.next=6;break}return null===(_b=this.sdkError)||void 0===_b||_b.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a("[SIGN] Missing required roleId",500,"")),_context.abrupt("return");case 6:if(this.inviteCode){_context.next=9;break}return null===(_c=this.sdkError)||void 0===_c||_c.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a("[SIGN] Missing required inviteCode",500,"")),_context.abrupt("return");case 9:return _context.prev=9,console.log("[SIGN] Processing invite code for "+this.envelopeId+" / "+this.roleId),_context.next=13,Object(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.d)(this.endpoint,{envelopeId:this.envelopeId,roleId:this.roleId,inviteCode:this.inviteCode});case 13:return _yield$getSigningSess=_context.sent,session=_yield$getSigningSess.session,recipient=_yield$getSigningSess.recipient,signerToken=_yield$getSigningSess.signerToken,console.log("[SIGN] Loaded signing session "+session.email+" / "+session.profile_id),this.recipient=recipient,this.signerToken=signerToken,this.endpoint.setToken(signerToken),this.recipient.agreed&&(this.nextButtonLabel="Next"),_context.next=24,Object(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.a)(this.endpoint,this.envelopeId);case 24:this.recipientIndex=_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.envelope.recipients.findIndex((function(recipient){return recipient.role_name==_this.roleId})),this.recipientIndex>-1&&(this.recipient=_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.envelope.recipients[this.recipientIndex],this.fields=this.recipient.fields),_context.next=32;break;case 28:_context.prev=28,_context.t0=_context.catch(9),console.log("Error with signing session",_context.t0),null===(_d=this.sdkError)||void 0===_d||_d.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a(_context.t0.message,null===(_e=_context.t0.response)||void 0===_e?void 0:_e.status,null===(_f=_context.t0.response)||void 0===_f?void 0:_f.data));case 32:case"end":return _context.stop()}}),_callee,this,[[9,28]])}))),function componentDidLoad(){return _componentDidLoad.apply(this,arguments)})},{key:"handleClickAgree",value:function handleClickAgree(){var _this2=this;(function updateRecipientStatus(endpoint,envelopeId,roleName,action,params){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.put("/envelopes/".concat(envelopeId,"/recipients/").concat(roleName),__assign({role_name:roleName,action:action},params||{})).then((function(r){return r.data}))]}))}))})(this.endpoint,this.envelopeId,this.roleId,"update",{agreed:!0}).then((function(r){_this2.nextButtonLabel="Next",_this2.recipient=r})).catch((function(e){var _a,_b,_c;console.log("Update failure",e),null===(_a=_this2.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data))}))}},{key:"savePDF",value:(_savePDF=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(){var fileName,data,xhr;return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return fileName=_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.envelope.name+" - "+_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.envelope.updated_at.split("T")[0]+".pdf",_context2.next=3,Object(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.b)(this.endpoint,this.envelopeId,_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.envelope.envelope_document_id);case 3:data=_context2.sent,(xhr=new XMLHttpRequest).responseType="blob",xhr.onload=function(){var a=document.createElement("a");a.href=window.URL.createObjectURL(xhr.response),a.download=fileName,a.style.display="none",document.body.appendChild(a),a.click(),a.remove()},xhr.open("GET","data:application/pdf;base64,"+data),xhr.send();case 9:case"end":return _context2.stop()}}),_callee2,this)}))),function savePDF(){return _savePDF.apply(this,arguments)})},{key:"handleOptionSelected",value:(_handleOptionSelected=_asyncToGenerator(_regeneratorRuntime().mark((function _callee3(e){return _regeneratorRuntime().wrap((function _callee3$(_context3){for(;;)switch(_context3.prev=_context3.next){case 0:_context3.t0=e.detail.id,_context3.next="later"===_context3.t0?3:"claim"===_context3.t0?6:"decline"===_context3.t0?7:"print"===_context3.t0?8:"download"===_context3.t0?9:11;break;case 3:return this.finishLater=!0,this.showFinishLater=!0,_context3.abrupt("break",11);case 6:case 7:case 8:return _context3.abrupt("break",11);case 9:return this.savePDF().catch((function(){})),_context3.abrupt("break",11);case 11:case"end":return _context3.stop()}}),_callee3,this)}))),function handleOptionSelected(_x){return _handleOptionSelected.apply(this,arguments)})},{key:"handleFieldChange",value:(_handleFieldChange=_asyncToGenerator(_regeneratorRuntime().mark((function _callee4(field,e,optionId){var _e$target,value,checked,options,newSignature,attachResult,iso,_this3=this;return _regeneratorRuntime().wrap((function _callee4$(_context4){for(;;)switch(_context4.prev=_context4.next){case 0:console.log("fieldChange",field,e),_e$target=e.target,value=_e$target.value,checked=_e$target.checked,_context4.t0=field.type,_context4.next="textbox"===_context4.t0?5:"checkbox_group"===_context4.t0?7:"radio_button_group"===_context4.t0?9:"dropdown"===_context4.t0?12:"initial"===_context4.t0?14:"signature"===_context4.t0?16:"date"===_context4.t0?26:29;break;case 5:return Object(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.f)(this.endpoint,this.envelopeId,field.name,{prepared:!1,value:value}).then((function(r){return console.log("Update result",r)})).catch((function(e){var _a,_b,_c,_d,_e,_f;null===(_a=_this3.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data)),401===(null===(_d=e.response)||void 0===_d?void 0:_d.status)&&"jwt expired"===(null===(_f=null===(_e=e.response)||void 0===_e?void 0:_e.data)||void 0===_f?void 0:_f.error)&&console.log("jwt expired"),console.log("Error updating",e)})),_context4.abrupt("break",31);case 7:return Object(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.f)(this.endpoint,this.envelopeId,field.name,{prepared:!1,value:{options:[{id:optionId,checked:checked}]}}).then((function(r){return console.log("Update result",r)})).catch((function(e){var _a,_b,_c;null===(_a=_this3.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data)),console.log("Error updating",e)})),_context4.abrupt("break",31);case 9:return options=field.settings.options.map((function(option){return{id:option.id,selected:optionId===option.id}})),Object(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.f)(this.endpoint,this.envelopeId,field.name,{prepared:!1,value:{options:options}}).then((function(r){return console.log("Update result",r)})).catch((function(e){var _a,_b,_c;null===(_a=_this3.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data)),console.log("Error updating",e)})),_context4.abrupt("break",31);case 12:return Object(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.f)(this.endpoint,this.envelopeId,field.name,{prepared:!1,value:e.detail}).then((function(r){return console.log("Update result",r)})).catch((function(e){var _a,_b,_c;null===(_a=_this3.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data)),console.log("Error updating",e)})),_context4.abrupt("break",31);case 14:return console.log("Got initial",e.detail),_context4.abrupt("break",31);case 16:return console.log("Got signature",e.detail),_context4.next=19,createSignature(this.endpoint,"signature",e.detail);case 19:return newSignature=_context4.sent,console.log("Created signature",newSignature),_context4.next=23,Object(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.c)(this.endpoint,this.envelopeId,field.name,newSignature.id);case 23:return attachResult=_context4.sent,console.log("Attach result",attachResult),_context4.abrupt("break",31);case 26:return iso=e.target.getAttribute("iso"),Object(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.f)(this.endpoint,this.envelopeId,field.name,{prepared:!1,value:iso}).then((function(r){return console.log("Update result",r)})).catch((function(e){var _a,_b,_c,_d,_e,_f;null===(_a=_this3.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_41__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data)),401===(null===(_d=e.response)||void 0===_d?void 0:_d.status)&&"jwt expired"===(null===(_f=null===(_e=e.response)||void 0===_e?void 0:_e.data)||void 0===_f?void 0:_f.error)&&console.log("jwt expired"),console.log("Error updating",e)})),_context4.abrupt("break",31);case 29:return console.log("Unhandled field update",{value:value,checked:checked},field),_context4.abrupt("break",31);case 31:case"end":return _context4.stop()}}),_callee4,this)}))),function handleFieldChange(_x2,_x3,_x4){return _handleFieldChange.apply(this,arguments)})},{key:"isFieldValid",value:function isFieldValid(field){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;switch(field.type){case"textbox":switch((null===(_a=field.settings)||void 0===_a?void 0:_a.validator)||""){case"email":return Object(_Validators_f110bae2_js__WEBPACK_IMPORTED_MODULE_38__.b)((null===(_b=field.settings)||void 0===_b?void 0:_b.result)||"");case"phone":return Object(_Validators_f110bae2_js__WEBPACK_IMPORTED_MODULE_38__.a)((null===(_c=field.settings)||void 0===_c?void 0:_c.result)||"");default:return!!(null===(_d=field.settings)||void 0===_d?void 0:_d.result)}case"signature":case"initial":case"textarea":case"date":case"timestamp":case"attachment":return!!(null===(_e=field.settings)||void 0===_e?void 0:_e.result);case"dropdown":return!!(null===(_f=field.settings)||void 0===_f?void 0:_f.value);case"checkbox_group":var checked=((null===(_h=null===(_g=field.settings)||void 0===_g?void 0:_g.options)||void 0===_h?void 0:_h.filter((function(option){return option.checked})))||[]).length;return checked>=((null===(_j=field.settings)||void 0===_j?void 0:_j.minimum_checked)||0)&&checked<=((null===(_k=field.settings)||void 0===_k?void 0:_k.maximum_checked)||999);case"radio_button_group":return((null===(_m=null===(_l=field.settings)||void 0===_l?void 0:_l.options)||void 0===_m?void 0:_m.filter((function(option){return option.selected})))||[]).length>0;default:return!1}}},{key:"handleNext",value:function handleNext(){var _this4=this,requiredFields=this.fields.filter((function(field){return field.required}));console.log("required Fields",requiredFields);var focusedIndex=requiredFields.findIndex((function(field){return field.name===_this4.focusedField}));console.log("focused Index",focusedIndex);var nextFocusedIndex=focusedIndex+1;nextFocusedIndex>=requiredFields.length&&(nextFocusedIndex=0);var nextRequiredField=requiredFields[nextFocusedIndex];if(console.log("next required field",nextRequiredField),nextRequiredField){var id=Object(_utils_16973ff9_js__WEBPACK_IMPORTED_MODULE_40__.b)(nextRequiredField),el=document.getElementById(id);console.log("focusing",id,el),null==el||el.focusField(),this.focusedField=nextRequiredField.name}}},{key:"handlePageRendered",value:function handlePageRendered(e){var _this5=this,pageInfo=e.detail;console.log("[SIGN] Page rendered",pageInfo),console.log("rendering fields for recipient",Object(_utils_16973ff9_js__WEBPACK_IMPORTED_MODULE_40__.d)(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.roleNames,this.recipient.role_name));var recipientFields=this.recipient.fields.filter((function(field){return field.page===pageInfo.pageNumber}));console.log("[SIGN] Fields on page",recipientFields),recipientFields.forEach((function(field){var _a,el=Object(_utils_16973ff9_js__WEBPACK_IMPORTED_MODULE_40__.f)(field,pageInfo,Object(_utils_16973ff9_js__WEBPACK_IMPORTED_MODULE_40__.d)(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.roleNames,field.recipient_role),{disabled:!1,editable:!1,draggable:!1});el&&(el.addEventListener("input",(function(e){_this5.handleFieldChange(field,e)})),el.addEventListener("fieldChange",(function(e){_this5.handleFieldChange(field,e)})),el.setAttribute("xScale",pageInfo.xScale),el.setAttribute("yScale",pageInfo.yScale),el.setAttribute("initials",_this5.recipient?Object(_utils_16973ff9_js__WEBPACK_IMPORTED_MODULE_40__.c)(_this5.recipient.full_name):""),el.setAttribute("name",(null===(_a=_this5.recipient)||void 0===_a?void 0:_a.full_name)||""))})),_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.envelope.recipients.filter((function(recipient){return recipient.role_name!==_this5.recipient.role_name})).map((function(otherRecipient){console.log("Rendering fields for other recipient",Object(_utils_16973ff9_js__WEBPACK_IMPORTED_MODULE_40__.d)(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.roleNames,otherRecipient.role_name),otherRecipient);var recipientFields=otherRecipient.fields.filter((function(field){return field.page===pageInfo.pageNumber}));console.log("[SIGN] Fields on page",recipientFields),recipientFields.forEach((function(field){var el=Object(_utils_16973ff9_js__WEBPACK_IMPORTED_MODULE_40__.f)(field,pageInfo,Object(_utils_16973ff9_js__WEBPACK_IMPORTED_MODULE_40__.d)(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.roleNames,otherRecipient.role_name),{disabled:!0,editable:!1,draggable:!1});el&&(el.setAttribute("xScale",pageInfo.xScale),el.setAttribute("yScale",pageInfo.yScale))}))}))}},{key:"render",value:function render(){var _a,_b,_c,_d,_this6=this;if(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.loading||!_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.envelope)return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.b,null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("verdocs-loader",null));return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.b,{class:{agreed:null===(_a=this.recipient)||void 0===_a?void 0:_a.agreed}},!this.finishLater&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{class:"intro"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{class:"inner"},"Please review and act on these documents.")),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{class:"header"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{class:"inner"},!this.finishLater&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{class:"toolbar"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{class:"tools"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("verdocs-dropdown",{options:[{id:"later",label:"Finish Later"},{id:"claim",label:"Claim the Document",disabled:!0},{id:"decline",label:"Decline to Sign"},{id:"print",label:"Print Without Signing"},{id:"download",label:"Download"}],onOptionSelected:function onOptionSelected(e){return _this6.handleOptionSelected(e)}}),(null===(_b=this.recipient)||void 0===_b?void 0:_b.agreed)?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{style:{flex:"1"}}):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{class:"agree"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("verdocs-checkbox",{name:"agree",label:"I agree to use electronic records and signatures.",onInput:function onInput(){return _this6.handleClickAgree()}})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("verdocs-button",{size:"small",label:this.nextButtonLabel,disabled:!(null===(_c=this.recipient)||void 0===_c?void 0:_c.agreed),onClick:function onClick(){return _this6.handleNext()}}))))),(null===(_d=this.recipient)||void 0===_d?void 0:_d.agreed)?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{style:{display:"none"}}):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{class:"cover"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("div",{class:"document"},(_Envelopes_19ca610d_js__WEBPACK_IMPORTED_MODULE_36__.e.envelope.documents||[]).map((function(envelopeDocument){var pages=_toConsumableArray((null==envelopeDocument?void 0:envelopeDocument.pages)||[]);return pages.sort((function(a,b){return a.sequence-b.sequence})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.a,null,pages.map((function(page){return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("verdocs-document-page",{pageImageUri:page.display_uri,virtualWidth:612,virtualHeight:792,pageNumber:page.sequence,onPageRendered:function onPageRendered(e){return _this6.handlePageRendered(e)},layers:[{name:"page",type:"canvas"},{name:"controls",type:"div"}]})})))}))),this.showFinishLater&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_35__.h)("verdocs-ok-dialog",{heading:"You've saved your document to finish later.",message:"To complete the document, use the link in the original email notification inviting you to review and finish the document.",onNext:function onNext(){return _this6.showFinishLater=!1}}))}}]),VerdocsSign}();VerdocsSign.style='verdocs-sign{display:-ms-flexbox;display:flex;overflow:hidden;position:relative;min-height:600px;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-sign div{-webkit-box-sizing:border-box;box-sizing:border-box}verdocs-sign .header{-ms-flex:0;flex:0;display:-ms-flexbox;display:flex;z-index:1000;-ms-flex-align:center;align-items:center;-webkit-transition:all 0.25s;transition:all 0.25s;-ms-flex-pack:center;justify-content:center;background-color:#33354c;-webkit-box-shadow:0 4px 4px 0 rgba(0, 0, 0, 0.24), 0 0 4px 0 rgba(0, 0, 0, 0.12);box-shadow:0 4px 4px 0 rgba(0, 0, 0, 0.24), 0 0 4px 0 rgba(0, 0, 0, 0.12)}verdocs-sign .header .inner{width:100%;max-width:1028px}verdocs-sign .intro{width:100%;height:60px;display:-ms-flexbox;display:flex;background:#ffffff;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}verdocs-sign .intro .inner{width:100%;color:#111111;padding:0 14px;font-size:20px;font-weight:500;line-height:28px;max-width:1024px}verdocs-sign .toolbar{width:100%;margin:0 auto;padding:0 14px;position:relative}verdocs-sign .tools{width:100%;color:#fff;height:56px;display:-ms-flexbox;display:flex;font-size:12px;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row;background-color:#33354c}verdocs-sign .cover{top:0;left:0;right:0;bottom:0;z-index:999;position:absolute;background:rgba(0, 0, 0, 0.5)}verdocs-sign .document{-ms-flex:1;flex:1;height:100%;display:-ms-flexbox;display:flex;padding:15px;row-gap:15px;min-height:200px;position:relative;overflow-y:scroll;-ms-flex-align:center;align-items:center;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}verdocs-sign .document .inner{width:100%;max-width:1028px}verdocs-sign .agree{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;padding:0 15px}verdocs-sign .agree .intro{display:none}verdocs-sign .agree .header{-ms-flex:0 0 56px;flex:0 0 56px}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*! For license information please see 26.bda75b8f.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"./dist/esm/Envelopes-c3d471e5.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getFieldAttachment})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getSigningSession})),__webpack_require__.d(__webpack_exports__,"c",(function(){return updateEnvelopeFieldSignature})),__webpack_require__.d(__webpack_exports__,"d",(function(){return updateEnvelopeFieldInitials})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getEnvelope})),__webpack_require__.d(__webpack_exports__,"f",(function(){return cancelEnvelope})),__webpack_require__.d(__webpack_exports__,"g",(function(){return getEnvelopeFile})),__webpack_require__.d(__webpack_exports__,"h",(function(){return getEnvelopeDocumentPageDisplayUri})),__webpack_require__.d(__webpack_exports__,"i",(function(){return throttledGetEnvelope})),__webpack_require__.d(__webpack_exports__,"j",(function(){return updateEnvelopeField}));__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js");var _Types_5f31149e_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./dist/esm/Types-5f31149e.js"),__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=function(thisArg,body){var f,y,t,g,_={label:0,sent:function sent(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;g&&(g=0,op[0]&&(_=0)),_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}},getSigningSession=function getSigningSession(endpoint,params){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.get("/envelopes/".concat(params.envelopeId,"/recipients/").concat(encodeURIComponent(params.roleId),"/invitation/").concat(params.inviteCode)).then((function(r){var _a,signerToken=(null===(_a=r.headers)||void 0===_a?void 0:_a.signer_token)||"",session=Object(_Types_5f31149e_js__WEBPACK_IMPORTED_MODULE_10__.c)(signerToken);return endpoint.setToken(signerToken),{recipient:r.data,session:session,signerToken:signerToken}}))]}))}))},getEnvelope=function getEnvelope(endpoint,envelopeId){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.get("/envelopes/".concat(envelopeId)).then((function(r){return r.data}))]}))}))},cancelEnvelope=function cancelEnvelope(endpoint,envelopeId){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.put("/envelopes/".concat(envelopeId),{action:"cancel"}).then((function(r){return r.data}))]}))}))},getEnvelopeFile=function getEnvelopeFile(endpoint,envelopeId,documentId){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.get("/envelopes/".concat(envelopeId,"/envelope_documents/").concat(documentId,"?file=true"),{responseType:"blob"}).then((function(r){return r.data}))]}))}))},updateEnvelopeField=function updateEnvelopeField(endpoint,envelopeId,fieldName,value){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.put("/envelopes/".concat(envelopeId,"/fields/").concat(fieldName),value).then((function(r){return r.data}))]}))}))},updateEnvelopeFieldSignature=function updateEnvelopeFieldSignature(endpoint,envelopeId,fieldName,signatureId){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.put("/envelopes/".concat(envelopeId,"/fields/").concat(fieldName,"/signature/").concat(signatureId)).then((function(r){return r.data}))]}))}))},updateEnvelopeFieldInitials=function updateEnvelopeFieldInitials(endpoint,envelopeId,fieldName,initialId){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.put("/envelopes/".concat(envelopeId,"/fields/").concat(fieldName,"/initial/").concat(initialId)).then((function(r){return r.data}))]}))}))},getFieldAttachment=function getFieldAttachment(endpoint,envelopeId,fieldName){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.get("/envelopes/".concat(envelopeId,"/fields/").concat(fieldName,"/document"),{responseType:"blob"}).then((function(r){return r.data}))]}))}))},getEnvelopeDocumentPageDisplayUri=function getEnvelopeDocumentPageDisplayUri(endpoint,envelopeId,documentId,page,type){return void 0===type&&(type="original"),__awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.get("/envelopes/".concat(envelopeId,"/envelope_documents/").concat(documentId,"/pages/").concat(page,"/image?type=").concat(type),{timeout:2e4,"axios-retry":{retries:5}}).then((function(r){return r.data}))]}))}))},cachedEnvelopes={},throttledGetEnvelope=function throttledGetEnvelope(endpoint,envelopeId){return cachedEnvelopes[envelopeId]&&cachedEnvelopes[envelopeId].loaded+2e3<(new Date).getTime()?cachedEnvelopes[envelopeId].envelope:getEnvelope(endpoint,envelopeId).then((function(envelope){return cachedEnvelopes[envelopeId]={loaded:(new Date).getTime(),envelope:envelope},envelope}))}},"./dist/esm/Permissions-7192ef7c.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return userCanCancelEnvelope})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getRecipientsWithActions})),__webpack_require__.d(__webpack_exports__,"c",(function(){return recipientCanAct})),__webpack_require__.d(__webpack_exports__,"d",(function(){return userIsEnvelopeOwner}));__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js");var _Types_5f31149e_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/esm/Types-5f31149e.js"),userIsEnvelopeOwner=function userIsEnvelopeOwner(session,envelope){return envelope.profile_id===(null==session?void 0:session.profile_id)},userCanCancelEnvelope=function userCanCancelEnvelope(session,envelope){return userIsEnvelopeOwner(session,envelope)&&envelope.status!==_Types_5f31149e_js__WEBPACK_IMPORTED_MODULE_2__.a.COMPLETE&&envelope.status!==_Types_5f31149e_js__WEBPACK_IMPORTED_MODULE_2__.a.DECLINED&&envelope.status!==_Types_5f31149e_js__WEBPACK_IMPORTED_MODULE_2__.a.CANCELED},recipientHasAction=function recipientHasAction(recipient){return!["submitted","canceled","declined"].includes(recipient.status)},getRecipientsWithActions=function getRecipientsWithActions(envelope){return((null==envelope?void 0:envelope.recipients)||[]).filter(recipientHasAction)},recipientCanAct=function recipientCanAct(recipient,recipientsWithActions){var _a;return recipient.sequence===(null===(_a=null==recipientsWithActions?void 0:recipientsWithActions[0])||void 0===_a?void 0:_a.sequence)}},"./dist/esm/Recipients-198b2531.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return envelopeRecipientDecline})),__webpack_require__.d(__webpack_exports__,"b",(function(){return envelopeRecipientSubmit})),__webpack_require__.d(__webpack_exports__,"c",(function(){return envelopeRecipientAgree})),__webpack_require__.d(__webpack_exports__,"d",(function(){return getInPersonLink}));__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js");var __awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=function(thisArg,body){var f,y,t,g,_={label:0,sent:function sent(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;g&&(g=0,op[0]&&(_=0)),_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}},updateRecipient=function updateRecipient(endpoint,envelopeId,roleName,params){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.put("/envelopes/".concat(envelopeId,"/recipients/").concat(roleName),params).then((function(r){return r.data}))]}))}))},envelopeRecipientSubmit=function envelopeRecipientSubmit(endpoint,envelopeId,roleName){return updateRecipient(endpoint,envelopeId,roleName,{action:"submit"})},envelopeRecipientDecline=function envelopeRecipientDecline(endpoint,envelopeId,roleName){return updateRecipient(endpoint,envelopeId,roleName,{action:"decline"})},envelopeRecipientAgree=function envelopeRecipientAgree(endpoint,envelopeId,roleName,agreed){return updateRecipient(endpoint,envelopeId,roleName,{action:"update",agreed:agreed})},getInPersonLink=function getInPersonLink(endpoint,envelopeId,roleName){return endpoint.api.get("/envelopes/".concat(envelopeId,"/recipients/").concat(encodeURIComponent(roleName),"?in_person_link=true")).then((function(r){return r.data}))}},"./dist/esm/Toast-f3b8fd46.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return VerdocsToast}));__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.timers.js");var Icons={error:'<div class="toast-icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" style="width: 24px; height: 24px; display: block;">\n  <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z" clip-rule="evenodd" />\n</svg></div>',success:'<div class="toast-icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" style="width: 24px; height: 24px; display: block;">\n  <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z" clip-rule="evenodd" />\n</svg></div>',info:'<div class="toast-icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" style="width: 24px; height: 24px; display: block;">\n  <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm8.706-1.442c1.146-.573 2.437.463 2.126 1.706l-.709 2.836.042-.02a.75.75 0 01.67 1.34l-.04.022c-1.147.573-2.438-.463-2.127-1.706l.71-2.836-.042.02a.75.75 0 11-.671-1.34l.041-.022zM12 9a.75.75 0 100-1.5.75.75 0 000 1.5z" clip-rule="evenodd" />\n</svg></div>',default:'<div class="toast-icon"></div>'},Colors={error:"#ed3d3d",success:"#3dc763",info:"#2379c7",default:"#6a56c1"},removeToasts=function removeToasts(){return Array.from(document.getElementsByClassName("verdocs-toast")).forEach((function(oldToast){return oldToast.remove()}))},closeClicked=function closeClicked(e){e.stopPropagation(),removeToasts()},VerdocsToast=function VerdocsToast(text){var config=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};removeToasts();var _ref=config||{},_ref$duration=_ref.duration,duration=void 0===_ref$duration?5e3:_ref$duration,_ref$style=_ref.style,style=void 0===_ref$style?"default":_ref$style,color=Colors[style]||Colors.default,toastBody="\n    "+(Icons[style]||Icons.default)+'\n    <div class="verdocs-toast-text" style="padding: 12px 12px 12px 0;">'+text+'</div>\n    <div class="verdocs-toast-close" style="padding: 12px 10px; background: rgba(0, 0, 0, 0.2); cursor: pointer;">✕</div>\n  ',toast=document.createElement("div");toast.className="verdocs-toast",toast.innerHTML=toastBody,toast.style.cssText="\ndisplay: flex; flex-direction: row; gap: 10px; align-items: center;\nposition: fixed; top: 20px; right: 20px; z-index: 2147483647; max-width: calc(50% - 20px);\ncolor: #ffffff; background: "+color+"; font-family: 'Barlow', sans-serif;\nborder-radius: 2px; padding-left: 10px;\nbox-shadow: 0 3px 7px 2px rgba(0, 0, 0, 0.12), 0 10px 36px -4px rgba(77, 96, 232, 0.3);",document.body.append(toast),Array.from(document.getElementsByClassName("verdocs-toast-close")).forEach((function(closeEl){return closeEl.addEventListener("click",closeClicked)})),setTimeout(removeToasts,duration)}},"./dist/esm/errors-9b5498c8.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SDKError}));__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.reflect.construct.js"),__webpack_require__("./node_modules/core-js/modules/es.map.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return function _possibleConstructorReturn(self,call){if(call&&("object"==typeof call||"function"==typeof call))return call;if(void 0!==call)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(self)}(this,result)}}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _wrapNativeSuper(Class){var _cache="function"==typeof Map?new Map:void 0;return _wrapNativeSuper=function _wrapNativeSuper(Class){if(null===Class||!function _isNativeFunction(fn){return-1!==Function.toString.call(fn).indexOf("[native code]")}(Class))return Class;if("function"!=typeof Class)throw new TypeError("Super expression must either be null or a function");if(void 0!==_cache){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper)}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor)}return Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(Wrapper,Class)},_wrapNativeSuper(Class)}function _construct(Parent,args,Class){return _construct=_isNativeReflectConstruct()?Reflect.construct.bind():function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var instance=new(Function.bind.apply(Parent,a));return Class&&_setPrototypeOf(instance,Class.prototype),instance},_construct.apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}var SDKError=function(_Error){!function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),Object.defineProperty(subClass,"prototype",{writable:!1}),superClass&&_setPrototypeOf(subClass,superClass)}(SDKError,_Error);var _super=_createSuper(SDKError);function SDKError(message,statusCode,response){var _this;return function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,SDKError),(_this=_super.call(this,message||"SDK Error")).response=response,_this.statusCode=statusCode,Object.setPrototypeOf(_assertThisInitialized(_this),(this instanceof SDKError?this.constructor:void 0).prototype),_this}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(SDKError)}(_wrapNativeSuper(Error))},"./dist/esm/index-29123f30.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return createStore}));__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/core-js/modules/web.timers.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.map.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reduce.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");var _index_b18c0348_js__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__("./dist/esm/index-b18c0348.js");function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var isConnected=function isConnected(maybeElement){return!("isConnected"in maybeElement)||maybeElement.isConnected},cleanupElements=function debounce(fn,ms){var timeoutId;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];timeoutId&&clearTimeout(timeoutId),timeoutId=setTimeout((function(){timeoutId=0,fn.apply(void 0,args)}),ms)}}((function(map){var _step,_iterator=_createForOfIteratorHelper(map.keys());try{for(_iterator.s();!(_step=_iterator.n()).done;){var key=_step.value;map.set(key,map.get(key).filter(isConnected))}}catch(err){_iterator.e(err)}finally{_iterator.f()}}),2e3),unwrap=function unwrap(val){return"function"==typeof val?val():val},removeFromArray=function removeFromArray(array,item){var index=array.indexOf(item);index>=0&&(array[index]=array[array.length-1],array.length--)},createStore=function createStore(defaultState,shouldUpdate){var map=function createObservableMap(defaultState){var shouldUpdate=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(a,b){return a!==b},unwrappedState=unwrap(defaultState),states=new Map(Object.entries(null!=unwrappedState?unwrappedState:{})),handlers={dispose:[],get:[],set:[],reset:[]},reset=function reset(){var _a;states=new Map(Object.entries(null!==(_a=unwrap(defaultState))&&void 0!==_a?_a:{})),handlers.reset.forEach((function(cb){return cb()}))},_get=function get(propName){return handlers.get.forEach((function(cb){return cb(propName)})),states.get(propName)},_set=function set(propName,value){var oldValue=states.get(propName);shouldUpdate(value,oldValue,propName)&&(states.set(propName,value),handlers.set.forEach((function(cb){return cb(propName,value,oldValue)})))},state="undefined"==typeof Proxy?{}:new Proxy(unwrappedState,{get:function get(_,propName){return _get(propName)},ownKeys:function ownKeys(_){return Array.from(states.keys())},getOwnPropertyDescriptor:function getOwnPropertyDescriptor(){return{enumerable:!0,configurable:!0}},has:function has(_,propName){return states.has(propName)},set:function set(_,propName,value){return _set(propName,value),!0}}),on=function on(eventName,callback){return handlers[eventName].push(callback),function(){removeFromArray(handlers[eventName],callback)}};return{state:state,get:_get,set:_set,on:on,onChange:function onChange(propName,cb){var unSet=on("set",(function(key,newValue){key===propName&&cb(newValue)})),unReset=on("reset",(function(){return cb(unwrap(defaultState)[propName])}));return function(){unSet(),unReset()}},use:function use(){for(var _len2=arguments.length,subscriptions=new Array(_len2),_key2=0;_key2<_len2;_key2++)subscriptions[_key2]=arguments[_key2];var unsubs=subscriptions.reduce((function(unsubs,subscription){return subscription.set&&unsubs.push(on("set",subscription.set)),subscription.get&&unsubs.push(on("get",subscription.get)),subscription.reset&&unsubs.push(on("reset",subscription.reset)),subscription.dispose&&unsubs.push(on("dispose",subscription.dispose)),unsubs}),[]);return function(){return unsubs.forEach((function(unsub){return unsub()}))}},dispose:function dispose(){handlers.dispose.forEach((function(cb){return cb()})),reset()},reset:reset,forceUpdate:function forceUpdate(key){var oldValue=states.get(key);handlers.set.forEach((function(cb){return cb(key,oldValue,oldValue)}))}}}(defaultState,shouldUpdate);return map.use(function stencilSubscription(){if("function"!=typeof _index_b18c0348_js__WEBPACK_IMPORTED_MODULE_21__.g)return{};var elmsToUpdate=new Map;return{dispose:function dispose(){return elmsToUpdate.clear()},get:function get(propName){var elm=Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_21__.g)();elm&&function appendToMap(map,propName,value){var items=map.get(propName);items?items.includes(value)||items.push(value):map.set(propName,[value])}(elmsToUpdate,propName,elm)},set:function set(propName){var elements=elmsToUpdate.get(propName);elements&&elmsToUpdate.set(propName,elements.filter(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_21__.f)),cleanupElements(elmsToUpdate)},reset:function reset(){elmsToUpdate.forEach((function(elms){return elms.forEach(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_21__.f)})),cleanupElements(elmsToUpdate)}}}()),map}},"./dist/esm/verdocs-envelope-recipient-summary.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_envelope_recipient_summary",(function(){return VerdocsEnvelopeRecipientSummary}));__webpack_require__("./node_modules/core-js/modules/es.date.to-iso-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/core-js/modules/es.string.link.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");var _index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__=__webpack_require__("./dist/esm/index-b18c0348.js"),_Permissions_7192ef7c_js__WEBPACK_IMPORTED_MODULE_32__=__webpack_require__("./dist/esm/Permissions-7192ef7c.js"),_Recipients_198b2531_js__WEBPACK_IMPORTED_MODULE_33__=__webpack_require__("./dist/esm/Recipients-198b2531.js"),_VerdocsEndpoint_6d7a17ce_js__WEBPACK_IMPORTED_MODULE_35__=(__webpack_require__("./dist/esm/Types-5f31149e.js"),__webpack_require__("./dist/esm/VerdocsEndpoint-6d7a17ce.js")),_index_29123f30_js__WEBPACK_IMPORTED_MODULE_36__=__webpack_require__("./dist/esm/index-29123f30.js"),_Envelopes_c3d471e5_js__WEBPACK_IMPORTED_MODULE_37__=__webpack_require__("./dist/esm/Envelopes-c3d471e5.js"),_Toast_f3b8fd46_js__WEBPACK_IMPORTED_MODULE_38__=__webpack_require__("./dist/esm/Toast-f3b8fd46.js"),_errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_39__=__webpack_require__("./dist/esm/errors-9b5498c8.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(void 0===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}var createEnvelopeStore=function createEnvelopeStore(envelopeId){var now=(new Date).toISOString();return Object(_index_29123f30_js__WEBPACK_IMPORTED_MODULE_36__.a)({isLoading:!0,isLoaded:!1,isError:!1,error:null,updateCount:0,roleNames:[],id:envelopeId,template_id:"",name:"",status:"pending",profile_id:"",organization_id:"",no_contact:!1,created_at:now,updated_at:now,canceled_at:null,reminder_id:null,envelope_document_id:"",certificate_document_id:null,visibility:"private",histories:[],recipients:[],profile:void 0,certificate:void 0,document:void 0,documents:void 0,fields:void 0})},envelopeStores={},getEnvelopeStore=function(){var _ref=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(endpoint,envelopeId){var forceReload,created,store,envelope,_args=arguments;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(forceReload=_args.length>2&&void 0!==_args[2]&&_args[2],created=!1,envelopeStores[envelopeId]||(console.debug("[ENVELOPES] No envelope store found for ID, creating",envelopeId),envelopeStores[envelopeId]=createEnvelopeStore(envelopeId),created=!0),(store=envelopeStores[envelopeId]).use({reset:function reset(){return console.debug("[ENVELOPES] Store got reset")},dispose:function dispose(){return console.debug("[ENVELOPES] Store got disposed")}}),!created&&!forceReload){_context.next=31;break}return console.debug("[ENVELOPES] Reloading envelope",{envelopeId:envelopeId,created:created,forceReload:forceReload}),store.state.isLoading=!0,store.state.isLoaded=!1,store.state.isError=!1,store.state.error=void 0,_context.prev=11,_context.next=14,Object(_Envelopes_c3d471e5_js__WEBPACK_IMPORTED_MODULE_37__.e)(endpoint,envelopeId);case 14:envelope=_context.sent,console.debug("[ENVELOPES] Got envelope",envelope),Object.assign(store.state,envelope),store.state.isLoaded=!0,store.state.isError=!1,store.state.error=void 0,_context.next=29;break;case 22:throw _context.prev=22,_context.t0=_context.catch(11),console.error("[ENVELOPES] Error loading envelope",_context.t0),store.state.isLoaded=!1,store.state.isError=!0,store.state.error=_context.t0,_context.t0;case 29:store.state.isLoading=!1,store.state.updateCount++;case 31:return _context.abrupt("return",store);case 32:case"end":return _context.stop()}}),_callee,null,[[11,22]])})));return function getEnvelopeStore(_x,_x2){return _ref.apply(this,arguments)}}(),VerdocsEnvelopeRecipientSummary=function(){function VerdocsEnvelopeRecipientSummary(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsEnvelopeRecipientSummary),Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.j)(this,hostRef),this.another=Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.e)(this,"another",7),this.view=Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.e)(this,"view",7),this.next=Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.e)(this,"next",7),this.sdkError=Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.e)(this,"sdkError",7),this.store=null,this.endpoint=_VerdocsEndpoint_6d7a17ce_js__WEBPACK_IMPORTED_MODULE_35__.b.getDefault(),this.envelopeId="",this.canSendAnother=!0,this.canView=!0,this.canDone=!0,this.envelope=void 0,this.isOpen=void 0,this.loading=!0,this.recipientStatusIcons=[],this.containerId="verdocs-status-indicator-"+Math.random().toString(36).substring(2,11),this.gettingLinks={},this.links={}}var _componentWillLoad;return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsEnvelopeRecipientSummary,[{key:"componentWillLoad",value:(_componentWillLoad=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(){var _a,_b,_c;return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:if(_context2.prev=0,this.endpoint.loadSession(),this.envelopeId){_context2.next=5;break}return console.log("[RECIPIENTS] Missing required envelope ID "+this.envelopeId),_context2.abrupt("return");case 5:if(this.endpoint.session){_context2.next=8;break}return console.log("[RECIPIENTS] Unable to start session, must be authenticated"),_context2.abrupt("return");case 8:return _context2.next=10,getEnvelopeStore(this.endpoint,this.envelopeId,!0);case 10:this.store=_context2.sent,this.sortEnvelopeRecipients(),this.loading=!1,_context2.next=19;break;case 15:_context2.prev=15,_context2.t0=_context2.catch(0),console.log("[RECIPIENTS] Error loading envelope",_context2.t0),null===(_a=this.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_39__.a(_context2.t0.message,null===(_b=_context2.t0.response)||void 0===_b?void 0:_b.status,null===(_c=_context2.t0.response)||void 0===_c?void 0:_c.data));case 19:case"end":return _context2.stop()}}),_callee2,this,[[0,15]])}))),function componentWillLoad(){return _componentWillLoad.apply(this,arguments)})},{key:"sortEnvelopeRecipients",value:function sortEnvelopeRecipients(){var _a,_b;null===(_b=null===(_a=this.store)||void 0===_a?void 0:_a.state)||void 0===_b||_b.recipients.sort((function(a,b){return a.sequence===b.sequence?a.order-b.order:a.sequence-b.sequence}))}},{key:"handleAnother",value:function handleAnother(e){var _a;e.preventDefault(),null===(_a=this.another)||void 0===_a||_a.emit({envelope:this.store.state})}},{key:"handleView",value:function handleView(e){var _a;e.preventDefault(),null===(_a=this.view)||void 0===_a||_a.emit({envelope:this.store.state})}},{key:"handleDone",value:function handleDone(e){var _a;e.preventDefault(),null===(_a=this.next)||void 0===_a||_a.emit({envelope:this.store.state})}},{key:"copyLink",value:function copyLink(link){navigator.clipboard.writeText(link).then((function(){return Object(_Toast_f3b8fd46_js__WEBPACK_IMPORTED_MODULE_38__.a)("Link copied to clipboard!",{style:"success",duration:3e3})})).catch((function(e){console.warn("[RECIPIENTS] Error copying to clipboard",e),Object(_Toast_f3b8fd46_js__WEBPACK_IMPORTED_MODULE_38__.a)("Unable to copy to clipboard: "+e.message,{style:"error"})}))}},{key:"getLink",value:function getLink(recipient){var _Object$assign,_this=this;this.gettingLinks=Object.assign({},this.gettingLinks,((_Object$assign={})[recipient.role_name]=!0,_Object$assign)),Object(_Recipients_198b2531_js__WEBPACK_IMPORTED_MODULE_33__.d)(this.endpoint,recipient.envelope_id,recipient.role_name).then((function(response){var _Object$assign2,_Object$assign3;_this.gettingLinks=Object.assign({},_this.gettingLinks,((_Object$assign2={})[recipient.role_name]=!1,_Object$assign2)),_this.links=Object.assign({},_this.links,((_Object$assign3={})[recipient.role_name]=response.link,_Object$assign3)),_this.copyLink(response.link)})).catch((function(e){var _Object$assign4;_this.gettingLinks=Object.assign({},_this.gettingLinks,((_Object$assign4={})[recipient.role_name]=!1,_Object$assign4)),console.log("[RECIPIENTS] Error getting link",e),Object(_Toast_f3b8fd46_js__WEBPACK_IMPORTED_MODULE_38__.a)("Unable to get link: "+e.message,{style:"error"})}))}},{key:"render",value:function render(){var _a,_b,_this2=this;return this.loading?Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.b,null):Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.b,null,Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"summary-content"},Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("h1",{class:"summary-title"},"Recipient Summary"),Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"summary-rows"},((null===(_b=null===(_a=this.store)||void 0===_a?void 0:_a.state)||void 0===_b?void 0:_b.recipients)||[]).map((function(recipient){var recipientsWithActions=Object(_Permissions_7192ef7c_js__WEBPACK_IMPORTED_MODULE_32__.b)(_this2.store.state),showLinkButton=Object(_Permissions_7192ef7c_js__WEBPACK_IMPORTED_MODULE_32__.c)(recipient,recipientsWithActions),link=_this2.links[recipient.role_name],gettingLink=_this2.gettingLinks[recipient.role_name];return Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"summary-recipient"},Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"role-name"},recipient.role_name),Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"role-details"},Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"role-info"},Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"role-full-name"},recipient.full_name," (",recipient.email||recipient.phone,")"),showLinkButton&&!link&&Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("verdocs-button",{size:"small",variant:"outline",label:"Get Link",disabled:gettingLink,onClick:function onClick(){return _this2.getLink(recipient)}})),link&&Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"link-wrapper"},Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"link"},link),Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("verdocs-button",{size:"small",variant:"outline",label:"Copy",onClick:function onClick(){return _this2.copyLink(link)}}))))}))),(this.canSendAnother||this.canView||this.canDone)&&Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("div",{class:"buttons"},this.canSendAnother&&Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("verdocs-button",{size:"small",label:"Send Another",onClick:function onClick(e){return _this2.handleAnother(e)}}),this.canView&&Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("verdocs-button",{size:"small",label:"View Now",onClick:function onClick(e){return _this2.handleView(e)}}),this.canDone&&Object(_index_b18c0348_js__WEBPACK_IMPORTED_MODULE_31__.h)("verdocs-button",{size:"small",label:"Done",onClick:function onClick(e){return _this2.handleDone(e)}}))))}}]),VerdocsEnvelopeRecipientSummary}();VerdocsEnvelopeRecipientSummary.style='verdocs-envelope-recipient-summary{top:0;left:0;right:0;bottom:0;display:-ms-flexbox;display:flex;z-index:100000;position:fixed;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;font-family:"Inter", "Barlow", sans-serif;background-color:#0000007f}verdocs-envelope-recipient-summary .summary-content{width:600px;display:-ms-flexbox;display:flex;max-width:90%;font-size:18px;-ms-flex:0 0 600px;flex:0 0 600px;border-radius:6px;background:#ffffff;-ms-flex-direction:column;flex-direction:column;padding:30px 20px 20px}verdocs-envelope-recipient-summary .summary-content .summary-title{font-size:20px;font-weight:700;margin:0 0 10px 0;color:#33364b}verdocs-envelope-recipient-summary .summary-recipient{display:-ms-flexbox;display:flex;color:#33364b;margin:8px 0 24px 0;-ms-flex-direction:column;flex-direction:column}verdocs-envelope-recipient-summary .summary-recipient .role-name{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex;font-size:14px;font-weight:600;margin:0 0 8px 0;color:#092c4c}verdocs-envelope-recipient-summary .summary-recipient .role-info{gap:5px;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:end;align-items:flex-end}verdocs-envelope-recipient-summary .summary-recipient .role-full-name{-ms-flex:1;flex:1;height:34px;display:-ms-flexbox;display:flex;font-size:16px;padding:0 12px;border-radius:4px;-ms-flex-align:center;align-items:center;border:1px solid #cccccc;background:#f9fafb}verdocs-envelope-recipient-summary .summary-recipient .recipient-link{width:120px;padding:0 16px;font-weight:500;margin:0 0 0 8px;text-align:center;font-size:0.875rem;border-radius:100%;color:#374151;line-height:1.25rem;background-color:#d8d8d8;border:2px solid #9ca3af}verdocs-envelope-recipient-summary .summary-recipient .link-wrapper{gap:5px;display:-ms-flexbox;display:flex;margin:4px 0 0 0;-ms-flex-direction:row;flex-direction:row}verdocs-envelope-recipient-summary .summary-recipient .link-wrapper .link{-ms-flex:1;flex:1;height:34px;display:-ms-flexbox;display:flex;font-size:16px;padding:0 12px;border-radius:4px;-ms-flex-align:center;align-items:center;border:1px solid #cccccc;background:#f9fafb}verdocs-envelope-recipient-summary .buttons{display:-ms-flexbox;display:flex;-webkit-column-gap:15px;-moz-column-gap:15px;column-gap:15px;margin:10px 0 0 0;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}verdocs-envelope-recipient-summary .buttons verdocs-button{-ms-flex:0 0 120px;flex:0 0 120px;margin-left:10px;white-space:nowrap}verdocs-envelope-recipient-summary .buttons verdocs-button button{width:100%}'},"./node_modules/core-js/internals/create-html.js":function(module,exports,__webpack_require__){var uncurryThis=__webpack_require__("./node_modules/core-js/internals/function-uncurry-this.js"),requireObjectCoercible=__webpack_require__("./node_modules/core-js/internals/require-object-coercible.js"),toString=__webpack_require__("./node_modules/core-js/internals/to-string.js"),quot=/"/g,replace=uncurryThis("".replace);module.exports=function(string,tag,attribute,value){var S=toString(requireObjectCoercible(string)),p1="<"+tag;return""!==attribute&&(p1+=" "+attribute+'="'+replace(toString(value),quot,"&quot;")+'"'),p1+">"+S+"</"+tag+">"}},"./node_modules/core-js/internals/string-html-forced.js":function(module,exports,__webpack_require__){var fails=__webpack_require__("./node_modules/core-js/internals/fails.js");module.exports=function(METHOD_NAME){return fails((function(){var test=""[METHOD_NAME]('"');return test!==test.toLowerCase()||test.split('"').length>3}))}},"./node_modules/core-js/modules/es.array.reduce.js":function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__("./node_modules/core-js/internals/export.js"),$reduce=__webpack_require__("./node_modules/core-js/internals/array-reduce.js").left,arrayMethodIsStrict=__webpack_require__("./node_modules/core-js/internals/array-method-is-strict.js"),CHROME_VERSION=__webpack_require__("./node_modules/core-js/internals/engine-v8-version.js"),IS_NODE=__webpack_require__("./node_modules/core-js/internals/engine-is-node.js");$({target:"Array",proto:!0,forced:!arrayMethodIsStrict("reduce")||!IS_NODE&&CHROME_VERSION>79&&CHROME_VERSION<83},{reduce:function reduce(callbackfn){var length=arguments.length;return $reduce(this,callbackfn,length,length>1?arguments[1]:void 0)}})},"./node_modules/core-js/modules/es.string.link.js":function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__("./node_modules/core-js/internals/export.js"),createHTML=__webpack_require__("./node_modules/core-js/internals/create-html.js");$({target:"String",proto:!0,forced:__webpack_require__("./node_modules/core-js/internals/string-html-forced.js")("link")},{link:function link(url){return createHTML(this,"a","href",url)}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
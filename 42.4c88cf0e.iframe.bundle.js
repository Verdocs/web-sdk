(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{"./dist/esm/verdocs-text-input.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_text_input",(function(){return VerdocsTextInput}));__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/esm/index-af5f4964.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var VerdocsTextInput=function(){function VerdocsTextInput(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsTextInput),Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.h)(this,hostRef),this.fieldInput=Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.d)(this,"fieldInput",7),this.fieldFocus=Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.d)(this,"fieldFocus",7),this.fieldBlur=Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.d)(this,"fieldBlur",7),this.value="",this.label="",this.placeholder="",this.autocomplete="",this.type="text",this.disabled=!1,this._value=""}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsTextInput,[{key:"componentWillLoad",value:function componentWillLoad(){this._value=this.value}},{key:"componentDidLoad",value:function componentDidLoad(){}},{key:"handleInput",value:function handleInput(event){this._value=event.target.value,this.fieldInput.emit(this._value)}},{key:"handleFocus",value:function handleFocus(event){this.fieldFocus.emit(event)}},{key:"handleBlur",value:function handleBlur(event){this.fieldBlur.emit(event)}},{key:"render",value:function render(){var _this=this;return Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.f)(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.b,{class:"input-field"},Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.f)("label",null,this.label?Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"input-label"},this.label+":"):Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",null),Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_1__.f)("input",{type:this.type,placeholder:this.placeholder,autoComplete:this.autocomplete,disabled:this.disabled,value:this._value,class:"input-element",onInput:function onInput(event){return _this.handleInput(event)},onFocus:function onFocus(event){return _this.handleFocus(event)},onBlur:function onBlur(event){return _this.handleBlur(event)}})))}}]),VerdocsTextInput}();VerdocsTextInput.style='verdocs-text-input{font-family:"Barlow", sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box;margin:20px 0;display:block}verdocs-text-input .input-element{-webkit-box-sizing:border-box;box-sizing:border-box;border:1px solid #707ae5;border-radius:4px;background:#ffffff;color:#000;width:100%;font-size:16px;height:28px;padding:4px 12px}verdocs-text-input .input-element::-webkit-input-placeholder{color:#aaaaaa;opacity:1}verdocs-text-input .input-element::-moz-placeholder{color:#aaaaaa;opacity:1}verdocs-text-input .input-element:-ms-input-placeholder{color:#aaaaaa;opacity:1}verdocs-text-input .input-element::-ms-input-placeholder{color:#aaaaaa;opacity:1}verdocs-text-input .input-element::placeholder{color:#aaaaaa;opacity:1}verdocs-text-input .input-label{display:block;color:#33354c;font-weight:400;font-size:14px;margin:0 0 4px 0}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy10ZXh0LWlucHV0L3ZlcmRvY3MtdGV4dC1pbnB1dC5zY3NzIiwid2VicGFjazovLy9zcmMvY29tcG9uZW50cy9jb250cm9scy92ZXJkb2NzLXRleHQtaW5wdXQvdmVyZG9jcy10ZXh0LWlucHV0LnRzeCJdLCJuYW1lcyI6WyJWZXJkb2NzVGV4dElucHV0IiwidmFsdWUiLCJsYWJlbCIsInBsYWNlaG9sZGVyIiwiYXV0b2NvbXBsZXRlIiwidHlwZSIsImRpc2FibGVkIiwiX3ZhbHVlIiwiY29tcG9uZW50V2lsbExvYWQiLCJ0aGlzIiwiY29tcG9uZW50RGlkTG9hZCIsImhhbmRsZUlucHV0IiwiZXZlbnQiLCJ0YXJnZXQiLCJmaWVsZElucHV0IiwiZW1pdCIsImhhbmRsZUZvY3VzIiwiZmllbGRGb2N1cyIsImhhbmRsZUJsdXIiLCJmaWVsZEJsdXIiLCJyZW5kZXIiLCJoIiwiSG9zdCIsImNsYXNzIiwiYXV0b0NvbXBsZXRlIiwib25JbnB1dCIsIm9uRm9jdXMiLCJvbkJsdXIiXSwibWFwcGluZ3MiOiJ5d0JBQUEsSUNhYUEsaUJBQWdCLFdBSjdCLG9DLDhJQUFBLHdCLG1XQVFVLEtBQUFDLE1BQWdCLEdBS2hCLEtBQUFDLE1BQWdCLEdBS2hCLEtBQUFDLFlBQXNCLEdBS3RCLEtBQUFDLGFBQXVCLEdBTXZCLEtBQUFDLEtBQTRFLE9BSzVFLEtBQUFDLFVBQW9CLEVBRW5CLEtBQUFDLE9BQWlCLEVBd0QzQixDQXhGNEIsTyxrUUFBQSxrREFpRDNCLFNBQUFDLG9CQUNFQyxLQUFLRixPQUFTRSxLQUFLUixLQUNwQixHQW5EMEIsOEJBcUQzQixTQUFBUyxtQkFBcUIsR0FyRE0seUJBdUQzQixTQUFBQyxZQUFZQyxPQUNWSCxLQUFLRixPQUFTSyxNQUFNQyxPQUFPWixNQUMzQlEsS0FBS0ssV0FBV0MsS0FBS04sS0FBS0YsT0FDM0IsR0ExRDBCLHlCQTREM0IsU0FBQVMsWUFBWUosT0FDVkgsS0FBS1EsV0FBV0YsS0FBS0gsTUFDdEIsR0E5RDBCLHdCQWdFM0IsU0FBQU0sV0FBV04sT0FDVEgsS0FBS1UsVUFBVUosS0FBS0gsTUFDckIsR0FsRTBCLG9CQW9FM0IsU0FBQVEsU0FBTSxlQUNKLE9BQ0VDLDBEQUFDQyxrREFBSSxDQUFDQyxNQUFNLGVBQ1ZGLHVFQUNHWixLQUFLUCxNQUFRbUIsaUVBQUtFLE1BQU0sZUFBZWQsS0FBS1AsTUFBUSxLQUFhbUIsc0VBQ2xFQSxtRUFDRWhCLEtBQU1JLEtBQUtKLEtBQ1hGLFlBQWFNLEtBQUtOLFlBQ2xCcUIsYUFBY2YsS0FBS0wsYUFDbkJFLFNBQVVHLEtBQUtILFNBQ2ZMLE1BQU9RLEtBQUtGLE9BQ1pnQixNQUFNLGdCQUNORSxRQUFTLGlCQUFBYixPQUFLLE9BQUksTUFBS0QsWUFBWUMsTUFBckIsRUFDZGMsUUFBUyxpQkFBQWQsT0FBSyxPQUFJLE1BQUtJLFlBQVlKLE1BQXJCLEVBQ2RlLE9BQVEsZ0JBQUFmLE9BQUssT0FBSSxNQUFLTSxXQUFXTixNQUFwQixLQUt0QixLQXZGMEIsb0IsdUJEYkQsaTFCIiwiZmlsZSI6IjQyLjRjODhjZjBlLmlmcmFtZS5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi90aGVtZS5zY3NzJztcblxudmVyZG9jcy10ZXh0LWlucHV0IHtcbiAgZm9udC1mYW1pbHk6ICRwcmltYXJ5LWZvbnQ7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogMjBweCAwO1xuICBkaXNwbGF5OiBibG9jaztcblxuICAuaW5wdXQtZWxlbWVudCB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkYm9yZGVyLWNvbG9yO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBiYWNrZ3JvdW5kOiAkdmVyZG9jcy1ncmV5LTQ7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGhlaWdodDogMjhweDtcbiAgICBwYWRkaW5nOiA0cHggMTJweDtcblxuICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgIGNvbG9yOiAkbGlnaHQtZGlzYWJsZWQtY29sb3I7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgfVxuXG4gIC5pbnB1dC1sYWJlbCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29sb3I6ICRtZWRpdW0tYmc7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbWFyZ2luOiAwIDAgNHB4IDA7XG4gIH1cbn1cbiIsImltcG9ydCB7Q29tcG9uZW50LCBQcm9wLCBTdGF0ZSwgRXZlbnQsIEhvc3QsIGgsIEV2ZW50RW1pdHRlcn0gZnJvbSAnQHN0ZW5jaWwvY29yZSc7XG5cbi8qKlxuICogRGlzcGxheSBhIHRleHQgaW5wdXQgZmllbGQuIFRoaXMgaXMganVzdCBhIHN0YW5kYXJkIEhUTUwgaW5wdXQgZmllbGQgd2l0aCBtaW5pbWFsIG1hcmt1cCB0byBmaXQgdGhlXG4gKiB2aXN1YWwgc3R5bGVzIG9mIHRoZSBvdGhlciBjb21wb25lbnRzLiBCZWFyIGluIG1pbmQgU3RlbmNpbCBkb2VzIG5vdCBjdXJyZW50bHkgc3VwcG9ydCBlbWl0dGluZyBldmVudHNcbiAqIHdpdGggdGhlIHNhbWUgbmFtZXMgYXMgbmF0aXZlIERPTSBldmVudHMsIHNvIHJhdGhlciB0aGFuIGBpbnB1dGAgb3IgYGJsdXJgIHdlIGhhdmUgYHRpbnB1dGAsIGB0Ymx1cmAsXG4gKiBldGMuIFdlIHVzZWQgYSB0ZW1wb3JhcnkgcHJlZml4IGhlcmUgdG8gbWFyayB0aGlzIGFzIGEgdGVtcG9yYXJ5IEFQSSwgYmVjYXVzZSB3ZSBob3BlIHRoaXMgd2lsbCBjaGFuZ2VcbiAqIGluIGEgZnV0dXJlIFN0ZW5jaWwgcmVsZWFzZS4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL3N0ZW5jaWwvaXNzdWVzLzI4MjIuXG4gKi9cbkBDb21wb25lbnQoe1xuICB0YWc6ICd2ZXJkb2NzLXRleHQtaW5wdXQnLFxuICBzdHlsZVVybDogJ3ZlcmRvY3MtdGV4dC1pbnB1dC5zY3NzJyxcbn0pXG5leHBvcnQgY2xhc3MgVmVyZG9jc1RleHRJbnB1dCB7XG4gIC8qKlxuICAgKiBUaGUgdmFsdWUgZm9yIHRoZSBpbnB1dCBmaWVsZC5cbiAgICovXG4gIEBQcm9wKCkgdmFsdWU6IHN0cmluZyA9ICcnO1xuXG4gIC8qKlxuICAgKiBUaGUgbGFiZWwgZm9yIHRoZSBmaWVsZC5cbiAgICovXG4gIEBQcm9wKCkgbGFiZWw6IHN0cmluZyA9ICcnO1xuXG4gIC8qKlxuICAgKiBUaGUgcGxhY2Vob2xkZXIgZm9yIHRoZSBmaWVsZC5cbiAgICovXG4gIEBQcm9wKCkgcGxhY2Vob2xkZXI6IHN0cmluZyA9ICcnO1xuXG4gIC8qKlxuICAgKiBJZiBkZXNpcmVkLCB0aGUgYXV0b2NvbXBsZXRlIGF0dHJpYnV0ZSB0byBzZXQuXG4gICAqL1xuICBAUHJvcCgpIGF1dG9jb21wbGV0ZTogc3RyaW5nID0gJyc7XG5cbiAgLyoqXG4gICAqIFRoZSB0eXBlIG9mIGZpZWxkIHRvIHJlbmRlci4gT25seSB0ZXh0LXR5cGUgZmllbGRzIGFyZSBhbGxvd2VkIGhlcmUgZm9yIHRoZSBjdXJyZW50IHN0eWxpbmcuIEFkZGl0aW9uYWwgdHlwZXNcbiAgICogKGUuZy4gYSBkYXRlIHBpY2tlcikgd2lsbCBiZSBzdXBwb3J0ZWQgYnkgb3RoZXIgY29udHJvbHMgaW4gdGhlIGZ1dHVyZS5cbiAgICovXG4gIEBQcm9wKCkgdHlwZTogJ3RleHQnIHwgJ3Bhc3N3b3JkJyB8ICdlbWFpbCcgfCAnbnVtYmVyJyB8ICdzZWFyY2gnIHwgJ3RlbCcgfCAndXJsJyA9ICd0ZXh0JztcblxuICAvKipcbiAgICogU2hvdWxkIHRoZSBmaWVsZCBiZSBkaXNhYmxlZD9cbiAgICovXG4gIEBQcm9wKCkgZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBAU3RhdGUoKSBfdmFsdWU6IHN0cmluZyA9ICcnO1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSBpbnB1dCB2YWx1ZSBjaGFuZ2VzLlxuICAgKi9cbiAgQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIGZpZWxkSW5wdXQ6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSBmaWVsZCByZWNlaXZlcyBmb2N1cy5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBmaWVsZEZvY3VzOiBFdmVudEVtaXR0ZXI7XG5cbiAgLyoqXG4gICAqIEV2ZW50IGZpcmVkIHdoZW4gdGhlIGZpZWxkIGxvc2VzIGZvY3VzLlxuICAgKi9cbiAgQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIGZpZWxkQmx1cjogRXZlbnRFbWl0dGVyO1xuXG4gIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgIHRoaXMuX3ZhbHVlID0gdGhpcy52YWx1ZTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZExvYWQoKSB7fVxuXG4gIGhhbmRsZUlucHV0KGV2ZW50KSB7XG4gICAgdGhpcy5fdmFsdWUgPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgdGhpcy5maWVsZElucHV0LmVtaXQodGhpcy5fdmFsdWUpO1xuICB9XG5cbiAgaGFuZGxlRm9jdXMoZXZlbnQpIHtcbiAgICB0aGlzLmZpZWxkRm9jdXMuZW1pdChldmVudCk7XG4gIH1cblxuICBoYW5kbGVCbHVyKGV2ZW50KSB7XG4gICAgdGhpcy5maWVsZEJsdXIuZW1pdChldmVudCk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxIb3N0IGNsYXNzPVwiaW5wdXQtZmllbGRcIj5cbiAgICAgICAgPGxhYmVsPlxuICAgICAgICAgIHt0aGlzLmxhYmVsID8gPGRpdiBjbGFzcz1cImlucHV0LWxhYmVsXCI+e3RoaXMubGFiZWwgKyAnOid9PC9kaXY+IDogPGRpdiAvPn1cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9e3RoaXMudHlwZX1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0aGlzLnBsYWNlaG9sZGVyfVxuICAgICAgICAgICAgYXV0b0NvbXBsZXRlPXt0aGlzLmF1dG9jb21wbGV0ZX1cbiAgICAgICAgICAgIGRpc2FibGVkPXt0aGlzLmRpc2FibGVkfVxuICAgICAgICAgICAgdmFsdWU9e3RoaXMuX3ZhbHVlfVxuICAgICAgICAgICAgY2xhc3M9XCJpbnB1dC1lbGVtZW50XCJcbiAgICAgICAgICAgIG9uSW5wdXQ9e2V2ZW50ID0+IHRoaXMuaGFuZGxlSW5wdXQoZXZlbnQpfVxuICAgICAgICAgICAgb25Gb2N1cz17ZXZlbnQgPT4gdGhpcy5oYW5kbGVGb2N1cyhldmVudCl9XG4gICAgICAgICAgICBvbkJsdXI9e2V2ZW50ID0+IHRoaXMuaGFuZGxlQmx1cihldmVudCl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9sYWJlbD5cbiAgICAgIDwvSG9zdD5cbiAgICApO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9
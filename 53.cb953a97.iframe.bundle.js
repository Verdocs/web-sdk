(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{"./dist/esm/verdocs-toggle.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_toggle",(function(){return VerdocsToggle}));__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/esm/index-bc9b2c82.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var VerdocsToggle=function(){function VerdocsToggle(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsToggle),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.h)(this,hostRef),this.selectedOption=0}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsToggle,[{key:"componentWillLoad",value:function componentWillLoad(){var _a;this.selectedOption=(null===(_a=this.options)||void 0===_a?void 0:_a.defaultSelection)||0}},{key:"render",value:function render(){var _this=this;return Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"container"},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("span",{class:"label"},this.options.label+":"),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"buttons"},this.options.buttons.map((function(button,index){return Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("button",{id:button.id,key:button.id,innerHTML:button.icon,class:index===_this.selectedOption?"selected":"",onClick:function onClick(){console.log("clicked",index),_this.selectedOption=index}})}))))}}]),VerdocsToggle}();VerdocsToggle.style='verdocs-toggle{font-family:"Barlow", sans-serif}verdocs-toggle .container{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;background-color:#f5f5fa}verdocs-toggle .label{font-size:24px;font-weight:700;color:#33354c;-ms-flex-item-align:center;align-self:center;margin-right:27px;font-family:sans-serif}verdocs-toggle .buttons{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap}verdocs-toggle .buttons button{width:60px;height:60px;border:2px solid #654dcb;border-radius:5px;cursor:pointer}verdocs-toggle .buttons button:not(:last-child){margin-right:11px}verdocs-toggle .buttons svg{width:30px;height:30px}verdocs-toggle .buttons button:hover{background-color:#654dcb;-webkit-transition:0.25s;transition:0.25s}verdocs-toggle .buttons button:hover svg{fill:#f5f5fa;-webkit-transition:0.25s;transition:0.25s}verdocs-toggle .selected{background-color:#707ae5;-webkit-transition:0.25s;transition:0.25s}verdocs-toggle .selected svg{fill:#ffffff;-webkit-transition:0.25s;transition:0.25s}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy10b2dnbGUvdmVyZG9jcy10b2dnbGUuc2NzcyIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy10b2dnbGUvdmVyZG9jcy10b2dnbGUudHN4Il0sIm5hbWVzIjpbIlZlcmRvY3NUb2dnbGUiLCJzZWxlY3RlZE9wdGlvbiIsImNvbXBvbmVudFdpbGxMb2FkIiwidGhpcyIsIm9wdGlvbnMiLCJfYSIsImRlZmF1bHRTZWxlY3Rpb24iLCJyZW5kZXIiLCJoIiwiY2xhc3MiLCJsYWJlbCIsImJ1dHRvbnMiLCJtYXAiLCJidXR0b24iLCJpbmRleCIsImlkIiwia2V5IiwiaW5uZXJIVE1MIiwiaWNvbiIsIm9uQ2xpY2siLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoibzBCQUFBLElDd0JhQSxjQUFhLFdBSjFCLGlDLDhJQUFBLHFCLHdFQWVXLEtBQUFDLGVBQXlCLENBa0RuQyxDQTdEeUIsTyxrUUFBQSwrQ0FheEIsU0FBQUMsb0IsT0FDRUMsS0FBS0YsZ0JBQTZCLFFBQVosR0FBQUUsS0FBS0MsZUFBT0MsWUFBQSxFQUFBQSxHQUFFQyxtQkFBb0IsQ0FDekQsR0FmdUIsb0JBd0N4QixTQUFBQyxTQUFNLGVBQ0osT0FDRUMsaUVBQUtDLE1BQU0sYUFDVEQsa0VBQU1DLE1BQU0sU0FBWU4sS0FBS0MsUUFBUU0sTUFBckMsS0FDQUYsaUVBQUtDLE1BQU0sV0FDUk4sS0FBS0MsUUFBUU8sUUFBUUMsS0FBSSxTQUFDQyxPQUFrQkMsT0FBbkIsT0FDeEJOLG9FQUNFTyxHQUFJRixPQUFPRSxHQUNYQyxJQUFLSCxPQUFPRSxHQUNaRSxVQUFXSixPQUFPSyxLQUNsQlQsTUFBT0ssUUFBVSxNQUFLYixlQUFpQixXQUFhLEdBQ3BEa0IsUUFBUyxtQkFDUEMsUUFBUUMsSUFBSSxVQUFXUCxPQUN2QixNQUFLYixlQUFpQmEsS0FDdkIsR0FUcUIsS0FlakMsS0E1RHVCLGlCLG9CRHhCRCxxbEMiLCJmaWxlIjoiNTMuY2I5NTNhOTcuaWZyYW1lLmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uL3RoZW1lLnNjc3MnO1xuXG52ZXJkb2NzLXRvZ2dsZSB7XG4gIGZvbnQtZmFtaWx5OiAkcHJpbWFyeS1mb250O1xuXG4gIC5jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29udGFpbmVyLWJnO1xuICB9XG5cbiAgLmxhYmVsIHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBjb2xvcjogJG1lZGl1bS1iZztcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgbWFyZ2luLXJpZ2h0OiAyN3B4O1xuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICB9XG5cbiAgLmJ1dHRvbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgfVxuXG4gIC5idXR0b25zIGJ1dHRvbiB7XG4gICAgd2lkdGg6IDYwcHg7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICRpdGVtLWJvcmRlci1jb2xvcjtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5cbiAgLmJ1dHRvbnMgYnV0dG9uOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1yaWdodDogMTFweDtcbiAgfVxuXG4gIC5idXR0b25zIHN2ZyB7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICB9XG5cbiAgLmJ1dHRvbnMgYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaXRlbS1ib3JkZXItY29sb3I7XG4gICAgdHJhbnNpdGlvbjogMC4yNXM7XG4gIH1cblxuICAuYnV0dG9ucyBidXR0b246aG92ZXIgc3ZnIHtcbiAgICBmaWxsOiAkY29udGFpbmVyLWJnO1xuICAgIHRyYW5zaXRpb246IDAuMjVzO1xuICB9XG5cbiAgLnNlbGVjdGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYm9yZGVyLWNvbG9yO1xuICAgIHRyYW5zaXRpb246IDAuMjVzO1xuICB9XG5cbiAgLnNlbGVjdGVkIHN2ZyB7XG4gICAgZmlsbDogI2ZmZmZmZjtcbiAgICB0cmFuc2l0aW9uOiAwLjI1cztcbiAgfVxufVxuIiwiaW1wb3J0IHtDb21wb25lbnQsIFByb3AsIGgsIFN0YXRlfSBmcm9tICdAc3RlbmNpbC9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBJQnV0dG9ucyB7XG4gIGlkOiBzdHJpbmc7XG4gIGljb246IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJVG9nZ2xlSWNvbkJ1dHRvbnMge1xuICBsYWJlbDogc3RyaW5nO1xuICBkZWZhdWx0U2VsZWN0aW9uOiBudW1iZXI7XG4gIGJ1dHRvbnM6IElCdXR0b25zW107XG59XG5cbi8qKlxuICogRGlzcGxheXMgYSBsYWJlbCBhbmQgYSBzZXQgb2YgYnV0dG9ucywgYWxzbyBhbGxvd2luZyBhIGRlZmF1bHQgc2VsZWN0aW9uIG9mIGEgYnV0dG9uXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICpcbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgdGFnOiAndmVyZG9jcy10b2dnbGUnLFxuICBzdHlsZVVybDogJ3ZlcmRvY3MtdG9nZ2xlLnNjc3MnLFxufSlcbmV4cG9ydCBjbGFzcyBWZXJkb2NzVG9nZ2xlIHtcbiAgLyoqXG4gICAqIFRoZSB0YWdzIHRvIGRpc3BsYXlcbiAgICovXG4gIEBQcm9wKCkgb3B0aW9uczogSVRvZ2dsZUljb25CdXR0b25zO1xuXG4gIC8qKlxuICAgKiBUaGUgXCJ0aGVtZVwiIHRvIGJlIHVzZWRcbiAgICovXG4gIEBQcm9wKCkgdGhlbWU6ICdsaWdodCcgfCAnZGFyayc7XG5cbiAgQFN0YXRlKCkgc2VsZWN0ZWRPcHRpb246IG51bWJlciA9IDA7XG5cbiAgY29tcG9uZW50V2lsbExvYWQoKSB7XG4gICAgdGhpcy5zZWxlY3RlZE9wdGlvbiA9IHRoaXMub3B0aW9ucz8uZGVmYXVsdFNlbGVjdGlvbiB8fCAwO1xuICB9XG5cbiAgLy8gQExpc3RlbignY2xpY2snLCB7XG4gIC8vICAgdGFyZ2V0OiAnZG9jdW1lbnQnLFxuICAvLyAgIGNhcHR1cmU6IHRydWUsXG4gIC8vICAgcGFzc2l2ZTogZmFsc2UsXG4gIC8vIH0pXG4gIC8vIGhhbmRsZUNsaWNrKGV2ZW50KSB7XG4gIC8vICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgLy8gICBsZXQgY29udGFpbmVyID0gZXZlbnQudGFyZ2V0O1xuICAvLyAgIGlmIChjb250YWluZXIubWF0Y2hlcygndG9nZ2xlLWljb24tYnV0dG9ucycpKSB7XG4gIC8vICAgICBjb250YWluZXIgPSBldmVudC50YXJnZXQuc2hhZG93Um9vdDtcbiAgLy8gICAgIGNvbnN0IGVsZW1lbnQgPSBjb250YWluZXIuYWN0aXZlRWxlbWVudDtcbiAgLy8gICAgIGNvbnN0IHNpYmxpbmdzID0gQXJyYXkuZnJvbShlbGVtZW50LnBhcmVudEVsZW1lbnQuY2hpbGRyZW4pLmZpbHRlcihjaGlsZCA9PiB7XG4gIC8vICAgICAgIHJldHVybiBjaGlsZCAhPT0gZWxlbWVudDtcbiAgLy8gICAgIH0pO1xuICAvLyAgICAgc2libGluZ3MubWFwKChzaWJsaW5nOiBhbnkpID0+IHtcbiAgLy8gICAgICAgcmV0dXJuIHNpYmxpbmcuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQnKTtcbiAgLy8gICAgIH0pO1xuICAvLyAgICAgaWYgKCFlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnc2VsZWN0ZWQnKSkge1xuICAvLyAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XG4gIC8vICAgICB9XG4gIC8vICAgfVxuICAvLyB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwibGFiZWxcIj57YCR7dGhpcy5vcHRpb25zLmxhYmVsfTpgfTwvc3Bhbj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbnNcIj5cbiAgICAgICAgICB7dGhpcy5vcHRpb25zLmJ1dHRvbnMubWFwKChidXR0b246IElCdXR0b25zLCBpbmRleDogbnVtYmVyKSA9PiAoXG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIGlkPXtidXR0b24uaWR9XG4gICAgICAgICAgICAgIGtleT17YnV0dG9uLmlkfVxuICAgICAgICAgICAgICBpbm5lckhUTUw9e2J1dHRvbi5pY29ufVxuICAgICAgICAgICAgICBjbGFzcz17aW5kZXggPT09IHRoaXMuc2VsZWN0ZWRPcHRpb24gPyAnc2VsZWN0ZWQnIDogJyd9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY2xpY2tlZCcsIGluZGV4KTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkT3B0aW9uID0gaW5kZXg7XG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=
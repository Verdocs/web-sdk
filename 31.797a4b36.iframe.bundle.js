/*! For license information please see 31.797a4b36.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"./dist/esm/Validators-f110bae2.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return isValidPhone})),__webpack_require__.d(__webpack_exports__,"b",(function(){return isValidEmail}));var EMAIL_REGEX=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,isValidEmail=function isValidEmail(email){return!!email&&EMAIL_REGEX.test(email)},PHONE_REGEX=/((?:\+|00)[17](?: |\-)?|(?:\+|00)[1-9]\d{0,2}(?: |\-)?|(?:\+|00)1\-\d{3}(?: |\-)?)?(0\d|\([0-9]{3}\)|[1-9]{0,3})(?:((?: |\-)[0-9]{2}){4}|((?:[0-9]{2}){4})|((?: |\-)[0-9]{3}(?: |\-)[0-9]{4})|([0-9]{7}))/,isValidPhone=function isValidPhone(phone){return!!phone&&PHONE_REGEX.test(phone)}},"./dist/esm/verdocs-sign.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_sign",(function(){return VerdocsSign}));__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find-index.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/web.url.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.some.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.finally.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js");var _index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__=__webpack_require__("./dist/esm/index-f78d163d.js"),_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__=__webpack_require__("./dist/esm/Envelopes-979ad8c2.js"),_Validators_f110bae2_js__WEBPACK_IMPORTED_MODULE_40__=(__webpack_require__("./dist/esm/Types-ab9f6af8.js"),__webpack_require__("./dist/esm/Validators-f110bae2.js")),_VerdocsEndpoint_dac04424_js__WEBPACK_IMPORTED_MODULE_41__=__webpack_require__("./dist/esm/VerdocsEndpoint-dac04424.js"),_utils_2dbb5f63_js__WEBPACK_IMPORTED_MODULE_42__=__webpack_require__("./dist/esm/utils-2dbb5f63.js"),_errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_43__=__webpack_require__("./dist/esm/errors-9b5498c8.js");__webpack_require__("./dist/esm/index-fd7b8a34.js");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(void 0===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}var __awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=function(thisArg,body){var f,y,t,g,_={label:0,sent:function sent(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}},updateRecipient=function updateRecipient(endpoint,envelopeId,roleName,params){return __awaiter(void 0,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,endpoint.api.put("/envelopes/".concat(envelopeId,"/recipients/").concat(roleName),params).then((function(r){return r.data}))]}))}))},envelopeRecipientSubmit=function envelopeRecipientSubmit(endpoint,envelopeId,roleName){return updateRecipient(endpoint,envelopeId,roleName,{action:"submit"})},createSignature=function createSignature(endpoint,name,signature){var data=new FormData;return data.append("signature",signature,name),endpoint.api.post("/signatures",data).then((function(r){return r.data}))},createInitials=function createInitials(endpoint,name,initials){var data=new FormData;return data.append("initial",initials,name),endpoint.api.post("/initials",data).then((function(r){return r.data}))},VerdocsSign=function(){function VerdocsSign(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsSign),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.j)(this,hostRef),this.sdkError=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.e)(this,"sdkError",7),this.envelopeUpdated=Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.e)(this,"envelopeUpdated",7),this.endpoint=null,this.recipientIndex=-1,this.fields=[],this.envelopeId=null,this.roleId=null,this.inviteCode=null,this.recipient=null,this.signerToken=null,this.hasSignature=!1,this.nextButtonLabel="Start",this.nextSubmits=!1,this.errorMessage="",this.focusedField="",this.isDone=!1,this.showDone=!1,this.finishLater=!1,this.showFinishLater=!1}var _handleNext,_handleFieldChange,_handleOptionSelected,_savePDF,_componentDidLoad;return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsSign,[{key:"componentWillLoad",value:function componentWillLoad(){this.endpoint=new _VerdocsEndpoint_dac04424_js__WEBPACK_IMPORTED_MODULE_41__.a({sessionType:"signing"})}},{key:"componentDidLoad",value:(_componentDidLoad=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(){var _a,_b,_c,_d,_e,_f,_yield$getSigningSess,session,recipient,signerToken,_this=this;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(this.envelopeId){_context.next=3;break}return null===(_a=this.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_43__.a("[SIGN] Missing required envelopId",500,"")),_context.abrupt("return");case 3:if(this.roleId){_context.next=6;break}return null===(_b=this.sdkError)||void 0===_b||_b.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_43__.a("[SIGN] Missing required roleId",500,"")),_context.abrupt("return");case 6:if(this.inviteCode){_context.next=9;break}return null===(_c=this.sdkError)||void 0===_c||_c.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_43__.a("[SIGN] Missing required inviteCode",500,"")),_context.abrupt("return");case 9:return _context.prev=9,console.log("[SIGN] Processing invite code for "+this.envelopeId+" / "+this.roleId),_context.next=13,Object(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.e)(this.endpoint,{envelopeId:this.envelopeId,roleId:this.roleId,inviteCode:this.inviteCode});case 13:return _yield$getSigningSess=_context.sent,session=_yield$getSigningSess.session,recipient=_yield$getSigningSess.recipient,signerToken=_yield$getSigningSess.signerToken,console.log("[SIGN] Loaded signing session "+session.email+" / "+session.profile_id),this.recipient=recipient,this.signerToken=signerToken,this.endpoint.setToken(signerToken),this.recipient.agreed&&(this.nextButtonLabel="Next"),_context.next=24,Object(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.a)(this.endpoint,this.envelopeId);case 24:this.recipientIndex=_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.envelope.recipients.findIndex((function(recipient){return recipient.role_name==_this.roleId})),this.recipientIndex>-1&&(this.recipient=_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.envelope.recipients[this.recipientIndex],this.fields=this.recipient.fields),this.isDone=["submitted","canceled","declined"].includes(this.recipient.status),console.log("Done",this.isDone),_context.next=34;break;case 30:_context.prev=30,_context.t0=_context.catch(9),console.log("Error with signing session",_context.t0),null===(_d=this.sdkError)||void 0===_d||_d.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_43__.a(_context.t0.message,null===(_e=_context.t0.response)||void 0===_e?void 0:_e.status,null===(_f=_context.t0.response)||void 0===_f?void 0:_f.data));case 34:case"end":return _context.stop()}}),_callee,this,[[9,30]])}))),function componentDidLoad(){return _componentDidLoad.apply(this,arguments)})},{key:"handleClickAgree",value:function handleClickAgree(){var _this2=this;(function envelopeRecipientAgree(endpoint,envelopeId,roleName,agreed){return updateRecipient(endpoint,envelopeId,roleName,{action:"update",agreed:agreed})})(this.endpoint,this.envelopeId,this.roleId,!0).then((function(r){var _a;_this2.nextButtonLabel="Next",_this2.recipient=r,null===(_a=_this2.envelopeUpdated)||void 0===_a||_a.emit({endpoint:_this2.endpoint,envelope:_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.envelope,event:"agreed"})})).catch((function(e){var _a,_b,_c;console.log("Update failure",e),null===(_a=_this2.sdkError)||void 0===_a||_a.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_43__.a(e.message,null===(_b=e.response)||void 0===_b?void 0:_b.status,null===(_c=e.response)||void 0===_c?void 0:_c.data))}))}},{key:"savePDF",value:(_savePDF=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(){var fileName,data,xhr;return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return fileName=_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.envelope.name+" - "+_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.envelope.updated_at.split("T")[0]+".pdf",_context2.next=3,Object(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.b)(this.endpoint,this.envelopeId,_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.envelope.envelope_document_id);case 3:data=_context2.sent,(xhr=new XMLHttpRequest).responseType="blob",xhr.onload=function(){var a=document.createElement("a");a.href=window.URL.createObjectURL(xhr.response),a.download=fileName,a.style.display="none",document.body.appendChild(a),a.click(),a.remove()},xhr.open("GET","data:application/pdf;base64,"+data),xhr.send();case 9:case"end":return _context2.stop()}}),_callee2,this)}))),function savePDF(){return _savePDF.apply(this,arguments)})},{key:"handleOptionSelected",value:(_handleOptionSelected=_asyncToGenerator(_regeneratorRuntime().mark((function _callee3(e){return _regeneratorRuntime().wrap((function _callee3$(_context3){for(;;)switch(_context3.prev=_context3.next){case 0:_context3.t0=e.detail.id,_context3.next="later"===_context3.t0?3:"claim"===_context3.t0?6:"decline"===_context3.t0?7:"print"===_context3.t0?8:"download"===_context3.t0?9:11;break;case 3:return this.finishLater=!0,this.showFinishLater=!0,_context3.abrupt("break",11);case 6:case 7:case 8:return _context3.abrupt("break",11);case 9:return this.savePDF().catch((function(){})),_context3.abrupt("break",11);case 11:case"end":return _context3.stop()}}),_callee3,this)}))),function handleOptionSelected(_x){return _handleOptionSelected.apply(this,arguments)})},{key:"saveFieldChange",value:function saveFieldChange(fieldName,fields){var _this3=this;Object(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.g)(this.endpoint,this.envelopeId,fieldName,fields).catch((function(e){var _a,_b,_c,_d,_e,_f;401===(null===(_a=e.response)||void 0===_a?void 0:_a.status)&&"jwt expired"===(null===(_c=null===(_b=e.response)||void 0===_b?void 0:_b.data)||void 0===_c?void 0:_c.error)?(console.log("[SIGN] Signing session expired"),_this3.errorMessage="Signing session expired."):console.log("[SIGN] Server error",e),null===(_d=_this3.sdkError)||void 0===_d||_d.emit(new _errors_9b5498c8_js__WEBPACK_IMPORTED_MODULE_43__.a(e.message,null===(_e=e.response)||void 0===_e?void 0:_e.status,null===(_f=e.response)||void 0===_f?void 0:_f.data))}))}},{key:"handleFieldChange",value:(_handleFieldChange=_asyncToGenerator(_regeneratorRuntime().mark((function _callee4(field,e){var _e$target,value,checked,options,_options,initialsBlob,signatureBlob,iso,_this4=this;return _regeneratorRuntime().wrap((function _callee4$(_context4){for(;;)switch(_context4.prev=_context4.next){case 0:console.log("fieldChange",field,e,e.target.value),_e$target=e.target,value=_e$target.value,checked=_e$target.checked,_context4.t0=field.type,_context4.next="textbox"===_context4.t0?5:"checkbox_group"===_context4.t0?6:"radio_button_group"===_context4.t0?8:"dropdown"===_context4.t0?10:"initial"===_context4.t0?11:"signature"===_context4.t0?17:"date"===_context4.t0?23:"timestamp"===_context4.t0?25:27;break;case 5:return _context4.abrupt("return",this.saveFieldChange(field.name,{prepared:!1,value:value}));case 6:return options=field.settings.options.map((function(option){return{id:option.id,checked:e.target.checked}})),_context4.abrupt("return",this.saveFieldChange(field.name,{prepared:!1,value:{options:options}}));case 8:return _options=field.settings.options.map((function(option){return{id:option.id,selected:e.target.value===option.id}})),_context4.abrupt("return",this.saveFieldChange(field.name,{prepared:!1,value:{options:_options}}));case 10:return _context4.abrupt("return",this.saveFieldChange(field.name,{prepared:!1,value:e.detail}));case 11:return _context4.next=13,fetch(e.detail);case 13:return _context4.next=15,_context4.sent.blob();case 15:return initialsBlob=_context4.sent,_context4.abrupt("return",createInitials(this.endpoint,"initial",initialsBlob).then((function(newInitials){console.log("New initials",field.name,newInitials),Object(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.d)(_this4.endpoint,_this4.envelopeId,field.name,newInitials.id)})));case 17:return _context4.next=19,fetch(e.detail);case 19:return _context4.next=21,_context4.sent.blob();case 21:return signatureBlob=_context4.sent,_context4.abrupt("return",createSignature(this.endpoint,"signature",signatureBlob).then((function(newSignature){console.log("New sign",field.name,newSignature),Object(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.c)(_this4.endpoint,_this4.envelopeId,field.name,newSignature.id)})));case 23:return iso=e.target.getAttribute("iso"),_context4.abrupt("return",this.saveFieldChange(field.name,{prepared:!1,value:iso}));case 25:return console.log("Updating timestamp",{value:value,ts:e.target.getAttribute("timestamp")}),_context4.abrupt("break",29);case 27:return console.log("Unhandled field update",{value:value,checked:checked},field),_context4.abrupt("break",29);case 29:case"end":return _context4.stop()}}),_callee4,this)}))),function handleFieldChange(_x2,_x3){return _handleFieldChange.apply(this,arguments)})},{key:"isFieldValid",value:function isFieldValid(field){var _a,_b,_c,_d,_e,_f,_g,_field$required=field.required,required=void 0!==_field$required&&_field$required,_ref=field.settings||{},_ref$result=_ref.result,result=void 0===_ref$result?"":_ref$result,_ref$value=_ref.value,value=void 0===_ref$value?"":_ref$value,_ref$base=_ref.base64,base64=void 0===_ref$base?"":_ref$base;switch(field.type){case"textbox":switch((null===(_a=field.settings)||void 0===_a?void 0:_a.validator)||""){case"email":return Object(_Validators_f110bae2_js__WEBPACK_IMPORTED_MODULE_40__.b)(result);case"phone":return Object(_Validators_f110bae2_js__WEBPACK_IMPORTED_MODULE_40__.a)(result);default:return!required||""!==result}case"signature":case"initial":return!required||""!==base64;case"timestamp":return!0;case"textarea":case"date":case"attachment":return!required||""!==result;case"dropdown":return!required||""!==value;case"checkbox_group":var checkedCount=((null===(_c=null===(_b=field.settings)||void 0===_b?void 0:_b.options)||void 0===_c?void 0:_c.filter((function(option){return option.checked})))||[]).length;return!required||checkedCount>=((null===(_d=field.settings)||void 0===_d?void 0:_d.minimum_checked)||0)&&checkedCount<=((null===(_e=field.settings)||void 0===_e?void 0:_e.maximum_checked)||999);case"radio_button_group":return!required||((null===(_g=null===(_f=field.settings)||void 0===_f?void 0:_f.options)||void 0===_g?void 0:_g.filter((function(option){return option.selected})))||[]).length>0;default:return!1}}},{key:"handleNext",value:(_handleNext=_asyncToGenerator(_regeneratorRuntime().mark((function _callee5(){var _a,result,requiredFields,focusedIndex,nextFocusedIndex,nextRequiredField,skips,id,el,_this5=this;return _regeneratorRuntime().wrap((function _callee5$(_context5){for(;;)switch(_context5.prev=_context5.next){case 0:if(!this.nextSubmits){_context5.next=15;break}return _context5.prev=1,console.log("Submitting"),_context5.next=5,envelopeRecipientSubmit(this.endpoint,this.envelopeId,this.roleId);case 5:result=_context5.sent,console.log("Submitted",result),this.showDone=!0,this.isDone=!0,_context5.next=14;break;case 11:_context5.prev=11,_context5.t0=_context5.catch(1),console.log("Error submitting",_context5.t0);case 14:return _context5.abrupt("return");case 15:requiredFields=this.fields.filter((function(field){return field.required})),focusedIndex=requiredFields.findIndex((function(field){return field.name===_this5.focusedField})),(nextFocusedIndex=focusedIndex+1)>=requiredFields.length&&(nextFocusedIndex=0),nextRequiredField=requiredFields[nextFocusedIndex],(skips=0)<requiredFields.length&&["signature","initial"].includes(nextRequiredField.type)&&"signed"===(null===(_a=nextRequiredField.settings)||void 0===_a?void 0:_a.result)&&(skips++,++nextFocusedIndex>=requiredFields.length&&(nextFocusedIndex=0),nextRequiredField=requiredFields[nextFocusedIndex]),skips>=requiredFields.length&&(nextRequiredField=null),nextRequiredField&&(id=Object(_utils_2dbb5f63_js__WEBPACK_IMPORTED_MODULE_42__.b)(nextRequiredField),null==(el=document.getElementById(id))||el.focusField(),this.focusedField=nextRequiredField.name);case 24:case"end":return _context5.stop()}}),_callee5,this,[[1,11]])}))),function handleNext(){return _handleNext.apply(this,arguments)})},{key:"checkRecipientFields",value:function checkRecipientFields(){var _this6=this,someFieldsInvalid=this.recipient.fields.map((function(field){return _this6.isFieldValid(field)})).some((function(fieldValid){return!fieldValid}));console.log({someFieldsInvalid:someFieldsInvalid}),someFieldsInvalid?this.nextSubmits=!1:(this.nextButtonLabel="Finish",this.nextSubmits=!0)}},{key:"attachFieldAttributes",value:function attachFieldAttributes(pageInfo,field,roleIndex,el){var _a,_this7=this;el.addEventListener("input",(function(e){return _this7.handleFieldChange(field,e).finally((function(){return _this7.checkRecipientFields()}))})),el.addEventListener("fieldChange",(function(e){return _this7.handleFieldChange(field,e).finally((function(){return _this7.checkRecipientFields()}))})),el.setAttribute("roleindex",roleIndex),el.setAttribute("xScale",pageInfo.xScale),el.setAttribute("yScale",pageInfo.yScale),el.setAttribute("initials",this.recipient?Object(_utils_2dbb5f63_js__WEBPACK_IMPORTED_MODULE_42__.c)(this.recipient.full_name):""),el.setAttribute("name",(null===(_a=this.recipient)||void 0===_a?void 0:_a.full_name)||"")}},{key:"handlePageRendered",value:function handlePageRendered(e){var _this8=this,pageInfo=e.detail,roleIndex=Object(_utils_2dbb5f63_js__WEBPACK_IMPORTED_MODULE_42__.a)(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.roleNames,this.recipient.role_name),recipientFields=this.recipient.fields.filter((function(field){return field.page===pageInfo.pageNumber}));console.log("[SIGN] Page rendered, adding fields",{pageInfo:pageInfo,roleIndex:roleIndex,recipientFields:recipientFields}),recipientFields.forEach((function(field){var el=Object(_utils_2dbb5f63_js__WEBPACK_IMPORTED_MODULE_42__.f)(field,pageInfo,roleIndex,{disabled:!1,editable:!1,draggable:!1,done:_this8.isDone});el&&(Array.isArray(el)?el.map((function(e){return _this8.attachFieldAttributes(pageInfo,field,roleIndex,e)})):_this8.attachFieldAttributes(pageInfo,field,roleIndex,el))})),_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.envelope.recipients.filter((function(recipient){return recipient.role_name!==_this8.recipient.role_name})).map((function(otherRecipient){var otherRoleIndex=Object(_utils_2dbb5f63_js__WEBPACK_IMPORTED_MODULE_42__.a)(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.roleNames,otherRecipient.role_name);otherRecipient.fields.filter((function(field){return field.page===pageInfo.pageNumber})).forEach((function(field){var el=Object(_utils_2dbb5f63_js__WEBPACK_IMPORTED_MODULE_42__.f)(field,pageInfo,otherRoleIndex,{disabled:!0,editable:!1,draggable:!1,done:_this8.isDone});el&&(el.setAttribute("roleindex",otherRoleIndex),el.setAttribute("xScale",pageInfo.xScale),el.setAttribute("yScale",pageInfo.yScale))}))})),this.checkRecipientFields()}},{key:"render",value:function render(){var _a,_b,_c,_d,_this9=this;if(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.loading||!_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.envelope)return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.b,null,Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("verdocs-loader",null));return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.b,{class:{agreed:null===(_a=this.recipient)||void 0===_a?void 0:_a.agreed}},!this.finishLater&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{class:"intro"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{class:"inner"},"Please review and act on these documents.")),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{class:"header"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{class:"inner"},!this.isDone&&!this.finishLater&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{class:"toolbar"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{class:"tools"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("verdocs-dropdown",{options:[{id:"later",label:"Finish Later"},{id:"claim",label:"Claim the Document",disabled:!0},{id:"decline",label:"Decline to Sign"},{id:"print",label:"Print Without Signing",disabled:!0},{id:"download",label:"Download"}],onOptionSelected:function onOptionSelected(e){return _this9.handleOptionSelected(e)}}),(null===(_b=this.recipient)||void 0===_b?void 0:_b.agreed)?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{style:{flex:"1"}}):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{class:"agree"},Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("verdocs-checkbox",{name:"agree",label:"I agree to use electronic records and signatures.",onInput:function onInput(){return _this9.handleClickAgree()}})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("verdocs-button",{size:"small",label:this.nextButtonLabel,disabled:!(null===(_c=this.recipient)||void 0===_c?void 0:_c.agreed),onClick:function onClick(){return _this9.handleNext()}}))))),this.isDone||(null===(_d=this.recipient)||void 0===_d?void 0:_d.agreed)?Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{style:{display:"none"}}):Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{class:"cover"}),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("div",{class:"document"},(_Envelopes_979ad8c2_js__WEBPACK_IMPORTED_MODULE_38__.f.envelope.documents||[]).map((function(envelopeDocument){var pages=_toConsumableArray((null==envelopeDocument?void 0:envelopeDocument.pages)||[]);return pages.sort((function(a,b){return a.sequence-b.sequence})),Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.a,null,pages.map((function(page){return Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("verdocs-document-page",{pageImageUri:page.display_uri,virtualWidth:612,virtualHeight:792,pageNumber:page.sequence,onPageRendered:function onPageRendered(e){return _this9.handlePageRendered(e)},layers:[{name:"page",type:"canvas"},{name:"controls",type:"div"}]})})))}))),this.showFinishLater&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("verdocs-ok-dialog",{heading:"You've saved your document to finish later.",message:"To complete the document, use the link in the original email notification inviting you to review and finish the document.",onNext:function onNext(){return _this9.showFinishLater=!1}}),this.errorMessage&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("verdocs-ok-dialog",{heading:"Network Error",message:this.errorMessage,onNext:function onNext(){return _this9.errorMessage=""}}),this.showDone&&Object(_index_f78d163d_js__WEBPACK_IMPORTED_MODULE_37__.h)("verdocs-ok-dialog",{heading:"You're Done",message:"You can access the Verdoc at any time by clicking on the link from invitation email.\\n\\nAfter all recipients have completed their actions, you will receive an email with the document and envelope certificate attached.\\n\\nThank you for using Verdocs.",onNext:function onNext(){return _this9.errorMessage=""}}))}}]),VerdocsSign}();VerdocsSign.style='verdocs-sign{display:-ms-flexbox;display:flex;overflow:hidden;position:relative;min-height:600px;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif}verdocs-sign div{-webkit-box-sizing:border-box;box-sizing:border-box}verdocs-sign .header{-ms-flex:0;flex:0;display:-ms-flexbox;display:flex;z-index:1000;-ms-flex-align:center;align-items:center;-webkit-transition:all 0.25s;transition:all 0.25s;-ms-flex-pack:center;justify-content:center;background-color:#33354c;-webkit-box-shadow:0 4px 4px 0 rgba(0, 0, 0, 0.24), 0 0 4px 0 rgba(0, 0, 0, 0.12);box-shadow:0 4px 4px 0 rgba(0, 0, 0, 0.24), 0 0 4px 0 rgba(0, 0, 0, 0.12)}verdocs-sign .header .inner{width:100%;max-width:1028px}verdocs-sign .intro{width:100%;height:60px;display:-ms-flexbox;display:flex;background:#ffffff;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}verdocs-sign .intro .inner{width:100%;color:#111111;padding:0 14px;font-size:20px;font-weight:500;line-height:28px;max-width:1024px}verdocs-sign .toolbar{width:100%;margin:0 auto;padding:0 14px;position:relative}verdocs-sign .tools{width:100%;color:#fff;height:56px;display:-ms-flexbox;display:flex;font-size:12px;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row;background-color:#33354c}verdocs-sign .cover{top:0;left:0;right:0;bottom:0;z-index:999;position:absolute;background:rgba(0, 0, 0, 0.5)}verdocs-sign .document{-ms-flex:1;flex:1;height:100%;display:-ms-flexbox;display:flex;padding:15px;row-gap:15px;min-height:200px;position:relative;overflow-y:scroll;-ms-flex-align:center;align-items:center;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}verdocs-sign .document .inner{width:100%;max-width:1028px}verdocs-sign .agree{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;padding:0 15px}verdocs-sign .agree .intro{display:none}verdocs-sign .agree .header{-ms-flex:0 0 56px;flex:0 0 56px}'},"./node_modules/core-js/modules/es.promise.finally.js":function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__("./node_modules/core-js/internals/export.js"),IS_PURE=__webpack_require__("./node_modules/core-js/internals/is-pure.js"),NativePromiseConstructor=__webpack_require__("./node_modules/core-js/internals/promise-native-constructor.js"),fails=__webpack_require__("./node_modules/core-js/internals/fails.js"),getBuiltIn=__webpack_require__("./node_modules/core-js/internals/get-built-in.js"),isCallable=__webpack_require__("./node_modules/core-js/internals/is-callable.js"),speciesConstructor=__webpack_require__("./node_modules/core-js/internals/species-constructor.js"),promiseResolve=__webpack_require__("./node_modules/core-js/internals/promise-resolve.js"),defineBuiltIn=__webpack_require__("./node_modules/core-js/internals/define-built-in.js"),NativePromisePrototype=NativePromiseConstructor&&NativePromiseConstructor.prototype;if($({target:"Promise",proto:!0,real:!0,forced:!!NativePromiseConstructor&&fails((function(){NativePromisePrototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(onFinally){var C=speciesConstructor(this,getBuiltIn("Promise")),isFunction=isCallable(onFinally);return this.then(isFunction?function(x){return promiseResolve(C,onFinally()).then((function(){return x}))}:onFinally,isFunction?function(e){return promiseResolve(C,onFinally()).then((function(){throw e}))}:onFinally)}}),!IS_PURE&&isCallable(NativePromiseConstructor)){var method=getBuiltIn("Promise").prototype.finally;NativePromisePrototype.finally!==method&&defineBuiltIn(NativePromisePrototype,"finally",method,{unsafe:!0})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0B2ZXJkb2NzL2pzLXNkay9UZW1wbGF0ZXMvVmFsaWRhdG9ycy5qcyIsIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0B2ZXJkb2NzL2pzLXNkay9FbnZlbG9wZXMvUmVjaXBpZW50cy5qcyIsIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0B2ZXJkb2NzL2pzLXNkay9FbnZlbG9wZXMvU2lnbmF0dXJlcy5qcyIsIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0B2ZXJkb2NzL2pzLXNkay9FbnZlbG9wZXMvSW5pdGlhbHMuanMiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2VtYmVkcy92ZXJkb2NzLXNpZ24vdmVyZG9jcy1zaWduLnRzeCIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvZW1iZWRzL3ZlcmRvY3Mtc2lnbi92ZXJkb2NzLXNpZ24uc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuZmluYWxseS5qcyJdLCJuYW1lcyI6WyJFTUFJTF9SRUdFWCIsImlzVmFsaWRFbWFpbCIsImVtYWlsIiwidGVzdCIsIlBIT05FX1JFR0VYIiwiaXNWYWxpZFBob25lIiwicGhvbmUiLCJfX2F3YWl0ZXIiLCJ0aGlzQXJnIiwiX2FyZ3VtZW50cyIsIlAiLCJnZW5lcmF0b3IiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInZhbHVlIiwic3RlcCIsIm5leHQiLCJlIiwicmVqZWN0ZWQiLCJyZXN1bHQiLCJkb25lIiwiYWRvcHQiLCJ0aGVuIiwiYXBwbHkiLCJfX2dlbmVyYXRvciIsImJvZHkiLCJmIiwieSIsInQiLCJnIiwiXyIsImxhYmVsIiwic2VudCIsInRyeXMiLCJvcHMiLCJ2ZXJiIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJ0aGlzIiwibiIsInYiLCJvcCIsIlR5cGVFcnJvciIsImNhbGwiLCJwb3AiLCJsZW5ndGgiLCJwdXNoIiwidXBkYXRlUmVjaXBpZW50IiwiZW5kcG9pbnQiLCJlbnZlbG9wZUlkIiwicm9sZU5hbWUiLCJwYXJhbXMiLCJfYSIsImFwaSIsInB1dCIsImNvbmNhdCIsInIiLCJkYXRhIiwiZW52ZWxvcGVSZWNpcGllbnRTdWJtaXQiLCJhY3Rpb24iLCJjcmVhdGVTaWduYXR1cmUiLCJuYW1lIiwic2lnbmF0dXJlIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJwb3N0IiwiY3JlYXRlSW5pdGlhbHMiLCJpbml0aWFscyIsIlZlcmRvY3NTaWduIiwicmVjaXBpZW50SW5kZXgiLCJmaWVsZHMiLCJjb21wb25lbnRXaWxsTG9hZCIsIlZlcmRvY3NFbmRwb2ludCIsInNlc3Npb25UeXBlIiwic2RrRXJyb3IiLCJlbWl0IiwiU0RLRXJyb3IiLCJyb2xlSWQiLCJpbnZpdGVDb2RlIiwiY29uc29sZSIsImxvZyIsIkVudmVsb3Blcy5nZXRTaWduaW5nU2Vzc2lvbiIsInNlc3Npb24iLCJyZWNpcGllbnQiLCJzaWduZXJUb2tlbiIsInByb2ZpbGVfaWQiLCJzZXRUb2tlbiIsImFncmVlZCIsIm5leHRCdXR0b25MYWJlbCIsImdldEVudmVsb3BlQnlJZCIsIkVudmVsb3BlU3RvcmUiLCJlbnZlbG9wZSIsInJlY2lwaWVudHMiLCJmaW5kSW5kZXgiLCJyb2xlX25hbWUiLCJpc0RvbmUiLCJpbmNsdWRlcyIsInN0YXR1cyIsIm1lc3NhZ2UiLCJyZXNwb25zZSIsImhhbmRsZUNsaWNrQWdyZWUiLCJlbnZlbG9wZVJlY2lwaWVudEFncmVlIiwiZW52ZWxvcGVVcGRhdGVkIiwiZXZlbnQiLCJmaWxlTmFtZSIsInVwZGF0ZWRfYXQiLCJzcGxpdCIsIkVudmVsb3Blcy5nZXRFbnZlbG9wZUZpbGUiLCJlbnZlbG9wZV9kb2N1bWVudF9pZCIsInhociIsIlhNTEh0dHBSZXF1ZXN0IiwicmVzcG9uc2VUeXBlIiwib25sb2FkIiwiYSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImhyZWYiLCJ3aW5kb3ciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJkb3dubG9hZCIsInN0eWxlIiwiZGlzcGxheSIsImFwcGVuZENoaWxkIiwiY2xpY2siLCJyZW1vdmUiLCJvcGVuIiwic2VuZCIsImRldGFpbCIsImlkIiwiZmluaXNoTGF0ZXIiLCJzaG93RmluaXNoTGF0ZXIiLCJzYXZlUERGIiwic2F2ZUZpZWxkQ2hhbmdlIiwiZmllbGROYW1lIiwiRW52ZWxvcGVzLnVwZGF0ZUVudmVsb3BlRmllbGQiLCJlcnJvciIsImVycm9yTWVzc2FnZSIsImZpZWxkIiwidGFyZ2V0IiwiY2hlY2tlZCIsInR5cGUiLCJwcmVwYXJlZCIsIm9wdGlvbnMiLCJzZXR0aW5ncyIsIm1hcCIsIm9wdGlvbiIsInNlbGVjdGVkIiwiZmV0Y2giLCJibG9iIiwiaW5pdGlhbHNCbG9iIiwibmV3SW5pdGlhbHMiLCJ1cGRhdGVFbnZlbG9wZUZpZWxkSW5pdGlhbHMiLCJzaWduYXR1cmVCbG9iIiwibmV3U2lnbmF0dXJlIiwidXBkYXRlRW52ZWxvcGVGaWVsZFNpZ25hdHVyZSIsImlzbyIsImdldEF0dHJpYnV0ZSIsInRzIiwiaXNGaWVsZFZhbGlkIiwicmVxdWlyZWQiLCJiYXNlNjQiLCJ2YWxpZGF0b3IiLCJjaGVja2VkQ291bnQiLCJmaWx0ZXIiLCJtaW5pbXVtX2NoZWNrZWQiLCJtYXhpbXVtX2NoZWNrZWQiLCJuZXh0U3VibWl0cyIsInNob3dEb25lIiwicmVxdWlyZWRGaWVsZHMiLCJmb2N1c2VkSW5kZXgiLCJmb2N1c2VkRmllbGQiLCJuZXh0Rm9jdXNlZEluZGV4IiwibmV4dFJlcXVpcmVkRmllbGQiLCJza2lwcyIsImdldEZpZWxkSWQiLCJlbCIsImdldEVsZW1lbnRCeUlkIiwiZm9jdXNGaWVsZCIsImNoZWNrUmVjaXBpZW50RmllbGRzIiwic29tZUZpZWxkc0ludmFsaWQiLCJzb21lIiwiZmllbGRWYWxpZCIsImF0dGFjaEZpZWxkQXR0cmlidXRlcyIsInBhZ2VJbmZvIiwicm9sZUluZGV4IiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZUZpZWxkQ2hhbmdlIiwic2V0QXR0cmlidXRlIiwieFNjYWxlIiwieVNjYWxlIiwiZnVsbE5hbWVUb0luaXRpYWxzIiwiZnVsbF9uYW1lIiwiaGFuZGxlUGFnZVJlbmRlcmVkIiwiZ2V0Um9sZUluZGV4Iiwicm9sZU5hbWVzIiwicmVjaXBpZW50RmllbGRzIiwicGFnZSIsInBhZ2VOdW1iZXIiLCJmb3JFYWNoIiwicmVuZGVyRG9jdW1lbnRGaWVsZCIsImRpc2FibGVkIiwiZWRpdGFibGUiLCJkcmFnZ2FibGUiLCJBcnJheSIsImlzQXJyYXkiLCJvdGhlclJlY2lwaWVudCIsIm90aGVyUm9sZUluZGV4IiwicmVuZGVyIiwibG9hZGluZyIsImgiLCJIb3N0IiwiY2xhc3MiLCJvbk9wdGlvblNlbGVjdGVkIiwiaGFuZGxlT3B0aW9uU2VsZWN0ZWQiLCJmbGV4Iiwib25JbnB1dCIsInNpemUiLCJvbkNsaWNrIiwiaGFuZGxlTmV4dCIsImRvY3VtZW50cyIsImVudmVsb3BlRG9jdW1lbnQiLCJwYWdlcyIsInNvcnQiLCJiIiwic2VxdWVuY2UiLCJGcmFnbWVudCIsInBhZ2VJbWFnZVVyaSIsImRpc3BsYXlfdXJpIiwidmlydHVhbFdpZHRoIiwidmlydHVhbEhlaWdodCIsIm9uUGFnZVJlbmRlcmVkIiwibGF5ZXJzIiwiaGVhZGluZyIsIm9uTmV4dCIsIiQiLCJJU19QVVJFIiwiTmF0aXZlUHJvbWlzZUNvbnN0cnVjdG9yIiwiZmFpbHMiLCJnZXRCdWlsdEluIiwiaXNDYWxsYWJsZSIsInNwZWNpZXNDb25zdHJ1Y3RvciIsInByb21pc2VSZXNvbHZlIiwiZGVmaW5lQnVpbHRJbiIsIk5hdGl2ZVByb21pc2VQcm90b3R5cGUiLCJwcm90b3R5cGUiLCJwcm90byIsInJlYWwiLCJmb3JjZWQiLCJvbkZpbmFsbHkiLCJDIiwiaXNGdW5jdGlvbiIsIngiLCJtZXRob2QiLCJ1bnNhZmUiXSwibWFwcGluZ3MiOiI7b0tBQUEsa0tBbUJBLElBQUlBLFlBQWMseUpBQ1BDLGFBQWUsU0FBZkEsYUFBeUJDLE9BQVMsUUFBU0EsT0FBU0YsWUFBWUcsS0FB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Q0FDWkMsUUFBVSxvQkFBUSwrQ0FDbEJDLHlCQUEyQixvQkFBUSxrRUFDbkNDLE1BQVEsb0JBQVEsNkNBQ2hCQyxXQUFhLG9CQUFRLG9EQUNyQkMsV0FBYSxvQkFBUSxtREFDckJDLG1CQUFxQixvQkFBUSwyREFDN0JDLGVBQWlCLG9CQUFRLHVEQUN6QkMsY0FBZ0Isb0JBQVEsdURBRXhCQyx1QkFBeUJQLDBCQUE0QkEseUJBQXlCUSxVQTBCbEYsR0FoQkFWLEVBQUUsQ0FBRWhHLE9BQVEsVUFBVzJHLE9BQU8sRUFBTUMsTUFBTSxFQUFNQyxTQVA1QlgsMEJBQTRCQyxPQUFNLFdBRXBETSx1QkFBZ0MsUUFBRXpNLEtBQUssQ0FBRXJCLEtBQU0sV0FBMEIsSUFBSyxXQUEwQixHQUMxRyxLQUl1RSxDQUNyRSxRQUFXLFNBQVVtTyxXQUNuQixJQUFJQyxFQUFJVCxtQkFBbUIzTSxLQUFNeU0sV0FBVyxZQUN4Q1ksV0FBYVgsV0FBV1MsV0FDNUIsT0FBT25OLEtBQUtoQixLQUNWcU8sV0FBYSxTQUFVQyxHQUNyQixPQUFPVixlQUFlUSxFQUFHRCxhQUFhbk8sTUFBSyxXQUFjLE9BQU9zTyxDQUFHLEdBQ3JFLEVBQUlILFVBQ0pFLFdBQWEsU0FBVTFPLEdBQ3JCLE9BQU9pTyxlQUFlUSxFQUFHRCxhQUFhbk8sTUFBSyxXQUFjLE1BQU1MLENBQUcsR0FDcEUsRUFBSXdPLFVBRVIsS0FJR2IsU0FBV0ksV0FBV0gsMEJBQTJCLENBQ3BELElBQUlnQixPQUFTZCxXQUFXLFdBQVdNLFVBQW1CLFFBQ2xERCx1QkFBZ0MsVUFBTVMsUUFDeENWLGNBQWNDLHVCQUF3QixVQUFXUyxPQUFRLENBQUVDLFFBQVEsR0FFdkUsQyIsImZpbGUiOiIzMS43OTdhNGIzNi5pZnJhbWUuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZXQgYWxsIGRlZmluZWQgdmFsaWRhdG9yc1xuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7RG9jdW1lbnRzfSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvVGVtcGxhdGVzJztcbiAqXG4gKiBhd2FpdCBEb2N1bWVudHMuZ2V0RG9jdW1lbnRzKHRlbXBsYXRlSUQpO1xuICogYGBgXG4gKi9cbmV4cG9ydCB2YXIgZ2V0VmFsaWRhdG9ycyA9IGZ1bmN0aW9uIChlbmRwb2ludCkge1xuICAgIHJldHVybiBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgLmdldCgnL3ZhbGlkYXRvcnMnKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KTtcbn07XG5leHBvcnQgdmFyIGdldFZhbGlkYXRvciA9IGZ1bmN0aW9uIChlbmRwb2ludCwgdmFsaWRhdG9yTmFtZSkge1xuICAgIHJldHVybiBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgLmdldChcIi92YWxpZGF0b3JzL1wiLmNvbmNhdCh2YWxpZGF0b3JOYW1lKSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xudmFyIEVNQUlMX1JFR0VYID0gL14oKFtePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSsoXFwuW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKykqKXwoXCIuK1wiKSlAKChcXFtbMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC87XG5leHBvcnQgdmFyIGlzVmFsaWRFbWFpbCA9IGZ1bmN0aW9uIChlbWFpbCkgeyByZXR1cm4gISFlbWFpbCAmJiBFTUFJTF9SRUdFWC50ZXN0KGVtYWlsKTsgfTtcbi8vIEBzZWUgaHR0cHM6Ly93d3cucmVnZXh0ZXN0ZXIuY29tLzE5NzhcbnZhciBQSE9ORV9SRUdFWCA9IC8oKD86XFwrfDAwKVsxN10oPzogfFxcLSk/fCg/OlxcK3wwMClbMS05XVxcZHswLDJ9KD86IHxcXC0pP3woPzpcXCt8MDApMVxcLVxcZHszfSg/OiB8XFwtKT8pPygwXFxkfFxcKFswLTldezN9XFwpfFsxLTldezAsM30pKD86KCg/OiB8XFwtKVswLTldezJ9KXs0fXwoKD86WzAtOV17Mn0pezR9KXwoKD86IHxcXC0pWzAtOV17M30oPzogfFxcLSlbMC05XXs0fSl8KFswLTldezd9KSkvO1xuZXhwb3J0IHZhciBpc1ZhbGlkUGhvbmUgPSBmdW5jdGlvbiAocGhvbmUpIHsgcmV0dXJuICEhcGhvbmUgJiYgUEhPTkVfUkVHRVgudGVzdChwaG9uZSk7IH07XG5leHBvcnQgdmFyIGlzVmFsaWRSb2xlTmFtZSA9IGZ1bmN0aW9uICh2YWx1ZSwgcm9sZXMpIHsgcmV0dXJuIHJvbGVzLmZpbmRJbmRleChmdW5jdGlvbiAocm9sZSkgeyByZXR1cm4gcm9sZS5uYW1lID09PSB2YWx1ZTsgfSkgIT09IC0xOyB9O1xudmFyIFRhZ1JlZ0V4ID0gL15bYS16QS1aMC05LV17MCwzMn0kLztcbmV4cG9ydCB2YXIgaXNWYWxpZFRhZyA9IGZ1bmN0aW9uICh2YWx1ZSwgdGFncykgeyByZXR1cm4gVGFnUmVnRXgudGVzdCh2YWx1ZSkgfHwgdGFncy5maW5kSW5kZXgoZnVuY3Rpb24gKHRhZykgeyByZXR1cm4gdGFnLm5hbWUgPT09IHZhbHVlOyB9KSAhPT0gLTE7IH07XG4iLCJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuLyoqXG4gKiBVcGRhdGUgYSByZWNpcGllbnQncyBzdGF0dXMgYmxvY2tcbiAqL1xuZXhwb3J0IHZhciB1cGRhdGVSZWNpcGllbnQgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIGVudmVsb3BlSWQsIHJvbGVOYW1lLCBwYXJhbXMpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgICAgICAgICAgLnB1dChcIi9lbnZlbG9wZXMvXCIuY29uY2F0KGVudmVsb3BlSWQsIFwiL3JlY2lwaWVudHMvXCIpLmNvbmNhdChyb2xlTmFtZSksIHBhcmFtcylcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KV07XG4gICAgfSk7XG59KTsgfTtcbi8qKlxuICogU3VibWl0IGFuIGVudmVsb3BlIChzaWduaW5nIGlzIGZpbmlzaGVkKS4gTm90ZSB0aGF0IGFsbCBmaWVsZHMgbXVzdCBiZSB2YWxpZC9jb21wbGV0ZWQgZm9yIHRoaXMgdG8gc3VjY2VlZC5cbiAqL1xuZXhwb3J0IHZhciBlbnZlbG9wZVJlY2lwaWVudFN1Ym1pdCA9IGZ1bmN0aW9uIChlbmRwb2ludCwgZW52ZWxvcGVJZCwgcm9sZU5hbWUpIHtcbiAgICByZXR1cm4gdXBkYXRlUmVjaXBpZW50KGVuZHBvaW50LCBlbnZlbG9wZUlkLCByb2xlTmFtZSwgeyBhY3Rpb246ICdzdWJtaXQnIH0pO1xufTtcbi8qKlxuICogRGVjbGluZSB0byBjb21wbGV0ZSBhbiBlbnZlbG9wZSAoc2lnbmluZyB3aWxsIG5vdCB0ZXJtaW5hdGVkKS5cbiAqL1xuZXhwb3J0IHZhciBlbnZlbG9wZVJlY2lwaWVudERlY2xpbmUgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIGVudmVsb3BlSWQsIHJvbGVOYW1lKSB7XG4gICAgcmV0dXJuIHVwZGF0ZVJlY2lwaWVudChlbmRwb2ludCwgZW52ZWxvcGVJZCwgcm9sZU5hbWUsIHsgYWN0aW9uOiAnZGVjbGluZScgfSk7XG59O1xuLyoqXG4gKiBDbGFpbSAvIGNoYW5nZSBvd25lcnNoaXAgb2YgYW4gZW52ZWxvcGUuIFRoaXMgaXMgYSBzcGVjaWFsLWNhc2Ugb3BlcmF0aW9uIG9ubHkgYXZhaWxhYmxlIGluIGNlcnRhaW4gd29ya2Zsb3dzLlxuICovXG5leHBvcnQgdmFyIGVudmVsb3BlUmVjaXBpZW50Q2hhbmdlT3duZXIgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIGVudmVsb3BlSWQsIHJvbGVOYW1lLCBlbWFpbCwgZnVsbE5hbWUpIHsgcmV0dXJuIHVwZGF0ZVJlY2lwaWVudChlbmRwb2ludCwgZW52ZWxvcGVJZCwgcm9sZU5hbWUsIHsgYWN0aW9uOiAnb3duZXJfdXBkYXRlJywgZW1haWw6IGVtYWlsLCBmdWxsX25hbWU6IGZ1bGxOYW1lIH0pOyB9O1xuLyoqXG4gKiBBZ3JlZSB0byBlbGVjdHJvbmljIHNpZ25pbmcuXG4gKi9cbmV4cG9ydCB2YXIgZW52ZWxvcGVSZWNpcGllbnRBZ3JlZSA9IGZ1bmN0aW9uIChlbmRwb2ludCwgZW52ZWxvcGVJZCwgcm9sZU5hbWUsIGFncmVlZCkge1xuICAgIHJldHVybiB1cGRhdGVSZWNpcGllbnQoZW5kcG9pbnQsIGVudmVsb3BlSWQsIHJvbGVOYW1lLCB7IGFjdGlvbjogJ3VwZGF0ZScsIGFncmVlZDogYWdyZWVkIH0pO1xufTtcbi8qKlxuICogQ2hhbmdlIGEgcmVjaXBpZW50J3MgbmFtZS5cbiAqL1xuZXhwb3J0IHZhciBlbnZlbG9wZVJlY2lwaWVudFVwZGF0ZU5hbWUgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIGVudmVsb3BlSWQsIHJvbGVOYW1lLCBmdWxsTmFtZSkge1xuICAgIHJldHVybiB1cGRhdGVSZWNpcGllbnQoZW5kcG9pbnQsIGVudmVsb3BlSWQsIHJvbGVOYW1lLCB7IGFjdGlvbjogJ3VwZGF0ZScsIG5ld19mdWxsX25hbWU6IGZ1bGxOYW1lIH0pO1xufTtcbi8qKlxuICogQ2hhbmdlIGEgcmVjaXBpZW50J3MgbmFtZS5cbiAqL1xuZXhwb3J0IHZhciBlbnZlbG9wZVJlY2lwaWVudFByZXBhcmUgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIGVudmVsb3BlSWQsIHJvbGVOYW1lLCByZWNpcGllbnRzKSB7XG4gICAgcmV0dXJuIHVwZGF0ZVJlY2lwaWVudChlbmRwb2ludCwgZW52ZWxvcGVJZCwgcm9sZU5hbWUsIHsgYWN0aW9uOiAncHJlcGFyZScsIHJlY2lwaWVudHM6IHJlY2lwaWVudHMgfSk7XG59O1xuZXhwb3J0IHZhciBnZXRTaWduZXJUb2tlbiA9IGZ1bmN0aW9uIChlbmRwb2ludCwgZW52ZWxvcGVJZCwgcm9sZU5hbWUpIHtcbiAgICByZXR1cm4gZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgIC5nZXQoXCIvZW52ZWxvcGVzL1wiLmNvbmNhdChlbnZlbG9wZUlkLCBcIi9yZWNpcGllbnRzL1wiKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KHJvbGVOYW1lKSwgXCIvc2lnbmVyLXRva2VuXCIpKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KTtcbn07XG5leHBvcnQgdmFyIGdldEluUGVyc29uTGluayA9IGZ1bmN0aW9uIChlbmRwb2ludCwgZW52ZWxvcGVJZCwgcm9sZU5hbWUpIHtcbiAgICByZXR1cm4gZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgIC5nZXQoXCIvZW52ZWxvcGVzL1wiLmNvbmNhdChlbnZlbG9wZUlkLCBcIi9yZWNpcGllbnRzL1wiKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KHJvbGVOYW1lKSwgXCI/aW5fcGVyc29uX2xpbms9dHJ1ZVwiKSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xuIiwiLyoqXG4gKiBDcmVhdGUgYSBzaWduYXR1cmUgYmxvY2suIEluIGEgdHlwaWNhbCBzaWduaW5nIHdvcmtmbG93LCB0aGUgdXNlciBpcyBhc2tlZCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBwcm9jZXNzIHRvIFwiYWRvcHRcIlxuICogYSBzaWduYXR1cmUgYmxvY2sgdG8gYmUgdXNlZCBmb3IgYWxsIHNpZ25hdHVyZSBmaWVsZHMgaW4gdGhlIGRvY3VtZW50LiBUaHVzLCB0aGlzIGlzIHR5cGljYWxseSBjYWxsZWQgb25lIHRpbWUgdG9cbiAqIGNyZWF0ZSBhbmQgc3RvcmUgYSBzaWduYXR1cmUgYmxvY2suIFRoZXJlYWZ0ZXIsIHRoZSBJRCBvZiB0aGUgc2lnbmF0dXJlIGJsb2NrIG1heSBiZSByZS11c2VkIGZvciBlYWNoIHNpZ25hdHVyZSBmaWVsZFxuICogdG8gYmUgXCJzdGFtcGVkXCIgYnkgdGhlIHVzZXIuXG4gKi9cbmV4cG9ydCB2YXIgY3JlYXRlU2lnbmF0dXJlID0gZnVuY3Rpb24gKGVuZHBvaW50LCBuYW1lLCBzaWduYXR1cmUpIHtcbiAgICB2YXIgZGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgIGRhdGEuYXBwZW5kKCdzaWduYXR1cmUnLCBzaWduYXR1cmUsIG5hbWUpO1xuICAgIHJldHVybiBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgLnBvc3QoXCIvc2lnbmF0dXJlc1wiLCBkYXRhKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KTtcbn07XG4vKipcbiAqIEdldCB0aGUgYXZhaWxiYWJsZSBzaWduYXR1cmVzIGZvciBhIHVzZXIuXG4gKi9cbmV4cG9ydCB2YXIgZ2V0U2lnbmF0dXJlcyA9IGZ1bmN0aW9uIChlbmRwb2ludCkge1xuICAgIHJldHVybiBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgLmdldCgnL3NpZ25hdHVyZXMnKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocikgeyByZXR1cm4gci5kYXRhOyB9KTtcbn07XG4vKipcbiAqIEdldCBhIHVzZXIncyBzaWduYXR1cmUgYnkgSUQuXG4gKi9cbmV4cG9ydCB2YXIgZ2V0U2lnbmF0dXJlID0gZnVuY3Rpb24gKGVuZHBvaW50LCBzaWduYXR1cmVJZCkge1xuICAgIHJldHVybiBlbmRwb2ludC5hcGkgLy9cbiAgICAgICAgLmdldChcIi9zaWduYXR1cmVzL1wiLmNvbmNhdChzaWduYXR1cmVJZCkpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pO1xufTtcbi8qKlxuICogRGVsZXRlIGEgdXNlcidzIHNpZ25hdHVyZS5cbiAqL1xuZXhwb3J0IHZhciBkZWxldGVTaWduYXR1cmUgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIHNpZ25hdHVyZUlkKSB7XG4gICAgcmV0dXJuIGVuZHBvaW50LmFwaSAvL1xuICAgICAgICAuZGVsZXRlKFwiL3NpZ25hdHVyZXMvXCIuY29uY2F0KHNpZ25hdHVyZUlkKSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuZGF0YTsgfSk7XG59O1xuIiwiLyoqXG4gKiBDcmVhdGUgYW4gaW5pdGlhbHMgYmxvY2suIEluIGEgdHlwaWNhbCBzaWduaW5nIHdvcmtmbG93LCB0aGUgdXNlciBpcyBhc2tlZCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBwcm9jZXNzIHRvIFwiYWRvcHRcIlxuICogYW4gaW5pdGlhbHMgYmxvY2sgdG8gYmUgdXNlZCBmb3IgYWxsIGluaXRpYWxzIGZpZWxkcyBpbiB0aGUgZG9jdW1lbnQuIFRodXMsIHRoaXMgaXMgdHlwaWNhbGx5IGNhbGxlZCBvbmUgdGltZSB0b1xuICogY3JlYXRlIGFuZCBzdG9yZSBhbiBpbml0aWFscyBibG9jay4gVGhlcmVhZnRlciwgdGhlIElEIG9mIHRoZSBpbml0aWFscyBibG9jayBtYXkgYmUgcmUtdXNlZCBmb3IgZWFjaCBpbml0aWFscyBmaWVsZFxuICogdG8gYmUgXCJzdGFtcGVkXCIgYnkgdGhlIHVzZXIuXG4gKi9cbmV4cG9ydCB2YXIgY3JlYXRlSW5pdGlhbHMgPSBmdW5jdGlvbiAoZW5kcG9pbnQsIG5hbWUsIGluaXRpYWxzKSB7XG4gICAgdmFyIGRhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICBkYXRhLmFwcGVuZCgnaW5pdGlhbCcsIGluaXRpYWxzLCBuYW1lKTtcbiAgICByZXR1cm4gZW5kcG9pbnQuYXBpIC8vXG4gICAgICAgIC5wb3N0KFwiL2luaXRpYWxzXCIsIGRhdGEpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pO1xufTtcbiIsImltcG9ydCB7VmVyZG9jc0VuZHBvaW50fSBmcm9tICdAdmVyZG9jcy9qcy1zZGsnO1xuaW1wb3J0IHtFbnZlbG9wZXN9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9FbnZlbG9wZXMnO1xuaW1wb3J0IHtjcmVhdGVJbml0aWFsc30gZnJvbSAnQHZlcmRvY3MvanMtc2RrL0VudmVsb3Blcy9Jbml0aWFscyc7XG5pbXBvcnQge2NyZWF0ZVNpZ25hdHVyZX0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL0VudmVsb3Blcy9TaWduYXR1cmVzJztcbmltcG9ydCB7SURvY3VtZW50RmllbGQsIElFbnZlbG9wZSwgSVJlY2lwaWVudH0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL0VudmVsb3Blcy9UeXBlcyc7XG5pbXBvcnQge2VudmVsb3BlUmVjaXBpZW50QWdyZWUsIGVudmVsb3BlUmVjaXBpZW50U3VibWl0fSBmcm9tICdAdmVyZG9jcy9qcy1zZGsvRW52ZWxvcGVzL1JlY2lwaWVudHMnO1xuaW1wb3J0IHtpc1ZhbGlkRW1haWwsIGlzVmFsaWRQaG9uZX0gZnJvbSAnQHZlcmRvY3MvanMtc2RrL1RlbXBsYXRlcy9WYWxpZGF0b3JzJztcbmltcG9ydCB7RXZlbnQsIEV2ZW50RW1pdHRlciwgSG9zdCwgRnJhZ21lbnQsIENvbXBvbmVudCwgUHJvcCwgU3RhdGUsIGh9IGZyb20gJ0BzdGVuY2lsL2NvcmUnO1xuaW1wb3J0IHt1cGRhdGVFbnZlbG9wZUZpZWxkSW5pdGlhbHMsIHVwZGF0ZUVudmVsb3BlRmllbGRTaWduYXR1cmV9IGZyb20gJ0B2ZXJkb2NzL2pzLXNkay9FbnZlbG9wZXMvRW52ZWxvcGVzJztcbmltcG9ydCB7ZnVsbE5hbWVUb0luaXRpYWxzLCBnZXRGaWVsZElkLCBnZXRSb2xlSW5kZXgsIHJlbmRlckRvY3VtZW50RmllbGR9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWxzJztcbmltcG9ydCB7Z2V0RW52ZWxvcGVCeUlkfSBmcm9tICcuLi8uLi8uLi91dGlscy9FbnZlbG9wZXMnO1xuaW1wb3J0IEVudmVsb3BlU3RvcmUgZnJvbSAnLi4vLi4vLi4vdXRpbHMvZW52ZWxvcGVTdG9yZSc7XG5pbXBvcnQge0lEb2N1bWVudFBhZ2VJbmZvfSBmcm9tICcuLi8uLi8uLi91dGlscy9UeXBlcyc7XG5pbXBvcnQge1NES0Vycm9yfSBmcm9tICcuLi8uLi8uLi91dGlscy9lcnJvcnMnO1xuXG4vKipcbiAqIERpc3BsYXkgYW4gZW52ZWxvcGUgc2lnbmluZyBleHBlcmllbmNlLiBUaGlzIHdpbGwgZGlzcGxheSB0aGUgZW52ZWxvcGUncyBhdHRhY2hlZFxuICogZG9jdW1lbnRzIHdpdGggc2lnbmluZyBmaWVsZHMgb3ZlcmxhaWQgb24gZWFjaCBwYWdlLlxuICpcbiAqIFRoZSBjb21wb25lbnQgd2lsbCBhdHRlbXB0IHRvIGluaXRpYXRlIGEgc2lnbmluZyBzZXNzaW9uIGFuZCBsb2FkIHRoZSBzcGVjaWZpZWRcbiAqIGVudmVsb3BlLiBJZiBzdWNjZXNzZnVsLCB0aGUgcmVjaXBpZW50J3MgZmllbGRzIHdpbGwgYmUgZW5hYmxlZCBhbmQgdGhlIHVzZXIgd2lsbFxuICogYmUgYWJsZSB0byBzaWduIHRoZSBlbnZlbG9wZSdzIGF0dGFjaGVkIGRvY3VtZW50cy4gSWYgbm90LCBhbiBgc2RrRXJyb3JgIHdpbGwgYmVcbiAqIHRocm93biBhbmQgdGhlIGNvbXBvbmVudCB3aWxsIGJlIGJsYW5rL2VtcHR5LiBUbyBwcm92aWRlIHRoZSBiZXN0IHVzZXIgZXhwZXJpZW5jZSxcbiAqIGFwcGxpY2F0aW9ucyBzaG91bGQgY2FwdHVyZSBhbmQgaGFuZGxlIHRoaXMgZXJyb3IgdG8gcHJvdmlkZSB0aGUgdXNlciB3aXRoXG4gKiBpbnN0cnVjdGlvbnMvb3B0aW9ucyBmb3IgbmV4dCBzdGVwcyBiYXNlZCBvbiB0aGUgYXBwbGljYXRpb24ncyBkZXNpZ24gYW5kIHdvcmtmbG93LlxuICpcbiAqIFVubGlrZSBvdGhlciBjb21wb25lbnRzLCB0aGlzIHdpbGwgYWx3YXlzIGNyZWF0ZSBpdHMgb3duIGVuZHBvaW50IHRvIG1hbmFnZSB0aGVcbiAqIHNlc3Npb24gc2Vzc2lvbi4gVGhpcyBlbmRwb2ludCB3aWxsIGJlIGluY2x1ZGVkIGluIGV2ZW50IGNhbGxiYWNrcyBmb3IgdGhlXG4gKiBjb252ZW5pZW5jZSBvZiBob3N0IGFwcGxpY2F0aW9ucyB0aGF0IG1heSB3aXNoIHRvIG1ha2Ugc2VydmVyIGNhbGxzIHVzaW5nIHRoZVxuICogc2lnbmVyJ3MgY3JlZGVudGlhbHMgb25jZSBzaWduaW5nIGlzIGNvbXBsZXRlIChlLmcuIHRvIG9idGFpbiBjb3BpZXMgb2ZcbiAqIHRoZSBzaWduZWQgYXR0YWNobWVudHMuKVxuICovXG5AQ29tcG9uZW50KHtcbiAgdGFnOiAndmVyZG9jcy1zaWduJyxcbiAgc3R5bGVVcmw6ICd2ZXJkb2NzLXNpZ24uc2NzcycsXG4gIHNoYWRvdzogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFZlcmRvY3NTaWduIHtcbiAgZW5kcG9pbnQ6IFZlcmRvY3NFbmRwb2ludCA9IG51bGw7XG5cbiAgLyoqXG4gICAqIFRoZSBJRCBvZiB0aGUgZW52ZWxvcGUgdG8gc2lnbi5cbiAgICovXG4gIEBQcm9wKCkgZW52ZWxvcGVJZDogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG5cbiAgLyoqXG4gICAqIFRoZSBJRCBvZiB0aGUgcm9sZSB0aGF0IHdpbGwgYmUgc2lnbmluZyBlLmcuICdSZWNpcGllbnQgMSdcbiAgICovXG4gIEBQcm9wKCkgcm9sZUlkOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICAvKipcbiAgICogVGhlIGludml0ZSBjb2RlIGZvciB0aGUgc2lnbmVyLlxuICAgKi9cbiAgQFByb3AoKSBpbnZpdGVDb2RlOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICAvKipcbiAgICogRXZlbnQgZmlyZWQgaWYgYW4gZXJyb3Igb2NjdXJzLiBUaGUgZXZlbnQgZGV0YWlscyB3aWxsIGNvbnRhaW4gaW5mb3JtYXRpb24gYWJvdXQgdGhlIGVycm9yLiBNb3N0IGVycm9ycyB3aWxsXG4gICAqIHRlcm1pbmF0ZSB0aGUgcHJvY2VzcywgYW5kIHRoZSBjYWxsaW5nIGFwcGxpY2F0aW9uIHNob3VsZCBjb3JyZWN0IHRoZSBjb25kaXRpb24gYW5kIHJlLXJlbmRlciB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIHNka0Vycm9yOiBFdmVudEVtaXR0ZXI8U0RLRXJyb3I+O1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSBlbnZlbG9wZSBpcyB1cGRhdGVkIGluIGFueSB3YXkuXG4gICAqL1xuICBARXZlbnQoe2NvbXBvc2VkOiB0cnVlfSkgZW52ZWxvcGVVcGRhdGVkOiBFdmVudEVtaXR0ZXI8e2VuZHBvaW50OiBWZXJkb2NzRW5kcG9pbnQ7IGVudmVsb3BlOiBJRW52ZWxvcGU7IGV2ZW50OiBzdHJpbmd9PjtcblxuICBAU3RhdGUoKSByZWNpcGllbnQ6IElSZWNpcGllbnQgfCBudWxsID0gbnVsbDtcbiAgQFN0YXRlKCkgc2lnbmVyVG9rZW4gPSBudWxsO1xuICAvLyBAU3RhdGUoKSBlbnZlbG9wZTogSUVudmVsb3BlIHwgbnVsbCA9IG51bGw7XG4gIC8vIEBTdGF0ZSgpIGZpZWxkczogSURvY3VtZW50RmllbGRbXSA9IFtdO1xuICBAU3RhdGUoKSBoYXNTaWduYXR1cmUgPSBmYWxzZTtcbiAgQFN0YXRlKCkgbmV4dEJ1dHRvbkxhYmVsID0gJ1N0YXJ0JztcbiAgQFN0YXRlKCkgbmV4dFN1Ym1pdHMgPSBmYWxzZTtcbiAgQFN0YXRlKCkgZXJyb3JNZXNzYWdlID0gJyc7XG4gIEBTdGF0ZSgpIGZvY3VzZWRGaWVsZCA9ICcnO1xuICBAU3RhdGUoKSBpc0RvbmUgPSBmYWxzZTtcbiAgQFN0YXRlKCkgc2hvd0RvbmUgPSBmYWxzZTtcblxuICBAU3RhdGUoKSBmaW5pc2hMYXRlciA9IGZhbHNlO1xuICBAU3RhdGUoKSBzaG93RmluaXNoTGF0ZXIgPSBmYWxzZTtcblxuICByZWNpcGllbnRJbmRleDogbnVtYmVyID0gLTE7XG4gIGZpZWxkczogSURvY3VtZW50RmllbGRbXSA9IFtdO1xuXG4gIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgIHRoaXMuZW5kcG9pbnQgPSBuZXcgVmVyZG9jc0VuZHBvaW50KHtzZXNzaW9uVHlwZTogJ3NpZ25pbmcnfSk7XG4gIH1cblxuICBhc3luYyBjb21wb25lbnREaWRMb2FkKCkge1xuICAgIGlmICghdGhpcy5lbnZlbG9wZUlkKSB7XG4gICAgICB0aGlzLnNka0Vycm9yPy5lbWl0KG5ldyBTREtFcnJvcignW1NJR05dIE1pc3NpbmcgcmVxdWlyZWQgZW52ZWxvcElkJywgNTAwLCAnJykpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5yb2xlSWQpIHtcbiAgICAgIHRoaXMuc2RrRXJyb3I/LmVtaXQobmV3IFNES0Vycm9yKCdbU0lHTl0gTWlzc2luZyByZXF1aXJlZCByb2xlSWQnLCA1MDAsICcnKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmludml0ZUNvZGUpIHtcbiAgICAgIHRoaXMuc2RrRXJyb3I/LmVtaXQobmV3IFNES0Vycm9yKCdbU0lHTl0gTWlzc2luZyByZXF1aXJlZCBpbnZpdGVDb2RlJywgNTAwLCAnJykpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZyhgW1NJR05dIFByb2Nlc3NpbmcgaW52aXRlIGNvZGUgZm9yICR7dGhpcy5lbnZlbG9wZUlkfSAvICR7dGhpcy5yb2xlSWR9YCk7XG4gICAgICBjb25zdCB7c2Vzc2lvbiwgcmVjaXBpZW50LCBzaWduZXJUb2tlbn0gPSBhd2FpdCBFbnZlbG9wZXMuZ2V0U2lnbmluZ1Nlc3Npb24odGhpcy5lbmRwb2ludCwge1xuICAgICAgICBlbnZlbG9wZUlkOiB0aGlzLmVudmVsb3BlSWQsXG4gICAgICAgIHJvbGVJZDogdGhpcy5yb2xlSWQsXG4gICAgICAgIGludml0ZUNvZGU6IHRoaXMuaW52aXRlQ29kZSxcbiAgICAgIH0pO1xuXG4gICAgICBjb25zb2xlLmxvZyhgW1NJR05dIExvYWRlZCBzaWduaW5nIHNlc3Npb24gJHtzZXNzaW9uLmVtYWlsfSAvICR7c2Vzc2lvbi5wcm9maWxlX2lkfWApO1xuXG4gICAgICB0aGlzLnJlY2lwaWVudCA9IHJlY2lwaWVudDtcbiAgICAgIHRoaXMuc2lnbmVyVG9rZW4gPSBzaWduZXJUb2tlbjtcbiAgICAgIHRoaXMuZW5kcG9pbnQuc2V0VG9rZW4oc2lnbmVyVG9rZW4pO1xuXG4gICAgICBpZiAodGhpcy5yZWNpcGllbnQuYWdyZWVkKSB7XG4gICAgICAgIHRoaXMubmV4dEJ1dHRvbkxhYmVsID0gJ05leHQnO1xuICAgICAgfVxuXG4gICAgICBhd2FpdCBnZXRFbnZlbG9wZUJ5SWQodGhpcy5lbmRwb2ludCwgdGhpcy5lbnZlbG9wZUlkKTtcbiAgICAgIC8vIGNvbnN0IGVudmVsb3BlID0gYXdhaXQgRW52ZWxvcGVzLmdldEVudmVsb3BlKHRoaXMuZW5kcG9pbnQsIHRoaXMuZW52ZWxvcGVJZCk7XG4gICAgICAvLyB0aGlzLmVudmVsb3BlID0gZW52ZWxvcGU7XG4gICAgICAvLyBjb25zb2xlLmxvZygnW1NJR05dIExvYWRlZCBlbnZlbG9wZScsIGVudmVsb3BlKTtcblxuICAgICAgdGhpcy5yZWNpcGllbnRJbmRleCA9IEVudmVsb3BlU3RvcmUuZW52ZWxvcGUucmVjaXBpZW50cy5maW5kSW5kZXgocmVjaXBpZW50ID0+IHJlY2lwaWVudC5yb2xlX25hbWUgPT0gdGhpcy5yb2xlSWQpO1xuICAgICAgaWYgKHRoaXMucmVjaXBpZW50SW5kZXggPiAtMSkge1xuICAgICAgICB0aGlzLnJlY2lwaWVudCA9IEVudmVsb3BlU3RvcmUuZW52ZWxvcGUucmVjaXBpZW50c1t0aGlzLnJlY2lwaWVudEluZGV4XTtcbiAgICAgICAgdGhpcy5maWVsZHMgPSB0aGlzLnJlY2lwaWVudC5maWVsZHM7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaXNEb25lID0gWydzdWJtaXR0ZWQnLCAnY2FuY2VsZWQnLCAnZGVjbGluZWQnXS5pbmNsdWRlcyh0aGlzLnJlY2lwaWVudC5zdGF0dXMpO1xuICAgICAgY29uc29sZS5sb2coJ0RvbmUnLCB0aGlzLmlzRG9uZSk7XG5cbiAgICAgIC8vIFRPRE86IEZpeCBzZXJ2aWNlIHRvIGFsbG93IHRoaXM/XG4gICAgICAvLyBjb25zdCBzaWdzID0gYXdhaXQgZ2V0U2lnbmF0dXJlcygpO1xuICAgICAgLy8gY29uc29sZS5sb2coJ3NpZ3MnLCBzaWdzKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmxvZygnRXJyb3Igd2l0aCBzaWduaW5nIHNlc3Npb24nLCBlKTtcbiAgICAgIHRoaXMuc2RrRXJyb3I/LmVtaXQobmV3IFNES0Vycm9yKGUubWVzc2FnZSwgZS5yZXNwb25zZT8uc3RhdHVzLCBlLnJlc3BvbnNlPy5kYXRhKSk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlQ2xpY2tBZ3JlZSgpIHtcbiAgICBlbnZlbG9wZVJlY2lwaWVudEFncmVlKHRoaXMuZW5kcG9pbnQsIHRoaXMuZW52ZWxvcGVJZCwgdGhpcy5yb2xlSWQsIHRydWUpXG4gICAgICAudGhlbihyID0+IHtcbiAgICAgICAgdGhpcy5uZXh0QnV0dG9uTGFiZWwgPSAnTmV4dCc7XG4gICAgICAgIHRoaXMucmVjaXBpZW50ID0gcjtcbiAgICAgICAgdGhpcy5lbnZlbG9wZVVwZGF0ZWQ/LmVtaXQoe2VuZHBvaW50OiB0aGlzLmVuZHBvaW50LCBlbnZlbG9wZTogRW52ZWxvcGVTdG9yZS5lbnZlbG9wZSwgZXZlbnQ6ICdhZ3JlZWQnfSk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGUgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnVXBkYXRlIGZhaWx1cmUnLCBlKTtcbiAgICAgICAgdGhpcy5zZGtFcnJvcj8uZW1pdChuZXcgU0RLRXJyb3IoZS5tZXNzYWdlLCBlLnJlc3BvbnNlPy5zdGF0dXMsIGUucmVzcG9uc2U/LmRhdGEpKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgc2F2ZVBERigpIHtcbiAgICBjb25zdCBmaWxlTmFtZSA9IGAke0VudmVsb3BlU3RvcmUuZW52ZWxvcGUubmFtZX0gLSAke0VudmVsb3BlU3RvcmUuZW52ZWxvcGUudXBkYXRlZF9hdC5zcGxpdCgnVCcpWzBdfS5wZGZgO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBFbnZlbG9wZXMuZ2V0RW52ZWxvcGVGaWxlKHRoaXMuZW5kcG9pbnQsIHRoaXMuZW52ZWxvcGVJZCwgRW52ZWxvcGVTdG9yZS5lbnZlbG9wZS5lbnZlbG9wZV9kb2N1bWVudF9pZCk7XG5cbiAgICAvLyBUaGlzIGlzIGJldHRlciBpbiBSZWFjdCB0aGFuIGRvaW5nIHdpbmRvdy5ocmVmPSBvciBzaW1pbGFyIHRvIHRyaWdnZXIgYSBkb3dubG9hZC4gRm9yIGEgZGVzY3JpcHRpb24gb2YgdGhlIHRlY2huaXF1ZVxuICAgIC8vIHNlZSBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy84MTI2NjIzL2Rvd25sb2FkaW5nLWNhbnZhcy1lbGVtZW50LXRvLWFuLWltYWdlXG4gICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgIHhoci5yZXNwb25zZVR5cGUgPSAnYmxvYic7XG4gICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGxldCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgYS5ocmVmID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoeGhyLnJlc3BvbnNlKTtcbiAgICAgIGEuZG93bmxvYWQgPSBmaWxlTmFtZTtcbiAgICAgIGEuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSk7XG4gICAgICBhLmNsaWNrKCk7XG4gICAgICBhLnJlbW92ZSgpO1xuICAgIH07XG5cbiAgICB4aHIub3BlbignR0VUJywgYGRhdGE6YXBwbGljYXRpb24vcGRmO2Jhc2U2NCwke2RhdGF9YCk7XG4gICAgeGhyLnNlbmQoKTtcbiAgfVxuXG4gIGFzeW5jIGhhbmRsZU9wdGlvblNlbGVjdGVkKGUpIHtcbiAgICBzd2l0Y2ggKGUuZGV0YWlsLmlkKSB7XG4gICAgICBjYXNlICdsYXRlcic6XG4gICAgICAgIHRoaXMuZmluaXNoTGF0ZXIgPSB0cnVlO1xuICAgICAgICB0aGlzLnNob3dGaW5pc2hMYXRlciA9IHRydWU7XG4gICAgICAgIC8vIHRoaXMucm91dGVyLm5hdmlnYXRlKFtgdmlldy9zaWduLyR7dGhpcy5lbnZlbG9wZUlkfS9yb2xlLyR7dGhpcy5yb2xlTmFtZX0vc2F2ZWRgXSk7XG4gICAgICAgIC8vIGlmICghd2luZG93Py5bJ1NUT1JZQk9PS19FTlYnXSkge1xuICAgICAgICAvLyAgIHdpbmRvdy5hbGVydCgnVXNlciBpbnRlbmRzIHRvIHNpZ24gbGF0ZXIuJyk7XG4gICAgICAgIC8vIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdjbGFpbSc6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnZGVjbGluZSc6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncHJpbnQnOlxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2Rvd25sb2FkJzpcbiAgICAgICAgdGhpcy5zYXZlUERGKCkuY2F0Y2goKCkgPT4ge30pO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBzYXZlRmllbGRDaGFuZ2UoZmllbGROYW1lOiBzdHJpbmcsIGZpZWxkczogUmVjb3JkPHN0cmluZywgYW55Pikge1xuICAgIEVudmVsb3Blcy51cGRhdGVFbnZlbG9wZUZpZWxkKHRoaXMuZW5kcG9pbnQsIHRoaXMuZW52ZWxvcGVJZCwgZmllbGROYW1lLCBmaWVsZHMpIC8vXG4gICAgICAuY2F0Y2goZSA9PiB7XG4gICAgICAgIGlmIChlLnJlc3BvbnNlPy5zdGF0dXMgPT09IDQwMSAmJiBlLnJlc3BvbnNlPy5kYXRhPy5lcnJvciA9PT0gJ2p3dCBleHBpcmVkJykge1xuICAgICAgICAgIC8vIFRPRE86IERvIHdlIHdhbnQgdG8gaW1wcm92ZSB0aGUgaW5zdHJ1Y3Rpb25zIGhlcmU/XG4gICAgICAgICAgY29uc29sZS5sb2coJ1tTSUdOXSBTaWduaW5nIHNlc3Npb24gZXhwaXJlZCcpO1xuICAgICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gJ1NpZ25pbmcgc2Vzc2lvbiBleHBpcmVkLic7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1tTSUdOXSBTZXJ2ZXIgZXJyb3InLCBlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2RrRXJyb3I/LmVtaXQobmV3IFNES0Vycm9yKGUubWVzc2FnZSwgZS5yZXNwb25zZT8uc3RhdHVzLCBlLnJlc3BvbnNlPy5kYXRhKSk7XG4gICAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGhhbmRsZUZpZWxkQ2hhbmdlKGZpZWxkOiBJRG9jdW1lbnRGaWVsZCwgZTogYW55KSB7XG4gICAgY29uc29sZS5sb2coJ2ZpZWxkQ2hhbmdlJywgZmllbGQsIGUsIGUudGFyZ2V0LnZhbHVlKTtcbiAgICBjb25zdCB7dmFsdWUsIGNoZWNrZWR9ID0gZS50YXJnZXQ7XG5cbiAgICBzd2l0Y2ggKGZpZWxkLnR5cGUpIHtcbiAgICAgIGNhc2UgJ3RleHRib3gnOlxuICAgICAgICByZXR1cm4gdGhpcy5zYXZlRmllbGRDaGFuZ2UoZmllbGQubmFtZSwge3ByZXBhcmVkOiBmYWxzZSwgdmFsdWV9KTtcblxuICAgICAgY2FzZSAnY2hlY2tib3hfZ3JvdXAnOiB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSBmaWVsZC5zZXR0aW5ncy5vcHRpb25zLm1hcChvcHRpb24gPT4gKHtpZDogb3B0aW9uLmlkLCBjaGVja2VkOiBlLnRhcmdldC5jaGVja2VkfSkpO1xuICAgICAgICByZXR1cm4gdGhpcy5zYXZlRmllbGRDaGFuZ2UoZmllbGQubmFtZSwge3ByZXBhcmVkOiBmYWxzZSwgdmFsdWU6IHtvcHRpb25zfX0pO1xuICAgICAgfVxuXG4gICAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOiB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSBmaWVsZC5zZXR0aW5ncy5vcHRpb25zLm1hcChvcHRpb24gPT4gKHtpZDogb3B0aW9uLmlkLCBzZWxlY3RlZDogZS50YXJnZXQudmFsdWUgPT09IG9wdGlvbi5pZH0pKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2F2ZUZpZWxkQ2hhbmdlKGZpZWxkLm5hbWUsIHtwcmVwYXJlZDogZmFsc2UsIHZhbHVlOiB7b3B0aW9uc319KTtcbiAgICAgIH1cblxuICAgICAgY2FzZSAnZHJvcGRvd24nOlxuICAgICAgICByZXR1cm4gdGhpcy5zYXZlRmllbGRDaGFuZ2UoZmllbGQubmFtZSwge3ByZXBhcmVkOiBmYWxzZSwgdmFsdWU6IGUuZGV0YWlsfSk7XG5cbiAgICAgIGNhc2UgJ2luaXRpYWwnOlxuICAgICAgICBjb25zdCBpbml0aWFsc0Jsb2IgPSBhd2FpdCAoYXdhaXQgZmV0Y2goZS5kZXRhaWwpKS5ibG9iKCk7XG4gICAgICAgIHJldHVybiBjcmVhdGVJbml0aWFscyh0aGlzLmVuZHBvaW50LCAnaW5pdGlhbCcsIGluaXRpYWxzQmxvYikgLy9cbiAgICAgICAgICAudGhlbihuZXdJbml0aWFscyA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTmV3IGluaXRpYWxzJywgZmllbGQubmFtZSwgbmV3SW5pdGlhbHMpO1xuICAgICAgICAgICAgdXBkYXRlRW52ZWxvcGVGaWVsZEluaXRpYWxzKHRoaXMuZW5kcG9pbnQsIHRoaXMuZW52ZWxvcGVJZCwgZmllbGQubmFtZSwgbmV3SW5pdGlhbHMuaWQpO1xuICAgICAgICAgIH0pO1xuXG4gICAgICBjYXNlICdzaWduYXR1cmUnOlxuICAgICAgICBjb25zdCBzaWduYXR1cmVCbG9iID0gYXdhaXQgKGF3YWl0IGZldGNoKGUuZGV0YWlsKSkuYmxvYigpO1xuICAgICAgICByZXR1cm4gY3JlYXRlU2lnbmF0dXJlKHRoaXMuZW5kcG9pbnQsICdzaWduYXR1cmUnLCBzaWduYXR1cmVCbG9iKSAvL1xuICAgICAgICAgIC50aGVuKG5ld1NpZ25hdHVyZSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTmV3IHNpZ24nLCBmaWVsZC5uYW1lLCBuZXdTaWduYXR1cmUpO1xuICAgICAgICAgICAgdXBkYXRlRW52ZWxvcGVGaWVsZFNpZ25hdHVyZSh0aGlzLmVuZHBvaW50LCB0aGlzLmVudmVsb3BlSWQsIGZpZWxkLm5hbWUsIG5ld1NpZ25hdHVyZS5pZCk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgIGNhc2UgJ2RhdGUnOlxuICAgICAgICBjb25zdCBpc28gPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2lzbycpO1xuICAgICAgICByZXR1cm4gdGhpcy5zYXZlRmllbGRDaGFuZ2UoZmllbGQubmFtZSwge3ByZXBhcmVkOiBmYWxzZSwgdmFsdWU6IGlzb30pO1xuXG4gICAgICBjYXNlICd0aW1lc3RhbXAnOlxuICAgICAgICBjb25zb2xlLmxvZygnVXBkYXRpbmcgdGltZXN0YW1wJywge3ZhbHVlLCB0czogZS50YXJnZXQuZ2V0QXR0cmlidXRlKCd0aW1lc3RhbXAnKX0pO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgY29uc29sZS5sb2coJ1VuaGFuZGxlZCBmaWVsZCB1cGRhdGUnLCB7dmFsdWUsIGNoZWNrZWR9LCBmaWVsZCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGlzRmllbGRWYWxpZChmaWVsZDogSURvY3VtZW50RmllbGQpIHtcbiAgICBjb25zdCB7cmVxdWlyZWQgPSBmYWxzZX0gPSBmaWVsZDtcbiAgICBjb25zdCB7cmVzdWx0ID0gJycsIHZhbHVlID0gJycsIGJhc2U2NCA9ICcnfSA9IGZpZWxkLnNldHRpbmdzIHx8IHt9O1xuICAgIHN3aXRjaCAoZmllbGQudHlwZSkge1xuICAgICAgY2FzZSAndGV4dGJveCc6XG4gICAgICAgIHN3aXRjaCAoZmllbGQuc2V0dGluZ3M/LnZhbGlkYXRvciB8fCAnJykge1xuICAgICAgICAgIGNhc2UgJ2VtYWlsJzpcbiAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkRW1haWwocmVzdWx0KTtcbiAgICAgICAgICBjYXNlICdwaG9uZSc6XG4gICAgICAgICAgICByZXR1cm4gaXNWYWxpZFBob25lKHJlc3VsdCk7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiAhcmVxdWlyZWQgfHwgcmVzdWx0ICE9PSAnJztcbiAgICAgICAgfVxuXG4gICAgICBjYXNlICdzaWduYXR1cmUnOlxuICAgICAgY2FzZSAnaW5pdGlhbCc6XG4gICAgICAgIHJldHVybiAhcmVxdWlyZWQgfHwgYmFzZTY0ICE9PSAnJztcblxuICAgICAgLy8gVGltZXN0YW1wIGZpZWxkcyBnZXQgYXV0b21hdGljYWxseSBmaWxsZWQgd2hlbiB0aGUgZW52ZWxvcGUgaXMgc3VibWl0dGVkLlxuICAgICAgY2FzZSAndGltZXN0YW1wJzpcbiAgICAgICAgcmV0dXJuIHRydWU7XG5cbiAgICAgIGNhc2UgJ3RleHRhcmVhJzpcbiAgICAgIGNhc2UgJ2RhdGUnOlxuICAgICAgY2FzZSAnYXR0YWNobWVudCc6XG4gICAgICAgIHJldHVybiAhcmVxdWlyZWQgfHwgcmVzdWx0ICE9PSAnJztcblxuICAgICAgY2FzZSAnZHJvcGRvd24nOlxuICAgICAgICByZXR1cm4gIXJlcXVpcmVkIHx8IHZhbHVlICE9PSAnJztcblxuICAgICAgY2FzZSAnY2hlY2tib3hfZ3JvdXAnOlxuICAgICAgICBjb25zdCBjaGVja2VkQ291bnQgPSAoZmllbGQuc2V0dGluZ3M/Lm9wdGlvbnM/LmZpbHRlcihvcHRpb24gPT4gb3B0aW9uLmNoZWNrZWQpIHx8IFtdKS5sZW5ndGg7XG4gICAgICAgIHJldHVybiAhcmVxdWlyZWQgfHwgKGNoZWNrZWRDb3VudCA+PSAoZmllbGQuc2V0dGluZ3M/Lm1pbmltdW1fY2hlY2tlZCB8fCAwKSAmJiBjaGVja2VkQ291bnQgPD0gKGZpZWxkLnNldHRpbmdzPy5tYXhpbXVtX2NoZWNrZWQgfHwgOTk5KSk7XG5cbiAgICAgIGNhc2UgJ3JhZGlvX2J1dHRvbl9ncm91cCc6XG4gICAgICAgIHJldHVybiAhcmVxdWlyZWQgfHwgKGZpZWxkLnNldHRpbmdzPy5vcHRpb25zPy5maWx0ZXIob3B0aW9uID0+IG9wdGlvbi5zZWxlY3RlZCkgfHwgW10pLmxlbmd0aCA+IDA7XG4gICAgICAvLyBUT0RPXG4gICAgICAvLyBjYXNlICdjaGVja2JveCc6XG4gICAgICAvLyAgIHJldHVybiA8dmVyZG9jcy1maWVsZC1jaGVja2JveCBzdHlsZT17c3R5bGV9IHZhbHVlPXtyZXN1bHQgfHwgJyd9IGlkPXtpZH0gLz47XG4gICAgICAvLyBjYXNlICdwYXltZW50JzpcbiAgICAgIC8vICAgcmV0dXJuIDx2ZXJkb2NzLWZpZWxkLXBheW1lbnQgc3R5bGU9e3N0eWxlfSBmaWVsZD17ZmllbGR9IGlkPXtpZH0gLz47XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgaGFuZGxlTmV4dCgpIHtcbiAgICBpZiAodGhpcy5uZXh0U3VibWl0cykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc29sZS5sb2coJ1N1Ym1pdHRpbmcnKTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZW52ZWxvcGVSZWNpcGllbnRTdWJtaXQodGhpcy5lbmRwb2ludCwgdGhpcy5lbnZlbG9wZUlkLCB0aGlzLnJvbGVJZCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTdWJtaXR0ZWQnLCByZXN1bHQpO1xuICAgICAgICB0aGlzLnNob3dEb25lID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5pc0RvbmUgPSB0cnVlO1xuICAgICAgICAvLyB1cGRhdGVSZWNpcGllbnRTdGF0dXMoKVxuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnRXJyb3Igc3VibWl0dGluZycsIGUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgICAgLy8gWW91J3JlIGRvbmUuXG4gICAgICAvLyBZb3UgY2FuIGFjY2VzcyB0aGUgVmVyZG9jIGF0IGFueSB0aW1lIGJ5IGNsaWNraW5nIG9uIHRoZSBsaW5rIGZyb20gaW52aXRhdGlvbiBlbWFpbC5cbiAgICAgIC8vXG4gICAgICAvLyBBZnRlciBhbGwgcmVjaXBpZW50cyBoYXZlIGNvbXBsZXRlZCB0aGVpciBhY3Rpb25zLCB5b3Ugd2lsbCByZWNlaXZlIGFuIGVtYWlsIHdpdGggdGhlIGRvY3VtZW50IGFuZCBlbnZlbG9wZSBjZXJ0aWZpY2F0ZSBhdHRhY2hlZC5cbiAgICAgIC8vXG4gICAgICAvLyBUaGFuayB5b3UgZm9yIHVzaW5nIFZlcmRvY3MuXG4gICAgICAvLyBHb3QgaXQsIHRoYW5rc1xuICAgIH1cblxuICAgIC8vIEZpbmQgYW5kIGZvY3VzIHRoZSBuZXh0IGluY29tcGxldGUgcmVxdWlyZWQgZmllbGRcbiAgICBjb25zdCByZXF1aXJlZEZpZWxkcyA9IHRoaXMuZmllbGRzLmZpbHRlcihmaWVsZCA9PiBmaWVsZC5yZXF1aXJlZCk7XG4gICAgY29uc3QgZm9jdXNlZEluZGV4ID0gcmVxdWlyZWRGaWVsZHMuZmluZEluZGV4KGZpZWxkID0+IGZpZWxkLm5hbWUgPT09IHRoaXMuZm9jdXNlZEZpZWxkKTtcblxuICAgIGxldCBuZXh0Rm9jdXNlZEluZGV4ID0gZm9jdXNlZEluZGV4ICsgMTtcbiAgICBpZiAobmV4dEZvY3VzZWRJbmRleCA+PSByZXF1aXJlZEZpZWxkcy5sZW5ndGgpIHtcbiAgICAgIG5leHRGb2N1c2VkSW5kZXggPSAwO1xuICAgIH1cblxuICAgIGxldCBuZXh0UmVxdWlyZWRGaWVsZCA9IHJlcXVpcmVkRmllbGRzW25leHRGb2N1c2VkSW5kZXhdO1xuXG4gICAgLy8gU2tpcCBzaWduYXR1cmUgYW5kIGluaXRpYWwgZmllbGRzIHRoYXQgYXJlIGFscmVhZHkgZmlsbGVkIGluLiBXZSBoYXZlIHRvIGNvdW50IG91ciBcInNraXBzXCIganVzdCBpbiBjYXNlLCB0byBhdm9pZCBpbmZpbml0ZSBsb29wcy5cbiAgICBsZXQgc2tpcHMgPSAwO1xuICAgIGlmIChza2lwcyA8IHJlcXVpcmVkRmllbGRzLmxlbmd0aCAmJiBbJ3NpZ25hdHVyZScsICdpbml0aWFsJ10uaW5jbHVkZXMobmV4dFJlcXVpcmVkRmllbGQudHlwZSkgJiYgbmV4dFJlcXVpcmVkRmllbGQuc2V0dGluZ3M/LnJlc3VsdCA9PT0gJ3NpZ25lZCcpIHtcbiAgICAgIHNraXBzKys7XG4gICAgICBuZXh0Rm9jdXNlZEluZGV4Kys7XG4gICAgICBpZiAobmV4dEZvY3VzZWRJbmRleCA+PSByZXF1aXJlZEZpZWxkcy5sZW5ndGgpIHtcbiAgICAgICAgbmV4dEZvY3VzZWRJbmRleCA9IDA7XG4gICAgICB9XG4gICAgICBuZXh0UmVxdWlyZWRGaWVsZCA9IHJlcXVpcmVkRmllbGRzW25leHRGb2N1c2VkSW5kZXhdO1xuICAgIH1cblxuICAgIGlmIChza2lwcyA+PSByZXF1aXJlZEZpZWxkcy5sZW5ndGgpIHtcbiAgICAgIG5leHRSZXF1aXJlZEZpZWxkID0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAobmV4dFJlcXVpcmVkRmllbGQpIHtcbiAgICAgIGNvbnN0IGlkID0gZ2V0RmllbGRJZChuZXh0UmVxdWlyZWRGaWVsZCk7XG4gICAgICBjb25zdCBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKSBhcyBhbnk7XG4gICAgICBlbD8uZm9jdXNGaWVsZCgpO1xuICAgICAgdGhpcy5mb2N1c2VkRmllbGQgPSBuZXh0UmVxdWlyZWRGaWVsZC5uYW1lO1xuICAgIH1cbiAgfVxuXG4gIC8vIFNlZSBpZiBldmVyeXRoaW5nIHRoYXQgXCJuZWVkcyB0byBiZVwiIGZpbGxlZCBpbiBpcywgYW5kIGFsbCBcImZpbGxhYmxlIGZpZWxkc1wiIGFyZSB2YWxpZFxuICBjaGVja1JlY2lwaWVudEZpZWxkcygpIHtcbiAgICBjb25zdCBzb21lRmllbGRzSW52YWxpZCA9IHRoaXMucmVjaXBpZW50LmZpZWxkcy5tYXAoZmllbGQgPT4gdGhpcy5pc0ZpZWxkVmFsaWQoZmllbGQpKS5zb21lKGZpZWxkVmFsaWQgPT4gIWZpZWxkVmFsaWQpO1xuICAgIGNvbnNvbGUubG9nKHtzb21lRmllbGRzSW52YWxpZH0pO1xuICAgIGlmICghc29tZUZpZWxkc0ludmFsaWQpIHtcbiAgICAgIHRoaXMubmV4dEJ1dHRvbkxhYmVsID0gJ0ZpbmlzaCc7XG4gICAgICB0aGlzLm5leHRTdWJtaXRzID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5uZXh0U3VibWl0cyA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGF0dGFjaEZpZWxkQXR0cmlidXRlcyhwYWdlSW5mbywgZmllbGQsIHJvbGVJbmRleCwgZWwpIHtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGUgPT4gdGhpcy5oYW5kbGVGaWVsZENoYW5nZShmaWVsZCwgZSkuZmluYWxseSgoKSA9PiB0aGlzLmNoZWNrUmVjaXBpZW50RmllbGRzKCkpKTtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdmaWVsZENoYW5nZScsIGUgPT4gdGhpcy5oYW5kbGVGaWVsZENoYW5nZShmaWVsZCwgZSkuZmluYWxseSgoKSA9PiB0aGlzLmNoZWNrUmVjaXBpZW50RmllbGRzKCkpKTtcblxuICAgIGVsLnNldEF0dHJpYnV0ZSgncm9sZWluZGV4Jywgcm9sZUluZGV4KTtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoJ3hTY2FsZScsIHBhZ2VJbmZvLnhTY2FsZSk7XG4gICAgZWwuc2V0QXR0cmlidXRlKCd5U2NhbGUnLCBwYWdlSW5mby55U2NhbGUpO1xuICAgIGVsLnNldEF0dHJpYnV0ZSgnaW5pdGlhbHMnLCB0aGlzLnJlY2lwaWVudCA/IGZ1bGxOYW1lVG9Jbml0aWFscyh0aGlzLnJlY2lwaWVudC5mdWxsX25hbWUpIDogJycpO1xuICAgIGVsLnNldEF0dHJpYnV0ZSgnbmFtZScsIHRoaXMucmVjaXBpZW50Py5mdWxsX25hbWUgfHwgJycpO1xuICB9XG5cbiAgaGFuZGxlUGFnZVJlbmRlcmVkKGUpIHtcbiAgICBjb25zdCBwYWdlSW5mbyA9IGUuZGV0YWlsIGFzIElEb2N1bWVudFBhZ2VJbmZvO1xuICAgIGNvbnN0IHJvbGVJbmRleCA9IGdldFJvbGVJbmRleChFbnZlbG9wZVN0b3JlLnJvbGVOYW1lcywgdGhpcy5yZWNpcGllbnQucm9sZV9uYW1lKTtcbiAgICBjb25zdCByZWNpcGllbnRGaWVsZHMgPSB0aGlzLnJlY2lwaWVudC5maWVsZHMuZmlsdGVyKGZpZWxkID0+IGZpZWxkLnBhZ2UgPT09IHBhZ2VJbmZvLnBhZ2VOdW1iZXIpO1xuICAgIGNvbnNvbGUubG9nKCdbU0lHTl0gUGFnZSByZW5kZXJlZCwgYWRkaW5nIGZpZWxkcycsIHtwYWdlSW5mbywgcm9sZUluZGV4LCByZWNpcGllbnRGaWVsZHN9KTtcblxuICAgIHJlY2lwaWVudEZpZWxkcy5mb3JFYWNoKGZpZWxkID0+IHtcbiAgICAgIGNvbnN0IGVsID0gcmVuZGVyRG9jdW1lbnRGaWVsZChmaWVsZCwgcGFnZUluZm8sIHJvbGVJbmRleCwge2Rpc2FibGVkOiBmYWxzZSwgZWRpdGFibGU6IGZhbHNlLCBkcmFnZ2FibGU6IGZhbHNlLCBkb25lOiB0aGlzLmlzRG9uZX0pO1xuICAgICAgaWYgKCFlbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGVsKSkge1xuICAgICAgICBlbC5tYXAoZSA9PiB0aGlzLmF0dGFjaEZpZWxkQXR0cmlidXRlcyhwYWdlSW5mbywgZmllbGQsIHJvbGVJbmRleCwgZSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5hdHRhY2hGaWVsZEF0dHJpYnV0ZXMocGFnZUluZm8sIGZpZWxkLCByb2xlSW5kZXgsIGVsKTtcbiAgICAgIH1cblxuICAgICAgLy8gaW50ZXJhY3QoZWwpLmRyYWdnYWJsZSh7XG4gICAgICAvLyAgIGxpc3RlbmVyczoge1xuICAgICAgLy8gICAgIHN0YXJ0KGV2ZW50KSB7XG4gICAgICAvLyAgICAgICBjb25zb2xlLmxvZygnW0ZJRUxEU10gRHJhZyBzdGFydGVkJywgZXZlbnQudHlwZSwgZXZlbnQudGFyZ2V0KTtcbiAgICAgIC8vICAgICB9LFxuICAgICAgLy8gICAgIG1vdmUoZXZlbnQpIHtcbiAgICAgIC8vICAgICAgIGNvbnN0IG9sZFggPSArKGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3Bvc1gnKSB8fCAwKTtcbiAgICAgIC8vICAgICAgIGNvbnN0IG9sZFkgPSArKGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3Bvc1knKSB8fCAwKTtcbiAgICAgIC8vICAgICAgIGNvbnN0IHhTY2FsZSA9ICsoZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZSgneFNjYWxlJykgfHwgMSk7XG4gICAgICAvLyAgICAgICBjb25zdCB5U2NhbGUgPSArKGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3lTY2FsZScpIHx8IDEpO1xuICAgICAgLy8gICAgICAgY29uc3QgbmV3WCA9IGV2ZW50LmR4IC8geFNjYWxlICsgb2xkWDtcbiAgICAgIC8vICAgICAgIGNvbnN0IG5ld1kgPSBldmVudC5keSAvIHlTY2FsZSArIG9sZFk7XG4gICAgICAvLyAgICAgICBldmVudC50YXJnZXQuc2V0QXR0cmlidXRlKCdwb3NYJywgbmV3WCk7XG4gICAgICAvLyAgICAgICBldmVudC50YXJnZXQuc2V0QXR0cmlidXRlKCdwb3N5JywgbmV3WSk7XG4gICAgICAvLyAgICAgICB1cGRhdGVDc3NUcmFuc2Zvcm0oZXZlbnQudGFyZ2V0LCAndHJhbnNsYXRlJywgYCR7bmV3WH1weCwgJHtuZXdZfXB4YCk7XG4gICAgICAvLyAgICAgfSxcbiAgICAgIC8vICAgICBlbmQoZXZlbnQpIHtcbiAgICAgIC8vICAgICAgIGNvbnNvbGUubG9nKCdbRklFTERTXSBEcmFnIGVuZGVkJywgZXZlbnQpO1xuICAgICAgLy8gICAgICAgLy8gZXZlbnQudGFyZ2V0LnNldEF0dHJpYnV0ZSgncG9zWCcsIDApO1xuICAgICAgLy8gICAgICAgLy8gZXZlbnQudGFyZ2V0LnNldEF0dHJpYnV0ZSgncG9zeScsIDApO1xuICAgICAgLy8gICAgICAgLy8gdXBkYXRlQ3NzVHJhbnNmb3JtKGV2ZW50LnRhcmdldCwgJ3RyYW5zbGF0ZScsIGAkezB9cHgsICR7MH1weGApO1xuICAgICAgLy8gICAgIH0sXG4gICAgICAvLyAgIH0sXG4gICAgICAvLyB9KTtcbiAgICB9KTtcblxuICAgIC8vIFJlbmRlciBmaWVsZHMgZm9yIFwidGhlIG90aGVyXCIgcmVjaXBpZW50c1xuICAgIEVudmVsb3BlU3RvcmUuZW52ZWxvcGUucmVjaXBpZW50c1xuICAgICAgLmZpbHRlcihyZWNpcGllbnQgPT4gcmVjaXBpZW50LnJvbGVfbmFtZSAhPT0gdGhpcy5yZWNpcGllbnQucm9sZV9uYW1lKVxuICAgICAgLm1hcChvdGhlclJlY2lwaWVudCA9PiB7XG4gICAgICAgIGNvbnN0IG90aGVyUm9sZUluZGV4ID0gZ2V0Um9sZUluZGV4KEVudmVsb3BlU3RvcmUucm9sZU5hbWVzLCBvdGhlclJlY2lwaWVudC5yb2xlX25hbWUpO1xuICAgICAgICBjb25zdCByZWNpcGllbnRGaWVsZHMgPSBvdGhlclJlY2lwaWVudC5maWVsZHMuZmlsdGVyKGZpZWxkID0+IGZpZWxkLnBhZ2UgPT09IHBhZ2VJbmZvLnBhZ2VOdW1iZXIpO1xuICAgICAgICAvLyBjb25zdCBmaWVsZHMgPSB0aGlzLmZpZWxkcy5maWx0ZXIoZmllbGQgPT4gZmllbGQucGFnZV9zZXF1ZW5jZSA9PT0gcGFnZUluZm8ucmVuZGVyZWRQYWdlLnBhZ2VOdW1iZXIpO1xuICAgICAgICByZWNpcGllbnRGaWVsZHMuZm9yRWFjaChmaWVsZCA9PiB7XG4gICAgICAgICAgY29uc3QgZWwgPSByZW5kZXJEb2N1bWVudEZpZWxkKGZpZWxkLCBwYWdlSW5mbywgb3RoZXJSb2xlSW5kZXgsIHtkaXNhYmxlZDogdHJ1ZSwgZWRpdGFibGU6IGZhbHNlLCBkcmFnZ2FibGU6IGZhbHNlLCBkb25lOiB0aGlzLmlzRG9uZX0pO1xuICAgICAgICAgIGlmICghZWwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoJ3JvbGVpbmRleCcsIG90aGVyUm9sZUluZGV4KTtcbiAgICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoJ3hTY2FsZScsIHBhZ2VJbmZvLnhTY2FsZSk7XG4gICAgICAgICAgZWwuc2V0QXR0cmlidXRlKCd5U2NhbGUnLCBwYWdlSW5mby55U2NhbGUpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgdGhpcy5jaGVja1JlY2lwaWVudEZpZWxkcygpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGlmIChFbnZlbG9wZVN0b3JlLmxvYWRpbmcgfHwgIUVudmVsb3BlU3RvcmUuZW52ZWxvcGUpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxIb3N0PlxuICAgICAgICAgIDx2ZXJkb2NzLWxvYWRlciAvPlxuICAgICAgICA8L0hvc3Q+XG4gICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0IG1lbnVPcHRpb25zID0gW1xuICAgICAge2lkOiAnbGF0ZXInLCBsYWJlbDogJ0ZpbmlzaCBMYXRlcid9LCAvL1xuICAgICAge2lkOiAnY2xhaW0nLCBsYWJlbDogJ0NsYWltIHRoZSBEb2N1bWVudCcsIGRpc2FibGVkOiB0cnVlfSxcbiAgICAgIHtpZDogJ2RlY2xpbmUnLCBsYWJlbDogJ0RlY2xpbmUgdG8gU2lnbid9LFxuICAgICAge2lkOiAncHJpbnQnLCBsYWJlbDogJ1ByaW50IFdpdGhvdXQgU2lnbmluZycsIGRpc2FibGVkOiB0cnVlfSxcbiAgICAgIHtpZDogJ2Rvd25sb2FkJywgbGFiZWw6ICdEb3dubG9hZCd9LFxuICAgIF07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPEhvc3QgY2xhc3M9e3thZ3JlZWQ6IHRoaXMucmVjaXBpZW50Py5hZ3JlZWR9fT5cbiAgICAgICAgeyF0aGlzLmZpbmlzaExhdGVyICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW50cm9cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbm5lclwiPlBsZWFzZSByZXZpZXcgYW5kIGFjdCBvbiB0aGVzZSBkb2N1bWVudHMuPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbm5lclwiPlxuICAgICAgICAgICAgeyF0aGlzLmlzRG9uZSAmJiAhdGhpcy5maW5pc2hMYXRlciAmJiAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0b29sYmFyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRvb2xzXCI+XG4gICAgICAgICAgICAgICAgICA8dmVyZG9jcy1kcm9wZG93biBvcHRpb25zPXttZW51T3B0aW9uc30gb25PcHRpb25TZWxlY3RlZD17ZSA9PiB0aGlzLmhhbmRsZU9wdGlvblNlbGVjdGVkKGUpfSAvPlxuXG4gICAgICAgICAgICAgICAgICB7IXRoaXMucmVjaXBpZW50Py5hZ3JlZWQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhZ3JlZVwiPlxuICAgICAgICAgICAgICAgICAgICAgIDx2ZXJkb2NzLWNoZWNrYm94IG5hbWU9XCJhZ3JlZVwiIGxhYmVsPVwiSSBhZ3JlZSB0byB1c2UgZWxlY3Ryb25pYyByZWNvcmRzIGFuZCBzaWduYXR1cmVzLlwiIG9uSW5wdXQ9eygpID0+IHRoaXMuaGFuZGxlQ2xpY2tBZ3JlZSgpfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tmbGV4OiAnMSd9fSAvPlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIDx2ZXJkb2NzLWJ1dHRvbiBzaXplPVwic21hbGxcIiBsYWJlbD17dGhpcy5uZXh0QnV0dG9uTGFiZWx9IGRpc2FibGVkPXshdGhpcy5yZWNpcGllbnQ/LmFncmVlZH0gb25DbGljaz17KCkgPT4gdGhpcy5oYW5kbGVOZXh0KCl9IC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgeyF0aGlzLmlzRG9uZSAmJiAhdGhpcy5yZWNpcGllbnQ/LmFncmVlZCA/IDxkaXYgY2xhc3M9XCJjb3ZlclwiIC8+IDogPGRpdiBzdHlsZT17e2Rpc3BsYXk6ICdub25lJ319IC8+fVxuXG4gICAgICAgIDxkaXYgY2xhc3M9XCJkb2N1bWVudFwiPlxuICAgICAgICAgIHsoRW52ZWxvcGVTdG9yZS5lbnZlbG9wZS5kb2N1bWVudHMgfHwgW10pLm1hcChlbnZlbG9wZURvY3VtZW50ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHBhZ2VzID0gWy4uLihlbnZlbG9wZURvY3VtZW50Py5wYWdlcyB8fCBbXSldO1xuICAgICAgICAgICAgcGFnZXMuc29ydCgoYSwgYikgPT4gYS5zZXF1ZW5jZSAtIGIuc2VxdWVuY2UpO1xuXG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICA8RnJhZ21lbnQ+XG4gICAgICAgICAgICAgICAge3BhZ2VzLm1hcChwYWdlID0+IChcbiAgICAgICAgICAgICAgICAgIDx2ZXJkb2NzLWRvY3VtZW50LXBhZ2VcbiAgICAgICAgICAgICAgICAgICAgcGFnZUltYWdlVXJpPXtwYWdlLmRpc3BsYXlfdXJpfVxuICAgICAgICAgICAgICAgICAgICB2aXJ0dWFsV2lkdGg9ezYxMn1cbiAgICAgICAgICAgICAgICAgICAgdmlydHVhbEhlaWdodD17NzkyfVxuICAgICAgICAgICAgICAgICAgICBwYWdlTnVtYmVyPXtwYWdlLnNlcXVlbmNlfVxuICAgICAgICAgICAgICAgICAgICBvblBhZ2VSZW5kZXJlZD17ZSA9PiB0aGlzLmhhbmRsZVBhZ2VSZW5kZXJlZChlKX1cbiAgICAgICAgICAgICAgICAgICAgbGF5ZXJzPXtbXG4gICAgICAgICAgICAgICAgICAgICAge25hbWU6ICdwYWdlJywgdHlwZTogJ2NhbnZhcyd9LFxuICAgICAgICAgICAgICAgICAgICAgIHtuYW1lOiAnY29udHJvbHMnLCB0eXBlOiAnZGl2J30sXG4gICAgICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8L0ZyYWdtZW50PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAge3RoaXMuc2hvd0ZpbmlzaExhdGVyICYmIChcbiAgICAgICAgICA8dmVyZG9jcy1vay1kaWFsb2dcbiAgICAgICAgICAgIGhlYWRpbmc9XCJZb3UndmUgc2F2ZWQgeW91ciBkb2N1bWVudCB0byBmaW5pc2ggbGF0ZXIuXCJcbiAgICAgICAgICAgIG1lc3NhZ2U9XCJUbyBjb21wbGV0ZSB0aGUgZG9jdW1lbnQsIHVzZSB0aGUgbGluayBpbiB0aGUgb3JpZ2luYWwgZW1haWwgbm90aWZpY2F0aW9uIGludml0aW5nIHlvdSB0byByZXZpZXcgYW5kIGZpbmlzaCB0aGUgZG9jdW1lbnQuXCJcbiAgICAgICAgICAgIG9uTmV4dD17KCkgPT4gKHRoaXMuc2hvd0ZpbmlzaExhdGVyID0gZmFsc2UpfVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG5cbiAgICAgICAge3RoaXMuZXJyb3JNZXNzYWdlICYmIDx2ZXJkb2NzLW9rLWRpYWxvZyBoZWFkaW5nPVwiTmV0d29yayBFcnJvclwiIG1lc3NhZ2U9e3RoaXMuZXJyb3JNZXNzYWdlfSBvbk5leHQ9eygpID0+ICh0aGlzLmVycm9yTWVzc2FnZSA9ICcnKX0gLz59XG4gICAgICAgIHt0aGlzLnNob3dEb25lICYmIChcbiAgICAgICAgICA8dmVyZG9jcy1vay1kaWFsb2dcbiAgICAgICAgICAgIGhlYWRpbmc9XCJZb3UncmUgRG9uZVwiXG4gICAgICAgICAgICBtZXNzYWdlPVwiWW91IGNhbiBhY2Nlc3MgdGhlIFZlcmRvYyBhdCBhbnkgdGltZSBieSBjbGlja2luZyBvbiB0aGUgbGluayBmcm9tIGludml0YXRpb24gZW1haWwuXFxuXFxuQWZ0ZXIgYWxsIHJlY2lwaWVudHMgaGF2ZSBjb21wbGV0ZWQgdGhlaXIgYWN0aW9ucywgeW91IHdpbGwgcmVjZWl2ZSBhbiBlbWFpbCB3aXRoIHRoZSBkb2N1bWVudCBhbmQgZW52ZWxvcGUgY2VydGlmaWNhdGUgYXR0YWNoZWQuXFxuXFxuVGhhbmsgeW91IGZvciB1c2luZyBWZXJkb2NzLlwiXG4gICAgICAgICAgICBvbk5leHQ9eygpID0+ICh0aGlzLmVycm9yTWVzc2FnZSA9ICcnKX1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgPC9Ib3N0PlxuICAgICk7XG4gIH1cbn1cbiIsIkBpbXBvcnQgJy4uLy4uLy4uL3RoZW1lLnNjc3MnO1xuXG52ZXJkb2NzLXNpZ24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1pbi1oZWlnaHQ6IDYwMHB4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LWZhbWlseTogJHZlcmRvY3MtcHJpbWFyeS1mb250O1xuXG4gIGRpdiB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgfVxuXG4gIC5oZWFkZXIge1xuICAgIGZsZXg6IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB6LWluZGV4OiAxMDAwO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMjVzO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRtZWRpdW0tYmc7XG4gICAgYm94LXNoYWRvdzogMCA0cHggNHB4IDAgcmdiKDAgMCAwIC8gMjQlKSwgMCAwIDRweCAwIHJnYigwIDAgMCAvIDEyJSk7XG5cbiAgICAuaW5uZXIge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDEwMjhweDtcbiAgICB9XG4gIH1cblxuICAuaW50cm8ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNjBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgLmlubmVyIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgY29sb3I6ICMxMTExMTE7XG4gICAgICBwYWRkaW5nOiAwIDE0cHg7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgICBtYXgtd2lkdGg6IDEwMjRweDtcbiAgICB9XG4gIH1cblxuICAmLmFncmVlZCB7XG4gICAgLmludHJvIHtcbiAgICAgIC8vZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAudG9vbGJhciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMCAxNHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gIC50b29scyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgaGVpZ2h0OiA1NnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWVkaXVtLWJnO1xuICB9XG5cbiAgLmNvdmVyIHtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgei1pbmRleDogOTk5O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIH1cblxuICAuZG9jdW1lbnQge1xuICAgIGZsZXg6IDE7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZzogMTVweDtcbiAgICByb3ctZ2FwOiAxNXB4O1xuICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAuaW5uZXIge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDEwMjhweDtcbiAgICB9XG4gIH1cblxuICAuYWdyZWUge1xuICAgIGZsZXg6IDE7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMCAxNXB4O1xuXG4gICAgLmludHJvIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgLmhlYWRlciB7XG4gICAgICBmbGV4OiAwIDAgNTZweDtcbiAgICB9XG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIElTX1BVUkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtcHVyZScpO1xudmFyIE5hdGl2ZVByb21pc2VDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wcm9taXNlLW5hdGl2ZS1jb25zdHJ1Y3RvcicpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2V0QnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtYnVpbHQtaW4nKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wcm9taXNlLXJlc29sdmUnKTtcbnZhciBkZWZpbmVCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1idWlsdC1pbicpO1xuXG52YXIgTmF0aXZlUHJvbWlzZVByb3RvdHlwZSA9IE5hdGl2ZVByb21pc2VDb25zdHJ1Y3RvciAmJiBOYXRpdmVQcm9taXNlQ29uc3RydWN0b3IucHJvdG90eXBlO1xuXG4vLyBTYWZhcmkgYnVnIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0yMDA4MjlcbnZhciBOT05fR0VORVJJQyA9ICEhTmF0aXZlUHJvbWlzZUNvbnN0cnVjdG9yICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vbm8tdGhlbmFibGUgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbiAgTmF0aXZlUHJvbWlzZVByb3RvdHlwZVsnZmluYWxseSddLmNhbGwoeyB0aGVuOiBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0gfSwgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbn0pO1xuXG4vLyBgUHJvbWlzZS5wcm90b3R5cGUuZmluYWxseWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXByb21pc2UucHJvdG90eXBlLmZpbmFsbHlcbiQoeyB0YXJnZXQ6ICdQcm9taXNlJywgcHJvdG86IHRydWUsIHJlYWw6IHRydWUsIGZvcmNlZDogTk9OX0dFTkVSSUMgfSwge1xuICAnZmluYWxseSc6IGZ1bmN0aW9uIChvbkZpbmFsbHkpIHtcbiAgICB2YXIgQyA9IHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCBnZXRCdWlsdEluKCdQcm9taXNlJykpO1xuICAgIHZhciBpc0Z1bmN0aW9uID0gaXNDYWxsYWJsZShvbkZpbmFsbHkpO1xuICAgIHJldHVybiB0aGlzLnRoZW4oXG4gICAgICBpc0Z1bmN0aW9uID8gZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKEMsIG9uRmluYWxseSgpKS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHg7IH0pO1xuICAgICAgfSA6IG9uRmluYWxseSxcbiAgICAgIGlzRnVuY3Rpb24gPyBmdW5jdGlvbiAoZSkge1xuICAgICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyB0aHJvdyBlOyB9KTtcbiAgICAgIH0gOiBvbkZpbmFsbHlcbiAgICApO1xuICB9XG59KTtcblxuLy8gbWFrZXMgc3VyZSB0aGF0IG5hdGl2ZSBwcm9taXNlLWJhc2VkIEFQSXMgYFByb21pc2UjZmluYWxseWAgcHJvcGVybHkgd29ya3Mgd2l0aCBwYXRjaGVkIGBQcm9taXNlI3RoZW5gXG5pZiAoIUlTX1BVUkUgJiYgaXNDYWxsYWJsZShOYXRpdmVQcm9taXNlQ29uc3RydWN0b3IpKSB7XG4gIHZhciBtZXRob2QgPSBnZXRCdWlsdEluKCdQcm9taXNlJykucHJvdG90eXBlWydmaW5hbGx5J107XG4gIGlmIChOYXRpdmVQcm9taXNlUHJvdG90eXBlWydmaW5hbGx5J10gIT09IG1ldGhvZCkge1xuICAgIGRlZmluZUJ1aWx0SW4oTmF0aXZlUHJvbWlzZVByb3RvdHlwZSwgJ2ZpbmFsbHknLCBtZXRob2QsIHsgdW5zYWZlOiB0cnVlIH0pO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9
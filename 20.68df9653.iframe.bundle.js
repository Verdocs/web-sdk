(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"./dist/esm/verdocs-auth.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_auth",(function(){return VerdocsAuth}));__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/esm/index-5d92e60f.js"),_VerdocsEndpoint_9353e4a0_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/esm/VerdocsEndpoint-9353e4a0.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var VerdocsAuth=function(){function VerdocsAuth(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsAuth),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.h)(this,hostRef),this.authenticated=Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.d)(this,"authenticated",7),this.endpoint=_VerdocsEndpoint_9353e4a0_js__WEBPACK_IMPORTED_MODULE_2__.a.getDefault(),this.visible=!0,this.logo="https://verdocs.com/assets/blue-logo.svg",this.debug=!1,this.isAuthenticated=!1,this.displayMode="login",this.username="",this.password="",this.loggingIn=!1,this.activeSession=null,this.loginError=null}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsAuth,[{key:"componentDidLoad",value:function componentDidLoad(){console.log("loaded",this),this.endpoint.loadSession(),this.endpoint.session?(this.isAuthenticated=!0,this.activeSession=this.endpoint.session,this.authenticated.emit({authenticated:!0,session:this.endpoint.session})):this.authenticated.emit({authenticated:!1,session:null})}},{key:"handleLogin",value:function handleLogin(){var _this=this;this.loggingIn=!0,function authenticateUser(endpoint,params){return endpoint.api.post("/authentication/login",params).then((function(r){return r.data}))}(this.endpoint,{username:this.username,password:this.password}).then((function(r){_this.loggingIn=!1,_this.endpoint.setToken(r.accessToken),_this.activeSession=_this.endpoint.session,_this.isAuthenticated=!0,_this.authenticated.emit({authenticated:!0,session:_this.endpoint.session})})).catch((function(e){var _a;console.log("[VERDOCS] Login error",e.response,JSON.stringify(e)),_this.loggingIn=!1,_this.activeSession=null,_this.authenticated.emit({authenticated:!1,session:null}),403===(null===(_a=null==e?void 0:e.response)||void 0===_a?void 0:_a.status)&&(_this.loginError="Please check your username and password and try again.")}))}},{key:"handleLogout",value:function handleLogout(){this.endpoint.clearSession(),this.isAuthenticated=!1,this.authenticated.emit({authenticated:!1,session:null})}},{key:"handleClearError",value:function handleClearError(){this.loginError=null}},{key:"render",value:function render(){var _this2=this;return this.visible?this.isAuthenticated?this.debug?Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"status-result debug"},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-button",{label:"Logout",disabled:this.loggingIn,onPress:function onPress(){return _this2.handleLogout()}})):Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"status-result"},"Authenticated"):"signup"===this.displayMode?Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"signup-form"},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("img",{src:this.logo,alt:"Verdocs Logo",class:"logo"}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("h3",null,"Sign up for an account"),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("h4",null,"Already have an account?",Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-button",{label:"Log In",variant:"text",onClick:function onClick(){return _this2.displayMode="login"},disabled:this.loggingIn})),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("form",{onSubmit:function onSubmit(){return _this2.handleLogin()}},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-text-input",{label:"Email",autocomplete:"username",value:this.username,onFieldInput:function onFieldInput(e){return _this2.username=e.detail},disabled:this.loggingIn}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-text-input",{label:"Password",type:"password",autocomplete:"current-password",value:this.password,onFieldInput:function onFieldInput(e){return _this2.password=e.detail},disabled:this.loggingIn}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-button",{label:"Signup",disabled:this.loggingIn,onPress:function onPress(){return _this2.handleLogin()},style:{display:"flex",justifyContent:"center",margin:"30px auto 0"}}))):Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{class:"login-form"},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("img",{src:this.logo,alt:"Verdocs Logo",class:"logo"}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("h3",null,"Log in to your account"),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("h4",null,"Don't have an account?",Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-button",{label:"Sign Up",variant:"text",onClick:function onClick(){return _this2.displayMode="signup"},disabled:this.loggingIn})),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("form",{onSubmit:function onSubmit(){return _this2.handleLogin()}},Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-text-input",{label:"Email",autocomplete:"username",value:this.username,onFieldInput:function onFieldInput(e){return _this2.username=e.detail},disabled:this.loggingIn}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-text-input",{label:"Password",type:"password",autocomplete:"current-password",value:this.password,onFieldInput:function onFieldInput(e){return _this2.password=e.detail},disabled:this.loggingIn}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-button",{label:"Forgot Your Password?",variant:"text",onClick:function onClick(){return _this2.displayMode="signup"},disabled:this.loggingIn,style:{display:"flex",justifyContent:"center",margin:"10px auto 20px"}}),Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-button",{label:"Login",disabled:this.loggingIn,onPress:function onPress(){return _this2.handleLogin()},style:{display:"flex",justifyContent:"center",margin:"10px auto 0"}})),this.loginError?Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("verdocs-ok-dialog",{open:!0,heading:"Login Error",message:this.loginError,onClosed:function onClosed(){return _this2.handleClearError()}}):Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",null)):Object(_index_5d92e60f_js__WEBPACK_IMPORTED_MODULE_1__.f)("div",{style:{display:"none"}},"Verdocs Auth Placeholder")}}]),VerdocsAuth}();VerdocsAuth.style='verdocs-auth{font-family:"Inter", -apple-system, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}verdocs-auth .login-form,verdocs-auth .signup-form{background:#ffffff;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;display:-ms-flexbox;display:flex;padding:20px;width:300px;max-width:100%}verdocs-auth .logo{margin:20px 0 30px;width:128px;max-width:100%}verdocs-auth h3{text-align:center;font-weight:400;font-size:16px;line-height:1.75;margin:0}verdocs-auth h4{text-align:center;font-weight:400;font-size:14px;line-height:1.43;margin:0}verdocs-auth .status-result{display:none}verdocs-auth .status-result.debug{white-space:pre-wrap;font-size:14px;background:#fff;padding:10px;display:block;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:center;justify-content:center}verdocs-auth form{width:100%}verdocs-auth verdocs-text-input{margin-bottom:10px}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
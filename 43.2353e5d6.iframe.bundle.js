(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{"./dist/esm/verdocs-toggle.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_toggle",(function(){return VerdocsToggle}));__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_af5f4964_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./dist/esm/index-af5f4964.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var VerdocsToggle=function(){function VerdocsToggle(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsToggle),Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_5__.h)(this,hostRef)}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsToggle,[{key:"handleClick",value:function handleClick(event){event.preventDefault();var container=event.target;if(container.matches("toggle-icon-buttons")){var element=(container=event.target.shadowRoot).activeElement;Array.from(element.parentElement.children).filter((function(child){return child!==element})).map((function(sibling){return sibling.classList.remove("selected")})),element.classList.contains("selected")||element.classList.add("selected")}}},{key:"render",value:function render(){var _this=this;return Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_5__.f)("div",{class:"container"},Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_5__.f)("span",{class:"label"},this.options.label+":"),Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_5__.f)("div",{class:"buttons"},this.options.buttons.map((function(button,index){return Object(_index_af5f4964_js__WEBPACK_IMPORTED_MODULE_5__.f)("button",{id:button.id,key:button.id,innerHTML:button.icon,class:index===_this.options.defaultSelection?"selected":""})}))))}}]),VerdocsToggle}();VerdocsToggle.style='verdocs-toggle{font-family:"Barlow", sans-serif}verdocs-toggle .container{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;background-color:#f5f5fa}verdocs-toggle .label{font-size:24px;font-weight:700;color:#33354c;-ms-flex-item-align:center;align-self:center;margin-right:27px;font-family:sans-serif}verdocs-toggle .buttons{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap}verdocs-toggle .buttons button{width:60px;height:60px;border:2px solid #654dcb;border-radius:5px;cursor:pointer}verdocs-toggle .buttons button:not(:last-child){margin-right:11px}verdocs-toggle .buttons svg{width:30px;height:30px}verdocs-toggle .buttons button:hover{background-color:#654dcb;-webkit-transition:0.25s;transition:0.25s}verdocs-toggle .buttons button:hover svg{fill:#f5f5fa;-webkit-transition:0.25s;transition:0.25s}verdocs-toggle .selected{background-color:#707ae5;-webkit-transition:0.25s;transition:0.25s}verdocs-toggle .selected svg{fill:#ffffff;-webkit-transition:0.25s;transition:0.25s}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy10b2dnbGUvdmVyZG9jcy10b2dnbGUuc2NzcyIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvY29udHJvbHMvdmVyZG9jcy10b2dnbGUvdmVyZG9jcy10b2dnbGUudHN4Il0sIm5hbWVzIjpbIlZlcmRvY3NUb2dnbGUiLCJoYW5kbGVDbGljayIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJjb250YWluZXIiLCJ0YXJnZXQiLCJtYXRjaGVzIiwiZWxlbWVudCIsInNoYWRvd1Jvb3QiLCJhY3RpdmVFbGVtZW50IiwiQXJyYXkiLCJmcm9tIiwicGFyZW50RWxlbWVudCIsImNoaWxkcmVuIiwiZmlsdGVyIiwiY2hpbGQiLCJtYXAiLCJzaWJsaW5nIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiY29udGFpbnMiLCJhZGQiLCJyZW5kZXIiLCJoIiwiY2xhc3MiLCJ0aGlzIiwib3B0aW9ucyIsImxhYmVsIiwiYnV0dG9ucyIsImJ1dHRvbiIsImluZGV4IiwiaWQiLCJrZXkiLCJpbm5lckhUTUwiLCJpY29uIiwiZGVmYXVsdFNlbGVjdGlvbiJdLCJtYXBwaW5ncyI6ImdpQ0FBQSxJQ3dCYUEsY0FBYSxXLDRRQUFBLE8sa1FBQUEseUNBZ0J4QixTQUFBQyxZQUFZQyxPQUNWQSxNQUFNQyxpQkFDTixJQUFJQyxVQUFZRixNQUFNRyxPQUN0QixHQUFJRCxVQUFVRSxRQUFRLHVCQUF3QixDQUU1QyxJQUFNQyxTQUROSCxVQUFZRixNQUFNRyxPQUFPRyxZQUNDQyxjQUNUQyxNQUFNQyxLQUFLSixRQUFRSyxjQUFjQyxVQUFVQyxRQUFPLFNBQUFDLE9BQ2pFLE9BQU9BLFFBQVVSLE9BQ2xCLElBQ1FTLEtBQUksU0FBQ0MsU0FDWixPQUFPQSxRQUFRQyxVQUFVQyxPQUFPLFdBQ2pDLElBQ0laLFFBQVFXLFVBQVVFLFNBQVMsYUFDOUJiLFFBQVFXLFVBQVVHLElBQUksV0FFekIsQ0FDRixHQWhDdUIsb0JBa0N4QixTQUFBQyxTQUFNLGVBQ0osT0FDRUMsaUVBQUtDLE1BQU0sYUFDVEQsa0VBQU1DLE1BQU0sU0FBWUMsS0FBS0MsUUFBUUMsTUFBckMsS0FDQUosaUVBQUtDLE1BQU0sV0FDUkMsS0FBS0MsUUFBUUUsUUFBUVosS0FBSSxTQUFDYSxPQUFrQkMsT0FBbkIsT0FDeEJQLG9FQUFRUSxHQUFJRixPQUFPRSxHQUFJQyxJQUFLSCxPQUFPRSxHQUFJRSxVQUFXSixPQUFPSyxLQUFNVixNQUFPTSxRQUFVLE1BQUtKLFFBQVFTLGlCQUFtQixXQUFhLElBRHJHLEtBTWpDLEtBN0N1QixpQixvQkR4QkQscWxDIiwiZmlsZSI6IjQzLjIzNTNlNWQ2LmlmcmFtZS5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi90aGVtZS5zY3NzJztcblxudmVyZG9jcy10b2dnbGUge1xuICBmb250LWZhbWlseTogJHByaW1hcnktZm9udDtcblxuICAuY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbnRhaW5lci1iZztcbiAgfVxuXG4gIC5sYWJlbCB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgY29sb3I6ICRtZWRpdW0tYmc7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIG1hcmdpbi1yaWdodDogMjdweDtcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgfVxuXG4gIC5idXR0b25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG4gIH1cblxuICAuYnV0dG9ucyBidXR0b24ge1xuICAgIHdpZHRoOiA2MHB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAkaXRlbS1ib3JkZXItY29sb3I7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIC5idXR0b25zIGJ1dHRvbjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDExcHg7XG4gIH1cblxuICAuYnV0dG9ucyBzdmcge1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgfVxuXG4gIC5idXR0b25zIGJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGl0ZW0tYm9yZGVyLWNvbG9yO1xuICAgIHRyYW5zaXRpb246IDAuMjVzO1xuICB9XG5cbiAgLmJ1dHRvbnMgYnV0dG9uOmhvdmVyIHN2ZyB7XG4gICAgZmlsbDogJGNvbnRhaW5lci1iZztcbiAgICB0cmFuc2l0aW9uOiAwLjI1cztcbiAgfVxuXG4gIC5zZWxlY3RlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJvcmRlci1jb2xvcjtcbiAgICB0cmFuc2l0aW9uOiAwLjI1cztcbiAgfVxuXG4gIC5zZWxlY3RlZCBzdmcge1xuICAgIGZpbGw6ICNmZmZmZmY7XG4gICAgdHJhbnNpdGlvbjogMC4yNXM7XG4gIH1cbn1cbiIsImltcG9ydCB7Q29tcG9uZW50LCBQcm9wLCBoLCBMaXN0ZW59IGZyb20gJ0BzdGVuY2lsL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElCdXR0b25zIHtcbiAgaWQ6IHN0cmluZztcbiAgaWNvbjogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElUb2dnbGVJY29uQnV0dG9ucyB7XG4gIGxhYmVsOiBzdHJpbmc7XG4gIGRlZmF1bHRTZWxlY3Rpb246IG51bWJlcjtcbiAgYnV0dG9uczogSUJ1dHRvbnNbXTtcbn1cblxuLyoqXG4gKiBEaXNwbGF5cyBhIGxhYmVsIGFuZCBhIHNldCBvZiBidXR0b25zLCBhbHNvIGFsbG93aW5nIGEgZGVmYXVsdCBzZWxlY3Rpb24gb2YgYSBidXR0b25cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICB0YWc6ICd2ZXJkb2NzLXRvZ2dsZScsXG4gIHN0eWxlVXJsOiAndmVyZG9jcy10b2dnbGUuc2NzcycsXG59KVxuZXhwb3J0IGNsYXNzIFZlcmRvY3NUb2dnbGUge1xuICAvKipcbiAgICogVGhlIHRhZ3MgdG8gZGlzcGxheVxuICAgKi9cbiAgQFByb3AoKSBvcHRpb25zOiBJVG9nZ2xlSWNvbkJ1dHRvbnM7XG5cbiAgLyoqXG4gICAqIFRoZSBcInRoZW1lXCIgdG8gYmUgdXNlZFxuICAgKi9cbiAgQFByb3AoKSB0aGVtZTogJ2xpZ2h0JyB8ICdkYXJrJztcblxuICBATGlzdGVuKCdjbGljaycsIHtcbiAgICB0YXJnZXQ6ICdkb2N1bWVudCcsXG4gICAgY2FwdHVyZTogdHJ1ZSxcbiAgICBwYXNzaXZlOiBmYWxzZSxcbiAgfSlcbiAgaGFuZGxlQ2xpY2soZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGxldCBjb250YWluZXIgPSBldmVudC50YXJnZXQ7XG4gICAgaWYgKGNvbnRhaW5lci5tYXRjaGVzKCd0b2dnbGUtaWNvbi1idXR0b25zJykpIHtcbiAgICAgIGNvbnRhaW5lciA9IGV2ZW50LnRhcmdldC5zaGFkb3dSb290O1xuICAgICAgY29uc3QgZWxlbWVudCA9IGNvbnRhaW5lci5hY3RpdmVFbGVtZW50O1xuICAgICAgY29uc3Qgc2libGluZ3MgPSBBcnJheS5mcm9tKGVsZW1lbnQucGFyZW50RWxlbWVudC5jaGlsZHJlbikuZmlsdGVyKGNoaWxkID0+IHtcbiAgICAgICAgcmV0dXJuIGNoaWxkICE9PSBlbGVtZW50O1xuICAgICAgfSk7XG4gICAgICBzaWJsaW5ncy5tYXAoKHNpYmxpbmc6IGFueSkgPT4ge1xuICAgICAgICByZXR1cm4gc2libGluZy5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xuICAgICAgfSk7XG4gICAgICBpZiAoIWVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzZWxlY3RlZCcpKSB7XG4gICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnc2VsZWN0ZWQnKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJsYWJlbFwiPntgJHt0aGlzLm9wdGlvbnMubGFiZWx9OmB9PC9zcGFuPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uc1wiPlxuICAgICAgICAgIHt0aGlzLm9wdGlvbnMuYnV0dG9ucy5tYXAoKGJ1dHRvbjogSUJ1dHRvbnMsIGluZGV4OiBudW1iZXIpID0+IChcbiAgICAgICAgICAgIDxidXR0b24gaWQ9e2J1dHRvbi5pZH0ga2V5PXtidXR0b24uaWR9IGlubmVySFRNTD17YnV0dG9uLmljb259IGNsYXNzPXtpbmRleCA9PT0gdGhpcy5vcHRpb25zLmRlZmF1bHRTZWxlY3Rpb24gPyAnc2VsZWN0ZWQnIDogJyd9IC8+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
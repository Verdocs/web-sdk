(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{"./dist/esm/verdocs-signature-dialog.entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"verdocs_signature_dialog",(function(){return VerdocsSignatureDialog}));__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/esm/index-bc9b2c82.js");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var VerdocsSignatureDialog=function(){function VerdocsSignatureDialog(hostRef){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,VerdocsSignatureDialog),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.h)(this,hostRef),this.adopt=Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.d)(this,"adopt",7),this.cancel=Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.d)(this,"cancel",7),this.name="",this.open=!1,this.fontLoaded=!1,this.enteredName="",this.mode="type"}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(VerdocsSignatureDialog,[{key:"componentWillLoad",value:function componentWillLoad(){var _this=this;this.enteredName=this.name,new FontFace("Dancing Script","url(https://fonts.gstatic.com/s/dancingscript/v19/If2cXTr6YS-zF4S-kcSWSVi_sxjsohD9F50Ruu7BMSo3Sup6hNX6plRP.woff)").load().then((function(font){document.fonts.add(font),_this.fontLoaded=!0}))}},{key:"componentDidLoad",value:function componentDidLoad(){this.redrawSignature()}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.redrawSignature()}},{key:"redrawSignature",value:function redrawSignature(){if(this.canvasElement){var canvasWidth=this.canvasElement.width,context=this.canvasElement.getContext("2d");context.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);var fontSize=100;do{fontSize-=2,context.font=fontSize+"px Dancing Script"}while(context.measureText(this.enteredName).width>canvasWidth-32);context.textAlign="center",context.textBaseline="middle",context.font=fontSize+"px Dancing Script",context.fillText(this.enteredName,this.canvasElement.width/2,this.canvasElement.height/2)}}},{key:"handleCancel",value:function handleCancel(e){e.stopPropagation(),this.cancel.emit()}},{key:"handleNameChange",value:function handleNameChange(e){this.enteredName=e.target.value}},{key:"handleAdopt",value:function handleAdopt(e){e.stopPropagation(),e.preventDefault();var data=this.canvasElement.toDataURL("image/png");this.adopt.emit(data)}},{key:"render",value:function render(){var _this2=this;return Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.b,{class:{open:this.open},onClick:function onClick(e){return _this2.handleCancel(e)}},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"dialog"},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"heading"},"Create Your Signature"),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"content"},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("verdocs-text-input",{placeholder:"Full Name...",label:"Full Name",value:this.enteredName,onInput:function onInput(e){return _this2.handleNameChange(e)},onClick:function onClick(e){return e.stopPropagation()}}),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"as-shown"},"As shown on driver's license or govt. ID card."),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"tabs"},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:{tab:!0,active:"type"===this.mode},onClick:function onClick(){return _this2.mode="type"}},"Type"),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:{tab:!0,active:"draw"===this.mode},onClick:function onClick(){return _this2.mode="draw"}},"Draw")),this.fontLoaded?Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("canvas",{ref:function ref(el){return _this2.canvasElement=el}}):Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{style:{display:"none"}}),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"disclaimer"},"By clicking Adopt, I agree that the signature will be the electronic representation of my signature for all purposes when I (or my agent) use them on documents, including legally binding contracts â€” just the same as a pen-and-paper signature or initial."),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("div",{class:"buttons"},Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("verdocs-button",{label:"CANCEL",size:"normal",variant:"outline",onPress:function onPress(e){return _this2.handleCancel(e)}}),Object(_index_bc9b2c82_js__WEBPACK_IMPORTED_MODULE_2__.f)("verdocs-button",{label:"Adopt & Sign",size:"normal",onPress:function onPress(e){return _this2.handleAdopt(e)}})))))}}]),VerdocsSignatureDialog}();VerdocsSignatureDialog.style='verdocs-signature-dialog{font-family:"Barlow", sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;z-index:10000;top:0;left:0;right:0;bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background:#0000007f}verdocs-signature-dialog .dialog{width:100%;max-width:340px;border-radius:4px;overflow:hidden;-webkit-box-shadow:3px 3px 5px 1px rgba(40, 40, 40, 0.4);box-shadow:3px 3px 5px 1px rgba(40, 40, 40, 0.4);background:#f5f5fa}verdocs-signature-dialog .heading{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;padding:20px 20px 0 20px;line-height:28px;font-size:20px;font-weight:500}verdocs-signature-dialog .content{font-size:14px;padding:20px}verdocs-signature-dialog .buttons{display:-ms-flexbox;display:flex;margin:20px 0 0 0;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:center;align-items:center}verdocs-signature-dialog .buttons verdocs-button{margin-left:16px}verdocs-signature-dialog canvas{background:#ffffff;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0 auto;width:300px;height:79px;max-width:100%;-webkit-box-shadow:0 0 6px 0 #0000001f;box-shadow:0 0 6px 0 #0000001f}verdocs-signature-dialog .disclaimer{text-align:justify;padding:8px 0;font-size:11px;line-height:14px;color:rgba(0, 0, 0, 0.54)}verdocs-signature-dialog .as-shown{font-size:11px;margin:4px 0 20px 4px;color:rgba(0, 0, 0, 0.54)}verdocs-signature-dialog .tabs{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}verdocs-signature-dialog .tabs .tab{padding:8px 15px;cursor:pointer}verdocs-signature-dialog .tabs .tab.active{border-bottom:2px solid #cccccc}verdocs-signature-dialog .tabs .tab:hover{color:#55bc81}'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvZGlhbG9ncy92ZXJkb2NzLXNpZ25hdHVyZS1kaWFsb2cvdmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nLnNjc3MiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2RpYWxvZ3MvdmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nL3ZlcmRvY3Mtc2lnbmF0dXJlLWRpYWxvZy50c3giXSwibmFtZXMiOlsiVmVyZG9jc1NpZ25hdHVyZURpYWxvZyIsIm5hbWUiLCJvcGVuIiwiZm9udExvYWRlZCIsImVudGVyZWROYW1lIiwibW9kZSIsImNvbXBvbmVudFdpbGxMb2FkIiwidGhpcyIsIkZvbnRGYWNlIiwibG9hZCIsInRoZW4iLCJmb250IiwiZG9jdW1lbnQiLCJmb250cyIsImFkZCIsImNvbXBvbmVudERpZExvYWQiLCJyZWRyYXdTaWduYXR1cmUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJjYW52YXNFbGVtZW50IiwiY2FudmFzV2lkdGgiLCJ3aWR0aCIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwiY2xlYXJSZWN0IiwiaGVpZ2h0IiwiZm9udFNpemUiLCJtZWFzdXJlVGV4dCIsInRleHRBbGlnbiIsInRleHRCYXNlbGluZSIsImZpbGxUZXh0IiwiaGFuZGxlQ2FuY2VsIiwiZSIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbCIsImVtaXQiLCJoYW5kbGVOYW1lQ2hhbmdlIiwidGFyZ2V0IiwidmFsdWUiLCJoYW5kbGVBZG9wdCIsInByZXZlbnREZWZhdWx0IiwiZGF0YSIsInRvRGF0YVVSTCIsImFkb3B0IiwicmVuZGVyIiwiaCIsIkhvc3QiLCJjbGFzcyIsIm9uQ2xpY2siLCJwbGFjZWhvbGRlciIsImxhYmVsIiwib25JbnB1dCIsInRhYiIsImFjdGl2ZSIsInJlZiIsImVsIiwic3R5bGUiLCJkaXNwbGF5Iiwic2l6ZSIsInZhcmlhbnQiLCJvblByZXNzIl0sIm1hcHBpbmdzIjoicTJCQUFBLElDVWFBLHVCQUFzQixXQUpu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RCxhQUFhQyxFQUF0QixJQUN6RWEsNEVBQWdCSyxNQUFNLGVBQWVRLEtBQUssU0FBU0UsUUFBUyxpQkFBQTVCLEdBQUMsT0FBSSxPQUFLTyxZQUFZUCxFQUFyQixPQU14RSxLQXJSZ0MsMEIsNkJEVkQsa3hEIiwiZmlsZSI6IjQ5LjU1YmU4OWY1LmlmcmFtZS5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi90aGVtZS5zY3NzJztcblxudmVyZG9jcy1zaWduYXR1cmUtZGlhbG9nIHtcbiAgZm9udC1mYW1pbHk6ICRwcmltYXJ5LWZvbnQ7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTAwMDA7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICMwMDAwMDA3ZjtcblxuICAuZGlhbG9nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDM0MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJveC1zaGFkb3c6IDNweCAzcHggNXB4IDFweCByZ2JhKDQwLCA0MCwgNDAsIDAuNCk7XG4gICAgYmFja2dyb3VuZDogJHZlcmRvY3MtZ3JleS0zO1xuICB9XG5cbiAgLmhlYWRpbmcge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBwYWRkaW5nOiAyMHB4IDIwcHggMCAyMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICB9XG5cbiAgLmNvbnRlbnQge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICB9XG5cbiAgLmJ1dHRvbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luOiAyMHB4IDAgMCAwO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgdmVyZG9jcy1idXR0b24ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gICAgfVxuICB9XG5cbiAgY2FudmFzIHtcbiAgICBiYWNrZ3JvdW5kOiAkdmVyZG9jcy1ncmV5LTQ7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgLy8gVE9ETzogVGhlIG9yaWdpbmFsIGFwcCBoYWQgYW4gYXNwZWN0IHJhdGlvIG9mICg4MCAvIDMwNSkgKiAoc2lnbmF0dXJlQm9keVdpZHRoIC0gMjApXG4gICAgaGVpZ2h0OiA3OXB4O1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBib3gtc2hhZG93OiAwIDAgNnB4IDAgIzAwMDAwMDFmO1xuICB9XG5cbiAgLmRpc2NsYWltZXIge1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gICAgcGFkZGluZzogOHB4IDA7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpO1xuICB9XG5cbiAgLmFzLXNob3duIHtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgbWFyZ2luOiA0cHggMCAyMHB4IDRweDtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTtcbiAgfVxuXG4gIC50YWJzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG5cbiAgICAudGFiIHtcbiAgICAgIHBhZGRpbmc6IDhweCAxNXB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICAmLmFjdGl2ZSB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkbGlnaHQtYm9yZGVyLWNvbG9yO1xuICAgICAgfVxuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHtDb21wb25lbnQsIFByb3AsIGgsIEV2ZW50LCBFdmVudEVtaXR0ZXIsIFN0YXRlLCBIb3N0fSBmcm9tICdAc3RlbmNpbC9jb3JlJztcblxuLyoqXG4gKiBEaXNwbGF5IGEgZGlhbG9nIHRoYXQgYWxsb3dzIHRoZSB1c2VyIHRvIHNwZWNpZnkgYSBzaWduYXR1cmUgaW1hZ2UsIGVpdGhlciBieSB1c2luZyBhIHNpZ25hdHVyZS1mb250LWdlbmVyYXRlZCBpbWFnZVxuICogYmFzZWQgb24gdGhlaXIgZnVsbCBuYW1lLCBvciBieSBoYW5kLWRyYXdpbmcgdGhlaXIgc2lnbmF0dXJlIHdpdGggYSBtb3VzZSBvciB0YWJsZXQuXG4gKi9cbkBDb21wb25lbnQoe1xuICB0YWc6ICd2ZXJkb2NzLXNpZ25hdHVyZS1kaWFsb2cnLFxuICBzdHlsZVVybDogJ3ZlcmRvY3Mtc2lnbmF0dXJlLWRpYWxvZy5zY3NzJyxcbn0pXG5leHBvcnQgY2xhc3MgVmVyZG9jc1NpZ25hdHVyZURpYWxvZyB7XG4gIHByaXZhdGUgY2FudmFzRWxlbWVudD86IEhUTUxDYW52YXNFbGVtZW50O1xuXG4gIC8qKlxuICAgKiBJbml0aWFsIHNpZ25hdHVyZSB0ZXh0XG4gICAqL1xuICBAUHJvcCgpIG5hbWU6IHN0cmluZyA9ICcnO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSBkaWFsb2cgaXMgY3VycmVudGx5IGJlaW5nIGRpc3BsYXllZC4gVGhpcyBhbGxvd3MgaXQgdG8gYmUgYWRkZWQgdG8gdGhlIERPTSBiZWZvcmUgYmVpbmcgZGlzcGxheWVkLlxuICAgKi9cbiAgQFByb3AoKSBvcGVuOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEV2ZW50IGZpcmVkIHdoZW4gYSBzaWduYXR1cmUgaXMgYWRvcHRlZC5cbiAgICovXG4gIEBFdmVudCh7Y29tcG9zZWQ6IHRydWV9KSBhZG9wdDogRXZlbnRFbWl0dGVyPHN0cmluZz47XG5cbiAgLyoqXG4gICAqIEV2ZW50IGZpcmVkIHdoZW4gdGhlIHN0ZXAgaXMgY2FuY2VsbGVkLlxuICAgKi9cbiAgQEV2ZW50KHtjb21wb3NlZDogdHJ1ZX0pIGNhbmNlbDogRXZlbnRFbWl0dGVyO1xuXG4gIEBTdGF0ZSgpIGZvbnRMb2FkZWQgPSBmYWxzZTtcblxuICBAU3RhdGUoKSBlbnRlcmVkTmFtZTogc3RyaW5nID0gJyc7XG5cbiAgQFN0YXRlKCkgbW9kZTogc3RyaW5nID0gJ3R5cGUnO1xuXG4gIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgIHRoaXMuZW50ZXJlZE5hbWUgPSB0aGlzLm5hbWU7XG5cbiAgICBjb25zdCBkcyA9IG5ldyBGb250RmFjZSgnRGFuY2luZyBTY3JpcHQnLCAndXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9kYW5jaW5nc2NyaXB0L3YxOS9JZjJjWFRyNllTLXpGNFMta2NTV1NWaV9zeGpzb2hEOUY1MFJ1dTdCTVNvM1N1cDZoTlg2cGxSUC53b2ZmKScpO1xuICAgIGRzLmxvYWQoKS50aGVuKGZvbnQgPT4ge1xuICAgICAgZG9jdW1lbnQuZm9udHMuYWRkKGZvbnQpO1xuICAgICAgdGhpcy5mb250TG9hZGVkID0gdHJ1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZExvYWQoKSB7XG4gICAgdGhpcy5yZWRyYXdTaWduYXR1cmUoKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICB0aGlzLnJlZHJhd1NpZ25hdHVyZSgpO1xuICB9XG5cbiAgcmVkcmF3U2lnbmF0dXJlKCkge1xuICAgIGlmICghdGhpcy5jYW52YXNFbGVtZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgY2FudmFzV2lkdGggPSB0aGlzLmNhbnZhc0VsZW1lbnQud2lkdGg7XG5cbiAgICBjb25zdCBjb250ZXh0ID0gdGhpcy5jYW52YXNFbGVtZW50LmdldENvbnRleHQoJzJkJyk7XG4gICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXNFbGVtZW50LndpZHRoLCB0aGlzLmNhbnZhc0VsZW1lbnQuaGVpZ2h0KTtcblxuICAgIGxldCBmb250U2l6ZSA9IDEwMDtcbiAgICBkbyB7XG4gICAgICBmb250U2l6ZSAtPSAyO1xuICAgICAgY29udGV4dC5mb250ID0gYCR7Zm9udFNpemV9cHggRGFuY2luZyBTY3JpcHRgO1xuICAgIH0gd2hpbGUgKGNvbnRleHQubWVhc3VyZVRleHQodGhpcy5lbnRlcmVkTmFtZSkud2lkdGggPiBjYW52YXNXaWR0aCAtIDMyKTsgLy8gMzJweCBwYWRkaW5nIGVhY2ggc2lkZVxuXG4gICAgY29udGV4dC50ZXh0QWxpZ24gPSAnY2VudGVyJztcbiAgICBjb250ZXh0LnRleHRCYXNlbGluZSA9ICdtaWRkbGUnO1xuICAgIGNvbnRleHQuZm9udCA9IGAke2ZvbnRTaXplfXB4IERhbmNpbmcgU2NyaXB0YDtcbiAgICBjb250ZXh0LmZpbGxUZXh0KHRoaXMuZW50ZXJlZE5hbWUsIHRoaXMuY2FudmFzRWxlbWVudC53aWR0aCAvIDIsIHRoaXMuY2FudmFzRWxlbWVudC5oZWlnaHQgLyAyKTtcbiAgfVxuXG4gIGhhbmRsZUNhbmNlbChlOiBhbnkpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHRoaXMuY2FuY2VsLmVtaXQoKTtcbiAgfVxuXG4gIGhhbmRsZU5hbWVDaGFuZ2UoZTogYW55KSB7XG4gICAgdGhpcy5lbnRlcmVkTmFtZSA9IGUudGFyZ2V0LnZhbHVlO1xuICB9XG5cbiAgaGFuZGxlQWRvcHQoZTogYW55KSB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgZGF0YSA9IHRoaXMuY2FudmFzRWxlbWVudC50b0RhdGFVUkwoJ2ltYWdlL3BuZycpO1xuICAgIHRoaXMuYWRvcHQuZW1pdChkYXRhKTtcbiAgfVxuXG4gIC8qXG4gIHNlbENvbG9yKGhleDogc3RyaW5nKSB7XG4gICAgdGhpcy5jb2xvciA9IGhleDtcbiAgICB0aGlzLmFuaW1hdGVEcmF3KCk7XG4gIH1cblxuICBzdG9wRHJhdygpIHtcbiAgICB0aGlzLnBhaW50ID0gZmFsc2U7XG4gICAgdGhpcy5hZG9wdGVkQW5kU2lnbmVkID0gIXRoaXMuaGFzU2lnbmF0dXJlKCk7XG4gIH1cblxuICBkcmF3KGUpIHtcbiAgICB0aGlzLnBhaW50ID0gdHJ1ZTtcbiAgICB0aGlzLmFkZFBvaW50cyhlLCBmYWxzZSk7XG4gICAgdGhpcy5hbmltYXRlRHJhdygpO1xuICB9XG5cbiAgcmVjb3JkUG9pbnRzKGUpIHtcbiAgICBpZiAodGhpcy5wYWludCkge1xuICAgICAgdGhpcy5hZGRQb2ludHMoZSwgdHJ1ZSk7XG4gICAgICB0aGlzLmFuaW1hdGVEcmF3KCk7XG4gICAgfVxuICB9XG5cbiAgYW5pbWF0ZURyYXcoKSB7XG4gICAgdGhpcy5jYW52YXMuY2xlYXJSZWN0KDAsIDAsIHRoaXMuY2FudmFzLmNhbnZhcy5vZmZzZXRXaWR0aCwgdGhpcy5jYW52YXMuY2FudmFzLm9mZnNldEhlaWdodCk7XG5cbiAgICB0aGlzLmNhbnZhcy5zdHJva2VTdHlsZSA9IHRoaXMuY29sb3IgfHwgJyMwMDAwMDAnO1xuICAgIHRoaXMuY2FudmFzLmxpbmVKb2luID0gJ3JvdW5kJztcbiAgICB0aGlzLmNhbnZhcy5saW5lV2lkdGggPSAzO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnBvaW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5jYW52YXMuYmVnaW5QYXRoKCk7XG4gICAgICBpZiAodGhpcy5wb2ludHNbaV0uZHJhZyAmJiBpKSB7XG4gICAgICAgIHRoaXMuY2FudmFzLm1vdmVUbyh0aGlzLnBvaW50c1tpIC0gMV0ueCwgdGhpcy5wb2ludHNbaSAtIDFdLnkpO1xuICAgICAgICAvLyB0aGlzLmNhbnZhcy5hcmModGhpcy5wb2ludHNbaSAtIDFdLngsIHRoaXMucG9pbnRzW2kgLSAxXS55LCAyLCAwLCAyICogTWF0aC5QSSwgZmFsc2UpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jYW52YXMubW92ZVRvKHRoaXMucG9pbnRzW2ldLnggLSAxLCB0aGlzLnBvaW50c1tpXS55KTtcbiAgICAgICAgLy8gdGhpcy5jYW52YXMuYXJjKHRoaXMucG9pbnRzW2ldLngsIHRoaXMucG9pbnRzW2ldLnksIDIsIDAsIDIgKiBNYXRoLlBJLCBmYWxzZSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY2FudmFzLmxpbmVUbyh0aGlzLnBvaW50c1tpXS54LCB0aGlzLnBvaW50c1tpXS55KTtcbiAgICAgIHRoaXMuY2FudmFzLmNsb3NlUGF0aCgpO1xuICAgICAgdGhpcy5jYW52YXMuc3Ryb2tlKCk7XG4gICAgfVxuICB9XG5cbiAgZHJhd0N1cnZlKGNvbG9yOiBzdHJpbmcsIGN1cnZlOiBudW1iZXIpIHtcbiAgICB0aGlzLmNhbnZhcy5iZWdpblBhdGgoKTtcbiAgfVxuXG5cblxuICBhZGRQb2ludHMoZSwgZHJhZzogYm9vbGVhbikge1xuICAgIGlmICh3aW5kb3cpIHtcbiAgICAgIGxldCB4O1xuICAgICAgbGV0IHk7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBpZiAoZS50b3VjaGVzICYmIGUudG91Y2hlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHggPSBlLnRvdWNoZXNbMF0uY2xpZW50WDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHggPSBlLmNsaWVudFg7XG4gICAgICB9XG5cbiAgICAgIGlmIChlLnRvdWNoZXMgJiYgZS50b3VjaGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgeSA9IGUudG91Y2hlc1swXS5jbGllbnRZO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeSA9IGUuY2xpZW50WTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHJlY3QgPSB0aGlzLnNpZ25hdHVyZUNhbnZhcy5uYXRpdmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgdGhpcy5wb2ludHMucHVzaCh7XG4gICAgICAgIHg6IHggLSByZWN0LmxlZnQsXG4gICAgICAgIHk6IHkgLSByZWN0LnRvcCxcbiAgICAgICAgZHJhZzogZHJhZ1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgY2xlYXJQYWQoKSB7XG4gICAgdGhpcy5jYW52YXMuY2xlYXJSZWN0KDAsIDAsIHRoaXMuY2FudmFzLmNhbnZhcy5vZmZzZXRXaWR0aCwgdGhpcy5jYW52YXMuY2FudmFzLm9mZnNldEhlaWdodCk7XG4gICAgdGhpcy5wb2ludHMgPSBbXTtcbiAgICB0aGlzLmFkb3B0ZWRBbmRTaWduZWQgPSAhdGhpcy5oYXNTaWduYXR1cmUoKTtcbiAgfVxuXG4gICAgYXN5bmMgYWRvcHRBbmRTaWduKCkge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLmFkb3B0ZWRBbmRTaWduZWQgPSB0cnVlO1xuICAgICAgYXdhaXQgdGhpcy51cGRhdGVGdWxsTmFtZSgpO1xuICAgICAgYXdhaXQgdGhpcy5jYXB0dXJlU2lnbmF0dXJlRnJvbUNhbnZhcygpO1xuICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMuc2lnbmF0dXJlTW9kZSA9PT0gJ1NpZ25hdHVyZScgPyAnU2F2aW5nIFNpZ25hdHVyZScgOiAnU2F2aW5nIEluaXRpYWwnO1xuICAgICAgdGhpcy5zbmFja2JhclNlcnZpY2Uub3BlbihtZXNzYWdlLCAnT0snLCB0aGlzLnNuYWNrYmFyU2VydmljZS5pbml0Q29uZmlnKG51bGwsICdib3R0b20nKSk7XG4gICAgICB0aGlzLmhhbmRsZU1vZGUoKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRoaXMuc25hY2tiYXJTZXJ2aWNlLm9wZW4oJ0ZhaWxlZCB0byBhcHBseSBzaWduYXR1cmUnLCAnT0snLCB0aGlzLnNuYWNrYmFyU2VydmljZS5pbml0Q29uZmlnKG51bGwsICdib3R0b20nKSk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlTW9kZSgpIHtcbiAgICBsZXQgY3VycmVudEZpZWxkO1xuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlICdzaWduZXJ2aWV3JzpcbiAgICAgICAgaWYgKHRoaXMuc2lnbmF0dXJlTW9kZSA9PT0gJ1NpZ25hdHVyZScpIHtcbiAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2UucG9zdFNpZ25hdHVyZUJsb2IoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICBpZiAocmVzdWx0ICYmIHJlc3VsdC5pZCAmJiByZXN1bHQudXJsKSB7XG4gICAgICAgICAgICAgIGN1cnJlbnRGaWVsZCA9IHRoaXMuc2lnbmF0dXJlU2VydmljZS5jdXJyRmllbGQ7XG4gICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS51cGRhdGVTaWduZWQoY3VycmVudEZpZWxkLmZOYW1lLCB0cnVlKTtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnRvZ2dsZVNpZyhmYWxzZSk7XG4gICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5zZXRTaWduYXR1cmVJZChyZXN1bHQuaWQpO1xuICAgICAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2UucHV0U2lnbmF0dXJlRmllbGQodGhpcy5lbnZlbG9wZUlkLCB0aGlzLmZpZWxkTmFtZSwgcmVzdWx0LmlkKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudFRyYWNrZXIuY3JlYXRlRXZlbnQoe1xuICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6ICd2ZXJkb2MnLFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiAndmVyZG9jIHNpZ25lZCcsXG4gICAgICAgICAgICAgICAgICBsYWJlbDogYHZlcmRvYyBpZDogJHt0aGlzLmVudmVsb3BlSWR9YFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMuc2V0dGluZ3MpIHtcbiAgICAgICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5zZXRTaWduYXR1cmVEYXRhKHJlcy5zZXR0aW5ncy5iYXNlNjQpO1xuICAgICAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnNldFNpZ25hdHVyZUlkKHJlcy5zZXR0aW5ncy5zaWduYXR1cmVfaWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnNuYWNrYmFyU2VydmljZS5kaXNtaXNzKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5kaWFsb2cuY2xvc2UoeyBzdGF0dXM6ICdzYXZlZCcsIHRlbXBfc2lnOiByZXMuc2V0dGluZ3MuYmFzZTY0LCBzaWdfaWQ6IHJlcy5zZXR0aW5ncy5zaWduYXR1cmVfaWQgfSk7XG4gICAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zbmFja2JhclNlcnZpY2Uub3BlbignRmFpbGVkIHRvIHNhdmUgc2lnbmF0dXJlLiBQbGVhc2UgdHJ5IGFnYWluLicsICdESVNNSVNTJywge1xuICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDMwMDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLmFkb3B0ZWRBbmRTaWduZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJyO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2UucG9zdEluaXRpYWxCbG9iKCkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICAgICAgaWYgKHJlc3VsdCAmJiByZXN1bHQuaWQgJiYgcmVzdWx0LnVybCkge1xuICAgICAgICAgICAgICBjdXJyZW50RmllbGQgPSB0aGlzLnNpZ25hdHVyZVNlcnZpY2UuY3VyckZpZWxkO1xuICAgICAgICAgICAgICB0aGlzLnNpZ25hdHVyZVNlcnZpY2UudXBkYXRlSW5pdGlhbGVkKGN1cnJlbnRGaWVsZC5mTmFtZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5zZXRJbml0aWFsSWQocmVzdWx0LmlkKTtcbiAgICAgICAgICAgICAgdGhpcy5zaWduYXR1cmVTZXJ2aWNlLnRvZ2dsZVNpZyhmYWxzZSk7XG4gICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5wdXRJbml0aWFsRmllbGQodGhpcy5lbnZlbG9wZUlkLCB0aGlzLmZpZWxkTmFtZSwgcmVzdWx0LmlkKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMuc2V0dGluZ3MpIHtcbiAgICAgICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5zZXRJbml0aWFsRGF0YShyZXMuc2V0dGluZ3MuYmFzZTY0KTtcbiAgICAgICAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlU2VydmljZS5zZXRJbml0aWFsSWQocmVzLnNldHRpbmdzLmluaXRpYWxfaWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnNuYWNrYmFyU2VydmljZS5kaXNtaXNzKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5kaWFsb2cuY2xvc2UoeyBzdGF0dXM6ICdzYXZlZCcsIHRlbXBfaW50OiByZXMuc2V0dGluZ3MuYmFzZTY0LCBpbnRfaWQ6IHJlcy5zZXR0aW5ncy5pbml0aWFsX2lkIH0pO1xuICAgICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc25hY2tiYXJTZXJ2aWNlLm9wZW4oJ0ZhaWxlZCB0byBzYXZlIGluaXRpYWwuIFBsZWFzZSB0cnkgYWdhaW4uJywgJ0RJU01JU1MnLCB7XG4gICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzAwMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuYWRvcHRlZEFuZFNpZ25lZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBlcnI7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICAgKi9cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxIb3N0IGNsYXNzPXt7b3BlbjogdGhpcy5vcGVufX0gb25DbGljaz17ZSA9PiB0aGlzLmhhbmRsZUNhbmNlbChlKX0+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJkaWFsb2dcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGluZ1wiPkNyZWF0ZSBZb3VyIFNpZ25hdHVyZTwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRcIj5cbiAgICAgICAgICAgIDx2ZXJkb2NzLXRleHQtaW5wdXQgcGxhY2Vob2xkZXI9XCJGdWxsIE5hbWUuLi5cIiBsYWJlbD1cIkZ1bGwgTmFtZVwiIHZhbHVlPXt0aGlzLmVudGVyZWROYW1lfSBvbklucHV0PXtlID0+IHRoaXMuaGFuZGxlTmFtZUNoYW5nZShlKX0gb25DbGljaz17ZSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpfSAvPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFzLXNob3duXCI+QXMgc2hvd24gb24gZHJpdmVyJ3MgbGljZW5zZSBvciBnb3Z0LiBJRCBjYXJkLjwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFic1wiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPXt7dGFiOiB0cnVlLCBhY3RpdmU6IHRoaXMubW9kZSA9PT0gJ3R5cGUnfX0gb25DbGljaz17KCkgPT4gKHRoaXMubW9kZSA9ICd0eXBlJyl9PlxuICAgICAgICAgICAgICAgIFR5cGVcbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9e3t0YWI6IHRydWUsIGFjdGl2ZTogdGhpcy5tb2RlID09PSAnZHJhdyd9fSBvbkNsaWNrPXsoKSA9PiAodGhpcy5tb2RlID0gJ2RyYXcnKX0+XG4gICAgICAgICAgICAgICAgRHJhd1xuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICB7dGhpcy5mb250TG9hZGVkID8gPGNhbnZhcyByZWY9e2VsID0+ICh0aGlzLmNhbnZhc0VsZW1lbnQgPSBlbCBhcyBIVE1MQ2FudmFzRWxlbWVudCl9IC8+IDogPGRpdiBzdHlsZT17e2Rpc3BsYXk6ICdub25lJ319IC8+fVxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlzY2xhaW1lclwiPlxuICAgICAgICAgICAgICBCeSBjbGlja2luZyBBZG9wdCwgSSBhZ3JlZSB0aGF0IHRoZSBzaWduYXR1cmUgd2lsbCBiZSB0aGUgZWxlY3Ryb25pYyByZXByZXNlbnRhdGlvbiBvZiBteSBzaWduYXR1cmUgZm9yIGFsbCBwdXJwb3NlcyB3aGVuIEkgKG9yIG15IGFnZW50KSB1c2UgdGhlbSBvbiBkb2N1bWVudHMsXG4gICAgICAgICAgICAgIGluY2x1ZGluZyBsZWdhbGx5IGJpbmRpbmcgY29udHJhY3RzICZtZGFzaDsganVzdCB0aGUgc2FtZSBhcyBhIHBlbi1hbmQtcGFwZXIgc2lnbmF0dXJlIG9yIGluaXRpYWwuXG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbnNcIj5cbiAgICAgICAgICAgICAgPHZlcmRvY3MtYnV0dG9uIGxhYmVsPVwiQ0FOQ0VMXCIgc2l6ZT1cIm5vcm1hbFwiIHZhcmlhbnQ9XCJvdXRsaW5lXCIgb25QcmVzcz17ZSA9PiB0aGlzLmhhbmRsZUNhbmNlbChlKX0gLz5cbiAgICAgICAgICAgICAgPHZlcmRvY3MtYnV0dG9uIGxhYmVsPVwiQWRvcHQgJiBTaWduXCIgc2l6ZT1cIm5vcm1hbFwiIG9uUHJlc3M9e2UgPT4gdGhpcy5oYW5kbGVBZG9wdChlKX0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvSG9zdD5cbiAgICApO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9